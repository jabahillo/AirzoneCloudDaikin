function isStringNumber(e) {
    return /^-?\d+\.?\d*$/.test(e.replace(/["']/g, ''))
  }
  function d(e) {
    return function (n) {
      this[e] = n
    }
  }
  function f(e) {
    return function () {
      return this[e]
    }
  }
  function l(e, n, a) {
    this.extend(l, google.maps.OverlayView),
    this.b = e,
    this.a = [
    ],
    this.f = [
    ],
    this.da = [
      53,
      56,
      66,
      78,
      90
    ],
    this.j = [
    ],
    this.A = !1,
    a = a || {
    },
    this.g = a.gridSize || 60,
    this.l = a.minimumClusterSize || 2,
    this.K = a.maxZoom || null,
    this.j = a.styles || [
    ],
    this.Y = a.imagePath || this.R,
    this.X = a.imageExtension || this.Q,
    this.P = !0,
    void 0 != a.zoomOnClick && (this.P = a.zoomOnClick),
    this.r = !1,
    void 0 != a.averageCenter && (this.r = a.averageCenter),
    m(this),
    this.setMap(e),
    this.L = this.b.getZoom();
    var t = this;
    google.maps.event.addListener(this.b, 'zoom_changed', function () {
      var e = t.b.getZoom(),
      n = t.b.minZoom || 0,
      a = Math.min(t.b.maxZoom || 100, t.b.mapTypes[t.b.getMapTypeId()].maxZoom),
      e = Math.min(Math.max(e, n), a);
      t.L != e && (t.L = e, t.m())
    }),
    google.maps.event.addListener(this.b, 'idle', function () {
      t.i()
    }),
    n && (n.length || Object.keys(n).length) && this.C(n, !1)
  }
  function m(e) {
    if (!e.j.length) for (var n, a = 0; n = e.da[a]; a++) e.j.push({
      url: e.Y + (a + 1) + '.' + e.X,
      height: n,
      width: n
    })
  }
  function s(e, n) {
    n.s = !1,
    n.draggable && google.maps.event.addListener(n, 'dragend', function () {
      n.s = !1,
      e.M()
    }),
    e.a.push(n)
  }
  function t(e, n) {
    var a = - 1;
    if (e.a.indexOf) a = e.a.indexOf(n);
     else for (var t, i = 0; t = e.a[i]; i++) if (t == n) {
      a = i;
      break
    }
    return - 1 == a ? !1 : (n.setMap(null), e.a.splice(a, 1), !0)
  }
  function p(e) {
    if (e.A) for (var n, a = new google.maps.LatLngBounds(e.b.getBounds().getSouthWest(), e.b.getBounds().getNorthEast()), a = e.v(a), t = 0; n = e.a[t]; t++) if (!n.s && a.contains(n.getPosition())) {
      for (var i = e, r = 40000, o = null, s = 0, l = void 0; l = i.f[s]; s++) {
        var c = l.getCenter();
        if (c) {
          var u = n.getPosition();
          if (c && u) var d = (u.lat() - c.lat()) * Math.PI / 180,
          m = (u.lng() - c.lng()) * Math.PI / 180,
          c = Math.sin(d / 2) * Math.sin(d / 2) + Math.cos(c.lat() * Math.PI / 180) * Math.cos(u.lat() * Math.PI / 180) * Math.sin(m / 2) * Math.sin(m / 2),
          c = 12742 * Math.atan2(Math.sqrt(c), Math.sqrt(1 - c));
           else c = 0;
          r > c && (r = c, o = l)
        }
      }
      o && o.F.contains(n.getPosition()) ? o.q(n)  : (l = new v(i), l.q(n), i.f.push(l))
    }
  }
  function v(e) {
    this.k = e,
    this.b = e.getMap(),
    this.g = e.I(),
    this.l = e.l,
    this.r = e.r,
    this.d = null,
    this.a = [
    ],
    this.F = null,
    this.n = new w(this, e.w())
  }
  function A(e) {
    var n = new google.maps.LatLngBounds(e.d, e.d);
    e.F = e.k.v(n)
  }
  function w(e, n) {
    e.k.extend(w, google.maps.OverlayView),
    this.j = n,
    this.u = e,
    this.d = null,
    this.b = e.getMap(),
    this.B = this.c = null,
    this.t = !1,
    this.setMap(this.b)
  }
  function C(e, n) {
    var a = e.getProjection().fromLatLngToDivPixel(n);
    return a.x -= parseInt(e.p / 2, 10),
    a.y -= parseInt(e.h / 2, 10),
    a
  }
  function B(e) {
    e.c && (e.c.style.display = 'none'),
    e.t = !1
  }
  function D(e, n) {
    var a = [
    ];
    return a.push('background-image:url(' + e.ea + ');'),
    a.push('background-position:' + (e.D ? e.D : '0 0') + ';'),
    'object' == typeof e.e ? (a.push('number' == typeof e.e[0] && 0 < e.e[0] && e.e[0] < e.h ? 'height:' + (e.h - e.e[0]) + 'px; padding-top:' + e.e[0] + 'px;' : 'height:' + e.h + 'px; line-height:' + e.h + 'px;'), a.push('number' == typeof e.e[1] && 0 < e.e[1] && e.e[1] < e.p ? 'width:' + (e.p - e.e[1]) + 'px; padding-left:' + e.e[1] + 'px;' : 'width:' + e.p + 'px; text-align:center;'))  : a.push('height:' + e.h + 'px; line-height:' + e.h + 'px; width:' + e.p + 'px; text-align:center;'),
    a.push('cursor:pointer; top:' + n.y + 'px; left:' + n.x + 'px; color:' + (e.N ? e.N : 'black') + '; position:absolute; font-size:' + (e.O ? e.O : 11) + 'px; font-family:Arial,sans-serif; font-weight:bold'),
    a.join('')
  }
  !function (e, n) {
    'object' == typeof module && 'object' == typeof module.exports ? module.exports = e.document ? n(e, !0)  : function (e) {
      if (!e.document) throw new Error('jQuery requires a window with a document');
      return n(e)
    }
     : n(e)
  }('undefined' != typeof window ? window : this, function (e, n) {
    function a(e) {
      var n = e.length,
      a = rn.type(e);
      return 'function' === a || rn.isWindow(e) ? !1 : 1 === e.nodeType && n ? !0 : 'array' === a || 0 === n || 'number' == typeof n && n > 0 && n - 1 in e
    }
    function t(e, n, a) {
      if (rn.isFunction(n)) return rn.grep(e, function (e, t) {
        return !!n.call(e, t, e) !== a
      });
      if (n.nodeType) return rn.grep(e, function (e) {
        return e === n !== a
      });
      if ('string' == typeof n) {
        if (hn.test(n)) return rn.filter(n, e, a);
        n = rn.filter(n, e)
      }
      return rn.grep(e, function (e) {
        return rn.inArray(e, n) >= 0 !== a
      })
    }
    function i(e, n) {
      do e = e[n];
      while (e && 1 !== e.nodeType);
      return e
    }
    function r(e) {
      var n = wn[e] = {
      };
      return rn.each(e.match(yn) || [
      ], function (e, a) {
        n[a] = !0
      }),
      n
    }
    function o() {
      vn.addEventListener ? (vn.removeEventListener('DOMContentLoaded', s, !1), e.removeEventListener('load', s, !1))  : (vn.detachEvent('onreadystatechange', s), e.detachEvent('onload', s))
    }
    function s() {
      (vn.addEventListener || 'load' === event.type || 'complete' === vn.readyState) && (o(), rn.ready())
    }
    function l(e, n, a) {
      if (void 0 === a && 1 === e.nodeType) {
        var t = 'data-' + n.replace(xn, '-$1').toLowerCase();
        if (a = e.getAttribute(t), 'string' == typeof a) {
          try {
            a = 'true' === a ? !0 : 'false' === a ? !1 : 'null' === a ? null : + a + '' === a ? + a : Mn.test(a) ? rn.parseJSON(a)  : a
          } catch (i) {
          }
          rn.data(e, n, a)
        } else a = void 0
      }
      return a
    }
    function c(e) {
      var n;
      for (n in e) if (('data' !== n || !rn.isEmptyObject(e[n])) && 'toJSON' !== n) return !1;
      return !0
    }
    function u(e, n, a, t) {
      if (rn.acceptData(e)) {
        var i,
        r,
        o = rn.expando,
        s = e.nodeType,
        l = s ? rn.cache : e,
        c = s ? e[o] : e[o] && o;
        if (c && l[c] && (t || l[c].data) || void 0 !== a || 'string' != typeof n) return c || (c = s ? e[o] = V.pop() || rn.guid++ : o),
        l[c] || (l[c] = s ? {
        }
         : {
          toJSON: rn.noop
        }),
        ('object' == typeof n || 'function' == typeof n) && (t ? l[c] = rn.extend(l[c], n)  : l[c].data = rn.extend(l[c].data, n)),
        r = l[c],
        t || (r.data || (r.data = {
        }), r = r.data),
        void 0 !== a && (r[rn.camelCase(n)] = a),
        'string' == typeof n ? (i = r[n], null == i && (i = r[rn.camelCase(n)]))  : i = r,
        i
      }
    }
    function d(e, n, a) {
      if (rn.acceptData(e)) {
        var t,
        i,
        r = e.nodeType,
        o = r ? rn.cache : e,
        s = r ? e[rn.expando] : rn.expando;
        if (o[s]) {
          if (n && (t = a ? o[s] : o[s].data)) {
            rn.isArray(n) ? n = n.concat(rn.map(n, rn.camelCase))  : n in t ? n = [
              n
            ] : (n = rn.camelCase(n), n = n in t ? [
              n
            ] : n.split(' ')),
            i = n.length;
            for (; i--; ) delete t[n[i]];
            if (a ? !c(t)  : !rn.isEmptyObject(t)) return
          }(a || (delete o[s].data, c(o[s]))) && (r ? rn.cleanData([e], !0)  : an.deleteExpando || o != o.window ? delete o[s] : o[s] = null)
        }
      }
    }
    function m() {
      return !0
    }
    function h() {
      return !1
    }
    function p() {
      try {
        return vn.activeElement
      } catch (e) {
      }
    }
    function v(e) {
      var n = Nn.split('|'),
      a = e.createDocumentFragment();
      if (a.createElement) for (; n.length; ) a.createElement(n.pop());
      return a
    }
    function g(e, n) {
      var a,
      t,
      i = 0,
      r = typeof e.getElementsByTagName !== An ? e.getElementsByTagName(n || '*')  : typeof e.querySelectorAll !== An ? e.querySelectorAll(n || '*')  : void 0;
      if (!r) for (r = [
      ], a = e.childNodes || e; null != (t = a[i]); i++) !n || rn.nodeName(t, n) ? r.push(t)  : rn.merge(r, g(t, n));
      return void 0 === n || n && rn.nodeName(e, n) ? rn.merge([e], r)  : r
    }
    function f(e) {
      Dn.test(e.type) && (e.defaultChecked = e.checked)
    }
    function _(e, n) {
      return rn.nodeName(e, 'table') && rn.nodeName(11 !== n.nodeType ? n : n.firstChild, 'tr') ? e.getElementsByTagName('tbody') [0] || e.appendChild(e.ownerDocument.createElement('tbody'))  : e
    }
    function b(e) {
      return e.type = (null !== rn.find.attr(e, 'type')) + '/' + e.type,
      e
    }
    function y(e) {
      var n = Vn.exec(e.type);
      return n ? e.type = n[1] : e.removeAttribute('type'),
      e
    }
    function w(e, n) {
      for (var a, t = 0; null != (a = e[t]); t++) rn._data(a, 'globalEval', !n || rn._data(n[t], 'globalEval'))
    }
    function k(e, n) {
      if (1 === n.nodeType && rn.hasData(e)) {
        var a,
        t,
        i,
        r = rn._data(e),
        o = rn._data(n, r),
        s = r.events;
        if (s) {
          delete o.handle,
          o.events = {
          };
          for (a in s) for (t = 0, i = s[a].length; i > t; t++) rn.event.add(n, a, s[a][t])
        }
        o.data && (o.data = rn.extend({
        }, o.data))
      }
    }
    function S(e, n) {
      var a,
      t,
      i;
      if (1 === n.nodeType) {
        if (a = n.nodeName.toLowerCase(), !an.noCloneEvent && n[rn.expando]) {
          i = rn._data(n);
          for (t in i.events) rn.removeEvent(n, t, i.handle);
          n.removeAttribute(rn.expando)
        }
        'script' === a && n.text !== e.text ? (b(n).text = e.text, y(n))  : 'object' === a ? (n.parentNode && (n.outerHTML = e.outerHTML), an.html5Clone && e.innerHTML && !rn.trim(n.innerHTML) && (n.innerHTML = e.innerHTML))  : 'input' === a && Dn.test(e.type) ? (n.defaultChecked = n.checked = e.checked, n.value !== e.value && (n.value = e.value))  : 'option' === a ? n.defaultSelected = n.selected = e.defaultSelected : ('input' === a || 'textarea' === a) && (n.defaultValue = e.defaultValue)
      }
    }
    function A(n, a) {
      var t,
      i = rn(a.createElement(n)).appendTo(a.body),
      r = e.getDefaultComputedStyle && (t = e.getDefaultComputedStyle(i[0])) ? t.display : rn.css(i[0], 'display');
      return i.detach(),
      r
    }
    function M(e) {
      var n = vn,
      a = ea[e];
      return a || (a = A(e, n), 'none' !== a && a || (Qn = (Qn || rn('<iframe frameborder=\'0\' width=\'0\' height=\'0\'/>')).appendTo(n.documentElement), n = (Qn[0].contentWindow || Qn[0].contentDocument).document, n.write(), n.close(), a = A(e, n), Qn.detach()), ea[e] = a),
      a
    }
    function x(e, n) {
      return {
        get: function () {
          var a = e();
          if (null != a) return a ? void delete this.get : (this.get = n).apply(this, arguments)
        }
      }
    }
    function C(e, n) {
      if (n in e) return n;
      for (var a = n.charAt(0).toUpperCase() + n.slice(1), t = n, i = ha.length; i--; ) if (n = ha[i] + a, n in e) return n;
      return t
    }
    function z(e, n) {
      for (var a, t, i, r = [
      ], o = 0, s = e.length; s > o; o++) t = e[o],
      t.style && (r[o] = rn._data(t, 'olddisplay'), a = t.style.display, n ? (r[o] || 'none' !== a || (t.style.display = ''), '' === t.style.display && Pn(t) && (r[o] = rn._data(t, 'olddisplay', M(t.nodeName))))  : (i = Pn(t), (a && 'none' !== a || !i) && rn._data(t, 'olddisplay', i ? a : rn.css(t, 'display'))));
      for (o = 0; s > o; o++) t = e[o],
      t.style && (n && 'none' !== t.style.display && '' !== t.style.display || (t.style.display = n ? r[o] || '' : 'none'));
      return e
    }
    function P(e, n, a) {
      var t = ca.exec(n);
      return t ? Math.max(0, t[1] - (a || 0)) + (t[2] || 'px')  : n
    }
    function T(e, n, a, t, i) {
      for (var r = a === (t ? 'border' : 'content') ? 4 : 'width' === n ? 1 : 0, o = 0; 4 > r; r += 2) 'margin' === a && (o += rn.css(e, a + zn[r], !0, i)),
      t ? ('content' === a && (o -= rn.css(e, 'padding' + zn[r], !0, i)), 'margin' !== a && (o -= rn.css(e, 'border' + zn[r] + 'Width', !0, i)))  : (o += rn.css(e, 'padding' + zn[r], !0, i), 'padding' !== a && (o += rn.css(e, 'border' + zn[r] + 'Width', !0, i)));
      return o
    }
    function D(e, n, a) {
      var t = !0,
      i = 'width' === n ? e.offsetWidth : e.offsetHeight,
      r = na(e),
      o = an.boxSizing && 'border-box' === rn.css(e, 'boxSizing', !1, r);
      if (0 >= i || null == i) {
        if (i = aa(e, n, r), (0 > i || null == i) && (i = e.style[n]), ia.test(i)) return i;
        t = o && (an.boxSizingReliable() || i === e.style[n]),
        i = parseFloat(i) || 0
      }
      return i + T(e, n, a || (o ? 'border' : 'content'), t, r) + 'px'
    }
    function E(e, n, a, t, i) {
      return new E.prototype.init(e, n, a, t, i)
    }
    function $() {
      return setTimeout(function () {
        pa = void 0
      }),
      pa = rn.now()
    }
    function I(e, n) {
      var a,
      t = {
        height: e
      },
      i = 0;
      for (n = n ? 1 : 0; 4 > i; i += 2 - n) a = zn[i],
      t['margin' + a] = t['padding' + a] = e;
      return n && (t.opacity = t.width = e),
      t
    }
    function L(e, n, a) {
      for (var t, i = (ya[n] || [
      ]).concat(ya['*']), r = 0, o = i.length; o > r; r++) if (t = i[r].call(a, n, e)) return t
    }
    function B(e, n, a) {
      var t,
      i,
      r,
      o,
      s,
      l,
      c,
      u,
      d = this,
      m = {
      },
      h = e.style,
      p = e.nodeType && Pn(e),
      v = rn._data(e, 'fxshow');
      a.queue || (s = rn._queueHooks(e, 'fx'), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function () {
        s.unqueued || l()
      }), s.unqueued++, d.always(function () {
        d.always(function () {
          s.unqueued--,
          rn.queue(e, 'fx').length || s.empty.fire()
        })
      })),
      1 === e.nodeType && ('height' in n || 'width' in n) && (a.overflow = [
        h.overflow,
        h.overflowX,
        h.overflowY
      ], c = rn.css(e, 'display'), u = 'none' === c ? rn._data(e, 'olddisplay') || M(e.nodeName)  : c, 'inline' === u && 'none' === rn.css(e, 'float') && (an.inlineBlockNeedsLayout && 'inline' !== M(e.nodeName) ? h.zoom = 1 : h.display = 'inline-block')),
      a.overflow && (h.overflow = 'hidden', an.shrinkWrapBlocks() || d.always(function () {
        h.overflow = a.overflow[0],
        h.overflowX = a.overflow[1],
        h.overflowY = a.overflow[2]
      }));
      for (t in n) if (i = n[t], ga.exec(i)) {
        if (delete n[t], r = r || 'toggle' === i, i === (p ? 'hide' : 'show')) {
          if ('show' !== i || !v || void 0 === v[t]) continue;
          p = !0
        }
        m[t] = v && v[t] || rn.style(e, t)
      } else c = void 0;
      if (rn.isEmptyObject(m)) 'inline' === ('none' === c ? M(e.nodeName)  : c) && (h.display = c);
       else {
        v ? 'hidden' in v && (p = v.hidden)  : v = rn._data(e, 'fxshow', {
        }),
        r && (v.hidden = !p),
        p ? rn(e).show()  : d.done(function () {
          rn(e).hide()
        }),
        d.done(function () {
          var n;
          rn._removeData(e, 'fxshow');
          for (n in m) rn.style(e, n, m[n])
        });
        for (t in m) o = L(p ? v[t] : 0, t, d),
        t in v || (v[t] = o.start, p && (o.end = o.start, o.start = 'width' === t || 'height' === t ? 1 : 0))
      }
    }
    function N(e, n) {
      var a,
      t,
      i,
      r,
      o;
      for (a in e) if (t = rn.camelCase(a), i = n[t], r = e[a], rn.isArray(r) && (i = r[1], r = e[a] = r[0]), a !== t && (e[t] = r, delete e[a]), o = rn.cssHooks[t], o && 'expand' in o) {
        r = o.expand(r),
        delete e[t];
        for (a in r) a in e || (e[a] = r[a], n[a] = i)
      } else n[t] = i
    }
    function R(e, n, a) {
      var t,
      i,
      r = 0,
      o = ba.length,
      s = rn.Deferred().always(function () {
        delete l.elem
      }),
      l = function () {
        if (i) return !1;
        for (var n = pa || $(), a = Math.max(0, c.startTime + c.duration - n), t = a / c.duration || 0, r = 1 - t, o = 0, l = c.tweens.length; l > o; o++) c.tweens[o].run(r);
        return s.notifyWith(e, [
          c,
          r,
          a
        ]),
        1 > r && l ? a : (s.resolveWith(e, [
          c
        ]), !1)
      },
      c = s.promise({
        elem: e,
        props: rn.extend({
        }, n),
        opts: rn.extend(!0, {
          specialEasing: {
          }
        }, a),
        originalProperties: n,
        originalOptions: a,
        startTime: pa || $(),
        duration: a.duration,
        tweens: [
        ],
        createTween: function (n, a) {
          var t = rn.Tween(e, c.opts, n, a, c.opts.specialEasing[n] || c.opts.easing);
          return c.tweens.push(t),
          t
        },
        stop: function (n) {
          var a = 0,
          t = n ? c.tweens.length : 0;
          if (i) return this;
          for (i = !0; t > a; a++) c.tweens[a].run(1);
          return n ? s.resolveWith(e, [
            c,
            n
          ])  : s.rejectWith(e, [
            c,
            n
          ]),
          this
        }
      }),
      u = c.props;
      for (N(u, c.opts.specialEasing); o > r; r++) if (t = ba[r].call(c, e, u, c.opts)) return t;
      return rn.map(u, L, c),
      rn.isFunction(c.opts.start) && c.opts.start.call(e, c),
      rn.fx.timer(rn.extend(l, {
        elem: e,
        anim: c,
        queue: c.opts.queue
      })),
      c.progress(c.opts.progress).done(c.opts.done, c.opts.complete).fail(c.opts.fail).always(c.opts.always)
    }
    function j(e) {
      return function (n, a) {
        'string' != typeof n && (a = n, n = '*');
        var t,
        i = 0,
        r = n.toLowerCase().match(yn) || [
        ];
        if (rn.isFunction(a)) for (; t = r[i++]; ) '+' === t.charAt(0) ? (t = t.slice(1) || '*', (e[t] = e[t] || [
        ]).unshift(a))  : (e[t] = e[t] || [
        ]).push(a)
      }
    }
    function K(e, n, a, t) {
      function i(s) {
        var l;
        return r[s] = !0,
        rn.each(e[s] || [
        ], function (e, s) {
          var c = s(n, a, t);
          return 'string' != typeof c || o || r[c] ? o ? !(l = c)  : void 0 : (n.dataTypes.unshift(c), i(c), !1)
        }),
        l
      }
      var r = {
      },
      o = e === Oa;
      return i(n.dataTypes[0]) || !r['*'] && i('*')
    }
    function F(e, n) {
      var a,
      t,
      i = rn.ajaxSettings.flatOptions || {
      };
      for (t in n) void 0 !== n[t] && ((i[t] ? e : a || (a = {
      })) [t] = n[t]);
      return a && rn.extend(!0, e, a),
      e
    }
    function H(e, n, a) {
      for (var t, i, r, o, s = e.contents, l = e.dataTypes; '*' === l[0]; ) l.shift(),
      void 0 === i && (i = e.mimeType || n.getResponseHeader('Content-Type'));
      if (i) for (o in s) if (s[o] && s[o].test(i)) {
        l.unshift(o);
        break
      }
      if (l[0] in a) r = l[0];
       else {
        for (o in a) {
          if (!l[0] || e.converters[o + ' ' + l[0]]) {
            r = o;
            break
          }
          t || (t = o)
        }
        r = r || t
      }
      return r ? (r !== l[0] && l.unshift(r), a[r])  : void 0
    }
    function G(e, n, a, t) {
      var i,
      r,
      o,
      s,
      l,
      c = {
      },
      u = e.dataTypes.slice();
      if (u[1]) for (o in e.converters) c[o.toLowerCase()] = e.converters[o];
      for (r = u.shift(); r; ) if (e.responseFields[r] && (a[e.responseFields[r]] = n), !l && t && e.dataFilter && (n = e.dataFilter(n, e.dataType)), l = r, r = u.shift()) if ('*' === r) r = l;
       else if ('*' !== l && l !== r) {
        if (o = c[l + ' ' + r] || c['* ' + r], !o) for (i in c) if (s = i.split(' '), s[1] === r && (o = c[l + ' ' + s[0]] || c['* ' + s[0]])) {
          o === !0 ? o = c[i] : c[i] !== !0 && (r = s[0], u.unshift(s[1]));
          break
        }
        if (o !== !0) if (o && e['throws']) n = o(n);
         else try {
          n = o(n)
        } catch (d) {
          return {
            state: 'parsererror',
            error: o ? d : 'No conversion from ' + l + ' to ' + r
          }
        }
      }
      return {
        state: 'success',
        data: n
      }
    }
    function O(e, n, a, t) {
      var i;
      if (rn.isArray(n)) rn.each(n, function (n, i) {
        a || Va.test(e) ? t(e, i)  : O(e + '[' + ('object' == typeof i ? n : '') + ']', i, a, t)
      });
       else if (a || 'object' !== rn.type(n)) t(e, n);
       else for (i in n) O(e + '[' + i + ']', n[i], a, t)
    }
    function q() {
      try {
        return new e.XMLHttpRequest
      } catch (n) {
      }
    }
    function W() {
      try {
        return new e.ActiveXObject('Microsoft.XMLHTTP')
      } catch (n) {
      }
    }
    function J(e) {
      return rn.isWindow(e) ? e : 9 === e.nodeType ? e.defaultView || e.parentWindow : !1
    }
    var V = [
    ],
    U = V.slice,
    Z = V.concat,
    Y = V.push,
    X = V.indexOf,
    Q = {
    },
    en = Q.toString,
    nn = Q.hasOwnProperty,
    an = {
    },
    tn = '1.11.1',
    rn = function (e, n) {
      return new rn.fn.init(e, n)
    },
    on = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
    sn = /^-ms-/,
    ln = /-([\da-z])/gi,
    cn = function (e, n) {
      return n.toUpperCase()
    };
    rn.fn = rn.prototype = {
      jquery: tn,
      constructor: rn,
      selector: '',
      length: 0,
      toArray: function () {
        return U.call(this)
      },
      get: function (e) {
        return null != e ? 0 > e ? this[e + this.length] : this[e] : U.call(this)
      },
      pushStack: function (e) {
        var n = rn.merge(this.constructor(), e);
        return n.prevObject = this,
        n.context = this.context,
        n
      },
      each: function (e, n) {
        return rn.each(this, e, n)
      },
      map: function (e) {
        return this.pushStack(rn.map(this, function (n, a) {
          return e.call(n, a, n)
        }))
      },
      slice: function () {
        return this.pushStack(U.apply(this, arguments))
      },
      first: function () {
        return this.eq(0)
      },
      last: function () {
        return this.eq( - 1)
      },
      eq: function (e) {
        var n = this.length,
        a = + e + (0 > e ? n : 0);
        return this.pushStack(a >= 0 && n > a ? [
          this[a]
        ] : [
        ])
      },
      end: function () {
        return this.prevObject || this.constructor(null)
      },
      push: Y,
      sort: V.sort,
      splice: V.splice
    },
    rn.extend = rn.fn.extend = function () {
      var e,
      n,
      a,
      t,
      i,
      r,
      o = arguments[0] || {
      },
      s = 1,
      l = arguments.length,
      c = !1;
      for ('boolean' == typeof o && (c = o, o = arguments[s] || {
      }, s++), 'object' == typeof o || rn.isFunction(o) || (o = {
      }), s === l && (o = this, s--); l > s; s++) if (null != (i = arguments[s])) for (t in i) e = o[t],
      a = i[t],
      o !== a && (c && a && (rn.isPlainObject(a) || (n = rn.isArray(a))) ? (n ? (n = !1, r = e && rn.isArray(e) ? e : [
      ])  : r = e && rn.isPlainObject(e) ? e : {
      }, o[t] = rn.extend(c, r, a))  : void 0 !== a && (o[t] = a));
      return o
    },
    rn.extend({
      expando: 'jQuery' + (tn + Math.random()).replace(/\D/g, ''),
      isReady: !0,
      error: function (e) {
        throw new Error(e)
      },
      noop: function () {
      },
      isFunction: function (e) {
        return 'function' === rn.type(e)
      },
      isArray: Array.isArray || function (e) {
        return 'array' === rn.type(e)
      },
      isWindow: function (e) {
        return null != e && e == e.window
      },
      isNumeric: function (e) {
        return !rn.isArray(e) && e - parseFloat(e) >= 0
      },
      isEmptyObject: function (e) {
        var n;
        for (n in e) return !1;
        return !0
      },
      isPlainObject: function (e) {
        var n;
        if (!e || 'object' !== rn.type(e) || e.nodeType || rn.isWindow(e)) return !1;
        try {
          if (e.constructor && !nn.call(e, 'constructor') && !nn.call(e.constructor.prototype, 'isPrototypeOf')) return !1
        } catch (a) {
          return !1
        }
        if (an.ownLast) for (n in e) return nn.call(e, n);
        for (n in e);
        return void 0 === n || nn.call(e, n)
      },
      type: function (e) {
        return null == e ? e + '' : 'object' == typeof e || 'function' == typeof e ? Q[en.call(e)] || 'object' : typeof e
      },
      globalEval: function (n) {
        n && rn.trim(n) && (e.execScript || function (n) {
          e.eval.call(e, n)
        }) (n)
      },
      camelCase: function (e) {
        return e.replace(sn, 'ms-').replace(ln, cn)
      },
      nodeName: function (e, n) {
        return e.nodeName && e.nodeName.toLowerCase() === n.toLowerCase()
      },
      each: function (e, n, t) {
        var i,
        r = 0,
        o = e.length,
        s = a(e);
        if (t) {
          if (s) for (; o > r && (i = n.apply(e[r], t), i !== !1); r++);
           else for (r in e) if (i = n.apply(e[r], t), i === !1) break
        } else if (s) for (; o > r && (i = n.call(e[r], r, e[r]), i !== !1); r++);
         else for (r in e) if (i = n.call(e[r], r, e[r]), i === !1) break;
        return e
      },
      trim: function (e) {
        return null == e ? '' : (e + '').replace(on, '')
      },
      makeArray: function (e, n) {
        var t = n || [
        ];
        return null != e && (a(Object(e)) ? rn.merge(t, 'string' == typeof e ? [
          e
        ] : e)  : Y.call(t, e)),
        t
      },
      inArray: function (e, n, a) {
        var t;
        if (n) {
          if (X) return X.call(n, e, a);
          for (t = n.length, a = a ? 0 > a ? Math.max(0, t + a)  : a : 0; t > a; a++) if (a in n && n[a] === e) return a
        }
        return - 1
      },
      merge: function (e, n) {
        for (var a = + n.length, t = 0, i = e.length; a > t; ) e[i++] = n[t++];
        if (a !== a) for (; void 0 !== n[t]; ) e[i++] = n[t++];
        return e.length = i,
        e
      },
      grep: function (e, n, a) {
        for (var t, i = [
        ], r = 0, o = e.length, s = !a; o > r; r++) t = !n(e[r], r),
        t !== s && i.push(e[r]);
        return i
      },
      map: function (e, n, t) {
        var i,
        r = 0,
        o = e.length,
        s = a(e),
        l = [
        ];
        if (s) for (; o > r; r++) i = n(e[r], r, t),
        null != i && l.push(i);
         else for (r in e) i = n(e[r], r, t),
        null != i && l.push(i);
        return Z.apply([], l)
      },
      guid: 1,
      proxy: function (e, n) {
        var a,
        t,
        i;
        return 'string' == typeof n && (i = e[n], n = e, e = i),
        rn.isFunction(e) ? (a = U.call(arguments, 2), t = function () {
          return e.apply(n || this, a.concat(U.call(arguments)))
        }, t.guid = e.guid = e.guid || rn.guid++, t)  : void 0
      },
      now: function () {
        return + new Date
      },
      support: an
    }),
    rn.each('Boolean Number String Function Array Date RegExp Object Error'.split(' '), function (e, n) {
      Q['[object ' + n + ']'] = n.toLowerCase()
    });
    var un = function (e) {
      function n(e, n, a, t) {
        var i,
        r,
        o,
        s,
        l,
        c,
        d,
        h,
        p,
        v;
        if ((n ? n.ownerDocument || n : K) !== E && D(n), n = n || E, a = a || [
        ], !e || 'string' != typeof e) return a;
        if (1 !== (s = n.nodeType) && 9 !== s) return [];
        if (I && !t) {
          if (i = bn.exec(e)) if (o = i[1]) {
            if (9 === s) {
              if (r = n.getElementById(o), !r || !r.parentNode) return a;
              if (r.id === o) return a.push(r),
              a
            } else if (n.ownerDocument && (r = n.ownerDocument.getElementById(o)) && R(n, r) && r.id === o) return a.push(r),
            a
          } else {
            if (i[2]) return Q.apply(a, n.getElementsByTagName(e)),
            a;
            if ((o = i[3]) && w.getElementsByClassName && n.getElementsByClassName) return Q.apply(a, n.getElementsByClassName(o)),
            a
          }
          if (w.qsa && (!L || !L.test(e))) {
            if (h = d = j, p = n, v = 9 === s && e, 1 === s && 'object' !== n.nodeName.toLowerCase()) {
              for (c = M(e), (d = n.getAttribute('id')) ? h = d.replace(wn, '\\$&')  : n.setAttribute('id', h), h = '[id=\'' + h + '\'] ', l = c.length; l--; ) c[l] = h + m(c[l]);
              p = yn.test(e) && u(n.parentNode) || n,
              v = c.join(',')
            }
            if (v) try {
              return Q.apply(a, p.querySelectorAll(v)),
              a
            } catch (g) {
            } finally {
              d || n.removeAttribute('id')
            }
          }
        }
        return C(e.replace(cn, '$1'), n, a, t)
      }
      function a() {
        function e(a, t) {
          return n.push(a + ' ') > k.cacheLength && delete e[n.shift()],
          e[a + ' '] = t
        }
        var n = [
        ];
        return e
      }
      function t(e) {
        return e[j] = !0,
        e
      }
      function i(e) {
        var n = E.createElement('div');
        try {
          return !!e(n)
        } catch (a) {
          return !1
        } finally {
          n.parentNode && n.parentNode.removeChild(n),
          n = null
        }
      }
      function r(e, n) {
        for (var a = e.split('|'), t = e.length; t--; ) k.attrHandle[a[t]] = n
      }
      function o(e, n) {
        var a = n && e,
        t = a && 1 === e.nodeType && 1 === n.nodeType && (~n.sourceIndex || V) - (~e.sourceIndex || V);
        if (t) return t;
        if (a) for (; a = a.nextSibling; ) if (a === n) return - 1;
        return e ? 1 : - 1
      }
      function s(e) {
        return function (n) {
          var a = n.nodeName.toLowerCase();
          return 'input' === a && n.type === e
        }
      }
      function l(e) {
        return function (n) {
          var a = n.nodeName.toLowerCase();
          return ('input' === a || 'button' === a) && n.type === e
        }
      }
      function c(e) {
        return t(function (n) {
          return n = + n,
          t(function (a, t) {
            for (var i, r = e([], a.length, n), o = r.length; o--; ) a[i = r[o]] && (a[i] = !(t[i] = a[i]))
          })
        })
      }
      function u(e) {
        return e && typeof e.getElementsByTagName !== J && e
      }
      function d() {
      }
      function m(e) {
        for (var n = 0, a = e.length, t = ''; a > n; n++) t += e[n].value;
        return t
      }
      function h(e, n, a) {
        var t = n.dir,
        i = a && 'parentNode' === t,
        r = H++;
        return n.first ? function (n, a, r) {
          for (; n = n[t]; ) if (1 === n.nodeType || i) return e(n, a, r)
        }
         : function (n, a, o) {
          var s,
          l,
          c = [
            F,
            r
          ];
          if (o) {
            for (; n = n[t]; ) if ((1 === n.nodeType || i) && e(n, a, o)) return !0
          } else for (; n = n[t]; ) if (1 === n.nodeType || i) {
            if (l = n[j] || (n[j] = {
            }), (s = l[t]) && s[0] === F && s[1] === r) return c[2] = s[2];
            if (l[t] = c, c[2] = e(n, a, o)) return !0
          }
        }
      }
      function p(e) {
        return e.length > 1 ? function (n, a, t) {
          for (var i = e.length; i--; ) if (!e[i](n, a, t)) return !1;
          return !0
        }
         : e[0]
      }
      function v(e, a, t) {
        for (var i = 0, r = a.length; r > i; i++) n(e, a[i], t);
        return t
      }
      function g(e, n, a, t, i) {
        for (var r, o = [
        ], s = 0, l = e.length, c = null != n; l > s; s++) (r = e[s]) && (!a || a(r, t, i)) && (o.push(r), c && n.push(s));
        return o
      }
      function f(e, n, a, i, r, o) {
        return i && !i[j] && (i = f(i)),
        r && !r[j] && (r = f(r, o)),
        t(function (t, o, s, l) {
          var c,
          u,
          d,
          m = [
          ],
          h = [
          ],
          p = o.length,
          f = t || v(n || '*', s.nodeType ? [
            s
          ] : s, [
          ]),
          _ = !e || !t && n ? f : g(f, m, e, s, l),
          b = a ? r || (t ? e : p || i) ? [
          ] : o : _;
          if (a && a(_, b, s, l), i) for (c = g(b, h), i(c, [
          ], s, l), u = c.length; u--; ) (d = c[u]) && (b[h[u]] = !(_[h[u]] = d));
          if (t) {
            if (r || e) {
              if (r) {
                for (c = [
                ], u = b.length; u--; ) (d = b[u]) && c.push(_[u] = d);
                r(null, b = [
                ], c, l)
              }
              for (u = b.length; u--; ) (d = b[u]) && (c = r ? nn.call(t, d)  : m[u]) > - 1 && (t[c] = !(o[c] = d))
            }
          } else b = g(b === o ? b.splice(p, b.length)  : b),
          r ? r(null, o, b, l)  : Q.apply(o, b)
        })
      }
      function _(e) {
        for (var n, a, t, i = e.length, r = k.relative[e[0].type], o = r || k.relative[' '], s = r ? 1 : 0, l = h(function (e) {
          return e === n
        }, o, !0), c = h(function (e) {
          return nn.call(n, e) > - 1
        }, o, !0), u = [
          function (e, a, t) {
            return !r && (t || a !== z) || ((n = a).nodeType ? l(e, a, t)  : c(e, a, t))
          }
        ]; i > s; s++) if (a = k.relative[e[s].type]) u = [
          h(p(u), a)
        ];
         else {
          if (a = k.filter[e[s].type].apply(null, e[s].matches), a[j]) {
            for (t = ++s; i > t && !k.relative[e[t].type]; t++);
            return f(s > 1 && p(u), s > 1 && m(e.slice(0, s - 1).concat({
              value: ' ' === e[s - 2].type ? '*' : ''
            })).replace(cn, '$1'), a, t > s && _(e.slice(s, t)), i > t && _(e = e.slice(t)), i > t && m(e))
          }
          u.push(a)
        }
        return p(u)
      }
      function b(e, a) {
        var i = a.length > 0,
        r = e.length > 0,
        o = function (t, o, s, l, c) {
          var u,
          d,
          m,
          h = 0,
          p = '0',
          v = t && [
          ],
          f = [
          ],
          _ = z,
          b = t || r && k.find.TAG('*', c),
          y = F += null == _ ? 1 : Math.random() || 0.1,
          w = b.length;
          for (c && (z = o !== E && o); p !== w && null != (u = b[p]); p++) {
            if (r && u) {
              for (d = 0; m = e[d++]; ) if (m(u, o, s)) {
                l.push(u);
                break
              }
              c && (F = y)
            }
            i && ((u = !m && u) && h--, t && v.push(u))
          }
          if (h += p, i && p !== h) {
            for (d = 0; m = a[d++]; ) m(v, f, o, s);
            if (t) {
              if (h > 0) for (; p--; ) v[p] || f[p] || (f[p] = Y.call(l));
              f = g(f)
            }
            Q.apply(l, f),
            c && !t && f.length > 0 && h + a.length > 1 && n.uniqueSort(l)
          }
          return c && (F = y, z = _),
          v
        };
        return i ? t(o)  : o
      }
      var y,
      w,
      k,
      S,
      A,
      M,
      x,
      C,
      z,
      P,
      T,
      D,
      E,
      $,
      I,
      L,
      B,
      N,
      R,
      j = 'sizzle' + - new Date,
      K = e.document,
      F = 0,
      H = 0,
      G = a(),
      O = a(),
      q = a(),
      W = function (e, n) {
        return e === n && (T = !0),
        0
      },
      J = 'undefined',
      V = 1 << 31,
      U = {
      }.hasOwnProperty,
      Z = [
      ],
      Y = Z.pop,
      X = Z.push,
      Q = Z.push,
      en = Z.slice,
      nn = Z.indexOf || function (e) {
        for (var n = 0, a = this.length; a > n; n++) if (this[n] === e) return n;
        return - 1
      },
      an = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',
      tn = '[\\x20\\t\\r\\n\\f]',
      rn = '(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+',
      on = rn.replace('w', 'w#'),
      sn = '\\[' + tn + '*(' + rn + ')(?:' + tn + '*([*^$|!~]?=)' + tn + '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' + on + '))|)' + tn + '*\\]',
      ln = ':(' + rn + ')(?:\\(((\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|' + sn + ')*)|.*)\\)|)',
      cn = new RegExp('^' + tn + '+|((?:^|[^\\\\])(?:\\\\.)*)' + tn + '+$', 'g'),
      un = new RegExp('^' + tn + '*,' + tn + '*'),
      dn = new RegExp('^' + tn + '*([>+~]|' + tn + ')' + tn + '*'),
      mn = new RegExp('=' + tn + '*([^\\]\'"]*?)' + tn + '*\\]', 'g'),
      hn = new RegExp(ln),
      pn = new RegExp('^' + on + '$'),
      vn = {
        ID: new RegExp('^#(' + rn + ')'),
        CLASS: new RegExp('^\\.(' + rn + ')'),
        TAG: new RegExp('^(' + rn.replace('w', 'w*') + ')'),
        ATTR: new RegExp('^' + sn),
        PSEUDO: new RegExp('^' + ln),
        CHILD: new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + tn + '*(even|odd|(([+-]|)(\\d*)n|)' + tn + '*(?:([+-]|)' + tn + '*(\\d+)|))' + tn + '*\\)|)', 'i'),
        bool: new RegExp('^(?:' + an + ')$', 'i'),
        needsContext: new RegExp('^' + tn + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + tn + '*((?:-\\d)?\\d*)' + tn + '*\\)|)(?=[^-]|$)', 'i')
      },
      gn = /^(?:input|select|textarea|button)$/i,
      fn = /^h\d$/i,
      _n = /^[^{]+\{\s*\[native \w/,
      bn = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
      yn = /[+~]/,
      wn = /'|\\/g,
      kn = new RegExp('\\\\([\\da-f]{1,6}' + tn + '?|(' + tn + ')|.)', 'ig'),
      Sn = function (e, n, a) {
        var t = '0x' + n - 65536;
        return t !== t || a ? n : 0 > t ? String.fromCharCode(t + 65536)  : String.fromCharCode(t >> 10 | 55296, 1023 & t | 56320)
      };
      try {
        Q.apply(Z = en.call(K.childNodes), K.childNodes),
        Z[K.childNodes.length].nodeType
      } catch (An) {
        Q = {
          apply: Z.length ? function (e, n) {
            X.apply(e, en.call(n))
          }
           : function (e, n) {
            for (var a = e.length, t = 0; e[a++] = n[t++]; );
            e.length = a - 1
          }
        }
      }
      w = n.support = {
      },
      A = n.isXML = function (e) {
        var n = e && (e.ownerDocument || e).documentElement;
        return n ? 'HTML' !== n.nodeName : !1
      },
      D = n.setDocument = function (e) {
        var n,
        a = e ? e.ownerDocument || e : K,
        t = a.defaultView;
        return a !== E && 9 === a.nodeType && a.documentElement ? (E = a, $ = a.documentElement, I = !A(a), t && t !== t.top && (t.addEventListener ? t.addEventListener('unload', function () {
          D()
        }, !1)  : t.attachEvent && t.attachEvent('onunload', function () {
          D()
        })), w.attributes = i(function (e) {
          return e.className = 'i',
          !e.getAttribute('className')
        }), w.getElementsByTagName = i(function (e) {
          return e.appendChild(a.createComment('')),
          !e.getElementsByTagName('*').length
        }), w.getElementsByClassName = _n.test(a.getElementsByClassName) && i(function (e) {
          return e.innerHTML = '<div class=\'a\'></div><div class=\'a i\'></div>',
          e.firstChild.className = 'i',
          2 === e.getElementsByClassName('i').length
        }), w.getById = i(function (e) {
          return $.appendChild(e).id = j,
          !a.getElementsByName || !a.getElementsByName(j).length
        }), w.getById ? (k.find.ID = function (e, n) {
          if (typeof n.getElementById !== J && I) {
            var a = n.getElementById(e);
            return a && a.parentNode ? [
              a
            ] : [
            ]
          }
        }, k.filter.ID = function (e) {
          var n = e.replace(kn, Sn);
          return function (e) {
            return e.getAttribute('id') === n
          }
        })  : (delete k.find.ID, k.filter.ID = function (e) {
          var n = e.replace(kn, Sn);
          return function (e) {
            var a = typeof e.getAttributeNode !== J && e.getAttributeNode('id');
            return a && a.value === n
          }
        }), k.find.TAG = w.getElementsByTagName ? function (e, n) {
          return typeof n.getElementsByTagName !== J ? n.getElementsByTagName(e)  : void 0
        }
         : function (e, n) {
          var a,
          t = [
          ],
          i = 0,
          r = n.getElementsByTagName(e);
          if ('*' === e) {
            for (; a = r[i++]; ) 1 === a.nodeType && t.push(a);
            return t
          }
          return r
        }, k.find.CLASS = w.getElementsByClassName && function (e, n) {
          return typeof n.getElementsByClassName !== J && I ? n.getElementsByClassName(e)  : void 0
        }, B = [
        ], L = [
        ], (w.qsa = _n.test(a.querySelectorAll)) && (i(function (e) {
          e.innerHTML = '<select msallowclip=\'\'><option selected=\'\'></option></select>',
          e.querySelectorAll('[msallowclip^=\'\']').length && L.push('[*^$]=' + tn + '*(?:\'\'|"")'),
          e.querySelectorAll('[selected]').length || L.push('\\[' + tn + '*(?:value|' + an + ')'),
          e.querySelectorAll(':checked').length || L.push(':checked')
        }), i(function (e) {
          var n = a.createElement('input');
          n.setAttribute('type', 'hidden'),
          e.appendChild(n).setAttribute('name', 'D'),
          e.querySelectorAll('[name=d]').length && L.push('name' + tn + '*[*^$|!~]?='),
          e.querySelectorAll(':enabled').length || L.push(':enabled', ':disabled'),
          e.querySelectorAll('*,:x'),
          L.push(',.*:')
        })), (w.matchesSelector = _n.test(N = $.matches || $.webkitMatchesSelector || $.mozMatchesSelector || $.oMatchesSelector || $.msMatchesSelector)) && i(function (e) {
          w.disconnectedMatch = N.call(e, 'div'),
          N.call(e, '[s!=\'\']:x'),
          B.push('!=', ln)
        }), L = L.length && new RegExp(L.join('|')), B = B.length && new RegExp(B.join('|')), n = _n.test($.compareDocumentPosition), R = n || _n.test($.contains) ? function (e, n) {
          var a = 9 === e.nodeType ? e.documentElement : e,
          t = n && n.parentNode;
          return e === t || !(!t || 1 !== t.nodeType || !(a.contains ? a.contains(t)  : e.compareDocumentPosition && 16 & e.compareDocumentPosition(t)))
        }
         : function (e, n) {
          if (n) for (; n = n.parentNode; ) if (n === e) return !0;
          return !1
        }, W = n ? function (e, n) {
          if (e === n) return T = !0,
          0;
          var t = !e.compareDocumentPosition - !n.compareDocumentPosition;
          return t ? t : (t = (e.ownerDocument || e) === (n.ownerDocument || n) ? e.compareDocumentPosition(n)  : 1, 1 & t || !w.sortDetached && n.compareDocumentPosition(e) === t ? e === a || e.ownerDocument === K && R(K, e) ? - 1 : n === a || n.ownerDocument === K && R(K, n) ? 1 : P ? nn.call(P, e) - nn.call(P, n)  : 0 : 4 & t ? - 1 : 1)
        }
         : function (e, n) {
          if (e === n) return T = !0,
          0;
          var t,
          i = 0,
          r = e.parentNode,
          s = n.parentNode,
          l = [
            e
          ],
          c = [
            n
          ];
          if (!r || !s) return e === a ? - 1 : n === a ? 1 : r ? - 1 : s ? 1 : P ? nn.call(P, e) - nn.call(P, n)  : 0;
          if (r === s) return o(e, n);
          for (t = e; t = t.parentNode; ) l.unshift(t);
          for (t = n; t = t.parentNode; ) c.unshift(t);
          for (; l[i] === c[i]; ) i++;
          return i ? o(l[i], c[i])  : l[i] === K ? - 1 : c[i] === K ? 1 : 0
        }, a)  : E
      },
      n.matches = function (e, a) {
        return n(e, null, null, a)
      },
      n.matchesSelector = function (e, a) {
        if ((e.ownerDocument || e) !== E && D(e), a = a.replace(mn, '=\'$1\']'), !(!w.matchesSelector || !I || B && B.test(a) || L && L.test(a))) try {
          var t = N.call(e, a);
          if (t || w.disconnectedMatch || e.document && 11 !== e.document.nodeType) return t
        } catch (i) {
        }
        return n(a, E, null, [
          e
        ]).length > 0
      },
      n.contains = function (e, n) {
        return (e.ownerDocument || e) !== E && D(e),
        R(e, n)
      },
      n.attr = function (e, n) {
        (e.ownerDocument || e) !== E && D(e);
        var a = k.attrHandle[n.toLowerCase()],
        t = a && U.call(k.attrHandle, n.toLowerCase()) ? a(e, n, !I)  : void 0;
        return void 0 !== t ? t : w.attributes || !I ? e.getAttribute(n)  : (t = e.getAttributeNode(n)) && t.specified ? t.value : null
      },
      n.error = function (e) {
        throw new Error('Syntax error, unrecognized expression: ' + e)
      },
      n.uniqueSort = function (e) {
        var n,
        a = [
        ],
        t = 0,
        i = 0;
        if (T = !w.detectDuplicates, P = !w.sortStable && e.slice(0), e.sort(W), T) {
          for (; n = e[i++]; ) n === e[i] && (t = a.push(i));
          for (; t--; ) e.splice(a[t], 1)
        }
        return P = null,
        e
      },
      S = n.getText = function (e) {
        var n,
        a = '',
        t = 0,
        i = e.nodeType;
        if (i) {
          if (1 === i || 9 === i || 11 === i) {
            if ('string' == typeof e.textContent) return e.textContent;
            for (e = e.firstChild; e; e = e.nextSibling) a += S(e)
          } else if (3 === i || 4 === i) return e.nodeValue
        } else for (; n = e[t++]; ) a += S(n);
        return a
      },
      k = n.selectors = {
        cacheLength: 50,
        createPseudo: t,
        match: vn,
        attrHandle: {
        },
        find: {
        },
        relative: {
          '>': {
            dir: 'parentNode',
            first: !0
          },
          ' ': {
            dir: 'parentNode'
          },
          '+': {
            dir: 'previousSibling',
            first: !0
          },
          '~': {
            dir: 'previousSibling'
          }
        },
        preFilter: {
          ATTR: function (e) {
            return e[1] = e[1].replace(kn, Sn),
            e[3] = (e[3] || e[4] || e[5] || '').replace(kn, Sn),
            '~=' === e[2] && (e[3] = ' ' + e[3] + ' '),
            e.slice(0, 4)
          },
          CHILD: function (e) {
            return e[1] = e[1].toLowerCase(),
            'nth' === e[1].slice(0, 3) ? (e[3] || n.error(e[0]), e[4] = + (e[4] ? e[5] + (e[6] || 1)  : 2 * ('even' === e[3] || 'odd' === e[3])), e[5] = + (e[7] + e[8] || 'odd' === e[3]))  : e[3] && n.error(e[0]),
            e
          },
          PSEUDO: function (e) {
            var n,
            a = !e[6] && e[2];
            return vn.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || '' : a && hn.test(a) && (n = M(a, !0)) && (n = a.indexOf(')', a.length - n) - a.length) && (e[0] = e[0].slice(0, n), e[2] = a.slice(0, n)), e.slice(0, 3))
          }
        },
        filter: {
          TAG: function (e) {
            var n = e.replace(kn, Sn).toLowerCase();
            return '*' === e ? function () {
              return !0
            }
             : function (e) {
              return e.nodeName && e.nodeName.toLowerCase() === n
            }
          },
          CLASS: function (e) {
            var n = G[e + ' '];
            return n || (n = new RegExp('(^|' + tn + ')' + e + '(' + tn + '|$)')) && G(e, function (e) {
              return n.test('string' == typeof e.className && e.className || typeof e.getAttribute !== J && e.getAttribute('class') || '')
            })
          },
          ATTR: function (e, a, t) {
            return function (i) {
              var r = n.attr(i, e);
              return null == r ? '!=' === a : a ? (r += '', '=' === a ? r === t : '!=' === a ? r !== t : '^=' === a ? t && 0 === r.indexOf(t)  : '*=' === a ? t && r.indexOf(t) > - 1 : '$=' === a ? t && r.slice( - t.length) === t : '~=' === a ? (' ' + r + ' ').indexOf(t) > - 1 : '|=' === a ? r === t || r.slice(0, t.length + 1) === t + '-' : !1)  : !0
            }
          },
          CHILD: function (e, n, a, t, i) {
            var r = 'nth' !== e.slice(0, 3),
            o = 'last' !== e.slice( - 4),
            s = 'of-type' === n;
            return 1 === t && 0 === i ? function (e) {
              return !!e.parentNode
            }
             : function (n, a, l) {
              var c,
              u,
              d,
              m,
              h,
              p,
              v = r !== o ? 'nextSibling' : 'previousSibling',
              g = n.parentNode,
              f = s && n.nodeName.toLowerCase(),
              _ = !l && !s;
              if (g) {
                if (r) {
                  for (; v; ) {
                    for (d = n; d = d[v]; ) if (s ? d.nodeName.toLowerCase() === f : 1 === d.nodeType) return !1;
                    p = v = 'only' === e && !p && 'nextSibling'
                  }
                  return !0
                }
                if (p = [
                  o ? g.firstChild : g.lastChild
                ], o && _) {
                  for (u = g[j] || (g[j] = {
                  }), c = u[e] || [
                  ], h = c[0] === F && c[1], m = c[0] === F && c[2], d = h && g.childNodes[h]; d = ++h && d && d[v] || (m = h = 0) || p.pop(); ) if (1 === d.nodeType && ++m && d === n) {
                    u[e] = [
                      F,
                      h,
                      m
                    ];
                    break
                  }
                } else if (_ && (c = (n[j] || (n[j] = {
                })) [e]) && c[0] === F) m = c[1];
                 else for (; (d = ++h && d && d[v] || (m = h = 0) || p.pop()) && ((s ? d.nodeName.toLowerCase() !== f : 1 !== d.nodeType) || !++m || (_ && ((d[j] || (d[j] = {
                })) [e] = [
                  F,
                  m
                ]), d !== n)); );
                return m -= i,
                m === t || m % t === 0 && m / t >= 0
              }
            }
          },
          PSEUDO: function (e, a) {
            var i,
            r = k.pseudos[e] || k.setFilters[e.toLowerCase()] || n.error('unsupported pseudo: ' + e);
            return r[j] ? r(a)  : r.length > 1 ? (i = [
              e,
              e,
              '',
              a
            ], k.setFilters.hasOwnProperty(e.toLowerCase()) ? t(function (e, n) {
              for (var t, i = r(e, a), o = i.length; o--; ) t = nn.call(e, i[o]),
              e[t] = !(n[t] = i[o])
            })  : function (e) {
              return r(e, 0, i)
            })  : r
          }
        },
        pseudos: {
          not: t(function (e) {
            var n = [
            ],
            a = [
            ],
            i = x(e.replace(cn, '$1'));
            return i[j] ? t(function (e, n, a, t) {
              for (var r, o = i(e, null, t, [
              ]), s = e.length; s--; ) (r = o[s]) && (e[s] = !(n[s] = r))
            })  : function (e, t, r) {
              return n[0] = e,
              i(n, null, r, a),
              !a.pop()
            }
          }),
          has: t(function (e) {
            return function (a) {
              return n(e, a).length > 0
            }
          }),
          contains: t(function (e) {
            return function (n) {
              return (n.textContent || n.innerText || S(n)).indexOf(e) > - 1
            }
          }),
          lang: t(function (e) {
            return pn.test(e || '') || n.error('unsupported lang: ' + e),
            e = e.replace(kn, Sn).toLowerCase(),
            function (n) {
              var a;
              do if (a = I ? n.lang : n.getAttribute('xml:lang') || n.getAttribute('lang')) return a = a.toLowerCase(),
              a === e || 0 === a.indexOf(e + '-');
              while ((n = n.parentNode) && 1 === n.nodeType);
              return !1
            }
          }),
          target: function (n) {
            var a = e.location && e.location.hash;
            return a && a.slice(1) === n.id
          },
          root: function (e) {
            return e === $
          },
          focus: function (e) {
            return e === E.activeElement && (!E.hasFocus || E.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
          },
          enabled: function (e) {
            return e.disabled === !1
          },
          disabled: function (e) {
            return e.disabled === !0
          },
          checked: function (e) {
            var n = e.nodeName.toLowerCase();
            return 'input' === n && !!e.checked || 'option' === n && !!e.selected
          },
          selected: function (e) {
            return e.parentNode && e.parentNode.selectedIndex,
            e.selected === !0
          },
          empty: function (e) {
            for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType < 6) return !1;
            return !0
          },
          parent: function (e) {
            return !k.pseudos.empty(e)
          },
          header: function (e) {
            return fn.test(e.nodeName)
          },
          input: function (e) {
            return gn.test(e.nodeName)
          },
          button: function (e) {
            var n = e.nodeName.toLowerCase();
            return 'input' === n && 'button' === e.type || 'button' === n
          },
          text: function (e) {
            var n;
            return 'input' === e.nodeName.toLowerCase() && 'text' === e.type && (null == (n = e.getAttribute('type')) || 'text' === n.toLowerCase())
          },
          first: c(function () {
            return [0]
          }),
          last: c(function (e, n) {
            return [n - 1]
          }),
          eq: c(function (e, n, a) {
            return [0 > a ? a + n : a]
          }),
          even: c(function (e, n) {
            for (var a = 0; n > a; a += 2) e.push(a);
            return e
          }),
          odd: c(function (e, n) {
            for (var a = 1; n > a; a += 2) e.push(a);
            return e
          }),
          lt: c(function (e, n, a) {
            for (var t = 0 > a ? a + n : a; --t >= 0; ) e.push(t);
            return e
          }),
          gt: c(function (e, n, a) {
            for (var t = 0 > a ? a + n : a; ++t < n; ) e.push(t);
            return e
          })
        }
      },
      k.pseudos.nth = k.pseudos.eq;
      for (y in {
        radio: !0,
        checkbox: !0,
        file: !0,
        password: !0,
        image: !0
      }) k.pseudos[y] = s(y);
      for (y in {
        submit: !0,
        reset: !0
      }) k.pseudos[y] = l(y);
      return d.prototype = k.filters = k.pseudos,
      k.setFilters = new d,
      M = n.tokenize = function (e, a) {
        var t,
        i,
        r,
        o,
        s,
        l,
        c,
        u = O[e + ' '];
        if (u) return a ? 0 : u.slice(0);
        for (s = e, l = [
        ], c = k.preFilter; s; ) {
          (!t || (i = un.exec(s))) && (i && (s = s.slice(i[0].length) || s), l.push(r = [
          ])),
          t = !1,
          (i = dn.exec(s)) && (t = i.shift(), r.push({
            value: t,
            type: i[0].replace(cn, ' ')
          }), s = s.slice(t.length));
          for (o in k.filter) !(i = vn[o].exec(s)) || c[o] && !(i = c[o](i)) || (t = i.shift(), r.push({
            value: t,
            type: o,
            matches: i
          }), s = s.slice(t.length));
          if (!t) break
        }
        return a ? s.length : s ? n.error(e)  : O(e, l).slice(0)
      },
      x = n.compile = function (e, n) {
        var a,
        t = [
        ],
        i = [
        ],
        r = q[e + ' '];
        if (!r) {
          for (n || (n = M(e)), a = n.length; a--; ) r = _(n[a]),
          r[j] ? t.push(r)  : i.push(r);
          r = q(e, b(i, t)),
          r.selector = e
        }
        return r
      },
      C = n.select = function (e, n, a, t) {
        var i,
        r,
        o,
        s,
        l,
        c = 'function' == typeof e && e,
        d = !t && M(e = c.selector || e);
        if (a = a || [
        ], 1 === d.length) {
          if (r = d[0] = d[0].slice(0), r.length > 2 && 'ID' === (o = r[0]).type && w.getById && 9 === n.nodeType && I && k.relative[r[1].type]) {
            if (n = (k.find.ID(o.matches[0].replace(kn, Sn), n) || [
            ]) [0], !n) return a;
            c && (n = n.parentNode),
            e = e.slice(r.shift().value.length)
          }
          for (i = vn.needsContext.test(e) ? 0 : r.length; i-- && (o = r[i], !k.relative[s = o.type]); ) if ((l = k.find[s]) && (t = l(o.matches[0].replace(kn, Sn), yn.test(r[0].type) && u(n.parentNode) || n))) {
            if (r.splice(i, 1), e = t.length && m(r), !e) return Q.apply(a, t),
            a;
            break
          }
        }
        return (c || x(e, d)) (t, n, !I, a, yn.test(e) && u(n.parentNode) || n),
        a
      },
      w.sortStable = j.split('').sort(W).join('') === j,
      w.detectDuplicates = !!T,
      D(),
      w.sortDetached = i(function (e) {
        return 1 & e.compareDocumentPosition(E.createElement('div'))
      }),
      i(function (e) {
        return e.innerHTML = '<a href=\'#\'></a>',
        '#' === e.firstChild.getAttribute('href')
      }) || r('type|href|height|width', function (e, n, a) {
        return a ? void 0 : e.getAttribute(n, 'type' === n.toLowerCase() ? 1 : 2)
      }),
      w.attributes && i(function (e) {
        return e.innerHTML = '<input/>',
        e.firstChild.setAttribute('value', ''),
        '' === e.firstChild.getAttribute('value')
      }) || r('value', function (e, n, a) {
        return a || 'input' !== e.nodeName.toLowerCase() ? void 0 : e.defaultValue
      }),
      i(function (e) {
        return null == e.getAttribute('disabled')
      }) || r(an, function (e, n, a) {
        var t;
        return a ? void 0 : e[n] === !0 ? n.toLowerCase()  : (t = e.getAttributeNode(n)) && t.specified ? t.value : null
      }),
      n
    }(e);
    rn.find = un,
    rn.expr = un.selectors,
    rn.expr[':'] = rn.expr.pseudos,
    rn.unique = un.uniqueSort,
    rn.text = un.getText,
    rn.isXMLDoc = un.isXML,
    rn.contains = un.contains;
    var dn = rn.expr.match.needsContext,
    mn = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
    hn = /^.[^:#\[\.,]*$/;
    rn.filter = function (e, n, a) {
      var t = n[0];
      return a && (e = ':not(' + e + ')'),
      1 === n.length && 1 === t.nodeType ? rn.find.matchesSelector(t, e) ? [
        t
      ] : [
      ] : rn.find.matches(e, rn.grep(n, function (e) {
        return 1 === e.nodeType
      }))
    },
    rn.fn.extend({
      find: function (e) {
        var n,
        a = [
        ],
        t = this,
        i = t.length;
        if ('string' != typeof e) return this.pushStack(rn(e).filter(function () {
          for (n = 0; i > n; n++) if (rn.contains(t[n], this)) return !0
        }));
        for (n = 0; i > n; n++) rn.find(e, t[n], a);
        return a = this.pushStack(i > 1 ? rn.unique(a)  : a),
        a.selector = this.selector ? this.selector + ' ' + e : e,
        a
      },
      filter: function (e) {
        return this.pushStack(t(this, e || [
        ], !1))
      },
      not: function (e) {
        return this.pushStack(t(this, e || [
        ], !0))
      },
      is: function (e) {
        return !!t(this, 'string' == typeof e && dn.test(e) ? rn(e)  : e || [
        ], !1).length
      }
    });
    var pn,
    vn = e.document,
    gn = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
    fn = rn.fn.init = function (e, n) {
      var a,
      t;
      if (!e) return this;
      if ('string' == typeof e) {
        if (a = '<' === e.charAt(0) && '>' === e.charAt(e.length - 1) && e.length >= 3 ? [
          null,
          e,
          null
        ] : gn.exec(e), !a || !a[1] && n) return !n || n.jquery ? (n || pn).find(e)  : this.constructor(n).find(e);
        if (a[1]) {
          if (n = n instanceof rn ? n[0] : n, rn.merge(this, rn.parseHTML(a[1], n && n.nodeType ? n.ownerDocument || n : vn, !0)), mn.test(a[1]) && rn.isPlainObject(n)) for (a in n) rn.isFunction(this[a]) ? this[a](n[a])  : this.attr(a, n[a]);
          return this
        }
        if (t = vn.getElementById(a[2]), t && t.parentNode) {
          if (t.id !== a[2]) return pn.find(e);
          this.length = 1,
          this[0] = t
        }
        return this.context = vn,
        this.selector = e,
        this
      }
      return e.nodeType ? (this.context = this[0] = e, this.length = 1, this)  : rn.isFunction(e) ? 'undefined' != typeof pn.ready ? pn.ready(e)  : e(rn)  : (void 0 !== e.selector && (this.selector = e.selector, this.context = e.context), rn.makeArray(e, this))
    };
    fn.prototype = rn.fn,
    pn = rn(vn);
    var _n = /^(?:parents|prev(?:Until|All))/,
    bn = {
      children: !0,
      contents: !0,
      next: !0,
      prev: !0
    };
    rn.extend({
      dir: function (e, n, a) {
        for (var t = [
        ], i = e[n]; i && 9 !== i.nodeType && (void 0 === a || 1 !== i.nodeType || !rn(i).is(a)); ) 1 === i.nodeType && t.push(i),
        i = i[n];
        return t
      },
      sibling: function (e, n) {
        for (var a = [
        ]; e; e = e.nextSibling) 1 === e.nodeType && e !== n && a.push(e);
        return a
      }
    }),
    rn.fn.extend({
      has: function (e) {
        var n,
        a = rn(e, this),
        t = a.length;
        return this.filter(function () {
          for (n = 0; t > n; n++) if (rn.contains(this, a[n])) return !0
        })
      },
      closest: function (e, n) {
        for (var a, t = 0, i = this.length, r = [
        ], o = dn.test(e) || 'string' != typeof e ? rn(e, n || this.context)  : 0; i > t; t++) for (a = this[t]; a && a !== n; a = a.parentNode) if (a.nodeType < 11 && (o ? o.index(a) > - 1 : 1 === a.nodeType && rn.find.matchesSelector(a, e))) {
          r.push(a);
          break
        }
        return this.pushStack(r.length > 1 ? rn.unique(r)  : r)
      },
      index: function (e) {
        return e ? 'string' == typeof e ? rn.inArray(this[0], rn(e))  : rn.inArray(e.jquery ? e[0] : e, this)  : this[0] && this[0].parentNode ? this.first().prevAll().length : - 1
      },
      add: function (e, n) {
        return this.pushStack(rn.unique(rn.merge(this.get(), rn(e, n))))
      },
      addBack: function (e) {
        return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
      }
    }),
    rn.each({
      parent: function (e) {
        var n = e.parentNode;
        return n && 11 !== n.nodeType ? n : null
      },
      parents: function (e) {
        return rn.dir(e, 'parentNode')
      },
      parentsUntil: function (e, n, a) {
        return rn.dir(e, 'parentNode', a)
      },
      next: function (e) {
        return i(e, 'nextSibling')
      },
      prev: function (e) {
        return i(e, 'previousSibling')
      },
      nextAll: function (e) {
        return rn.dir(e, 'nextSibling')
      },
      prevAll: function (e) {
        return rn.dir(e, 'previousSibling')
      },
      nextUntil: function (e, n, a) {
        return rn.dir(e, 'nextSibling', a)
      },
      prevUntil: function (e, n, a) {
        return rn.dir(e, 'previousSibling', a)
      },
      siblings: function (e) {
        return rn.sibling((e.parentNode || {
        }).firstChild, e)
      },
      children: function (e) {
        return rn.sibling(e.firstChild)
      },
      contents: function (e) {
        return rn.nodeName(e, 'iframe') ? e.contentDocument || e.contentWindow.document : rn.merge([], e.childNodes)
      }
    }, function (e, n) {
      rn.fn[e] = function (a, t) {
        var i = rn.map(this, n, a);
        return 'Until' !== e.slice( - 5) && (t = a),
        t && 'string' == typeof t && (i = rn.filter(t, i)),
        this.length > 1 && (bn[e] || (i = rn.unique(i)), _n.test(e) && (i = i.reverse())),
        this.pushStack(i)
      }
    });
    var yn = /\S+/g,
    wn = {
    };
    rn.Callbacks = function (e) {
      e = 'string' == typeof e ? wn[e] || r(e)  : rn.extend({
      }, e);
      var n,
      a,
      t,
      i,
      o,
      s,
      l = [
      ],
      c = !e.once && [
      ],
      u = function (r) {
        for (a = e.memory && r, t = !0, o = s || 0, s = 0, i = l.length, n = !0; l && i > o; o++) if (l[o].apply(r[0], r[1]) === !1 && e.stopOnFalse) {
          a = !1;
          break
        }
        n = !1,
        l && (c ? c.length && u(c.shift())  : a ? l = [
        ] : d.disable())
      },
      d = {
        add: function () {
          if (l) {
            var t = l.length;
            !function r(n) {
              rn.each(n, function (n, a) {
                var t = rn.type(a);
                'function' === t ? e.unique && d.has(a) || l.push(a)  : a && a.length && 'string' !== t && r(a)
              })
            }(arguments),
            n ? i = l.length : a && (s = t, u(a))
          }
          return this
        },
        remove: function () {
          return l && rn.each(arguments, function (e, a) {
            for (var t; (t = rn.inArray(a, l, t)) > - 1; ) l.splice(t, 1),
            n && (i >= t && i--, o >= t && o--)
          }),
          this
        },
        has: function (e) {
          return e ? rn.inArray(e, l) > - 1 : !(!l || !l.length)
        },
        empty: function () {
          return l = [
          ],
          i = 0,
          this
        },
        disable: function () {
          return l = c = a = void 0,
          this
        },
        disabled: function () {
          return !l
        },
        lock: function () {
          return c = void 0,
          a || d.disable(),
          this
        },
        locked: function () {
          return !c
        },
        fireWith: function (e, a) {
          return !l || t && !c || (a = a || [
          ], a = [
            e,
            a.slice ? a.slice()  : a
          ], n ? c.push(a)  : u(a)),
          this
        },
        fire: function () {
          return d.fireWith(this, arguments),
          this
        },
        fired: function () {
          return !!t
        }
      };
      return d
    },
    rn.extend({
      Deferred: function (e) {
        var n = [
          ['resolve',
          'done',
          rn.Callbacks('once memory'),
          'resolved'],
          [
            'reject',
            'fail',
            rn.Callbacks('once memory'),
            'rejected'
          ],
          [
            'notify',
            'progress',
            rn.Callbacks('memory')
          ]
        ],
        a = 'pending',
        t = {
          state: function () {
            return a
          },
          always: function () {
            return i.done(arguments).fail(arguments),
            this
          },
          then: function () {
            var e = arguments;
            return rn.Deferred(function (a) {
              rn.each(n, function (n, r) {
                var o = rn.isFunction(e[n]) && e[n];
                i[r[1]](function () {
                  var e = o && o.apply(this, arguments);
                  e && rn.isFunction(e.promise) ? e.promise().done(a.resolve).fail(a.reject).progress(a.notify)  : a[r[0] + 'With'](this === t ? a.promise()  : this, o ? [
                    e
                  ] : arguments)
                })
              }),
              e = null
            }).promise()
          },
          promise: function (e) {
            return null != e ? rn.extend(e, t)  : t
          }
        },
        i = {
        };
        return t.pipe = t.then,
        rn.each(n, function (e, r) {
          var o = r[2],
          s = r[3];
          t[r[1]] = o.add,
          s && o.add(function () {
            a = s
          }, n[1 ^ e][2].disable, n[2][2].lock),
          i[r[0]] = function () {
            return i[r[0] + 'With'](this === i ? t : this, arguments),
            this
          },
          i[r[0] + 'With'] = o.fireWith
        }),
        t.promise(i),
        e && e.call(i, i),
        i
      },
      when: function (e) {
        var n,
        a,
        t,
        i = 0,
        r = U.call(arguments),
        o = r.length,
        s = 1 !== o || e && rn.isFunction(e.promise) ? o : 0,
        l = 1 === s ? e : rn.Deferred(),
        c = function (e, a, t) {
          return function (i) {
            a[e] = this,
            t[e] = arguments.length > 1 ? U.call(arguments)  : i,
            t === n ? l.notifyWith(a, t)  : --s || l.resolveWith(a, t)
          }
        };
        if (o > 1) for (n = new Array(o), a = new Array(o), t = new Array(o); o > i; i++) r[i] && rn.isFunction(r[i].promise) ? r[i].promise().done(c(i, t, r)).fail(l.reject).progress(c(i, a, n))  : --s;
        return s || l.resolveWith(t, r),
        l.promise()
      }
    });
    var kn;
    rn.fn.ready = function (e) {
      return rn.ready.promise().done(e),
      this
    },
    rn.extend({
      isReady: !1,
      readyWait: 1,
      holdReady: function (e) {
        e ? rn.readyWait++ : rn.ready(!0)
      },
      ready: function (e) {
        if (e === !0 ? !--rn.readyWait : !rn.isReady) {
          if (!vn.body) return setTimeout(rn.ready);
          rn.isReady = !0,
          e !== !0 && --rn.readyWait > 0 || (kn.resolveWith(vn, [
            rn
          ]), rn.fn.triggerHandler && (rn(vn).triggerHandler('ready'), rn(vn).off('ready')))
        }
      }
    }),
    rn.ready.promise = function (n) {
      if (!kn) if (kn = rn.Deferred(), 'complete' === vn.readyState) setTimeout(rn.ready);
       else if (vn.addEventListener) vn.addEventListener('DOMContentLoaded', s, !1),
      e.addEventListener('load', s, !1);
       else {
        vn.attachEvent('onreadystatechange', s),
        e.attachEvent('onload', s);
        var a = !1;
        try {
          a = null == e.frameElement && vn.documentElement
        } catch (t) {
        }
        a && a.doScroll && !function i() {
          if (!rn.isReady) {
            try {
              a.doScroll('left')
            } catch (e) {
              return setTimeout(i, 50)
            }
            o(),
            rn.ready()
          }
        }()
      }
      return kn.promise(n)
    };
    var Sn,
    An = 'undefined';
    for (Sn in rn(an)) break;
    an.ownLast = '0' !== Sn,
    an.inlineBlockNeedsLayout = !1,
    rn(function () {
      var e,
      n,
      a,
      t;
      a = vn.getElementsByTagName('body') [0],
      a && a.style && (n = vn.createElement('div'), t = vn.createElement('div'), t.style.cssText = 'position:absolute;border:0;width:0;height:0;top:0;left:-9999px', a.appendChild(t).appendChild(n), typeof n.style.zoom !== An && (n.style.cssText = 'display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1', an.inlineBlockNeedsLayout = e = 3 === n.offsetWidth, e && (a.style.zoom = 1)), a.removeChild(t))
    }),
    function () {
      var e = vn.createElement('div');
      if (null == an.deleteExpando) {
        an.deleteExpando = !0;
        try {
          delete e.test
        } catch (n) {
          an.deleteExpando = !1
        }
      }
      e = null
    }(),
    rn.acceptData = function (e) {
      var n = rn.noData[(e.nodeName + ' ').toLowerCase()],
      a = + e.nodeType || 1;
      return 1 !== a && 9 !== a ? !1 : !n || n !== !0 && e.getAttribute('classid') === n
    };
    var Mn = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
    xn = /([A-Z])/g;
    rn.extend({
      cache: {
      },
      noData: {
        'applet ': !0,
        'embed ': !0,
        'object ': 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'
      },
      hasData: function (e) {
        return e = e.nodeType ? rn.cache[e[rn.expando]] : e[rn.expando],
        !!e && !c(e)
      },
      data: function (e, n, a) {
        return u(e, n, a)
      },
      removeData: function (e, n) {
        return d(e, n)
      },
      _data: function (e, n, a) {
        return u(e, n, a, !0)
      },
      _removeData: function (e, n) {
        return d(e, n, !0)
      }
    }),
    rn.fn.extend({
      data: function (e, n) {
        var a,
        t,
        i,
        r = this[0],
        o = r && r.attributes;
        if (void 0 === e) {
          if (this.length && (i = rn.data(r), 1 === r.nodeType && !rn._data(r, 'parsedAttrs'))) {
            for (a = o.length; a--; ) o[a] && (t = o[a].name, 0 === t.indexOf('data-') && (t = rn.camelCase(t.slice(5)), l(r, t, i[t])));
            rn._data(r, 'parsedAttrs', !0)
          }
          return i
        }
        return 'object' == typeof e ? this.each(function () {
          rn.data(this, e)
        })  : arguments.length > 1 ? this.each(function () {
          rn.data(this, e, n)
        })  : r ? l(r, e, rn.data(r, e))  : void 0
      },
      removeData: function (e) {
        return this.each(function () {
          rn.removeData(this, e)
        })
      }
    }),
    rn.extend({
      queue: function (e, n, a) {
        var t;
        return e ? (n = (n || 'fx') + 'queue', t = rn._data(e, n), a && (!t || rn.isArray(a) ? t = rn._data(e, n, rn.makeArray(a))  : t.push(a)), t || [
        ])  : void 0
      },
      dequeue: function (e, n) {
        n = n || 'fx';
        var a = rn.queue(e, n),
        t = a.length,
        i = a.shift(),
        r = rn._queueHooks(e, n),
        o = function () {
          rn.dequeue(e, n)
        };
        'inprogress' === i && (i = a.shift(), t--),
        i && ('fx' === n && a.unshift('inprogress'), delete r.stop, i.call(e, o, r)),
        !t && r && r.empty.fire()
      },
      _queueHooks: function (e, n) {
        var a = n + 'queueHooks';
        return rn._data(e, a) || rn._data(e, a, {
          empty: rn.Callbacks('once memory').add(function () {
            rn._removeData(e, n + 'queue'),
            rn._removeData(e, a)
          })
        })
      }
    }),
    rn.fn.extend({
      queue: function (e, n) {
        var a = 2;
        return 'string' != typeof e && (n = e, e = 'fx', a--),
        arguments.length < a ? rn.queue(this[0], e)  : void 0 === n ? this : this.each(function () {
          var a = rn.queue(this, e, n);
          rn._queueHooks(this, e),
          'fx' === e && 'inprogress' !== a[0] && rn.dequeue(this, e)
        })
      },
      dequeue: function (e) {
        return this.each(function () {
          rn.dequeue(this, e)
        })
      },
      clearQueue: function (e) {
        return this.queue(e || 'fx', [
        ])
      },
      promise: function (e, n) {
        var a,
        t = 1,
        i = rn.Deferred(),
        r = this,
        o = this.length,
        s = function () {
          --t || i.resolveWith(r, [
            r
          ])
        };
        for ('string' != typeof e && (n = e, e = void 0), e = e || 'fx'; o--; ) a = rn._data(r[o], e + 'queueHooks'),
        a && a.empty && (t++, a.empty.add(s));
        return s(),
        i.promise(n)
      }
    });
    var Cn = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
    zn = [
      'Top',
      'Right',
      'Bottom',
      'Left'
    ],
    Pn = function (e, n) {
      return e = n || e,
      'none' === rn.css(e, 'display') || !rn.contains(e.ownerDocument, e)
    },
    Tn = rn.access = function (e, n, a, t, i, r, o) {
      var s = 0,
      l = e.length,
      c = null == a;
      if ('object' === rn.type(a)) {
        i = !0;
        for (s in a) rn.access(e, n, s, a[s], !0, r, o)
      } else if (void 0 !== t && (i = !0, rn.isFunction(t) || (o = !0), c && (o ? (n.call(e, t), n = null)  : (c = n, n = function (e, n, a) {
        return c.call(rn(e), a)
      })), n)) for (; l > s; s++) n(e[s], a, o ? t : t.call(e[s], s, n(e[s], a)));
      return i ? e : c ? n.call(e)  : l ? n(e[0], a)  : r
    },
    Dn = /^(?:checkbox|radio)$/i;
    !function () {
      var e = vn.createElement('input'),
      n = vn.createElement('div'),
      a = vn.createDocumentFragment();
      if (n.innerHTML = '  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>', an.leadingWhitespace = 3 === n.firstChild.nodeType, an.tbody = !n.getElementsByTagName('tbody').length, an.htmlSerialize = !!n.getElementsByTagName('link').length, an.html5Clone = '<:nav></:nav>' !== vn.createElement('nav').cloneNode(!0).outerHTML, e.type = 'checkbox', e.checked = !0, a.appendChild(e), an.appendChecked = e.checked, n.innerHTML = '<textarea>x</textarea>', an.noCloneChecked = !!n.cloneNode(!0).lastChild.defaultValue, a.appendChild(n), n.innerHTML = '<input type=\'radio\' checked=\'checked\' name=\'t\'/>', an.checkClone = n.cloneNode(!0).cloneNode(!0).lastChild.checked, an.noCloneEvent = !0, n.attachEvent && (n.attachEvent('onclick', function () {
        an.noCloneEvent = !1
      }), n.cloneNode(!0).click()), null == an.deleteExpando) {
        an.deleteExpando = !0;
        try {
          delete n.test
        } catch (t) {
          an.deleteExpando = !1
        }
      }
    }(),
    function () {
      var n,
      a,
      t = vn.createElement('div');
      for (n in {
        submit: !0,
        change: !0,
        focusin: !0
      }) a = 'on' + n,
      (an[n + 'Bubbles'] = a in e) || (t.setAttribute(a, 't'), an[n + 'Bubbles'] = t.attributes[a].expando === !1);
      t = null
    }();
    var En = /^(?:input|select|textarea)$/i,
    $n = /^key/,
    In = /^(?:mouse|pointer|contextmenu)|click/,
    Ln = /^(?:focusinfocus|focusoutblur)$/,
    Bn = /^([^.]*)(?:\.(.+)|)$/;
    rn.event = {
      global: {
      },
      add: function (e, n, a, t, i) {
        var r,
        o,
        s,
        l,
        c,
        u,
        d,
        m,
        h,
        p,
        v,
        g = rn._data(e);
        if (g) {
          for (a.handler && (l = a, a = l.handler, i = l.selector), a.guid || (a.guid = rn.guid++), (o = g.events) || (o = g.events = {
          }), (u = g.handle) || (u = g.handle = function (e) {
            return typeof rn === An || e && rn.event.triggered === e.type ? void 0 : rn.event.dispatch.apply(u.elem, arguments)
          }, u.elem = e), n = (n || '').match(yn) || [
            ''
          ], s = n.length; s--; ) r = Bn.exec(n[s]) || [
          ],
          h = v = r[1],
          p = (r[2] || '').split('.').sort(),
          h && (c = rn.event.special[h] || {
          }, h = (i ? c.delegateType : c.bindType) || h, c = rn.event.special[h] || {
          }, d = rn.extend({
            type: h,
            origType: v,
            data: t,
            handler: a,
            guid: a.guid,
            selector: i,
            needsContext: i && rn.expr.match.needsContext.test(i),
            namespace: p.join('.')
          }, l), (m = o[h]) || (m = o[h] = [
          ], m.delegateCount = 0, c.setup && c.setup.call(e, t, p, u) !== !1 || (e.addEventListener ? e.addEventListener(h, u, !1)  : e.attachEvent && e.attachEvent('on' + h, u))), c.add && (c.add.call(e, d), d.handler.guid || (d.handler.guid = a.guid)), i ? m.splice(m.delegateCount++, 0, d)  : m.push(d), rn.event.global[h] = !0);
          e = null
        }
      },
      remove: function (e, n, a, t, i) {
        var r,
        o,
        s,
        l,
        c,
        u,
        d,
        m,
        h,
        p,
        v,
        g = rn.hasData(e) && rn._data(e);
        if (g && (u = g.events)) {
          for (n = (n || '').match(yn) || [
            ''
          ], c = n.length; c--; ) if (s = Bn.exec(n[c]) || [
          ], h = v = s[1], p = (s[2] || '').split('.').sort(), h) {
            for (d = rn.event.special[h] || {
            }, h = (t ? d.delegateType : d.bindType) || h, m = u[h] || [
            ], s = s[2] && new RegExp('(^|\\.)' + p.join('\\.(?:.*\\.|)') + '(\\.|$)'), l = r = m.length; r--; ) o = m[r],
            !i && v !== o.origType || a && a.guid !== o.guid || s && !s.test(o.namespace) || t && t !== o.selector && ('**' !== t || !o.selector) || (m.splice(r, 1), o.selector && m.delegateCount--, d.remove && d.remove.call(e, o));
            l && !m.length && (d.teardown && d.teardown.call(e, p, g.handle) !== !1 || rn.removeEvent(e, h, g.handle), delete u[h])
          } else for (h in u) rn.event.remove(e, h + n[c], a, t, !0);
          rn.isEmptyObject(u) && (delete g.handle, rn._removeData(e, 'events'))
        }
      },
      trigger: function (n, a, t, i) {
        var r,
        o,
        s,
        l,
        c,
        u,
        d,
        m = [
          t || vn
        ],
        h = nn.call(n, 'type') ? n.type : n,
        p = nn.call(n, 'namespace') ? n.namespace.split('.')  : [
        ];
        if (s = u = t = t || vn, 3 !== t.nodeType && 8 !== t.nodeType && !Ln.test(h + rn.event.triggered) && (h.indexOf('.') >= 0 && (p = h.split('.'), h = p.shift(), p.sort()), o = h.indexOf(':') < 0 && 'on' + h, n = n[rn.expando] ? n : new rn.Event(h, 'object' == typeof n && n), n.isTrigger = i ? 2 : 3, n.namespace = p.join('.'), n.namespace_re = n.namespace ? new RegExp('(^|\\.)' + p.join('\\.(?:.*\\.|)') + '(\\.|$)')  : null, n.result = void 0, n.target || (n.target = t), a = null == a ? [
          n
        ] : rn.makeArray(a, [
          n
        ]), c = rn.event.special[h] || {
        }, i || !c.trigger || c.trigger.apply(t, a) !== !1)) {
          if (!i && !c.noBubble && !rn.isWindow(t)) {
            for (l = c.delegateType || h, Ln.test(l + h) || (s = s.parentNode); s; s = s.parentNode) m.push(s),
            u = s;
            u === (t.ownerDocument || vn) && m.push(u.defaultView || u.parentWindow || e)
          }
          for (d = 0; (s = m[d++]) && !n.isPropagationStopped(); ) n.type = d > 1 ? l : c.bindType || h,
          r = (rn._data(s, 'events') || {
          }) [n.type] && rn._data(s, 'handle'),
          r && r.apply(s, a),
          r = o && s[o],
          r && r.apply && rn.acceptData(s) && (n.result = r.apply(s, a), n.result === !1 && n.preventDefault());
          if (n.type = h, !i && !n.isDefaultPrevented() && (!c._default || c._default.apply(m.pop(), a) === !1) && rn.acceptData(t) && o && t[h] && !rn.isWindow(t)) {
            u = t[o],
            u && (t[o] = null),
            rn.event.triggered = h;
            try {
              t[h]()
            } catch (v) {
            }
            rn.event.triggered = void 0,
            u && (t[o] = u)
          }
          return n.result
        }
      },
      dispatch: function (e) {
        e = rn.event.fix(e);
        var n,
        a,
        t,
        i,
        r,
        o = [
        ],
        s = U.call(arguments),
        l = (rn._data(this, 'events') || {
        }) [e.type] || [
        ],
        c = rn.event.special[e.type] || {
        };
        if (s[0] = e, e.delegateTarget = this, !c.preDispatch || c.preDispatch.call(this, e) !== !1) {
          for (o = rn.event.handlers.call(this, e, l), n = 0; (i = o[n++]) && !e.isPropagationStopped(); ) for (e.currentTarget = i.elem, r = 0; (t = i.handlers[r++]) && !e.isImmediatePropagationStopped(); ) (!e.namespace_re || e.namespace_re.test(t.namespace)) && (e.handleObj = t, e.data = t.data, a = ((rn.event.special[t.origType] || {
          }).handle || t.handler).apply(i.elem, s), void 0 !== a && (e.result = a) === !1 && (e.preventDefault(), e.stopPropagation()));
          return c.postDispatch && c.postDispatch.call(this, e),
          e.result
        }
      },
      handlers: function (e, n) {
        var a,
        t,
        i,
        r,
        o = [
        ],
        s = n.delegateCount,
        l = e.target;
        if (s && l.nodeType && (!e.button || 'click' !== e.type)) for (; l != this; l = l.parentNode || this) if (1 === l.nodeType && (l.disabled !== !0 || 'click' !== e.type)) {
          for (i = [
          ], r = 0; s > r; r++) t = n[r],
          a = t.selector + ' ',
          void 0 === i[a] && (i[a] = t.needsContext ? rn(a, this).index(l) >= 0 : rn.find(a, this, null, [
            l
          ]).length),
          i[a] && i.push(t);
          i.length && o.push({
            elem: l,
            handlers: i
          })
        }
        return s < n.length && o.push({
          elem: this,
          handlers: n.slice(s)
        }),
        o
      },
      fix: function (e) {
        if (e[rn.expando]) return e;
        var n,
        a,
        t,
        i = e.type,
        r = e,
        o = this.fixHooks[i];
        for (o || (this.fixHooks[i] = o = In.test(i) ? this.mouseHooks : $n.test(i) ? this.keyHooks : {
        }), t = o.props ? this.props.concat(o.props)  : this.props, e = new rn.Event(r), n = t.length; n--; ) a = t[n],
        e[a] = r[a];
        return e.target || (e.target = r.srcElement || vn),
        3 === e.target.nodeType && (e.target = e.target.parentNode),
        e.metaKey = !!e.metaKey,
        o.filter ? o.filter(e, r)  : e
      },
      props: 'altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which'.split(' '),
      fixHooks: {
      },
      keyHooks: {
        props: 'char charCode key keyCode'.split(' '),
        filter: function (e, n) {
          return null == e.which && (e.which = null != n.charCode ? n.charCode : n.keyCode),
          e
        }
      },
      mouseHooks: {
        props: 'button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement'.split(' '),
        filter: function (e, n) {
          var a,
          t,
          i,
          r = n.button,
          o = n.fromElement;
          return null == e.pageX && null != n.clientX && (t = e.target.ownerDocument || vn, i = t.documentElement, a = t.body, e.pageX = n.clientX + (i && i.scrollLeft || a && a.scrollLeft || 0) - (i && i.clientLeft || a && a.clientLeft || 0), e.pageY = n.clientY + (i && i.scrollTop || a && a.scrollTop || 0) - (i && i.clientTop || a && a.clientTop || 0)),
          !e.relatedTarget && o && (e.relatedTarget = o === e.target ? n.toElement : o),
          e.which || void 0 === r || (e.which = 1 & r ? 1 : 2 & r ? 3 : 4 & r ? 2 : 0),
          e
        }
      },
      special: {
        load: {
          noBubble: !0
        },
        focus: {
          trigger: function () {
            if (this !== p() && this.focus) try {
              return this.focus(),
              !1
            } catch (e) {
            }
          },
          delegateType: 'focusin'
        },
        blur: {
          trigger: function () {
            return this === p() && this.blur ? (this.blur(), !1)  : void 0
          },
          delegateType: 'focusout'
        },
        click: {
          trigger: function () {
            return rn.nodeName(this, 'input') && 'checkbox' === this.type && this.click ? (this.click(), !1)  : void 0
          },
          _default: function (e) {
            return rn.nodeName(e.target, 'a')
          }
        },
        beforeunload: {
          postDispatch: function (e) {
            void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
          }
        }
      },
      simulate: function (e, n, a, t) {
        var i = rn.extend(new rn.Event, a, {
          type: e,
          isSimulated: !0,
          originalEvent: {
          }
        });
        t ? rn.event.trigger(i, null, n)  : rn.event.dispatch.call(n, i),
        i.isDefaultPrevented() && a.preventDefault()
      }
    },
    rn.removeEvent = vn.removeEventListener ? function (e, n, a) {
      e.removeEventListener && e.removeEventListener(n, a, !1)
    }
     : function (e, n, a) {
      var t = 'on' + n;
      e.detachEvent && (typeof e[t] === An && (e[t] = null), e.detachEvent(t, a))
    },
    rn.Event = function (e, n) {
      return this instanceof rn.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && e.returnValue === !1 ? m : h)  : this.type = e, n && rn.extend(this, n), this.timeStamp = e && e.timeStamp || rn.now(), void (this[rn.expando] = !0))  : new rn.Event(e, n)
    },
    rn.Event.prototype = {
      isDefaultPrevented: h,
      isPropagationStopped: h,
      isImmediatePropagationStopped: h,
      preventDefault: function () {
        var e = this.originalEvent;
        this.isDefaultPrevented = m,
        e && (e.preventDefault ? e.preventDefault()  : e.returnValue = !1)
      },
      stopPropagation: function () {
        var e = this.originalEvent;
        this.isPropagationStopped = m,
        e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
      },
      stopImmediatePropagation: function () {
        var e = this.originalEvent;
        this.isImmediatePropagationStopped = m,
        e && e.stopImmediatePropagation && e.stopImmediatePropagation(),
        this.stopPropagation()
      }
    },
    rn.each({
      mouseenter: 'mouseover',
      mouseleave: 'mouseout',
      pointerenter: 'pointerover',
      pointerleave: 'pointerout'
    }, function (e, n) {
      rn.event.special[e] = {
        delegateType: n,
        bindType: n,
        handle: function (e) {
          var a,
          t = this,
          i = e.relatedTarget,
          r = e.handleObj;
          return (!i || i !== t && !rn.contains(t, i)) && (e.type = r.origType, a = r.handler.apply(this, arguments), e.type = n),
          a
        }
      }
    }),
    an.submitBubbles || (rn.event.special.submit = {
      setup: function () {
        return rn.nodeName(this, 'form') ? !1 : void rn.event.add(this, 'click._submit keypress._submit', function (e) {
          var n = e.target,
          a = rn.nodeName(n, 'input') || rn.nodeName(n, 'button') ? n.form : void 0;
          a && !rn._data(a, 'submitBubbles') && (rn.event.add(a, 'submit._submit', function (e) {
            e._submit_bubble = !0
          }), rn._data(a, 'submitBubbles', !0))
        })
      },
      postDispatch: function (e) {
        e._submit_bubble && (delete e._submit_bubble, this.parentNode && !e.isTrigger && rn.event.simulate('submit', this.parentNode, e, !0))
      },
      teardown: function () {
        return rn.nodeName(this, 'form') ? !1 : void rn.event.remove(this, '._submit')
      }
    }),
    an.changeBubbles || (rn.event.special.change = {
      setup: function () {
        return En.test(this.nodeName) ? (('checkbox' === this.type || 'radio' === this.type) && (rn.event.add(this, 'propertychange._change', function (e) {
          'checked' === e.originalEvent.propertyName && (this._just_changed = !0)
        }), rn.event.add(this, 'click._change', function (e) {
          this._just_changed && !e.isTrigger && (this._just_changed = !1),
          rn.event.simulate('change', this, e, !0)
        })), !1)  : void rn.event.add(this, 'beforeactivate._change', function (e) {
          var n = e.target;
          En.test(n.nodeName) && !rn._data(n, 'changeBubbles') && (rn.event.add(n, 'change._change', function (e) {
            !this.parentNode || e.isSimulated || e.isTrigger || rn.event.simulate('change', this.parentNode, e, !0)
          }), rn._data(n, 'changeBubbles', !0))
        })
      },
      handle: function (e) {
        var n = e.target;
        return this !== n || e.isSimulated || e.isTrigger || 'radio' !== n.type && 'checkbox' !== n.type ? e.handleObj.handler.apply(this, arguments)  : void 0
      },
      teardown: function () {
        return rn.event.remove(this, '._change'),
        !En.test(this.nodeName)
      }
    }),
    an.focusinBubbles || rn.each({
      focus: 'focusin',
      blur: 'focusout'
    }, function (e, n) {
      var a = function (e) {
        rn.event.simulate(n, e.target, rn.event.fix(e), !0)
      };
      rn.event.special[n] = {
        setup: function () {
          var t = this.ownerDocument || this,
          i = rn._data(t, n);
          i || t.addEventListener(e, a, !0),
          rn._data(t, n, (i || 0) + 1)
        },
        teardown: function () {
          var t = this.ownerDocument || this,
          i = rn._data(t, n) - 1;
          i ? rn._data(t, n, i)  : (t.removeEventListener(e, a, !0), rn._removeData(t, n))
        }
      }
    }),
    rn.fn.extend({
      on: function (e, n, a, t, i) {
        var r,
        o;
        if ('object' == typeof e) {
          'string' != typeof n && (a = a || n, n = void 0);
          for (r in e) this.on(r, n, a, e[r], i);
          return this
        }
        if (null == a && null == t ? (t = n, a = n = void 0)  : null == t && ('string' == typeof n ? (t = a, a = void 0)  : (t = a, a = n, n = void 0)), t === !1) t = h;
         else if (!t) return this;
        return 1 === i && (o = t, t = function (e) {
          return rn().off(e),
          o.apply(this, arguments)
        }, t.guid = o.guid || (o.guid = rn.guid++)),
        this.each(function () {
          rn.event.add(this, e, t, a, n)
        })
      },
      one: function (e, n, a, t) {
        return this.on(e, n, a, t, 1)
      },
      off: function (e, n, a) {
        var t,
        i;
        if (e && e.preventDefault && e.handleObj) return t = e.handleObj,
        rn(e.delegateTarget).off(t.namespace ? t.origType + '.' + t.namespace : t.origType, t.selector, t.handler),
        this;
        if ('object' == typeof e) {
          for (i in e) this.off(i, n, e[i]);
          return this
        }
        return (n === !1 || 'function' == typeof n) && (a = n, n = void 0),
        a === !1 && (a = h),
        this.each(function () {
          rn.event.remove(this, e, a, n)
        })
      },
      trigger: function (e, n) {
        return this.each(function () {
          rn.event.trigger(e, n, this)
        })
      },
      triggerHandler: function (e, n) {
        var a = this[0];
        return a ? rn.event.trigger(e, n, a, !0)  : void 0
      }
    });
    var Nn = 'abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video',
    Rn = / jQuery\d+="(?:null|\d+)"/g,
    jn = new RegExp('<(?:' + Nn + ')[\\s/>]', 'i'),
    Kn = /^\s+/,
    Fn = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
    Hn = /<([\w:]+)/,
    Gn = /<tbody/i,
    On = /<|&#?\w+;/,
    qn = /<(?:script|style|link)/i,
    Wn = /checked\s*(?:[^=]|=\s*.checked.)/i,
    Jn = /^$|\/(?:java|ecma)script/i,
    Vn = /^true\/(.*)/,
    Un = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
    Zn = {
      option: [
        1,
        '<select multiple=\'multiple\'>',
        '</select>'
      ],
      legend: [
        1,
        '<fieldset>',
        '</fieldset>'
      ],
      area: [
        1,
        '<map>',
        '</map>'
      ],
      param: [
        1,
        '<object>',
        '</object>'
      ],
      thead: [
        1,
        '<table>',
        '</table>'
      ],
      tr: [
        2,
        '<table><tbody>',
        '</tbody></table>'
      ],
      col: [
        2,
        '<table><tbody></tbody><colgroup>',
        '</colgroup></table>'
      ],
      td: [
        3,
        '<table><tbody><tr>',
        '</tr></tbody></table>'
      ],
      _default: an.htmlSerialize ? [
        0,
        '',
        ''
      ] : [
        1,
        'X<div>',
        '</div>'
      ]
    },
    Yn = v(vn),
    Xn = Yn.appendChild(vn.createElement('div'));
    Zn.optgroup = Zn.option,
    Zn.tbody = Zn.tfoot = Zn.colgroup = Zn.caption = Zn.thead,
    Zn.th = Zn.td,
    rn.extend({
      clone: function (e, n, a) {
        var t,
        i,
        r,
        o,
        s,
        l = rn.contains(e.ownerDocument, e);
        if (an.html5Clone || rn.isXMLDoc(e) || !jn.test('<' + e.nodeName + '>') ? r = e.cloneNode(!0)  : (Xn.innerHTML = e.outerHTML, Xn.removeChild(r = Xn.firstChild)), !(an.noCloneEvent && an.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || rn.isXMLDoc(e))) for (t = g(r), s = g(e), o = 0; null != (i = s[o]); ++o) t[o] && S(i, t[o]);
        if (n) if (a) for (s = s || g(e), t = t || g(r), o = 0; null != (i = s[o]); o++) k(i, t[o]);
         else k(e, r);
        return t = g(r, 'script'),
        t.length > 0 && w(t, !l && g(e, 'script')),
        t = s = i = null,
        r
      },
      buildFragment: function (e, n, a, t) {
        for (var i, r, o, s, l, c, u, d = e.length, m = v(n), h = [
        ], p = 0; d > p; p++) if (r = e[p], r || 0 === r) if ('object' === rn.type(r)) rn.merge(h, r.nodeType ? [
          r
        ] : r);
         else if (On.test(r)) {
          for (s = s || m.appendChild(n.createElement('div')), l = (Hn.exec(r) || [
            '',
            ''
          ]) [1].toLowerCase(), u = Zn[l] || Zn._default, s.innerHTML = u[1] + r.replace(Fn, '<$1></$2>') + u[2], i = u[0]; i--; ) s = s.lastChild;
          if (!an.leadingWhitespace && Kn.test(r) && h.push(n.createTextNode(Kn.exec(r) [0])), !an.tbody) for (r = 'table' !== l || Gn.test(r) ? '<table>' !== u[1] || Gn.test(r) ? 0 : s : s.firstChild, i = r && r.childNodes.length; i--; ) rn.nodeName(c = r.childNodes[i], 'tbody') && !c.childNodes.length && r.removeChild(c);
          for (rn.merge(h, s.childNodes), s.textContent = ''; s.firstChild; ) s.removeChild(s.firstChild);
          s = m.lastChild
        } else h.push(n.createTextNode(r));
        for (s && m.removeChild(s), an.appendChecked || rn.grep(g(h, 'input'), f), p = 0; r = h[p++]; ) if ((!t || - 1 === rn.inArray(r, t)) && (o = rn.contains(r.ownerDocument, r), s = g(m.appendChild(r), 'script'), o && w(s), a)) for (i = 0; r = s[i++]; ) Jn.test(r.type || '') && a.push(r);
        return s = null,
        m
      },
      cleanData: function (e, n) {
        for (var a, t, i, r, o = 0, s = rn.expando, l = rn.cache, c = an.deleteExpando, u = rn.event.special; null != (a = e[o]); o++) if ((n || rn.acceptData(a)) && (i = a[s], r = i && l[i])) {
          if (r.events) for (t in r.events) u[t] ? rn.event.remove(a, t)  : rn.removeEvent(a, t, r.handle);
          l[i] && (delete l[i], c ? delete a[s] : typeof a.removeAttribute !== An ? a.removeAttribute(s)  : a[s] = null, V.push(i))
        }
      }
    }),
    rn.fn.extend({
      text: function (e) {
        return Tn(this, function (e) {
          return void 0 === e ? rn.text(this)  : this.empty().append((this[0] && this[0].ownerDocument || vn).createTextNode(e))
        }, null, e, arguments.length)
      },
      append: function () {
        return this.domManip(arguments, function (e) {
          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
            var n = _(this, e);
            n.appendChild(e)
          }
        })
      },
      prepend: function () {
        return this.domManip(arguments, function (e) {
          if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
            var n = _(this, e);
            n.insertBefore(e, n.firstChild)
          }
        })
      },
      before: function () {
        return this.domManip(arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this)
        })
      },
      after: function () {
        return this.domManip(arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
        })
      },
      remove: function (e, n) {
        for (var a, t = e ? rn.filter(e, this)  : this, i = 0; null != (a = t[i]); i++) n || 1 !== a.nodeType || rn.cleanData(g(a)),
        a.parentNode && (n && rn.contains(a.ownerDocument, a) && w(g(a, 'script')), a.parentNode.removeChild(a));
        return this
      },
      empty: function () {
        for (var e, n = 0; null != (e = this[n]); n++) {
          for (1 === e.nodeType && rn.cleanData(g(e, !1)); e.firstChild; ) e.removeChild(e.firstChild);
          e.options && rn.nodeName(e, 'select') && (e.options.length = 0)
        }
        return this
      },
      clone: function (e, n) {
        return e = null == e ? !1 : e,
        n = null == n ? e : n,
        this.map(function () {
          return rn.clone(this, e, n)
        })
      },
      html: function (e) {
        return Tn(this, function (e) {
          var n = this[0] || {
          },
          a = 0,
          t = this.length;
          if (void 0 === e) return 1 === n.nodeType ? n.innerHTML.replace(Rn, '')  : void 0;
          if (!('string' != typeof e || qn.test(e) || !an.htmlSerialize && jn.test(e) || !an.leadingWhitespace && Kn.test(e) || Zn[(Hn.exec(e) || [
            '',
            ''
          ]) [1].toLowerCase()])) {
            e = e.replace(Fn, '<$1></$2>');
            try {
              for (; t > a; a++) n = this[a] || {
              },
              1 === n.nodeType && (rn.cleanData(g(n, !1)), n.innerHTML = e);
              n = 0
            } catch (i) {
            }
          }
          n && this.empty().append(e)
        }, null, e, arguments.length)
      },
      replaceWith: function () {
        var e = arguments[0];
        return this.domManip(arguments, function (n) {
          e = this.parentNode,
          rn.cleanData(g(this)),
          e && e.replaceChild(n, this)
        }),
        e && (e.length || e.nodeType) ? this : this.remove()
      },
      detach: function (e) {
        return this.remove(e, !0)
      },
      domManip: function (e, n) {
        e = Z.apply([], e);
        var a,
        t,
        i,
        r,
        o,
        s,
        l = 0,
        c = this.length,
        u = this,
        d = c - 1,
        m = e[0],
        h = rn.isFunction(m);
        if (h || c > 1 && 'string' == typeof m && !an.checkClone && Wn.test(m)) return this.each(function (a) {
          var t = u.eq(a);
          h && (e[0] = m.call(this, a, t.html())),
          t.domManip(e, n)
        });
        if (c && (s = rn.buildFragment(e, this[0].ownerDocument, !1, this), a = s.firstChild, 1 === s.childNodes.length && (s = a), a)) {
          for (r = rn.map(g(s, 'script'), b), i = r.length; c > l; l++) t = s,
          l !== d && (t = rn.clone(t, !0, !0), i && rn.merge(r, g(t, 'script'))),
          n.call(this[l], t, l);
          if (i) for (o = r[r.length - 1].ownerDocument, rn.map(r, y), l = 0; i > l; l++) t = r[l],
          Jn.test(t.type || '') && !rn._data(t, 'globalEval') && rn.contains(o, t) && (t.src ? rn._evalUrl && rn._evalUrl(t.src)  : rn.globalEval((t.text || t.textContent || t.innerHTML || '').replace(Un, '')));
          s = a = null
        }
        return this
      }
    }),
    rn.each({
      appendTo: 'append',
      prependTo: 'prepend',
      insertBefore: 'before',
      insertAfter: 'after',
      replaceAll: 'replaceWith'
    }, function (e, n) {
      rn.fn[e] = function (e) {
        for (var a, t = 0, i = [
        ], r = rn(e), o = r.length - 1; o >= t; t++) a = t === o ? this : this.clone(!0),
        rn(r[t]) [n](a),
        Y.apply(i, a.get());
        return this.pushStack(i)
      }
    });
    var Qn,
    ea = {
    };
    !function () {
      var e;
      an.shrinkWrapBlocks = function () {
        if (null != e) return e;
        e = !1;
        var n,
        a,
        t;
        return a = vn.getElementsByTagName('body') [0],
        a && a.style ? (n = vn.createElement('div'), t = vn.createElement('div'), t.style.cssText = 'position:absolute;border:0;width:0;height:0;top:0;left:-9999px', a.appendChild(t).appendChild(n), typeof n.style.zoom !== An && (n.style.cssText = '-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1', n.appendChild(vn.createElement('div')).style.width = '5px', e = 3 !== n.offsetWidth), a.removeChild(t), e)  : void 0
      }
    }();
    var na,
    aa,
    ta = /^margin/,
    ia = new RegExp('^(' + Cn + ')(?!px)[a-z%]+$', 'i'),
    ra = /^(top|right|bottom|left)$/;
    e.getComputedStyle ? (na = function (e) {
      return e.ownerDocument.defaultView.getComputedStyle(e, null)
    }, aa = function (e, n, a) {
      var t,
      i,
      r,
      o,
      s = e.style;
      return a = a || na(e),
      o = a ? a.getPropertyValue(n) || a[n] : void 0,
      a && ('' !== o || rn.contains(e.ownerDocument, e) || (o = rn.style(e, n)), ia.test(o) && ta.test(n) && (t = s.width, i = s.minWidth, r = s.maxWidth, s.minWidth = s.maxWidth = s.width = o, o = a.width, s.width = t, s.minWidth = i, s.maxWidth = r)),
      void 0 === o ? o : o + ''
    })  : vn.documentElement.currentStyle && (na = function (e) {
      return e.currentStyle
    }, aa = function (e, n, a) {
      var t,
      i,
      r,
      o,
      s = e.style;
      return a = a || na(e),
      o = a ? a[n] : void 0,
      null == o && s && s[n] && (o = s[n]),
      ia.test(o) && !ra.test(n) && (t = s.left, i = e.runtimeStyle, r = i && i.left, r && (i.left = e.currentStyle.left), s.left = 'fontSize' === n ? '1em' : o, o = s.pixelLeft + 'px', s.left = t, r && (i.left = r)),
      void 0 === o ? o : o + '' || 'auto'
    }),
    function () {
      function n() {
        var n,
        a,
        t,
        i;
        a = vn.getElementsByTagName('body') [0],
        a && a.style && (n = vn.createElement('div'), t = vn.createElement('div'), t.style.cssText = 'position:absolute;border:0;width:0;height:0;top:0;left:-9999px', a.appendChild(t).appendChild(n), n.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute', r = o = !1, l = !0, e.getComputedStyle && (r = '1%' !== (e.getComputedStyle(n, null) || {
        }).top, o = '4px' === (e.getComputedStyle(n, null) || {
          width: '4px'
        }).width, i = n.appendChild(vn.createElement('div')), i.style.cssText = n.style.cssText = '-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0', i.style.marginRight = i.style.width = '0', n.style.width = '1px', l = !parseFloat((e.getComputedStyle(i, null) || {
        }).marginRight)), n.innerHTML = '<table><tr><td></td><td>t</td></tr></table>', i = n.getElementsByTagName('td'), i[0].style.cssText = 'margin:0;border:0;padding:0;display:none', s = 0 === i[0].offsetHeight, s && (i[0].style.display = '', i[1].style.display = 'none', s = 0 === i[0].offsetHeight), a.removeChild(t))
      }
      var a,
      t,
      i,
      r,
      o,
      s,
      l;
      a = vn.createElement('div'),
      a.innerHTML = '  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>',
      i = a.getElementsByTagName('a') [0],
      t = i && i.style,
      t && (t.cssText = 'float:left;opacity:.5', an.opacity = '0.5' === t.opacity, an.cssFloat = !!t.cssFloat, a.style.backgroundClip = 'content-box', a.cloneNode(!0).style.backgroundClip = '', an.clearCloneStyle = 'content-box' === a.style.backgroundClip, an.boxSizing = '' === t.boxSizing || '' === t.MozBoxSizing || '' === t.WebkitBoxSizing, rn.extend(an, {
        reliableHiddenOffsets: function () {
          return null == s && n(),
          s
        },
        boxSizingReliable: function () {
          return null == o && n(),
          o
        },
        pixelPosition: function () {
          return null == r && n(),
          r
        },
        reliableMarginRight: function () {
          return null == l && n(),
          l
        }
      }))
    }(),
    rn.swap = function (e, n, a, t) {
      var i,
      r,
      o = {
      };
      for (r in n) o[r] = e.style[r],
      e.style[r] = n[r];
      i = a.apply(e, t || [
      ]);
      for (r in n) e.style[r] = o[r];
      return i
    };
    var oa = /alpha\([^)]*\)/i,
    sa = /opacity\s*=\s*([^)]*)/,
    la = /^(none|table(?!-c[ea]).+)/,
    ca = new RegExp('^(' + Cn + ')(.*)$', 'i'),
    ua = new RegExp('^([+-])=(' + Cn + ')', 'i'),
    da = {
      position: 'absolute',
      visibility: 'hidden',
      display: 'block'
    },
    ma = {
      letterSpacing: '0',
      fontWeight: '400'
    },
    ha = [
      'Webkit',
      'O',
      'Moz',
      'ms'
    ];
    rn.extend({
      cssHooks: {
        opacity: {
          get: function (e, n) {
            if (n) {
              var a = aa(e, 'opacity');
              return '' === a ? '1' : a
            }
          }
        }
      },
      cssNumber: {
        columnCount: !0,
        fillOpacity: !0,
        flexGrow: !0,
        flexShrink: !0,
        fontWeight: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0
      },
      cssProps: {
        'float': an.cssFloat ? 'cssFloat' : 'styleFloat'
      },
      style: function (e, n, a, t) {
        if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
          var i,
          r,
          o,
          s = rn.camelCase(n),
          l = e.style;
          if (n = rn.cssProps[s] || (rn.cssProps[s] = C(l, s)), o = rn.cssHooks[n] || rn.cssHooks[s], void 0 === a) return o && 'get' in o && void 0 !== (i = o.get(e, !1, t)) ? i : l[n];
          if (r = typeof a, 'string' === r && (i = ua.exec(a)) && (a = (i[1] + 1) * i[2] + parseFloat(rn.css(e, n)), r = 'number'), null != a && a === a && ('number' !== r || rn.cssNumber[s] || (a += 'px'), an.clearCloneStyle || '' !== a || 0 !== n.indexOf('background') || (l[n] = 'inherit'), !(o && 'set' in o && void 0 === (a = o.set(e, a, t))))) try {
            l[n] = a
          } catch (c) {
          }
        }
      },
      css: function (e, n, a, t) {
        var i,
        r,
        o,
        s = rn.camelCase(n);
        return n = rn.cssProps[s] || (rn.cssProps[s] = C(e.style, s)),
        o = rn.cssHooks[n] || rn.cssHooks[s],
        o && 'get' in o && (r = o.get(e, !0, a)),
        void 0 === r && (r = aa(e, n, t)),
        'normal' === r && n in ma && (r = ma[n]),
        '' === a || a ? (i = parseFloat(r), a === !0 || rn.isNumeric(i) ? i || 0 : r)  : r
      }
    }),
    rn.each(['height',
    'width'], function (e, n) {
      rn.cssHooks[n] = {
        get: function (e, a, t) {
          return a ? la.test(rn.css(e, 'display')) && 0 === e.offsetWidth ? rn.swap(e, da, function () {
            return D(e, n, t)
          })  : D(e, n, t)  : void 0
        },
        set: function (e, a, t) {
          var i = t && na(e);
          return P(e, a, t ? T(e, n, t, an.boxSizing && 'border-box' === rn.css(e, 'boxSizing', !1, i), i)  : 0)
        }
      }
    }),
    an.opacity || (rn.cssHooks.opacity = {
      get: function (e, n) {
        return sa.test((n && e.currentStyle ? e.currentStyle.filter : e.style.filter) || '') ? 0.01 * parseFloat(RegExp.$1) + '' : n ? '1' : ''
      },
      set: function (e, n) {
        var a = e.style,
        t = e.currentStyle,
        i = rn.isNumeric(n) ? 'alpha(opacity=' + 100 * n + ')' : '',
        r = t && t.filter || a.filter || '';
        a.zoom = 1,
        (n >= 1 || '' === n) && '' === rn.trim(r.replace(oa, '')) && a.removeAttribute && (a.removeAttribute('filter'), '' === n || t && !t.filter) || (a.filter = oa.test(r) ? r.replace(oa, i)  : r + ' ' + i)
      }
    }),
    rn.cssHooks.marginRight = x(an.reliableMarginRight, function (e, n) {
      return n ? rn.swap(e, {
        display: 'inline-block'
      }, aa, [
        e,
        'marginRight'
      ])  : void 0
    }),
    rn.each({
      margin: '',
      padding: '',
      border: 'Width'
    }, function (e, n) {
      rn.cssHooks[e + n] = {
        expand: function (a) {
          for (var t = 0, i = {
          }, r = 'string' == typeof a ? a.split(' ')  : [
            a
          ]; 4 > t; t++) i[e + zn[t] + n] = r[t] || r[t - 2] || r[0];
          return i
        }
      },
      ta.test(e) || (rn.cssHooks[e + n].set = P)
    }),
    rn.fn.extend({
      css: function (e, n) {
        return Tn(this, function (e, n, a) {
          var t,
          i,
          r = {
          },
          o = 0;
          if (rn.isArray(n)) {
            for (t = na(e), i = n.length; i > o; o++) r[n[o]] = rn.css(e, n[o], !1, t);
            return r
          }
          return void 0 !== a ? rn.style(e, n, a)  : rn.css(e, n)
        }, e, n, arguments.length > 1)
      },
      show: function () {
        return z(this, !0)
      },
      hide: function () {
        return z(this)
      },
      toggle: function (e) {
        return 'boolean' == typeof e ? e ? this.show()  : this.hide()  : this.each(function () {
          Pn(this) ? rn(this).show()  : rn(this).hide()
        })
      }
    }),
    rn.Tween = E,
    E.prototype = {
      constructor: E,
      init: function (e, n, a, t, i, r) {
        this.elem = e,
        this.prop = a,
        this.easing = i || 'swing',
        this.options = n,
        this.start = this.now = this.cur(),
        this.end = t,
        this.unit = r || (rn.cssNumber[a] ? '' : 'px')
      },
      cur: function () {
        var e = E.propHooks[this.prop];
        return e && e.get ? e.get(this)  : E.propHooks._default.get(this)
      },
      run: function (e) {
        var n,
        a = E.propHooks[this.prop];
        return this.pos = n = this.options.duration ? rn.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration)  : e,
        this.now = (this.end - this.start) * n + this.start,
        this.options.step && this.options.step.call(this.elem, this.now, this),
        a && a.set ? a.set(this)  : E.propHooks._default.set(this),
        this
      }
    },
    E.prototype.init.prototype = E.prototype,
    E.propHooks = {
      _default: {
        get: function (e) {
          var n;
          return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (n = rn.css(e.elem, e.prop, ''), n && 'auto' !== n ? n : 0)  : e.elem[e.prop]
        },
        set: function (e) {
          rn.fx.step[e.prop] ? rn.fx.step[e.prop](e)  : e.elem.style && (null != e.elem.style[rn.cssProps[e.prop]] || rn.cssHooks[e.prop]) ? rn.style(e.elem, e.prop, e.now + e.unit)  : e.elem[e.prop] = e.now
        }
      }
    },
    E.propHooks.scrollTop = E.propHooks.scrollLeft = {
      set: function (e) {
        e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
      }
    },
    rn.easing = {
      linear: function (e) {
        return e
      },
      swing: function (e) {
        return 0.5 - Math.cos(e * Math.PI) / 2
      }
    },
    rn.fx = E.prototype.init,
    rn.fx.step = {
    };
    var pa,
    va,
    ga = /^(?:toggle|show|hide)$/,
    fa = new RegExp('^(?:([+-])=|)(' + Cn + ')([a-z%]*)$', 'i'),
    _a = /queueHooks$/,
    ba = [
      B
    ],
    ya = {
      '*': [
        function (e, n) {
          var a = this.createTween(e, n),
          t = a.cur(),
          i = fa.exec(n),
          r = i && i[3] || (rn.cssNumber[e] ? '' : 'px'),
          o = (rn.cssNumber[e] || 'px' !== r && + t) && fa.exec(rn.css(a.elem, e)),
          s = 1,
          l = 20;
          if (o && o[3] !== r) {
            r = r || o[3],
            i = i || [
            ],
            o = + t || 1;
            do s = s || '.5',
            o /= s,
            rn.style(a.elem, e, o + r);
            while (s !== (s = a.cur() / t) && 1 !== s && --l)
          }
          return i && (o = a.start = + o || + t || 0, a.unit = r, a.end = i[1] ? o + (i[1] + 1) * i[2] : + i[2]),
          a
        }
      ]
    };
    rn.Animation = rn.extend(R, {
      tweener: function (e, n) {
        rn.isFunction(e) ? (n = e, e = [
          '*'
        ])  : e = e.split(' ');
        for (var a, t = 0, i = e.length; i > t; t++) a = e[t],
        ya[a] = ya[a] || [
        ],
        ya[a].unshift(n)
      },
      prefilter: function (e, n) {
        n ? ba.unshift(e)  : ba.push(e)
      }
    }),
    rn.speed = function (e, n, a) {
      var t = e && 'object' == typeof e ? rn.extend({
      }, e)  : {
        complete: a || !a && n || rn.isFunction(e) && e,
        duration: e,
        easing: a && n || n && !rn.isFunction(n) && n
      };
      return t.duration = rn.fx.off ? 0 : 'number' == typeof t.duration ? t.duration : t.duration in rn.fx.speeds ? rn.fx.speeds[t.duration] : rn.fx.speeds._default,
      (null == t.queue || t.queue === !0) && (t.queue = 'fx'),
      t.old = t.complete,
      t.complete = function () {
        rn.isFunction(t.old) && t.old.call(this),
        t.queue && rn.dequeue(this, t.queue)
      },
      t
    },
    rn.fn.extend({
      fadeTo: function (e, n, a, t) {
        return this.filter(Pn).css('opacity', 0).show().end().animate({
          opacity: n
        }, e, a, t)
      },
      animate: function (e, n, a, t) {
        var i = rn.isEmptyObject(e),
        r = rn.speed(n, a, t),
        o = function () {
          var n = R(this, rn.extend({
          }, e), r);
          (i || rn._data(this, 'finish')) && n.stop(!0)
        };
        return o.finish = o,
        i || r.queue === !1 ? this.each(o)  : this.queue(r.queue, o)
      },
      stop: function (e, n, a) {
        var t = function (e) {
          var n = e.stop;
          delete e.stop,
          n(a)
        };
        return 'string' != typeof e && (a = n, n = e, e = void 0),
        n && e !== !1 && this.queue(e || 'fx', [
        ]),
        this.each(function () {
          var n = !0,
          i = null != e && e + 'queueHooks',
          r = rn.timers,
          o = rn._data(this);
          if (i) o[i] && o[i].stop && t(o[i]);
           else for (i in o) o[i] && o[i].stop && _a.test(i) && t(o[i]);
          for (i = r.length; i--; ) r[i].elem !== this || null != e && r[i].queue !== e || (r[i].anim.stop(a), n = !1, r.splice(i, 1));
          (n || !a) && rn.dequeue(this, e)
        })
      },
      finish: function (e) {
        return e !== !1 && (e = e || 'fx'),
        this.each(function () {
          var n,
          a = rn._data(this),
          t = a[e + 'queue'],
          i = a[e + 'queueHooks'],
          r = rn.timers,
          o = t ? t.length : 0;
          for (a.finish = !0, rn.queue(this, e, [
          ]), i && i.stop && i.stop.call(this, !0), n = r.length; n--; ) r[n].elem === this && r[n].queue === e && (r[n].anim.stop(!0), r.splice(n, 1));
          for (n = 0; o > n; n++) t[n] && t[n].finish && t[n].finish.call(this);
          delete a.finish
        })
      }
    }),
    rn.each(['toggle',
    'show',
    'hide'], function (e, n) {
      var a = rn.fn[n];
      rn.fn[n] = function (e, t, i) {
        return null == e || 'boolean' == typeof e ? a.apply(this, arguments)  : this.animate(I(n, !0), e, t, i)
      }
    }),
    rn.each({
      slideDown: I('show'),
      slideUp: I('hide'),
      slideToggle: I('toggle'),
      fadeIn: {
        opacity: 'show'
      },
      fadeOut: {
        opacity: 'hide'
      },
      fadeToggle: {
        opacity: 'toggle'
      }
    }, function (e, n) {
      rn.fn[e] = function (e, a, t) {
        return this.animate(n, e, a, t)
      }
    }),
    rn.timers = [
    ],
    rn.fx.tick = function () {
      var e,
      n = rn.timers,
      a = 0;
      for (pa = rn.now(); a < n.length; a++) e = n[a],
      e() || n[a] !== e || n.splice(a--, 1);
      n.length || rn.fx.stop(),
      pa = void 0
    },
    rn.fx.timer = function (e) {
      rn.timers.push(e),
      e() ? rn.fx.start()  : rn.timers.pop()
    },
    rn.fx.interval = 13,
    rn.fx.start = function () {
      va || (va = setInterval(rn.fx.tick, rn.fx.interval))
    },
    rn.fx.stop = function () {
      clearInterval(va),
      va = null
    },
    rn.fx.speeds = {
      slow: 600,
      fast: 200,
      _default: 400
    },
    rn.fn.delay = function (e, n) {
      return e = rn.fx ? rn.fx.speeds[e] || e : e,
      n = n || 'fx',
      this.queue(n, function (n, a) {
        var t = setTimeout(n, e);
        a.stop = function () {
          clearTimeout(t)
        }
      })
    },
    function () {
      var e,
      n,
      a,
      t,
      i;
      n = vn.createElement('div'),
      n.setAttribute('className', 't'),
      n.innerHTML = '  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>',
      t = n.getElementsByTagName('a') [0],
      a = vn.createElement('select'),
      i = a.appendChild(vn.createElement('option')),
      e = n.getElementsByTagName('input') [0],
      t.style.cssText = 'top:1px',
      an.getSetAttribute = 't' !== n.className,
      an.style = /top/.test(t.getAttribute('style')),
      an.hrefNormalized = '/a' === t.getAttribute('href'),
      an.checkOn = !!e.value,
      an.optSelected = i.selected,
      an.enctype = !!vn.createElement('form').enctype,
      a.disabled = !0,
      an.optDisabled = !i.disabled,
      e = vn.createElement('input'),
      e.setAttribute('value', ''),
      an.input = '' === e.getAttribute('value'),
      e.value = 't',
      e.setAttribute('type', 'radio'),
      an.radioValue = 't' === e.value
    }();
    var wa = /\r/g;
    rn.fn.extend({
      val: function (e) {
        var n,
        a,
        t,
        i = this[0];
        {
          if (arguments.length) return t = rn.isFunction(e),
          this.each(function (a) {
            var i;
            1 === this.nodeType && (i = t ? e.call(this, a, rn(this).val())  : e, null == i ? i = '' : 'number' == typeof i ? i += '' : rn.isArray(i) && (i = rn.map(i, function (e) {
              return null == e ? '' : e + ''
            })), n = rn.valHooks[this.type] || rn.valHooks[this.nodeName.toLowerCase()], n && 'set' in n && void 0 !== n.set(this, i, 'value') || (this.value = i))
          });
          if (i) return n = rn.valHooks[i.type] || rn.valHooks[i.nodeName.toLowerCase()],
          n && 'get' in n && void 0 !== (a = n.get(i, 'value')) ? a : (a = i.value, 'string' == typeof a ? a.replace(wa, '')  : null == a ? '' : a)
        }
      }
    }),
    rn.extend({
      valHooks: {
        option: {
          get: function (e) {
            var n = rn.find.attr(e, 'value');
            return null != n ? n : rn.trim(rn.text(e))
          }
        },
        select: {
          get: function (e) {
            for (var n, a, t = e.options, i = e.selectedIndex, r = 'select-one' === e.type || 0 > i, o = r ? null : [
            ], s = r ? i + 1 : t.length, l = 0 > i ? s : r ? i : 0; s > l; l++) if (a = t[l], !(!a.selected && l !== i || (an.optDisabled ? a.disabled : null !== a.getAttribute('disabled')) || a.parentNode.disabled && rn.nodeName(a.parentNode, 'optgroup'))) {
              if (n = rn(a).val(), r) return n;
              o.push(n)
            }
            return o
          },
          set: function (e, n) {
            for (var a, t, i = e.options, r = rn.makeArray(n), o = i.length; o--; ) if (t = i[o], rn.inArray(rn.valHooks.option.get(t), r) >= 0) try {
              t.selected = a = !0
            } catch (s) {
              t.scrollHeight
            } else t.selected = !1;
            return a || (e.selectedIndex = - 1),
            i
          }
        }
      }
    }),
    rn.each(['radio',
    'checkbox'], function () {
      rn.valHooks[this] = {
        set: function (e, n) {
          return rn.isArray(n) ? e.checked = rn.inArray(rn(e).val(), n) >= 0 : void 0
        }
      },
      an.checkOn || (rn.valHooks[this].get = function (e) {
        return null === e.getAttribute('value') ? 'on' : e.value
      })
    });
    var ka,
    Sa,
    Aa = rn.expr.attrHandle,
    Ma = /^(?:checked|selected)$/i,
    xa = an.getSetAttribute,
    Ca = an.input;
    rn.fn.extend({
      attr: function (e, n) {
        return Tn(this, rn.attr, e, n, arguments.length > 1)
      },
      removeAttr: function (e) {
        return this.each(function () {
          rn.removeAttr(this, e)
        })
      }
    }),
    rn.extend({
      attr: function (e, n, a) {
        var t,
        i,
        r = e.nodeType;
        if (e && 3 !== r && 8 !== r && 2 !== r) return typeof e.getAttribute === An ? rn.prop(e, n, a)  : (1 === r && rn.isXMLDoc(e) || (n = n.toLowerCase(), t = rn.attrHooks[n] || (rn.expr.match.bool.test(n) ? Sa : ka)), void 0 === a ? t && 'get' in t && null !== (i = t.get(e, n)) ? i : (i = rn.find.attr(e, n), null == i ? void 0 : i)  : null !== a ? t && 'set' in t && void 0 !== (i = t.set(e, a, n)) ? i : (e.setAttribute(n, a + ''), a)  : void rn.removeAttr(e, n))
      },
      removeAttr: function (e, n) {
        var a,
        t,
        i = 0,
        r = n && n.match(yn);
        if (r && 1 === e.nodeType) for (; a = r[i++]; ) t = rn.propFix[a] || a,
        rn.expr.match.bool.test(a) ? Ca && xa || !Ma.test(a) ? e[t] = !1 : e[rn.camelCase('default-' + a)] = e[t] = !1 : rn.attr(e, a, ''),
        e.removeAttribute(xa ? a : t)
      },
      attrHooks: {
        type: {
          set: function (e, n) {
            if (!an.radioValue && 'radio' === n && rn.nodeName(e, 'input')) {
              var a = e.value;
              return e.setAttribute('type', n),
              a && (e.value = a),
              n
            }
          }
        }
      }
    }),
    Sa = {
      set: function (e, n, a) {
        return n === !1 ? rn.removeAttr(e, a)  : Ca && xa || !Ma.test(a) ? e.setAttribute(!xa && rn.propFix[a] || a, a)  : e[rn.camelCase('default-' + a)] = e[a] = !0,
        a
      }
    },
    rn.each(rn.expr.match.bool.source.match(/\w+/g), function (e, n) {
      var a = Aa[n] || rn.find.attr;
      Aa[n] = Ca && xa || !Ma.test(n) ? function (e, n, t) {
        var i,
        r;
        return t || (r = Aa[n], Aa[n] = i, i = null != a(e, n, t) ? n.toLowerCase()  : null, Aa[n] = r),
        i
      }
       : function (e, n, a) {
        return a ? void 0 : e[rn.camelCase('default-' + n)] ? n.toLowerCase()  : null
      }
    }),
    Ca && xa || (rn.attrHooks.value = {
      set: function (e, n, a) {
        return rn.nodeName(e, 'input') ? void (e.defaultValue = n)  : ka && ka.set(e, n, a)
      }
    }),
    xa || (ka = {
      set: function (e, n, a) {
        var t = e.getAttributeNode(a);
        return t || e.setAttributeNode(t = e.ownerDocument.createAttribute(a)),
        t.value = n += '',
        'value' === a || n === e.getAttribute(a) ? n : void 0
      }
    }, Aa.id = Aa.name = Aa.coords = function (e, n, a) {
      var t;
      return a ? void 0 : (t = e.getAttributeNode(n)) && '' !== t.value ? t.value : null
    }, rn.valHooks.button = {
      get: function (e, n) {
        var a = e.getAttributeNode(n);
        return a && a.specified ? a.value : void 0
      },
      set: ka.set
    }, rn.attrHooks.contenteditable = {
      set: function (e, n, a) {
        ka.set(e, '' === n ? !1 : n, a)
      }
    }, rn.each(['width',
    'height'], function (e, n) {
      rn.attrHooks[n] = {
        set: function (e, a) {
          return '' === a ? (e.setAttribute(n, 'auto'), a)  : void 0
        }
      }
    })),
    an.style || (rn.attrHooks.style = {
      get: function (e) {
        return e.style.cssText || void 0
      },
      set: function (e, n) {
        return e.style.cssText = n + ''
      }
    });
    var za = /^(?:input|select|textarea|button|object)$/i,
    Pa = /^(?:a|area)$/i;
    rn.fn.extend({
      prop: function (e, n) {
        return Tn(this, rn.prop, e, n, arguments.length > 1)
      },
      removeProp: function (e) {
        return e = rn.propFix[e] || e,
        this.each(function () {
          try {
            this[e] = void 0,
            delete this[e]
          } catch (n) {
          }
        })
      }
    }),
    rn.extend({
      propFix: {
        'for': 'htmlFor',
        'class': 'className'
      },
      prop: function (e, n, a) {
        var t,
        i,
        r,
        o = e.nodeType;
        if (e && 3 !== o && 8 !== o && 2 !== o) return r = 1 !== o || !rn.isXMLDoc(e),
        r && (n = rn.propFix[n] || n, i = rn.propHooks[n]),
        void 0 !== a ? i && 'set' in i && void 0 !== (t = i.set(e, a, n)) ? t : e[n] = a : i && 'get' in i && null !== (t = i.get(e, n)) ? t : e[n]
      },
      propHooks: {
        tabIndex: {
          get: function (e) {
            var n = rn.find.attr(e, 'tabindex');
            return n ? parseInt(n, 10)  : za.test(e.nodeName) || Pa.test(e.nodeName) && e.href ? 0 : - 1
          }
        }
      }
    }),
    an.hrefNormalized || rn.each(['href',
    'src'], function (e, n) {
      rn.propHooks[n] = {
        get: function (e) {
          return e.getAttribute(n, 4)
        }
      }
    }),
    an.optSelected || (rn.propHooks.selected = {
      get: function (e) {
        var n = e.parentNode;
        return n && (n.selectedIndex, n.parentNode && n.parentNode.selectedIndex),
        null
      }
    }),
    rn.each(['tabIndex',
    'readOnly',
    'maxLength',
    'cellSpacing',
    'cellPadding',
    'rowSpan',
    'colSpan',
    'useMap',
    'frameBorder',
    'contentEditable'], function () {
      rn.propFix[this.toLowerCase()] = this
    }),
    an.enctype || (rn.propFix.enctype = 'encoding');
    var Ta = /[\t\r\n\f]/g;
    rn.fn.extend({
      addClass: function (e) {
        var n,
        a,
        t,
        i,
        r,
        o,
        s = 0,
        l = this.length,
        c = 'string' == typeof e && e;
        if (rn.isFunction(e)) return this.each(function (n) {
          rn(this).addClass(e.call(this, n, this.className))
        });
        if (c) for (n = (e || '').match(yn) || [
        ]; l > s; s++) if (a = this[s], t = 1 === a.nodeType && (a.className ? (' ' + a.className + ' ').replace(Ta, ' ')  : ' ')) {
          for (r = 0; i = n[r++]; ) t.indexOf(' ' + i + ' ') < 0 && (t += i + ' ');
          o = rn.trim(t),
          a.className !== o && (a.className = o)
        }
        return this
      },
      removeClass: function (e) {
        var n,
        a,
        t,
        i,
        r,
        o,
        s = 0,
        l = this.length,
        c = 0 === arguments.length || 'string' == typeof e && e;
        if (rn.isFunction(e)) return this.each(function (n) {
          rn(this).removeClass(e.call(this, n, this.className))
        });
        if (c) for (n = (e || '').match(yn) || [
        ]; l > s; s++) if (a = this[s], t = 1 === a.nodeType && (a.className ? (' ' + a.className + ' ').replace(Ta, ' ')  : '')) {
          for (r = 0; i = n[r++]; ) for (; t.indexOf(' ' + i + ' ') >= 0; ) t = t.replace(' ' + i + ' ', ' ');
          o = e ? rn.trim(t)  : '',
          a.className !== o && (a.className = o)
        }
        return this
      },
      toggleClass: function (e, n) {
        var a = typeof e;
        return 'boolean' == typeof n && 'string' === a ? n ? this.addClass(e)  : this.removeClass(e)  : this.each(rn.isFunction(e) ? function (a) {
          rn(this).toggleClass(e.call(this, a, this.className, n), n)
        }
         : function () {
          if ('string' === a) for (var n, t = 0, i = rn(this), r = e.match(yn) || [
          ]; n = r[t++]; ) i.hasClass(n) ? i.removeClass(n)  : i.addClass(n);
           else (a === An || 'boolean' === a) && (this.className && rn._data(this, '__className__', this.className), this.className = this.className || e === !1 ? '' : rn._data(this, '__className__') || '')
        })
      },
      hasClass: function (e) {
        for (var n = ' ' + e + ' ', a = 0, t = this.length; t > a; a++) if (1 === this[a].nodeType && (' ' + this[a].className + ' ').replace(Ta, ' ').indexOf(n) >= 0) return !0;
        return !1
      }
    }),
    rn.each('blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu'.split(' '), function (e, n) {
      rn.fn[n] = function (e, a) {
        return arguments.length > 0 ? this.on(n, null, e, a)  : this.trigger(n)
      }
    }),
    rn.fn.extend({
      hover: function (e, n) {
        return this.mouseenter(e).mouseleave(n || e)
      },
      bind: function (e, n, a) {
        return this.on(e, null, n, a)
      },
      unbind: function (e, n) {
        return this.off(e, null, n)
      },
      delegate: function (e, n, a, t) {
        return this.on(n, e, a, t)
      },
      undelegate: function (e, n, a) {
        return 1 === arguments.length ? this.off(e, '**')  : this.off(n, e || '**', a)
      }
    });
    var Da = rn.now(),
    Ea = /\?/,
    $a = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    rn.parseJSON = function (n) {
      if (e.JSON && e.JSON.parse) return e.JSON.parse(n + '');
      var a,
      t = null,
      i = rn.trim(n + '');
      return i && !rn.trim(i.replace($a, function (e, n, i, r) {
        return a && n && (t = 0),
        0 === t ? e : (a = i || n, t += !r - !i, '')
      })) ? Function('return ' + i) ()  : rn.error('Invalid JSON: ' + n)
    },
    rn.parseXML = function (n) {
      var a,
      t;
      if (!n || 'string' != typeof n) return null;
      try {
        e.DOMParser ? (t = new DOMParser, a = t.parseFromString(n, 'text/xml'))  : (a = new ActiveXObject('Microsoft.XMLDOM'), a.async = 'false', a.loadXML(n))
      } catch (i) {
        a = void 0
      }
      return a && a.documentElement && !a.getElementsByTagName('parsererror').length || rn.error('Invalid XML: ' + n),
      a
    };
    var Ia,
    La,
    Ba = /#.*$/,
    Na = /([?&])_=[^&]*/,
    Ra = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
    ja = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
    Ka = /^(?:GET|HEAD)$/,
    Fa = /^\/\//,
    Ha = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
    Ga = {
    },
    Oa = {
    },
    qa = '*/'.concat('*');
    try {
      La = location.href
    } catch (Wa) {
      La = vn.createElement('a'),
      La.href = '',
      La = La.href
    }
    Ia = Ha.exec(La.toLowerCase()) || [
    ],
    rn.extend({
      active: 0,
      lastModified: {
      },
      etag: {
      },
      ajaxSettings: {
        url: La,
        type: 'GET',
        isLocal: ja.test(Ia[1]),
        global: !0,
        processData: !0,
        async: !0,
        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
        accepts: {
          '*': qa,
          text: 'text/plain',
          html: 'text/html',
          xml: 'application/xml, text/xml',
          json: 'application/json, text/javascript'
        },
        contents: {
          xml: /xml/,
          html: /html/,
          json: /json/
        },
        responseFields: {
          xml: 'responseXML',
          text: 'responseText',
          json: 'responseJSON'
        },
        converters: {
          '* text': String,
          'text html': !0,
          'text json': rn.parseJSON,
          'text xml': rn.parseXML
        },
        flatOptions: {
          url: !0,
          context: !0
        }
      },
      ajaxSetup: function (e, n) {
        return n ? F(F(e, rn.ajaxSettings), n)  : F(rn.ajaxSettings, e)
      },
      ajaxPrefilter: j(Ga),
      ajaxTransport: j(Oa),
      ajax: function (e, n) {
        function a(e, n, a, t) {
          var i,
          u,
          f,
          _,
          y,
          k = n;
          2 !== b && (b = 2, s && clearTimeout(s), c = void 0, o = t || '', w.readyState = e > 0 ? 4 : 0, i = e >= 200 && 300 > e || 304 === e, a && (_ = H(d, w, a)), _ = G(d, _, w, i), i ? (d.ifModified && (y = w.getResponseHeader('Last-Modified'), y && (rn.lastModified[r] = y), y = w.getResponseHeader('etag'), y && (rn.etag[r] = y)), 204 === e || 'HEAD' === d.type ? k = 'nocontent' : 304 === e ? k = 'notmodified' : (k = _.state, u = _.data, f = _.error, i = !f))  : (f = k, (e || !k) && (k = 'error', 0 > e && (e = 0))), w.status = e, w.statusText = (n || k) + '', i ? p.resolveWith(m, [
            u,
            k,
            w
          ])  : p.rejectWith(m, [
            w,
            k,
            f
          ]), w.statusCode(g), g = void 0, l && h.trigger(i ? 'ajaxSuccess' : 'ajaxError', [
            w,
            d,
            i ? u : f
          ]), v.fireWith(m, [
            w,
            k
          ]), l && (h.trigger('ajaxComplete', [
            w,
            d
          ]), --rn.active || rn.event.trigger('ajaxStop')))
        }
        'object' == typeof e && (n = e, e = void 0),
        n = n || {
        };
        var t,
        i,
        r,
        o,
        s,
        l,
        c,
        u,
        d = rn.ajaxSetup({
        }, n),
        m = d.context || d,
        h = d.context && (m.nodeType || m.jquery) ? rn(m)  : rn.event,
        p = rn.Deferred(),
        v = rn.Callbacks('once memory'),
        g = d.statusCode || {
        },
        f = {
        },
        _ = {
        },
        b = 0,
        y = 'canceled',
        w = {
          readyState: 0,
          getResponseHeader: function (e) {
            var n;
            if (2 === b) {
              if (!u) for (u = {
              }; n = Ra.exec(o); ) u[n[1].toLowerCase()] = n[2];
              n = u[e.toLowerCase()]
            }
            return null == n ? null : n
          },
          getAllResponseHeaders: function () {
            return 2 === b ? o : null
          },
          setRequestHeader: function (e, n) {
            var a = e.toLowerCase();
            return b || (e = _[a] = _[a] || e, f[e] = n),
            this
          },
          overrideMimeType: function (e) {
            return b || (d.mimeType = e),
            this
          },
          statusCode: function (e) {
            var n;
            if (e) if (2 > b) for (n in e) g[n] = [
              g[n],
              e[n]
            ];
             else w.always(e[w.status]);
            return this
          },
          abort: function (e) {
            var n = e || y;
            return c && c.abort(n),
            a(0, n),
            this
          }
        };
        if (p.promise(w).complete = v.add, w.success = w.done, w.error = w.fail, d.url = ((e || d.url || La) + '').replace(Ba, '').replace(Fa, Ia[1] + '//'), d.type = n.method || n.type || d.method || d.type, d.dataTypes = rn.trim(d.dataType || '*').toLowerCase().match(yn) || [
          ''
        ], null == d.crossDomain && (t = Ha.exec(d.url.toLowerCase()), d.crossDomain = !(!t || t[1] === Ia[1] && t[2] === Ia[2] && (t[3] || ('http:' === t[1] ? '80' : '443')) === (Ia[3] || ('http:' === Ia[1] ? '80' : '443')))), d.data && d.processData && 'string' != typeof d.data && (d.data = rn.param(d.data, d.traditional)), K(Ga, d, n, w), 2 === b) return w;
        l = d.global,
        l && 0 === rn.active++ && rn.event.trigger('ajaxStart'),
        d.type = d.type.toUpperCase(),
        d.hasContent = !Ka.test(d.type),
        r = d.url,
        d.hasContent || (d.data && (r = d.url += (Ea.test(r) ? '&' : '?') + d.data, delete d.data), d.cache === !1 && (d.url = Na.test(r) ? r.replace(Na, '$1_=' + Da++)  : r + (Ea.test(r) ? '&' : '?') + '_=' + Da++)),
        d.ifModified && (rn.lastModified[r] && w.setRequestHeader('If-Modified-Since', rn.lastModified[r]), rn.etag[r] && w.setRequestHeader('If-None-Match', rn.etag[r])),
        (d.data && d.hasContent && d.contentType !== !1 || n.contentType) && w.setRequestHeader('Content-Type', d.contentType),
        w.setRequestHeader('Accept', d.dataTypes[0] && d.accepts[d.dataTypes[0]] ? d.accepts[d.dataTypes[0]] + ('*' !== d.dataTypes[0] ? ', ' + qa + '; q=0.01' : '')  : d.accepts['*']);
        for (i in d.headers) w.setRequestHeader(i, d.headers[i]);
        if (d.beforeSend && (d.beforeSend.call(m, w, d) === !1 || 2 === b)) return w.abort();
        y = 'abort';
        for (i in {
          success: 1,
          error: 1,
          complete: 1
        }) w[i](d[i]);
        if (c = K(Oa, d, n, w)) {
          w.readyState = 1,
          l && h.trigger('ajaxSend', [
            w,
            d
          ]),
          d.async && d.timeout > 0 && (s = setTimeout(function () {
            w.abort('timeout')
          }, d.timeout));
          try {
            b = 1,
            c.send(f, a)
          } catch (k) {
            if (!(2 > b)) throw k;
            a( - 1, k)
          }
        } else a( - 1, 'No Transport');
        return w
      },
      getJSON: function (e, n, a) {
        return rn.get(e, n, a, 'json')
      },
      getScript: function (e, n) {
        return rn.get(e, void 0, n, 'script')
      }
    }),
    rn.each(['get',
    'post'], function (e, n) {
      rn[n] = function (e, a, t, i) {
        return rn.isFunction(a) && (i = i || t, t = a, a = void 0),
        rn.ajax({
          url: e,
          type: n,
          dataType: i,
          data: a,
          success: t
        })
      }
    }),
    rn.each(['ajaxStart',
    'ajaxStop',
    'ajaxComplete',
    'ajaxError',
    'ajaxSuccess',
    'ajaxSend'], function (e, n) {
      rn.fn[n] = function (e) {
        return this.on(n, e)
      }
    }),
    rn._evalUrl = function (e) {
      return rn.ajax({
        url: e,
        type: 'GET',
        dataType: 'script',
        async: !1,
        global: !1,
        'throws': !0
      })
    },
    rn.fn.extend({
      wrapAll: function (e) {
        if (rn.isFunction(e)) return this.each(function (n) {
          rn(this).wrapAll(e.call(this, n))
        });
        if (this[0]) {
          var n = rn(e, this[0].ownerDocument).eq(0).clone(!0);
          this[0].parentNode && n.insertBefore(this[0]),
          n.map(function () {
            for (var e = this; e.firstChild && 1 === e.firstChild.nodeType; ) e = e.firstChild;
            return e
          }).append(this)
        }
        return this
      },
      wrapInner: function (e) {
        return this.each(rn.isFunction(e) ? function (n) {
          rn(this).wrapInner(e.call(this, n))
        }
         : function () {
          var n = rn(this),
          a = n.contents();
          a.length ? a.wrapAll(e)  : n.append(e)
        })
      },
      wrap: function (e) {
        var n = rn.isFunction(e);
        return this.each(function (a) {
          rn(this).wrapAll(n ? e.call(this, a)  : e)
        })
      },
      unwrap: function () {
        return this.parent().each(function () {
          rn.nodeName(this, 'body') || rn(this).replaceWith(this.childNodes)
        }).end()
      }
    }),
    rn.expr.filters.hidden = function (e) {
      return e.offsetWidth <= 0 && e.offsetHeight <= 0 || !an.reliableHiddenOffsets() && 'none' === (e.style && e.style.display || rn.css(e, 'display'))
    },
    rn.expr.filters.visible = function (e) {
      return !rn.expr.filters.hidden(e)
    };
    var Ja = /%20/g,
    Va = /\[\]$/,
    Ua = /\r?\n/g,
    Za = /^(?:submit|button|image|reset|file)$/i,
    Ya = /^(?:input|select|textarea|keygen)/i;
    rn.param = function (e, n) {
      var a,
      t = [
      ],
      i = function (e, n) {
        n = rn.isFunction(n) ? n()  : null == n ? '' : n,
        t[t.length] = encodeURIComponent(e) + '=' + encodeURIComponent(n)
      };
      if (void 0 === n && (n = rn.ajaxSettings && rn.ajaxSettings.traditional), rn.isArray(e) || e.jquery && !rn.isPlainObject(e)) rn.each(e, function () {
        i(this.name, this.value)
      });
       else for (a in e) O(a, e[a], n, i);
      return t.join('&').replace(Ja, '+')
    },
    rn.fn.extend({
      serialize: function () {
        return rn.param(this.serializeArray())
      },
      serializeArray: function () {
        return this.map(function () {
          var e = rn.prop(this, 'elements');
          return e ? rn.makeArray(e)  : this
        }).filter(function () {
          var e = this.type;
          return this.name && !rn(this).is(':disabled') && Ya.test(this.nodeName) && !Za.test(e) && (this.checked || !Dn.test(e))
        }).map(function (e, n) {
          var a = rn(this).val();
          return null == a ? null : rn.isArray(a) ? rn.map(a, function (e) {
            return {
              name: n.name,
              value: e.replace(Ua, '\r\n')
            }
          })  : {
            name: n.name,
            value: a.replace(Ua, '\r\n')
          }
        }).get()
      }
    }),
    rn.ajaxSettings.xhr = void 0 !== e.ActiveXObject ? function () {
      return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && q() || W()
    }
     : q;
    var Xa = 0,
    Qa = {
    },
    et = rn.ajaxSettings.xhr();
    e.ActiveXObject && rn(e).on('unload', function () {
      for (var e in Qa) Qa[e](void 0, !0)
    }),
    an.cors = !!et && 'withCredentials' in et,
    et = an.ajax = !!et,
    et && rn.ajaxTransport(function (e) {
      if (!e.crossDomain || an.cors) {
        var n;
        return {
          send: function (a, t) {
            var i,
            r = e.xhr(),
            o = ++Xa;
            if (r.open(e.type, e.url, e.async, e.username, e.password), e.xhrFields) for (i in e.xhrFields) r[i] = e.xhrFields[i];
            e.mimeType && r.overrideMimeType && r.overrideMimeType(e.mimeType),
            e.crossDomain || a['X-Requested-With'] || (a['X-Requested-With'] = 'XMLHttpRequest');
            for (i in a) void 0 !== a[i] && r.setRequestHeader(i, a[i] + '');
            r.send(e.hasContent && e.data || null),
            n = function (a, i) {
              var s,
              l,
              c;
              if (n && (i || 4 === r.readyState)) if (delete Qa[o], n = void 0, r.onreadystatechange = rn.noop, i) 4 !== r.readyState && r.abort();
               else {
                c = {
                },
                s = r.status,
                'string' == typeof r.responseText && (c.text = r.responseText);
                try {
                  l = r.statusText
                } catch (u) {
                  l = ''
                }
                s || !e.isLocal || e.crossDomain ? 1223 === s && (s = 204)  : s = c.text ? 200 : 404
              }
              c && t(s, l, c, r.getAllResponseHeaders())
            },
            e.async ? 4 === r.readyState ? setTimeout(n)  : r.onreadystatechange = Qa[o] = n : n()
          },
          abort: function () {
            n && n(void 0, !0)
          }
        }
      }
    }),
    rn.ajaxSetup({
      accepts: {
        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'
      },
      contents: {
        script: /(?:java|ecma)script/
      },
      converters: {
        'text script': function (e) {
          return rn.globalEval(e),
          e
        }
      }
    }),
    rn.ajaxPrefilter('script', function (e) {
      void 0 === e.cache && (e.cache = !1),
      e.crossDomain && (e.type = 'GET', e.global = !1)
    }),
    rn.ajaxTransport('script', function (e) {
      if (e.crossDomain) {
        var n,
        a = vn.head || rn('head') [0] || vn.documentElement;
        return {
          send: function (t, i) {
            n = vn.createElement('script'),
            n.async = !0,
            e.scriptCharset && (n.charset = e.scriptCharset),
            n.src = e.url,
            n.onload = n.onreadystatechange = function (e, a) {
              (a || !n.readyState || /loaded|complete/.test(n.readyState)) && (n.onload = n.onreadystatechange = null, n.parentNode && n.parentNode.removeChild(n), n = null, a || i(200, 'success'))
            },
            a.insertBefore(n, a.firstChild)
          },
          abort: function () {
            n && n.onload(void 0, !0)
          }
        }
      }
    });
    var nt = [
    ],
    at = /(=)\?(?=&|$)|\?\?/;
    rn.ajaxSetup({
      jsonp: 'callback',
      jsonpCallback: function () {
        var e = nt.pop() || rn.expando + '_' + Da++;
        return this[e] = !0,
        e
      }
    }),
    rn.ajaxPrefilter('json jsonp', function (n, a, t) {
      var i,
      r,
      o,
      s = n.jsonp !== !1 && (at.test(n.url) ? 'url' : 'string' == typeof n.data && !(n.contentType || '').indexOf('application/x-www-form-urlencoded') && at.test(n.data) && 'data');
      return s || 'jsonp' === n.dataTypes[0] ? (i = n.jsonpCallback = rn.isFunction(n.jsonpCallback) ? n.jsonpCallback()  : n.jsonpCallback, s ? n[s] = n[s].replace(at, '$1' + i)  : n.jsonp !== !1 && (n.url += (Ea.test(n.url) ? '&' : '?') + n.jsonp + '=' + i), n.converters['script json'] = function () {
        return o || rn.error(i + ' was not called'),
        o[0]
      }, n.dataTypes[0] = 'json', r = e[i], e[i] = function () {
        o = arguments
      }, t.always(function () {
        e[i] = r,
        n[i] && (n.jsonpCallback = a.jsonpCallback, nt.push(i)),
        o && rn.isFunction(r) && r(o[0]),
        o = r = void 0
      }), 'script')  : void 0
    }),
    rn.parseHTML = function (e, n, a) {
      if (!e || 'string' != typeof e) return null;
      'boolean' == typeof n && (a = n, n = !1),
      n = n || vn;
      var t = mn.exec(e),
      i = !a && [
      ];
      return t ? [
        n.createElement(t[1])
      ] : (t = rn.buildFragment([e], n, i), i && i.length && rn(i).remove(), rn.merge([], t.childNodes))
    };
    var tt = rn.fn.load;
    rn.fn.load = function (e, n, a) {
      if ('string' != typeof e && tt) return tt.apply(this, arguments);
      var t,
      i,
      r,
      o = this,
      s = e.indexOf(' ');
      return s >= 0 && (t = rn.trim(e.slice(s, e.length)), e = e.slice(0, s)),
      rn.isFunction(n) ? (a = n, n = void 0)  : n && 'object' == typeof n && (r = 'POST'),
      o.length > 0 && rn.ajax({
        url: e,
        type: r,
        dataType: 'html',
        data: n
      }).done(function (e) {
        i = arguments,
        o.html(t ? rn('<div>').append(rn.parseHTML(e)).find(t)  : e)
      }).complete(a && function (e, n) {
        o.each(a, i || [
          e.responseText,
          n,
          e
        ])
      }),
      this
    },
    rn.expr.filters.animated = function (e) {
      return rn.grep(rn.timers, function (n) {
        return e === n.elem
      }).length
    };
    var it = e.document.documentElement;
    rn.offset = {
      setOffset: function (e, n, a) {
        var t,
        i,
        r,
        o,
        s,
        l,
        c,
        u = rn.css(e, 'position'),
        d = rn(e),
        m = {
        };
        'static' === u && (e.style.position = 'relative'),
        s = d.offset(),
        r = rn.css(e, 'top'),
        l = rn.css(e, 'left'),
        c = ('absolute' === u || 'fixed' === u) && rn.inArray('auto', [
          r,
          l
        ]) > - 1,
        c ? (t = d.position(), o = t.top, i = t.left)  : (o = parseFloat(r) || 0, i = parseFloat(l) || 0),
        rn.isFunction(n) && (n = n.call(e, a, s)),
        null != n.top && (m.top = n.top - s.top + o),
        null != n.left && (m.left = n.left - s.left + i),
        'using' in n ? n.using.call(e, m)  : d.css(m)
      }
    },
    rn.fn.extend({
      offset: function (e) {
        if (arguments.length) return void 0 === e ? this : this.each(function (n) {
          rn.offset.setOffset(this, e, n)
        });
        var n,
        a,
        t = {
          top: 0,
          left: 0
        },
        i = this[0],
        r = i && i.ownerDocument;
        if (r) return n = r.documentElement,
        rn.contains(n, i) ? (typeof i.getBoundingClientRect !== An && (t = i.getBoundingClientRect()), a = J(r), {
          top: t.top + (a.pageYOffset || n.scrollTop) - (n.clientTop || 0),
          left: t.left + (a.pageXOffset || n.scrollLeft) - (n.clientLeft || 0)
        })  : t
      },
      position: function () {
        if (this[0]) {
          var e,
          n,
          a = {
            top: 0,
            left: 0
          },
          t = this[0];
          return 'fixed' === rn.css(t, 'position') ? n = t.getBoundingClientRect()  : (e = this.offsetParent(), n = this.offset(), rn.nodeName(e[0], 'html') || (a = e.offset()), a.top += rn.css(e[0], 'borderTopWidth', !0), a.left += rn.css(e[0], 'borderLeftWidth', !0)),
          {
            top: n.top - a.top - rn.css(t, 'marginTop', !0),
            left: n.left - a.left - rn.css(t, 'marginLeft', !0)
          }
        }
      },
      offsetParent: function () {
        return this.map(function () {
          for (var e = this.offsetParent || it; e && !rn.nodeName(e, 'html') && 'static' === rn.css(e, 'position'); ) e = e.offsetParent;
          return e || it
        })
      }
    }),
    rn.each({
      scrollLeft: 'pageXOffset',
      scrollTop: 'pageYOffset'
    }, function (e, n) {
      var a = /Y/.test(n);
      rn.fn[e] = function (t) {
        return Tn(this, function (e, t, i) {
          var r = J(e);
          return void 0 === i ? r ? n in r ? r[n] : r.document.documentElement[t] : e[t] : void (r ? r.scrollTo(a ? rn(r).scrollLeft()  : i, a ? i : rn(r).scrollTop())  : e[t] = i)
        }, e, t, arguments.length, null)
      }
    }),
    rn.each(['top',
    'left'], function (e, n) {
      rn.cssHooks[n] = x(an.pixelPosition, function (e, a) {
        return a ? (a = aa(e, n), ia.test(a) ? rn(e).position() [n] + 'px' : a)  : void 0
      })
    }),
    rn.each({
      Height: 'height',
      Width: 'width'
    }, function (e, n) {
      rn.each({
        padding: 'inner' + e,
        content: n,
        '': 'outer' + e
      }, function (a, t) {
        rn.fn[t] = function (t, i) {
          var r = arguments.length && (a || 'boolean' != typeof t),
          o = a || (t === !0 || i === !0 ? 'margin' : 'border');
          return Tn(this, function (n, a, t) {
            var i;
            return rn.isWindow(n) ? n.document.documentElement['client' + e] : 9 === n.nodeType ? (i = n.documentElement, Math.max(n.body['scroll' + e], i['scroll' + e], n.body['offset' + e], i['offset' + e], i['client' + e]))  : void 0 === t ? rn.css(n, a, o)  : rn.style(n, a, t, o)
          }, n, r ? t : void 0, r, null)
        }
      })
    }),
    rn.fn.size = function () {
      return this.length
    },
    rn.fn.andSelf = rn.fn.addBack,
    'function' == typeof define && define.amd && define('jquery', [
    ], function () {
      return rn
    });
    var rt = e.jQuery,
    ot = e.$;
    return rn.noConflict = function (n) {
      return e.$ === rn && (e.$ = ot),
      n && e.jQuery === rn && (e.jQuery = rt),
      rn
    },
    typeof n === An && (e.jQuery = e.$ = rn),
    rn
  }),
  function (e, n) {
    e.rails !== n && e.error('jquery-ujs has already been loaded!');
    var a,
    t = e(document);
    e.rails = a = {
      linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote], a[data-disable-with], a[data-disable]',
      buttonClickSelector: 'button[data-remote]:not(form button), button[data-confirm]:not(form button)',
      inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',
      formSubmitSelector: 'form',
      formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',
      disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',
      enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',
      requiredInputSelector: 'input[name][required]:not([disabled]),textarea[name][required]:not([disabled])',
      fileInputSelector: 'input[type=file]',
      linkDisableSelector: 'a[data-disable-with], a[data-disable]',
      buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',
      CSRFProtection: function (n) {
        var a = e('meta[name="csrf-token"]').attr('content');
        a && n.setRequestHeader('X-CSRF-Token', a)
      },
      refreshCSRFTokens: function () {
        var n = e('meta[name=csrf-token]').attr('content'),
        a = e('meta[name=csrf-param]').attr('content');
        e('form input[name="' + a + '"]').val(n)
      },
      fire: function (n, a, t) {
        var i = e.Event(a);
        return n.trigger(i, t),
        i.result !== !1
      },
      confirm: function (e) {
        return confirm(e)
      },
      ajax: function (n) {
        return e.ajax(n)
      },
      href: function (e) {
        return e.attr('href')
      },
      handleRemote: function (t) {
        var i,
        r,
        o,
        s,
        l,
        c,
        u,
        d;
        if (a.fire(t, 'ajax:before')) {
          if (s = t.data('cross-domain'), l = s === n ? null : s, c = t.data('with-credentials') || null, u = t.data('type') || e.ajaxSettings && e.ajaxSettings.dataType, t.is('form')) {
            i = t.attr('method'),
            r = t.attr('action'),
            o = t.serializeArray();
            var m = t.data('ujs:submit-button');
            m && (o.push(m), t.data('ujs:submit-button', null))
          } else t.is(a.inputChangeSelector) ? (i = t.data('method'), r = t.data('url'), o = t.serialize(), t.data('params') && (o = o + '&' + t.data('params')))  : t.is(a.buttonClickSelector) ? (i = t.data('method') || 'get', r = t.data('url'), o = t.serialize(), t.data('params') && (o = o + '&' + t.data('params')))  : (i = t.data('method'), r = a.href(t), o = t.data('params') || null);
          return d = {
            type: i || 'GET',
            data: o,
            dataType: u,
            beforeSend: function (e, i) {
              return i.dataType === n && e.setRequestHeader('accept', '*/*;q=0.5, ' + i.accepts.script),
              a.fire(t, 'ajax:beforeSend', [
                e,
                i
              ]) ? void t.trigger('ajax:send', e)  : !1
            },
            success: function (e, n, a) {
              t.trigger('ajax:success', [
                e,
                n,
                a
              ])
            },
            complete: function (e, n) {
              t.trigger('ajax:complete', [
                e,
                n
              ])
            },
            error: function (e, n, a) {
              t.trigger('ajax:error', [
                e,
                n,
                a
              ])
            },
            crossDomain: l
          },
          c && (d.xhrFields = {
            withCredentials: c
          }),
          r && (d.url = r),
          a.ajax(d)
        }
        return !1
      },
      handleMethod: function (t) {
        var i = a.href(t),
        r = t.data('method'),
        o = t.attr('target'),
        s = e('meta[name=csrf-token]').attr('content'),
        l = e('meta[name=csrf-param]').attr('content'),
        c = e('<form method="post" action="' + i + '"></form>'),
        u = '<input name="_method" value="' + r + '" type="hidden" />';
        l !== n && s !== n && (u += '<input name="' + l + '" value="' + s + '" type="hidden" />'),
        o && c.attr('target', o),
        c.hide().append(u).appendTo('body'),
        c.submit()
      },
      formElements: function (n, a) {
        return n.is('form') ? e(n[0].elements).filter(a)  : n.find(a)
      },
      disableFormElements: function (n) {
        a.formElements(n, a.disableSelector).each(function () {
          a.disableFormElement(e(this))
        })
      },
      disableFormElement: function (e) {
        var a,
        t;
        a = e.is('button') ? 'html' : 'val',
        t = e.data('disable-with'),
        e.data('ujs:enable-with', e[a]()),
        t !== n && e[a](t),
        e.prop('disabled', !0)
      },
      enableFormElements: function (n) {
        a.formElements(n, a.enableSelector).each(function () {
          a.enableFormElement(e(this))
        })
      },
      enableFormElement: function (e) {
        var n = e.is('button') ? 'html' : 'val';
        e.data('ujs:enable-with') && e[n](e.data('ujs:enable-with')),
        e.prop('disabled', !1)
      },
      allowAction: function (e) {
        var n,
        t = e.data('confirm'),
        i = !1;
        return t ? (a.fire(e, 'confirm') && (i = a.confirm(t), n = a.fire(e, 'confirm:complete', [
          i
        ])), i && n)  : !0
      },
      blankInputs: function (n, a, t) {
        var i,
        r,
        o = e(),
        s = a || 'input,textarea',
        l = n.find(s);
        return l.each(function () {
          if (i = e(this), r = i.is('input[type=checkbox],input[type=radio]') ? i.is(':checked')  : i.val(), !r == !t) {
            if (i.is('input[type=radio]') && l.filter('input[type=radio]:checked[name="' + i.attr('name') + '"]').length) return !0;
            o = o.add(i)
          }
        }),
        o.length ? o : !1
      },
      nonBlankInputs: function (e, n) {
        return a.blankInputs(e, n, !0)
      },
      stopEverything: function (n) {
        return e(n.target).trigger('ujs:everythingStopped'),
        n.stopImmediatePropagation(),
        !1
      },
      disableElement: function (e) {
        var t = e.data('disable-with');
        e.data('ujs:enable-with', e.html()),
        t !== n && e.html(t),
        e.bind('click.railsDisable', function (e) {
          return a.stopEverything(e)
        })
      },
      enableElement: function (e) {
        e.data('ujs:enable-with') !== n && (e.html(e.data('ujs:enable-with')), e.removeData('ujs:enable-with')),
        e.unbind('click.railsDisable')
      }
    },
    a.fire(t, 'rails:attachBindings') && (e.ajaxPrefilter(function (e, n, t) {
      e.crossDomain || a.CSRFProtection(t)
    }), t.delegate(a.linkDisableSelector, 'ajax:complete', function () {
      a.enableElement(e(this))
    }), t.delegate(a.buttonDisableSelector, 'ajax:complete', function () {
      a.enableFormElement(e(this))
    }), t.delegate(a.linkClickSelector, 'click.rails', function (t) {
      var i = e(this),
      r = i.data('method'),
      o = i.data('params'),
      s = t.metaKey || t.ctrlKey;
      if (!a.allowAction(i)) return a.stopEverything(t);
      if (!s && i.is(a.linkDisableSelector) && a.disableElement(i), i.data('remote') !== n) {
        if (s && (!r || 'GET' === r) && !o) return !0;
        var l = a.handleRemote(i);
        return l === !1 ? a.enableElement(i)  : l.error(function () {
          a.enableElement(i)
        }),
        !1
      }
      return i.data('method') ? (a.handleMethod(i), !1)  : void 0
    }), t.delegate(a.buttonClickSelector, 'click.rails', function (n) {
      var t = e(this);
      if (!a.allowAction(t)) return a.stopEverything(n);
      t.is(a.buttonDisableSelector) && a.disableFormElement(t);
      var i = a.handleRemote(t);
      return i === !1 ? a.enableFormElement(t)  : i.error(function () {
        a.enableFormElement(t)
      }),
      !1
    }), t.delegate(a.inputChangeSelector, 'change.rails', function (n) {
      var t = e(this);
      return a.allowAction(t) ? (a.handleRemote(t), !1)  : a.stopEverything(n)
    }), t.delegate(a.formSubmitSelector, 'submit.rails', function (t) {
      var i,
      r,
      o = e(this),
      s = o.data('remote') !== n;
      if (!a.allowAction(o)) return a.stopEverything(t);
      if (o.attr('novalidate') == n && (i = a.blankInputs(o, a.requiredInputSelector), i && a.fire(o, 'ajax:aborted:required', [
        i
      ]))) return a.stopEverything(t);
      if (s) {
        if (r = a.nonBlankInputs(o, a.fileInputSelector)) {
          setTimeout(function () {
            a.disableFormElements(o)
          }, 13);
          var l = a.fire(o, 'ajax:aborted:file', [
            r
          ]);
          return l || setTimeout(function () {
            a.enableFormElements(o)
          }, 13),
          l
        }
        return a.handleRemote(o),
        !1
      }
      setTimeout(function () {
        a.disableFormElements(o)
      }, 13)
    }), t.delegate(a.formInputClickSelector, 'click.rails', function (n) {
      var t = e(this);
      if (!a.allowAction(t)) return a.stopEverything(n);
      var i = t.attr('name'),
      r = i ? {
        name: i,
        value: t.val()
      }
       : null;
      t.closest('form').data('ujs:submit-button', r)
    }), t.delegate(a.formSubmitSelector, 'ajax:send.rails', function (n) {
      this == n.target && a.disableFormElements(e(this))
    }), t.delegate(a.formSubmitSelector, 'ajax:complete.rails', function (n) {
      this == n.target && a.enableFormElements(e(this))
    }), e(function () {
      a.refreshCSRFTokens()
    }))
  }(jQuery),
  function () {
    function e(e) {
      if (!e.__listeners) {
        e.upload || (e.upload = {
        }),
        e.__listeners = [
        ];
        var n = e.upload.addEventListener;
        e.upload.addEventListener = function (a, t) {
          e.__listeners[a] = t,
          n && n.apply(this, arguments)
        }
      }
    }
    var n = function () {
      try {
        var e = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
        if (e) return !0
      } catch (n) {
        if (void 0 != navigator.mimeTypes['application/x-shockwave-flash']) return !0
      }
      return !1
    },
    a = function (e, n) {
      window.XMLHttpRequest.prototype[e] = n(window.XMLHttpRequest.prototype[e])
    };
    if (window.XMLHttpRequest && (!window.FormData || window.FileAPI && FileAPI.forceLoad ? (a('open', function (n) {
      return function (a, t, i) {
        e(this),
        this.__url = t;
        try {
          n.apply(this, [
            a,
            t,
            i
          ])
        } catch (r) {
          r.message.indexOf('Access is denied') > - 1 && n.apply(this, [
            a,
            '_fix_for_ie_crossdomain__',
            i
          ])
        }
      }
    }), a('getResponseHeader', function (e) {
      return function (n) {
        return this.__fileApiXHR ? this.__fileApiXHR.getResponseHeader(n)  : e.apply(this, [
          n
        ])
      }
    }), a('getAllResponseHeaders', function (e) {
      return function () {
        return this.__fileApiXHR ? this.__fileApiXHR.abort()  : null == e ? null : e.apply(this)
      }
    }), a('abort', function (e) {
      return function () {
        return this.__fileApiXHR ? this.__fileApiXHR.abort()  : null == e ? null : e.apply(this)
      }
    }), a('setRequestHeader', function (n) {
      return function (a, t) {
        if ('__setXHR_' === a) {
          e(this);
          var i = t(this);
          i instanceof Function && i(this)
        } else this.__requestHeaders = this.__requestHeaders || {
        },
        this.__requestHeaders[a] = t,
        n.apply(this, arguments)
      }
    }), a('send', function (e) {
      return function () {
        var a = this;
        if (arguments[0] && arguments[0].__isShim) {
          var t = arguments[0],
          i = {
            url: a.__url,
            complete: function (e, n) {
              !e && a.__listeners.load && a.__listeners.load({
                type: 'load',
                loaded: a.__loaded,
                total: a.__total,
                target: a,
                lengthComputable: !0
              }),
              !e && a.__listeners.loadend && a.__listeners.loadend({
                type: 'loadend',
                loaded: a.__loaded,
                total: a.__total,
                target: a,
                lengthComputable: !0
              }),
              'abort' === e && a.__listeners.abort && a.__listeners.abort({
                type: 'abort',
                loaded: a.__loaded,
                total: a.__total,
                target: a,
                lengthComputable: !0
              }),
              void 0 !== n.status && Object.defineProperty(a, 'status', {
                get: function () {
                  return n.status
                }
              }),
              void 0 !== n.statusText && Object.defineProperty(a, 'statusText', {
                get: function () {
                  return n.statusText
                }
              }),
              Object.defineProperty(a, 'readyState', {
                get: function () {
                  return 4
                }
              }),
              void 0 !== n.response && Object.defineProperty(a, 'response', {
                get: function () {
                  return n.response
                }
              }),
              Object.defineProperty(a, 'responseText', {
                get: function () {
                  return n.responseText
                }
              }),
              Object.defineProperty(a, 'response', {
                get: function () {
                  return n.responseText
                }
              }),
              a.__fileApiXHR = n,
              a.onreadystatechange()
            },
            fileprogress: function (e) {
              e.target = a,
              a.__listeners.progress && a.__listeners.progress(e),
              a.__total = e.total,
              a.__loaded = e.loaded
            },
            headers: a.__requestHeaders
          };
          i.data = {
          },
          i.files = {
          };
          for (var r = 0; r < t.data.length; r++) {
            var o = t.data[r];
            null != o.val && null != o.val.name && null != o.val.size && null != o.val.type ? i.files[o.key] = o.val : i.data[o.key] = o.val
          }
          setTimeout(function () {
            if (!n()) throw 'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';
            a.__fileApiXHR = FileAPI.upload(i)
          }, 1)
        } else e.apply(a, arguments)
      }
    }))  : a('setRequestHeader', function (e) {
      return function (n, a) {
        if ('__setXHR_' === n) {
          var t = a(this);
          t instanceof Function && t(this)
        } else e.apply(this, arguments)
      }
    }), window.XMLHttpRequest.__isShim = !0), !window.FormData || window.FileAPI && FileAPI.forceLoad) {
      var t = function (e) {
        if (!n()) throw 'Adode Flash Player need to be installed. To check ahead use "FileAPI.hasFlash"';
        var a = angular.element(e);
        a.hasClass('js-fileapi-wrapper') || null == e.getAttribute('ng-file-select') && null == e.getAttribute('data-ng-file-select') || a.addClass('js-fileapi-wrapper')
      },
      i = function (e) {
        return function (n) {
          for (var a = FileAPI.getFiles(n), t = 0; t < a.length; t++) void 0 === a[t].size && (a[t].size = 0),
          void 0 === a[t].name && (a[t].name = 'file'),
          void 0 === a[t].type && (a[t].type = 'undefined');
          n.target || (n.target = {
          }),
          n.target.files = a,
          n.target.files != a && (n.__files_ = a),
          (n.__files_ || n.target.files).item = function (e) {
            return (n.__files_ || n.target.files) [e] || null
          },
          e(n)
        }
      },
      r = function (e, n) {
        return ('change' === n.toLowerCase() || 'onchange' === n.toLowerCase()) && 'file' == e.getAttribute('type')
      };
      HTMLInputElement.prototype.addEventListener && (HTMLInputElement.prototype.addEventListener = function (e) {
        return function (n, a, o, s) {
          r(this, n) ? (t(this), e.apply(this, [
            n,
            i(a),
            o,
            s
          ]))  : e.apply(this, [
            n,
            a,
            o,
            s
          ])
        }
      }(HTMLInputElement.prototype.addEventListener)),
      HTMLInputElement.prototype.attachEvent && (HTMLInputElement.prototype.attachEvent = function (e) {
        return function (n, a) {
          r(this, n) ? (t(this), e.apply(this, [
            n,
            i(a)
          ]))  : e.apply(this, [
            n,
            a
          ])
        }
      }(HTMLInputElement.prototype.attachEvent)),
      window.FormData = FormData = function () {
        return {
          append: function (e, n, a) {
            this.data.push({
              key: e,
              val: n,
              name: a
            })
          },
          data: [
          ],
          __isShim: !0
        }
      },
      function () {
        if (window.FileAPI || (window.FileAPI = {
        }), FileAPI.forceLoad && (FileAPI.html5 = !1), !FileAPI.upload) {
          var e,
          a,
          t,
          i,
          r,
          o = document.createElement('script'),
          s = document.getElementsByTagName('script');
          if (window.FileAPI.jsUrl) e = window.FileAPI.jsUrl;
           else if (window.FileAPI.jsPath) a = window.FileAPI.jsPath;
           else for (t = 0; t < s.length; t++) if (r = s[t].src, i = r.indexOf('angular-file-upload-shim.js'), - 1 == i && (i = r.indexOf('angular-file-upload-shim.min.js')), i > - 1) {
            a = r.substring(0, i);
            break
          }
          null == FileAPI.staticPath && (FileAPI.staticPath = a),
          o.setAttribute('src', e || a + 'FileAPI.min.js'),
          document.getElementsByTagName('head') [0].appendChild(o),
          FileAPI.hasFlash = n()
        }
      }()
    }
    window.FileReader || (window.FileReader = function () {
      function e(e, a) {
        var t = {
          type: e,
          target: n,
          loaded: a.loaded,
          total: a.total,
          error: a.error
        };
        return null != a.result && (t.target.result = a.result),
        t
      }
      var n = this,
      a = !1;
      this.listeners = {
      },
      this.addEventListener = function (e, a) {
        n.listeners[e] = n.listeners[e] || [
        ],
        n.listeners[e].push(a)
      },
      this.removeEventListener = function (e, a) {
        n.listeners[e] && n.listeners[e].splice(n.listeners[e].indexOf(a), 1)
      },
      this.dispatchEvent = function (e) {
        var a = n.listeners[e.type];
        if (a) for (var t = 0; t < a.length; t++) a[t].call(n, e)
      },
      this.onabort = this.onerror = this.onload = this.onloadstart = this.onloadend = this.onprogress = null;
      var t = function (t) {
        if (a || (a = !0, n.onloadstart && this.onloadstart(e('loadstart', t))), 'load' === t.type) {
          n.onloadend && n.onloadend(e('loadend', t));
          var i = e('load', t);
          n.onload && n.onload(i),
          n.dispatchEvent(i)
        } else if ('progress' === t.type) {
          var i = e('progress', t);
          n.onprogress && n.onprogress(i),
          n.dispatchEvent(i)
        } else {
          var i = e('error', t);
          n.onerror && n.onerror(i),
          n.dispatchEvent(i)
        }
      };
      this.readAsArrayBuffer = function (e) {
        FileAPI.readAsBinaryString(e, t)
      },
      this.readAsBinaryString = function (e) {
        FileAPI.readAsBinaryString(e, t)
      },
      this.readAsDataURL = function (e) {
        FileAPI.readAsDataURL(e, t)
      },
      this.readAsText = function (e) {
        FileAPI.readAsText(e, t)
      }
    })
  }(),
  function (e, n, a) {
    'use strict';
    function t(e) {
      return function () {
        var n,
        a,
        t = arguments[0],
        i = '[' + (e ? e + ':' : '') + t + '] ',
        r = arguments[1],
        o = arguments,
        s = function (e) {
          return 'function' == typeof e ? e.toString().replace(/ \{[\s\S]*$/, '')  : 'undefined' == typeof e ? 'undefined' : 'string' != typeof e ? JSON.stringify(e)  : e
        };
        for (n = i + r.replace(/\{\d+\}/g, function (e) {
          var n,
          a = + e.slice(1, - 1);
          return a + 2 < o.length ? (n = o[a + 2], 'function' == typeof n ? n.toString().replace(/ ?\{[\s\S]*$/, '')  : 'undefined' == typeof n ? 'undefined' : 'string' != typeof n ? H(n)  : n)  : e
        }), n = n + '\nhttp://errors.angularjs.org/1.2.25/' + (e ? e + '/' : '') + t, a = 2; a < arguments.length; a++) n = n + (2 == a ? '?' : '&') + 'p' + (a - 2) + '=' + encodeURIComponent(s(arguments[a]));
        return new Error(n)
      }
    }
    function i(e) {
      if (null == e || M(e)) return !1;
      var n = e.length;
      return 1 === e.nodeType && n ? !0 : y(e) || Pt(e) || 0 === n || 'number' == typeof n && n > 0 && n - 1 in e
    }
    function r(e, n, a) {
      var t;
      if (e) if (S(e)) for (t in e) 'prototype' == t || 'length' == t || 'name' == t || e.hasOwnProperty && !e.hasOwnProperty(t) || n.call(a, e[t], t);
       else if (Pt(e) || i(e)) for (t = 0; t < e.length; t++) n.call(a, e[t], t);
       else if (e.forEach && e.forEach !== r) e.forEach(n, a);
       else for (t in e) e.hasOwnProperty(t) && n.call(a, e[t], t);
      return e
    }
    function o(e) {
      var n = [
      ];
      for (var a in e) e.hasOwnProperty(a) && n.push(a);
      return n.sort()
    }
    function s(e, n, a) {
      for (var t = o(e), i = 0; i < t.length; i++) n.call(a, e[t[i]], t[i]);
      return t
    }
    function l(e) {
      return function (n, a) {
        e(a, n)
      }
    }
    function c() {
      for (var e, n = zt.length; n; ) {
        if (n--, e = zt[n].charCodeAt(0), 57 == e) return zt[n] = 'A',
        zt.join('');
        if (90 != e) return zt[n] = String.fromCharCode(e + 1),
        zt.join('');
        zt[n] = '0'
      }
      return zt.unshift('0'),
      zt.join('')
    }
    function u(e, n) {
      n ? e.$$hashKey = n : delete e.$$hashKey
    }
    function d(e) {
      var n = e.$$hashKey;
      return r(arguments, function (n) {
        n !== e && r(n, function (n, a) {
          e[a] = n
        })
      }),
      u(e, n),
      e
    }
    function m(e) {
      return parseInt(e, 10)
    }
    function h(e, n) {
      return d(new (d(function () {
      }, {
        prototype: e
      })), n)
    }
    function p() {
    }
    function v(e) {
      return e
    }
    function g(e) {
      return function () {
        return e
      }
    }
    function f(e) {
      return 'undefined' == typeof e
    }
    function _(e) {
      return 'undefined' != typeof e
    }
    function b(e) {
      return null != e && 'object' == typeof e
    }
    function y(e) {
      return 'string' == typeof e
    }
    function w(e) {
      return 'number' == typeof e
    }
    function k(e) {
      return '[object Date]' === Mt.call(e)
    }
    function S(e) {
      return 'function' == typeof e
    }
    function A(e) {
      return '[object RegExp]' === Mt.call(e)
    }
    function M(e) {
      return e && e.document && e.location && e.alert && e.setInterval
    }
    function x(e) {
      return e && e.$evalAsync && e.$watch
    }
    function C(e) {
      return '[object File]' === Mt.call(e)
    }
    function z(e) {
      return '[object Blob]' === Mt.call(e)
    }
    function P(e) {
      return e && S(e.then)
    }
    function T(e) {
      return !(!e || !(e.nodeName || e.prop && e.attr && e.find))
    }
    function D(e, n, a) {
      var t = [
      ];
      return r(e, function (e, i, r) {
        t.push(n.call(a, e, i, r))
      }),
      t
    }
    function E(e, n) {
      return - 1 != $(e, n)
    }
    function $(e, n) {
      if (e.indexOf) return e.indexOf(n);
      for (var a = 0; a < e.length; a++) if (n === e[a]) return a;
      return - 1
    }
    function I(e, n) {
      var a = $(e, n);
      return a >= 0 && e.splice(a, 1),
      n
    }
    function L(e, n, a, t) {
      if (M(e) || x(e)) throw xt('cpws', 'Can\'t copy! Making copies of Window or Scope instances is not supported.');
      if (n) {
        if (e === n) throw xt('cpi', 'Can\'t copy! Source and destination are identical.');
        if (a = a || [
        ], t = t || [
        ], b(e)) {
          var i = $(a, e);
          if ( - 1 !== i) return t[i];
          a.push(e),
          t.push(n)
        }
        var o;
        if (Pt(e)) {
          n.length = 0;
          for (var s = 0; s < e.length; s++) o = L(e[s], null, a, t),
          b(e[s]) && (a.push(e[s]), t.push(o)),
          n.push(o)
        } else {
          var l = n.$$hashKey;
          Pt(n) ? n.length = 0 : r(n, function (e, a) {
            delete n[a]
          });
          for (var c in e) o = L(e[c], null, a, t),
          b(e[c]) && (a.push(e[c]), t.push(o)),
          n[c] = o;
          u(n, l)
        }
      } else n = e,
      e && (Pt(e) ? n = L(e, [
      ], a, t)  : k(e) ? n = new Date(e.getTime())  : A(e) ? (n = new RegExp(e.source, e.toString().match(/[^\/]*$/) [0]), n.lastIndex = e.lastIndex)  : b(e) && (n = L(e, {
      }, a, t)));
      return n
    }
    function B(e, n) {
      if (Pt(e)) {
        n = n || [
        ];
        for (var a = 0; a < e.length; a++) n[a] = e[a]
      } else if (b(e)) {
        n = n || {
        };
        for (var t in e) !pt.call(e, t) || '$' === t.charAt(0) && '$' === t.charAt(1) || (n[t] = e[t])
      }
      return n || e
    }
    function N(e, n) {
      if (e === n) return !0;
      if (null === e || null === n) return !1;
      if (e !== e && n !== n) return !0;
      var t,
      i,
      r,
      o = typeof e,
      s = typeof n;
      if (o == s && 'object' == o) {
        if (!Pt(e)) {
          if (k(e)) return k(n) ? isNaN(e.getTime()) && isNaN(n.getTime()) || e.getTime() === n.getTime()  : !1;
          if (A(e) && A(n)) return e.toString() == n.toString();
          if (x(e) || x(n) || M(e) || M(n) || Pt(n)) return !1;
          r = {
          };
          for (i in e) if ('$' !== i.charAt(0) && !S(e[i])) {
            if (!N(e[i], n[i])) return !1;
            r[i] = !0
          }
          for (i in n) if (!r.hasOwnProperty(i) && '$' !== i.charAt(0) && n[i] !== a && !S(n[i])) return !1;
          return !0
        }
        if (!Pt(n)) return !1;
        if ((t = e.length) == n.length) {
          for (i = 0; t > i; i++) if (!N(e[i], n[i])) return !1;
          return !0
        }
      }
      return !1
    }
    function R(e, n, a) {
      return e.concat(St.call(n, a))
    }
    function j(e, n) {
      return St.call(e, n || 0)
    }
    function K(e, n) {
      var a = arguments.length > 2 ? j(arguments, 2)  : [
      ];
      return !S(n) || n instanceof RegExp ? n : a.length ? function () {
        return arguments.length ? n.apply(e, a.concat(St.call(arguments, 0)))  : n.apply(e, a)
      }
       : function () {
        return arguments.length ? n.apply(e, arguments)  : n.call(e)
      }
    }
    function F(e, t) {
      var i = t;
      return 'string' == typeof e && '$' === e.charAt(0) ? i = a : M(t) ? i = '$WINDOW' : t && n === t ? i = '$DOCUMENT' : x(t) && (i = '$SCOPE'),
      i
    }
    function H(e, n) {
      return 'undefined' == typeof e ? a : JSON.stringify(e, F, n ? '  ' : null)
    }
    function G(e) {
      return y(e) ? JSON.parse(e)  : e
    }
    function O(e) {
      if ('function' == typeof e) e = !0;
       else if (e && 0 !== e.length) {
        var n = ht('' + e);
        e = !('f' == n || '0' == n || 'false' == n || 'no' == n || 'n' == n || '[]' == n)
      } else e = !1;
      return e
    }
    function q(e) {
      e = bt(e).clone();
      try {
        e.empty()
      } catch (n) {
      }
      var a = 3,
      t = bt('<div>').append(e).html();
      try {
        return e[0].nodeType === a ? ht(t)  : t.match(/^(<[^>]+>)/) [1].replace(/^<([\w\-]+)/, function (e, n) {
          return '<' + ht(n)
        })
      } catch (n) {
        return ht(t)
      }
    }
    function W(e) {
      try {
        return decodeURIComponent(e)
      } catch (n) {
      }
    }
    function J(e) {
      var n,
      a,
      t = {
      };
      return r((e || '').split('&'), function (e) {
        if (e && (n = e.replace(/\+/g, '%20').split('='), a = W(n[0]), _(a))) {
          var i = _(n[1]) ? W(n[1])  : !0;
          pt.call(t, a) ? Pt(t[a]) ? t[a].push(i)  : t[a] = [
            t[a],
            i
          ] : t[a] = i
        }
      }),
      t
    }
    function V(e) {
      var n = [
      ];
      return r(e, function (e, a) {
        Pt(e) ? r(e, function (e) {
          n.push(Z(a, !0) + (e === !0 ? '' : '=' + Z(e, !0)))
        })  : n.push(Z(a, !0) + (e === !0 ? '' : '=' + Z(e, !0)))
      }),
      n.length ? n.join('&')  : ''
    }
    function U(e) {
      return Z(e, !0).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+')
    }
    function Z(e, n) {
      return encodeURIComponent(e).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, n ? '%20' : '+')
    }
    function Y(e, a) {
      function t(e) {
        e && s.push(e)
      }
      var i,
      o,
      s = [
        e
      ],
      l = [
        'ng:app',
        'ng-app',
        'x-ng-app',
        'data-ng-app'
      ],
      c = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/;
      r(l, function (a) {
        l[a] = !0,
        t(n.getElementById(a)),
        a = a.replace(':', '\\:'),
        e.querySelectorAll && (r(e.querySelectorAll('.' + a), t), r(e.querySelectorAll('.' + a + '\\:'), t), r(e.querySelectorAll('[' + a + ']'), t))
      }),
      r(s, function (e) {
        if (!i) {
          var n = ' ' + e.className + ' ',
          a = c.exec(n);
          a ? (i = e, o = (a[2] || '').replace(/\s+/g, ','))  : r(e.attributes, function (n) {
            !i && l[n.name] && (i = e, o = n.value)
          })
        }
      }),
      i && a(i, o ? [
        o
      ] : [
      ])
    }
    function X(a, t) {
      var i = function () {
        if (a = bt(a), a.injector()) {
          var e = a[0] === n ? 'document' : q(a);
          throw xt('btstrpd', 'App Already Bootstrapped with this Element \'{0}\'', e.replace(/</, '&lt;').replace(/>/, '&gt;'))
        }
        t = t || [
        ],
        t.unshift(['$provide',
        function (e) {
          e.value('$rootElement', a)
        }
        ]),
        t.unshift('ng');
        var i = In(t);
        return i.invoke(['$rootScope',
        '$rootElement',
        '$compile',
        '$injector',
        '$animate',
        function (e, n, a, t) {
          e.$apply(function () {
            n.data('$injector', t),
            a(n) (e)
          })
        }
        ]),
        i
      },
      o = /^NG_DEFER_BOOTSTRAP!/;
      return e && !o.test(e.name) ? i()  : (e.name = e.name.replace(o, ''), void (Ct.resumeBootstrap = function (e) {
        r(e, function (e) {
          t.push(e)
        }),
        i()
      }))
    }
    function Q(e, n) {
      return n = n || '_',
      e.replace(Et, function (e, a) {
        return (a ? n : '') + e.toLowerCase()
      })
    }
    function en() {
      yt = e.jQuery,
      yt && yt.fn.on ? (bt = yt, d(yt.fn, {
        scope: Wt.scope,
        isolateScope: Wt.isolateScope,
        controller: Wt.controller,
        injector: Wt.injector,
        inheritedData: Wt.inheritedData
      }), dn('remove', !0, !0, !1), dn('empty', !1, !1, !1), dn('html', !1, !1, !0))  : bt = vn,
      Ct.element = bt
    }
    function nn(e, n, a) {
      if (!e) throw xt('areq', 'Argument \'{0}\' is {1}', n || '?', a || 'required');
      return e
    }
    function an(e, n, a) {
      return a && Pt(e) && (e = e[e.length - 1]),
      nn(S(e), n, 'not a function, got ' + (e && 'object' == typeof e ? e.constructor.name || 'Object' : typeof e)),
      e
    }
    function tn(e, n) {
      if ('hasOwnProperty' === e) throw xt('badname', 'hasOwnProperty is not a valid {0} name', n)
    }
    function rn(e, n, a) {
      if (!n) return e;
      for (var t, i = n.split('.'), r = e, o = i.length, s = 0; o > s; s++) t = i[s],
      e && (e = (r = e) [t]);
      return !a && S(e) ? K(r, e)  : e
    }
    function on(e) {
      var n = e[0],
      a = e[e.length - 1];
      if (n === a) return bt(n);
      var t = n,
      i = [
        t
      ];
      do {
        if (t = t.nextSibling, !t) break;
        i.push(t)
      } while (t !== a);
      return bt(i)
    }
    function sn(e) {
      function n(e, n, a) {
        return e[n] || (e[n] = a())
      }
      var a = t('$injector'),
      i = t('ng'),
      r = n(e, 'angular', Object);
      return r.$$minErr = r.$$minErr || t,
      n(r, 'module', function () {
        var e = {
        };
        return function (t, r, o) {
          var s = function (e, n) {
            if ('hasOwnProperty' === e) throw i('badname', 'hasOwnProperty is not a valid {0} name', n)
          };
          return s(t, 'module'),
          r && e.hasOwnProperty(t) && (e[t] = null),
          n(e, t, function () {
            function e(e, a, t) {
              return function () {
                return n[t || 'push']([e,
                a,
                arguments]),
                l
              }
            }
            if (!r) throw a('nomod', 'Module \'{0}\' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.', t);
            var n = [
            ],
            i = [
            ],
            s = e('$injector', 'invoke'),
            l = {
              _invokeQueue: n,
              _runBlocks: i,
              requires: r,
              name: t,
              provider: e('$provide', 'provider'),
              factory: e('$provide', 'factory'),
              service: e('$provide', 'service'),
              value: e('$provide', 'value'),
              constant: e('$provide', 'constant', 'unshift'),
              animation: e('$animateProvider', 'register'),
              filter: e('$filterProvider', 'register'),
              controller: e('$controllerProvider', 'register'),
              directive: e('$compileProvider', 'directive'),
              config: s,
              run: function (e) {
                return i.push(e),
                this
              }
            };
            return o && s(o),
            l
          })
        }
      })
    }
    function ln(n) {
      d(n, {
        bootstrap: X,
        copy: L,
        extend: d,
        equals: N,
        element: bt,
        forEach: r,
        injector: In,
        noop: p,
        bind: K,
        toJson: H,
        fromJson: G,
        identity: v,
        isUndefined: f,
        isDefined: _,
        isString: y,
        isFunction: S,
        isObject: b,
        isNumber: w,
        isElement: T,
        isArray: Pt,
        version: $t,
        isDate: k,
        lowercase: ht,
        uppercase: vt,
        callbacks: {
          counter: 0
        },
        $$minErr: t,
        $$csp: Dt
      }),
      wt = sn(e);
      try {
        wt('ngLocale')
      } catch (a) {
        wt('ngLocale', [
        ]).provider('$locale', ta)
      }
      wt('ng', [
        'ngLocale'
      ], [
        '$provide',
        function (e) {
          e.provider({
            $$sanitizeUri: Pa
          }),
          e.provider('$compile', Fn).directive({
            a: Pi,
            input: Ki,
            textarea: Ki,
            form: $i,
            script: kr,
            select: Mr,
            style: Cr,
            option: xr,
            ngBind: Xi,
            ngBindHtml: er,
            ngBindTemplate: Qi,
            ngClass: nr,
            ngClassEven: tr,
            ngClassOdd: ar,
            ngCloak: ir,
            ngController: rr,
            ngForm: Ii,
            ngHide: gr,
            ngIf: lr,
            ngInclude: cr,
            ngInit: dr,
            ngNonBindable: mr,
            ngPluralize: hr,
            ngRepeat: pr,
            ngShow: vr,
            ngStyle: fr,
            ngSwitch: _r,
            ngSwitchWhen: br,
            ngSwitchDefault: yr,
            ngOptions: Ar,
            ngTransclude: wr,
            ngModel: Wi,
            ngList: Ui,
            ngChange: Ji,
            required: Vi,
            ngRequired: Vi,
            ngValue: Yi
          }).directive({
            ngInclude: ur
          }).directive(Ti).directive(or),
          e.provider({
            $anchorScroll: Ln,
            $animate: ni,
            $browser: Rn,
            $cacheFactory: jn,
            $controller: On,
            $document: qn,
            $exceptionHandler: Wn,
            $filter: Ka,
            $interpolate: na,
            $interval: aa,
            $http: Yn,
            $httpBackend: Qn,
            $location: ga,
            $log: fa,
            $parse: Aa,
            $rootScope: za,
            $q: Ma,
            $sce: Ia,
            $sceDelegate: $a,
            $sniffer: La,
            $templateCache: Kn,
            $timeout: Ba,
            $window: ja,
            $$rAF: Ca,
            $$asyncCallback: Bn
          })
        }
      ])
    }
    function cn() {
      return ++Lt
    }
    function un(e) {
      return e.replace(Rt, function (e, n, a, t) {
        return t ? a.toUpperCase()  : a
      }).replace(jt, 'Moz$1')
    }
    function dn(e, n, a, t) {
      function i(e) {
        var i,
        o,
        s,
        l,
        c,
        u,
        d,
        m = a && e ? [
          this.filter(e)
        ] : [
          this
        ],
        h = n;
        if (!t || null != e) for (; m.length; ) for (i = m.shift(), o = 0, s = i.length; s > o; o++) for (l = bt(i[o]), h ? l.triggerHandler('$destroy')  : h = !h, c = 0, u = (d = l.children()).length; u > c; c++) m.push(yt(d[c]));
        return r.apply(this, arguments)
      }
      var r = yt.fn[e];
      r = r.$original || r,
      i.$original = r,
      yt.fn[e] = i
    }
    function mn(e) {
      return !Ht.test(e)
    }
    function hn(e, n) {
      var a,
      t,
      i,
      r,
      o,
      s,
      l = n.createDocumentFragment(),
      c = [
      ];
      if (mn(e)) c.push(n.createTextNode(e));
       else {
        for (a = l.appendChild(n.createElement('div')), t = (Gt.exec(e) || [
          '',
          ''
        ]) [1].toLowerCase(), i = qt[t] || qt._default, a.innerHTML = '<div>&#160;</div>' + i[1] + e.replace(Ot, '<$1></$2>') + i[2], a.removeChild(a.firstChild), r = i[0]; r--; ) a = a.lastChild;
        for (o = 0, s = a.childNodes.length; s > o; ++o) c.push(a.childNodes[o]);
        a = l.firstChild,
        a.textContent = ''
      }
      return l.textContent = '',
      l.innerHTML = '',
      c
    }
    function pn(e, a) {
      a = a || n;
      var t;
      return (t = Ft.exec(e)) ? [
        a.createElement(t[1])
      ] : hn(e, a)
    }
    function vn(e) {
      if (e instanceof vn) return e;
      if (y(e) && (e = Tt(e)), !(this instanceof vn)) {
        if (y(e) && '<' != e.charAt(0)) throw Kt('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');
        return new vn(e)
      }
      if (y(e)) {
        Mn(this, pn(e));
        var a = bt(n.createDocumentFragment());
        a.append(this)
      } else Mn(this, e)
    }
    function gn(e) {
      return e.cloneNode(!0)
    }
    function fn(e) {
      bn(e);
      for (var n = 0, a = e.childNodes || [
      ]; n < a.length; n++) fn(a[n])
    }
    function _n(e, n, a, t) {
      if (_(t)) throw Kt('offargs', 'jqLite#off() does not support the `selector` argument');
      var i = yn(e, 'events'),
      o = yn(e, 'handle');
      o && (f(n) ? r(i, function (n, a) {
        Nt(e, a, n),
        delete i[a]
      })  : r(n.split(' '), function (n) {
        f(a) ? (Nt(e, n, i[n]), delete i[n])  : I(i[n] || [
        ], a)
      }))
    }
    function bn(e, n) {
      var t = e.ng339,
      i = It[t];
      if (i) {
        if (n) return void delete It[t].data[n];
        i.handle && (i.events.$destroy && i.handle({
        }, '$destroy'), _n(e)),
        delete It[t],
        e.ng339 = a
      }
    }
    function yn(e, n, a) {
      var t = e.ng339,
      i = It[t || - 1];
      return _(a) ? (i || (e.ng339 = t = cn(), i = It[t] = {
      }), void (i[n] = a))  : i && i[n]
    }
    function wn(e, n, a) {
      var t = yn(e, 'data'),
      i = _(a),
      r = !i && _(n),
      o = r && !b(n);
      if (t || o || yn(e, 'data', t = {
      }), i) t[n] = a;
       else {
        if (!r) return t;
        if (o) return t && t[n];
        d(t, n)
      }
    }
    function kn(e, n) {
      return e.getAttribute ? (' ' + (e.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').indexOf(' ' + n + ' ') > - 1 : !1
    }
    function Sn(e, n) {
      n && e.setAttribute && r(n.split(' '), function (n) {
        e.setAttribute('class', Tt((' ' + (e.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').replace(' ' + Tt(n) + ' ', ' ')))
      })
    }
    function An(e, n) {
      if (n && e.setAttribute) {
        var a = (' ' + (e.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ');
        r(n.split(' '), function (e) {
          e = Tt(e),
          - 1 === a.indexOf(' ' + e + ' ') && (a += e + ' ')
        }),
        e.setAttribute('class', Tt(a))
      }
    }
    function Mn(e, n) {
      if (n) {
        n = n.nodeName || !_(n.length) || M(n) ? [
          n
        ] : n;
        for (var a = 0; a < n.length; a++) e.push(n[a])
      }
    }
    function xn(e, n) {
      return Cn(e, '$' + (n || 'ngController') + 'Controller')
    }
    function Cn(e, n, t) {
      9 == e.nodeType && (e = e.documentElement);
      for (var i = Pt(n) ? n : [
        n
      ]; e; ) {
        for (var r = 0, o = i.length; o > r; r++) if ((t = bt.data(e, i[r])) !== a) return t;
        e = e.parentNode || 11 === e.nodeType && e.host
      }
    }
    function zn(e) {
      for (var n = 0, a = e.childNodes; n < a.length; n++) fn(a[n]);
      for (; e.firstChild; ) e.removeChild(e.firstChild)
    }
    function Pn(e, n) {
      var a = Jt[n.toLowerCase()];
      return a && Vt[e.nodeName] && a
    }
    function Tn(e, a) {
      var t = function (t, i) {
        if (t.preventDefault || (t.preventDefault = function () {
          t.returnValue = !1
        }), t.stopPropagation || (t.stopPropagation = function () {
          t.cancelBubble = !0
        }), t.target || (t.target = t.srcElement || n), f(t.defaultPrevented)) {
          var o = t.preventDefault;
          t.preventDefault = function () {
            t.defaultPrevented = !0,
            o.call(t)
          },
          t.defaultPrevented = !1
        }
        t.isDefaultPrevented = function () {
          return t.defaultPrevented || t.returnValue === !1
        };
        var s = B(a[i || t.type] || [
        ]);
        r(s, function (n) {
          n.call(e, t)
        }),
        8 >= _t ? (t.preventDefault = null, t.stopPropagation = null, t.isDefaultPrevented = null)  : (delete t.preventDefault, delete t.stopPropagation, delete t.isDefaultPrevented)
      };
      return t.elem = e,
      t
    }
    function Dn(e, n) {
      var t,
      i = typeof e;
      return 'function' == i || 'object' == i && null !== e ? 'function' == typeof (t = e.$$hashKey) ? t = e.$$hashKey()  : t === a && (t = e.$$hashKey = (n || c) ())  : t = e,
      i + ':' + t
    }
    function En(e, n) {
      if (n) {
        var a = 0;
        this.nextUid = function () {
          return ++a
        }
      }
      r(e, this.put, this)
    }
    function $n(e) {
      var n,
      a,
      t,
      i;
      return 'function' == typeof e ? (n = e.$inject) || (n = [
      ], e.length && (a = e.toString().replace(Xt, ''), t = a.match(Ut), r(t[1].split(Zt), function (e) {
        e.replace(Yt, function (e, a, t) {
          n.push(t)
        })
      })), e.$inject = n)  : Pt(e) ? (i = e.length - 1, an(e[i], 'fn'), n = e.slice(0, i))  : an(e, 'fn', !0),
      n
    }
    function In(e) {
      function n(e) {
        return function (n, a) {
          return b(n) ? void r(n, l(e))  : e(n, a)
        }
      }
      function a(e, n) {
        if (tn(e, 'service'), (S(n) || Pt(n)) && (n = w.instantiate(n)), !n.$get) throw Qt('pget', 'Provider \'{0}\' must define $get factory method.', e);
        return _[e + h] = n
      }
      function t(e, n) {
        return a(e, {
          $get: n
        })
      }
      function i(e, n) {
        return t(e, [
          '$injector',
          function (e) {
            return e.instantiate(n)
          }
        ])
      }
      function o(e, n) {
        return t(e, g(n))
      }
      function s(e, n) {
        tn(e, 'constant'),
        _[e] = n,
        k[e] = n
      }
      function c(e, n) {
        var a = w.get(e + h),
        t = a.$get;
        a.$get = function () {
          var e = A.invoke(t, a);
          return A.invoke(n, null, {
            $delegate: e
          })
        }
      }
      function u(e) {
        var n,
        a,
        t,
        i,
        o = [
        ];
        return r(e, function (e) {
          if (!f.get(e)) {
            f.put(e, !0);
            try {
              if (y(e)) for (n = wt(e), o = o.concat(u(n.requires)).concat(n._runBlocks), a = n._invokeQueue, t = 0, i = a.length; i > t; t++) {
                var r = a[t],
                s = w.get(r[0]);
                s[r[1]].apply(s, r[2])
              } else S(e) ? o.push(w.invoke(e))  : Pt(e) ? o.push(w.invoke(e))  : an(e, 'module')
            } catch (l) {
              throw Pt(e) && (e = e[e.length - 1]),
              l.message && l.stack && - 1 == l.stack.indexOf(l.message) && (l = l.message + '\n' + l.stack),
              Qt('modulerr', 'Failed to instantiate module {0} due to:\n{1}', e, l.stack || l.message || l)
            }
          }
        }),
        o
      }
      function d(e, n) {
        function a(a) {
          if (e.hasOwnProperty(a)) {
            if (e[a] === m) throw Qt('cdep', 'Circular dependency found: {0}', a + ' <- ' + v.join(' <- '));
            return e[a]
          }
          try {
            return v.unshift(a),
            e[a] = m,
            e[a] = n(a)
          } catch (t) {
            throw e[a] === m && delete e[a],
            t
          } finally {
            v.shift()
          }
        }
        function t(e, n, t) {
          var i,
          r,
          o,
          s = [
          ],
          l = $n(e);
          for (r = 0, i = l.length; i > r; r++) {
            if (o = l[r], 'string' != typeof o) throw Qt('itkn', 'Incorrect injection token! Expected service name as string, got {0}', o);
            s.push(t && t.hasOwnProperty(o) ? t[o] : a(o))
          }
          return Pt(e) && (e = e[i]),
          e.apply(n, s)
        }
        function i(e, n) {
          var a,
          i,
          r = function () {
          };
          return r.prototype = (Pt(e) ? e[e.length - 1] : e).prototype,
          a = new r,
          i = t(e, a, n),
          b(i) || S(i) ? i : a
        }
        return {
          invoke: t,
          instantiate: i,
          get: a,
          annotate: $n,
          has: function (n) {
            return _.hasOwnProperty(n + h) || e.hasOwnProperty(n)
          }
        }
      }
      var m = {
      },
      h = 'Provider',
      v = [
      ],
      f = new En([], !0),
      _ = {
        $provide: {
          provider: n(a),
          factory: n(t),
          service: n(i),
          value: n(o),
          constant: n(s),
          decorator: c
        }
      },
      w = _.$injector = d(_, function () {
        throw Qt('unpr', 'Unknown provider: {0}', v.join(' <- '))
      }),
      k = {
      },
      A = k.$injector = d(k, function (e) {
        var n = w.get(e + h);
        return A.invoke(n.$get, n)
      });
      return r(u(e), function (e) {
        A.invoke(e || p)
      }),
      A
    }
    function Ln() {
      var e = !0;
      this.disableAutoScrolling = function () {
        e = !1
      },
      this.$get = [
        '$window',
        '$location',
        '$rootScope',
        function (n, a, t) {
          function i(e) {
            var n = null;
            return r(e, function (e) {
              n || 'a' !== ht(e.nodeName) || (n = e)
            }),
            n
          }
          function o() {
            var e,
            t = a.hash();
            t ? (e = s.getElementById(t)) ? e.scrollIntoView()  : (e = i(s.getElementsByName(t))) ? e.scrollIntoView()  : 'top' === t && n.scrollTo(0, 0)  : n.scrollTo(0, 0)
          }
          var s = n.document;
          return e && t.$watch(function () {
            return a.hash()
          }, function () {
            t.$evalAsync(o)
          }),
          o
        }
      ]
    }
    function Bn() {
      this.$get = [
        '$$rAF',
        '$timeout',
        function (e, n) {
          return e.supported ? function (n) {
            return e(n)
          }
           : function (e) {
            return n(e, 0, !1)
          }
        }
      ]
    }
    function Nn(e, n, t, i) {
      function o(e) {
        try {
          e.apply(null, j(arguments, 1))
        } finally {
          if (_--, 0 === _) for (; b.length; ) try {
            b.pop() ()
          } catch (n) {
            t.error(n)
          }
        }
      }
      function s(e, n) {
        !function a() {
          r(k, function (e) {
            e()
          }),
          w = n(a, e)
        }()
      }
      function l() {
        M = null,
        S != c.url() && (S = c.url(), r(x, function (e) {
          e(c.url())
        }))
      }
      var c = this,
      u = n[0],
      d = e.location,
      m = e.history,
      h = e.setTimeout,
      v = e.clearTimeout,
      g = {
      };
      c.isMock = !1;
      var _ = 0,
      b = [
      ];
      c.$$completeOutstandingRequest = o,
      c.$$incOutstandingRequestCount = function () {
        _++
      },
      c.notifyWhenNoOutstandingRequests = function (e) {
        r(k, function (e) {
          e()
        }),
        0 === _ ? e()  : b.push(e)
      };
      var w,
      k = [
      ];
      c.addPollFn = function (e) {
        return f(w) && s(100, h),
        k.push(e),
        e
      };
      var S = d.href,
      A = n.find('base'),
      M = null;
      c.url = function (n, a) {
        if (d !== e.location && (d = e.location), m !== e.history && (m = e.history), n) {
          if (S == n) return;
          return S = n,
          i.history ? a ? m.replaceState(null, '', n)  : (m.pushState(null, '', n), A.attr('href', A.attr('href')))  : (M = n, a ? d.replace(n)  : d.href = n),
          c
        }
        return M || d.href.replace(/%27/g, '\'')
      };
      var x = [
      ],
      C = !1;
      c.onUrlChange = function (n) {
        return C || (i.history && bt(e).on('popstate', l), i.hashchange ? bt(e).on('hashchange', l)  : c.addPollFn(l), C = !0),
        x.push(n),
        n
      },
      c.$$checkUrlChange = l,
      c.baseHref = function () {
        var e = A.attr('href');
        return e ? e.replace(/^(https?\:)?\/\/[^\/]*/, '')  : ''
      };
      var z = {
      },
      P = '',
      T = c.baseHref();
      c.cookies = function (e, n) {
        var i,
        r,
        o,
        s,
        l;
        if (!e) {
          if (u.cookie !== P) for (P = u.cookie, r = P.split('; '), z = {
          }, s = 0; s < r.length; s++) o = r[s],
          l = o.indexOf('='),
          l > 0 && (e = unescape(o.substring(0, l)), z[e] === a && (z[e] = unescape(o.substring(l + 1))));
          return z
        }
        n === a ? u.cookie = escape(e) + '=;path=' + T + ';expires=Thu, 01 Jan 1970 00:00:00 GMT' : y(n) && (i = (u.cookie = escape(e) + '=' + escape(n) + ';path=' + T).length + 1, i > 4096 && t.warn('Cookie \'' + e + '\' possibly not set or overflowed because it was too large (' + i + ' > 4096 bytes)!'))
      },
      c.defer = function (e, n) {
        var a;
        return _++,
        a = h(function () {
          delete g[a],
          o(e)
        }, n || 0),
        g[a] = !0,
        a
      },
      c.defer.cancel = function (e) {
        return g[e] ? (delete g[e], v(e), o(p), !0)  : !1
      }
    }
    function Rn() {
      this.$get = [
        '$window',
        '$log',
        '$sniffer',
        '$document',
        function (e, n, a, t) {
          return new Nn(e, t, n, a)
        }
      ]
    }
    function jn() {
      this.$get = function () {
        function e(e, a) {
          function i(e) {
            e != m && (h ? h == e && (h = e.n)  : h = e, r(e.n, e.p), r(e, m), m = e, m.n = null)
          }
          function r(e, n) {
            e != n && (e && (e.p = n), n && (n.n = e))
          }
          if (e in n) throw t('$cacheFactory') ('iid', 'CacheId \'{0}\' is already taken!', e);
          var o = 0,
          s = d({
          }, a, {
            id: e
          }),
          l = {
          },
          c = a && a.capacity || Number.MAX_VALUE,
          u = {
          },
          m = null,
          h = null;
          return n[e] = {
            put: function (e, n) {
              if (c < Number.MAX_VALUE) {
                var a = u[e] || (u[e] = {
                  key: e
                });
                i(a)
              }
              if (!f(n)) return e in l || o++,
              l[e] = n,
              o > c && this.remove(h.key),
              n
            },
            get: function (e) {
              if (c < Number.MAX_VALUE) {
                var n = u[e];
                if (!n) return;
                i(n)
              }
              return l[e]
            },
            remove: function (e) {
              if (c < Number.MAX_VALUE) {
                var n = u[e];
                if (!n) return;
                n == m && (m = n.p),
                n == h && (h = n.n),
                r(n.n, n.p),
                delete u[e]
              }
              delete l[e],
              o--
            },
            removeAll: function () {
              l = {
              },
              o = 0,
              u = {
              },
              m = h = null
            },
            destroy: function () {
              l = null,
              s = null,
              u = null,
              delete n[e]
            },
            info: function () {
              return d({
              }, s, {
                size: o
              })
            }
          }
        }
        var n = {
        };
        return e.info = function () {
          var e = {
          };
          return r(n, function (n, a) {
            e[a] = n.info()
          }),
          e
        },
        e.get = function (e) {
          return n[e]
        },
        e
      }
    }
    function Kn() {
      this.$get = [
        '$cacheFactory',
        function (e) {
          return e('templates')
        }
      ]
    }
    function Fn(e, t) {
      var i = {
      },
      o = 'Directive',
      s = /^\s*directive\:\s*([\d\w_\-]+)\s+(.*)$/,
      c = /(([\d\w_\-]+)(?:\:([^;]+))?;?)/,
      u = /^(on[a-z]+|formaction)$/;
      this.directive = function m(n, a) {
        return tn(n, 'directive'),
        y(n) ? (nn(a, 'directiveFactory'), i.hasOwnProperty(n) || (i[n] = [
        ], e.factory(n + o, [
          '$injector',
          '$exceptionHandler',
          function (e, a) {
            var t = [
            ];
            return r(i[n], function (i, r) {
              try {
                var o = e.invoke(i);
                S(o) ? o = {
                  compile: g(o)
                }
                 : !o.compile && o.link && (o.compile = g(o.link)),
                o.priority = o.priority || 0,
                o.index = r,
                o.name = o.name || n,
                o.require = o.require || o.controller && o.name,
                o.restrict = o.restrict || 'A',
                t.push(o)
              } catch (s) {
                a(s)
              }
            }),
            t
          }
        ])), i[n].push(a))  : r(n, l(m)),
        this
      },
      this.aHrefSanitizationWhitelist = function (e) {
        return _(e) ? (t.aHrefSanitizationWhitelist(e), this)  : t.aHrefSanitizationWhitelist()
      },
      this.imgSrcSanitizationWhitelist = function (e) {
        return _(e) ? (t.imgSrcSanitizationWhitelist(e), this)  : t.imgSrcSanitizationWhitelist()
      },
      this.$get = [
        '$injector',
        '$interpolate',
        '$exceptionHandler',
        '$http',
        '$templateCache',
        '$parse',
        '$controller',
        '$rootScope',
        '$document',
        '$sce',
        '$animate',
        '$$sanitizeUri',
        function (e, t, l, m, p, g, f, _, w, k, A, M) {
          function x(e, n, a, t, i) {
            e instanceof bt || (e = bt(e)),
            r(e, function (n, a) {
              3 == n.nodeType && n.nodeValue.match(/\S+/) && (e[a] = n = bt(n).wrap('<span></span>').parent() [0])
            });
            var o = z(e, n, e, a, t, i);
            return C(e, 'ng-scope'),
            function (n, a, t, i) {
              nn(n, 'scope');
              var s = a ? Wt.clone.call(e)  : e;
              r(t, function (e, n) {
                s.data('$' + n + 'Controller', e)
              });
              for (var l = 0, c = s.length; c > l; l++) {
                var u = s[l],
                d = u.nodeType;
                (1 === d || 9 === d) && s.eq(l).data('$scope', n)
              }
              return a && a(s, n),
              o && o(n, s, s, i),
              s
            }
          }
          function C(e, n) {
            try {
              e.addClass(n)
            } catch (a) {
            }
          }
          function z(e, n, t, i, r, o) {
            function s(e, t, i, r) {
              var o,
              s,
              l,
              c,
              u,
              d,
              m,
              h,
              v = t.length,
              g = new Array(v);
              for (u = 0; v > u; u++) g[u] = t[u];
              for (u = 0, m = 0, d = p.length; d > u; m++) l = g[m],
              o = p[u++],
              s = p[u++],
              o ? (o.scope ? (c = e.$new(), bt.data(l, '$scope', c))  : c = e, h = o.transcludeOnThisElement ? P(e, o.transclude, r)  : !o.templateOnThisElement && r ? r : !r && n ? P(e, n)  : null, o(s, c, l, i, h))  : s && s(e, l.childNodes, a, r)
            }
            for (var l, c, u, d, m, h, p = [
            ], v = 0; v < e.length; v++) l = new U,
            c = T(e[v], [
            ], l, 0 === v ? i : a, r),
            u = c.length ? $(c, e[v], l, n, t, null, [
            ], [
            ], o)  : null,
            u && u.scope && C(l.$$element, 'ng-scope'),
            m = u && u.terminal || !(d = e[v].childNodes) || !d.length ? null : z(d, u ? (u.transcludeOnThisElement || !u.templateOnThisElement) && u.transclude : n),
            p.push(u, m),
            h = h || u || m,
            o = null;
            return h ? s : null
          }
          function P(e, n, a) {
            var t = function (t, i, r) {
              var o = !1;
              t || (t = e.$new(), t.$$transcluded = !0, o = !0);
              var s = n(t, i, r, a);
              return o && s.on('$destroy', function () {
                t.$destroy()
              }),
              s
            };
            return t
          }
          function T(e, n, a, t, i) {
            var r,
            o,
            l = e.nodeType,
            u = a.$attr;
            switch (l) {
              case 1:
                L(n, Hn(kt(e).toLowerCase()), 'E', t, i);
                for (var d, m, h, p, v, g, f = e.attributes, _ = 0, b = f && f.length; b > _; _++) {
                  var w = !1,
                  k = !1;
                  if (d = f[_], !_t || _t >= 8 || d.specified) {
                    m = d.name,
                    v = Tt(d.value),
                    p = Hn(m),
                    (g = en.test(p)) && (m = Q(p.substr(6), '-'));
                    var S = p.replace(/(Start|End)$/, '');
                    p === S + 'Start' && (w = m, k = m.substr(0, m.length - 5) + 'end', m = m.substr(0, m.length - 6)),
                    h = Hn(m.toLowerCase()),
                    u[h] = m,
                    (g || !a.hasOwnProperty(h)) && (a[h] = v, Pn(e, h) && (a[h] = !0)),
                    W(e, n, v, h),
                    L(n, h, 'A', t, i, w, k)
                  }
                }
                if (o = e.className, y(o) && '' !== o) for (; r = c.exec(o); ) h = Hn(r[2]),
                L(n, h, 'C', t, i) && (a[h] = Tt(r[3])),
                o = o.substr(r.index + r[0].length);
                break;
              case 3:
                G(n, e.nodeValue);
                break;
              case 8:
                try {
                  r = s.exec(e.nodeValue),
                  r && (h = Hn(r[1]), L(n, h, 'M', t, i) && (a[h] = Tt(r[2])))
                } catch (A) {
                }
            }
            return n.sort(F),
            n
          }
          function D(e, n, a) {
            var t = [
            ],
            i = 0;
            if (n && e.hasAttribute && e.hasAttribute(n)) {
              do {
                if (!e) throw ai('uterdir', 'Unterminated attribute, found \'{0}\' but no matching \'{1}\' found.', n, a);
                1 == e.nodeType && (e.hasAttribute(n) && i++, e.hasAttribute(a) && i--),
                t.push(e),
                e = e.nextSibling
              } while (i > 0)
            } else t.push(e);
            return bt(t)
          }
          function E(e, n, a) {
            return function (t, i, r, o, s) {
              return i = D(i[0], n, a),
              e(t, i, r, o, s)
            }
          }
          function $(e, i, o, s, c, u, d, m, h) {
            function p(e, n, a, t) {
              e && (a && (e = E(e, a, t)), e.require = k.require, e.directiveName = A, (F === k || k.$$isolateScope) && (e = V(e, {
                isolateScope: !0
              })), d.push(e)),
              n && (a && (n = E(n, a, t)), n.require = k.require, n.directiveName = A, (F === k || k.$$isolateScope) && (n = V(n, {
                isolateScope: !0
              })), m.push(n))
            }
            function v(e, n, a, t) {
              var i,
              o = 'data',
              s = !1;
              if (y(n)) {
                for (; '^' == (i = n.charAt(0)) || '?' == i; ) n = n.substr(1),
                '^' == i && (o = 'inheritedData'),
                s = s || '?' == i;
                if (i = null, t && 'data' === o && (i = t[n]), i = i || a[o]('$' + n + 'Controller'), !i && !s) throw ai('ctreq', 'Controller \'{0}\', required by directive \'{1}\', can\'t be found!', n, e);
                return i
              }
              return Pt(n) && (i = [
              ], r(n, function (n) {
                i.push(v(e, n, a, t))
              })),
              i
            }
            function _(e, n, s, c, u) {
              function h(e, n) {
                var t;
                return arguments.length < 2 && (n = e, e = a),
                Y && (t = M),
                u(e, n, t)
              }
              var p,
              _,
              b,
              y,
              w,
              k,
              S,
              A,
              M = {
              };
              if (p = i === s ? o : B(o, new U(bt(s), o.$attr)), _ = p.$$element, F) {
                var x = /^\s*([@=&])(\??)\s*(\w*)\s*$/;
                S = n.$new(!0),
                !G || G !== F && G !== F.$$originalDirective ? _.data('$isolateScopeNoTemplate', S)  : _.data('$isolateScope', S),
                C(_, 'ng-isolate-scope'),
                r(F.scope, function (e, a) {
                  var i,
                  r,
                  o,
                  s,
                  l = e.match(x) || [
                  ],
                  c = l[3] || a,
                  u = '?' == l[2],
                  d = l[1];
                  switch (S.$$isolateBindings[a] = d + c, d) {
                    case '@':
                      p.$observe(c, function (e) {
                        S[a] = e
                      }),
                      p.$$observers[c].$$scope = n,
                      p[c] && (S[a] = t(p[c]) (n));
                      break;
                    case '=':
                      if (u && !p[c]) return;
                      r = g(p[c]),
                      s = r.literal ? N : function (e, n) {
                        return e === n || e !== e && n !== n
                      },
                      o = r.assign || function () {
                        throw i = S[a] = r(n),
                        ai('nonassign', 'Expression \'{0}\' used with directive \'{1}\' is non-assignable!', p[c], F.name)
                      },
                      i = S[a] = r(n),
                      S.$watch(function () {
                        var e = r(n);
                        return s(e, S[a]) || (s(e, i) ? o(n, e = S[a])  : S[a] = e),
                        i = e
                      }, null, r.literal);
                      break;
                    case '&':
                      r = g(p[c]),
                      S[a] = function (e) {
                        return r(n, e)
                      };
                      break;
                    default:
                      throw ai('iscp', 'Invalid isolate scope definition for directive \'{0}\'. Definition: {... {1}: \'{2}\' ...}', F.name, a, e)
                  }
                })
              }
              for (A = u && h, L && r(L, function (e) {
                var a,
                t = {
                  $scope: e === F || e.$$isolateScope ? S : n,
                  $element: _,
                  $attrs: p,
                  $transclude: A
                };
                k = e.controller,
                '@' == k && (k = p[e.name]),
                a = f(k, t),
                M[e.name] = a,
                Y || _.data('$' + e.name + 'Controller', a),
                e.controllerAs && (t.$scope[e.controllerAs] = a)
              }), b = 0, y = d.length; y > b; b++) try {
                w = d[b],
                w(w.isolateScope ? S : n, _, p, w.require && v(w.directiveName, w.require, _, M), A)
              } catch (z) {
                l(z, q(_))
              }
              var P = n;
              for (F && (F.template || null === F.templateUrl) && (P = S), e && e(P, s.childNodes, a, u), b = m.length - 1; b >= 0; b--) try {
                w = m[b],
                w(w.isolateScope ? S : n, _, p, w.require && v(w.directiveName, w.require, _, M), A)
              } catch (z) {
                l(z, q(_))
              }
            }
            h = h || {
            };
            for (var w, k, A, M, z, P, $ = - Number.MAX_VALUE, L = h.controllerDirectives, F = h.newIsolateScopeDirective, G = h.templateDirective, O = h.nonTlbTranscludeDirective, W = !1, Z = !1, Y = h.hasElementTranscludeDirective, Q = o.$$element = bt(i), en = u, nn = s, an = 0, tn = e.length; tn > an; an++) {
              k = e[an];
              var rn = k.$$start,
              on = k.$$end;
              if (rn && (Q = D(i, rn, on)), M = a, $ > k.priority) break;
              if ((P = k.scope) && (w = w || k, k.templateUrl || (H('new/isolated scope', F, k, Q), b(P) && (F = k))), A = k.name, !k.templateUrl && k.controller && (P = k.controller, L = L || {
              }, H('\'' + A + '\' controller', L[A], k, Q), L[A] = k), (P = k.transclude) && (W = !0, k.$$tlb || (H('transclusion', O, k, Q), O = k), 'element' == P ? (Y = !0, $ = k.priority, M = Q, Q = o.$$element = bt(n.createComment(' ' + A + ': ' + o[A] + ' ')), i = Q[0], J(c, j(M), i), nn = x(M, s, $, en && en.name, {
                nonTlbTranscludeDirective: O
              }))  : (M = bt(gn(i)).contents(), Q.empty(), nn = x(M, s))), k.template) if (Z = !0, H('template', G, k, Q), G = k, P = S(k.template) ? k.template(Q, o)  : k.template, P = X(P), k.replace) {
                if (en = k, M = mn(P) ? [
                ] : bt(Tt(P)), i = M[0], 1 != M.length || 1 !== i.nodeType) throw ai('tplrt', 'Template for directive \'{0}\' must have exactly one root element. {1}', A, '');
                J(c, Q, i);
                var sn = {
                  $attr: {
                  }
                },
                ln = T(i, [
                ], sn),
                cn = e.splice(an + 1, e.length - (an + 1));
                F && I(ln),
                e = e.concat(ln).concat(cn),
                R(o, sn),
                tn = e.length
              } else Q.html(P);
              if (k.templateUrl) Z = !0,
              H('template', G, k, Q),
              G = k,
              k.replace && (en = k),
              _ = K(e.splice(an, e.length - an), Q, o, c, W && nn, d, m, {
                controllerDirectives: L,
                newIsolateScopeDirective: F,
                templateDirective: G,
                nonTlbTranscludeDirective: O
              }),
              tn = e.length;
               else if (k.compile) try {
                z = k.compile(Q, o, nn),
                S(z) ? p(null, z, rn, on)  : z && p(z.pre, z.post, rn, on)
              } catch (un) {
                l(un, q(Q))
              }
              k.terminal && (_.terminal = !0, $ = Math.max($, k.priority))
            }
            return _.scope = w && w.scope === !0,
            _.transcludeOnThisElement = W,
            _.templateOnThisElement = Z,
            _.transclude = nn,
            h.hasElementTranscludeDirective = Y,
            _
          }
          function I(e) {
            for (var n = 0, a = e.length; a > n; n++) e[n] = h(e[n], {
              $$isolateScope: !0
            })
          }
          function L(n, t, r, s, c, u, d) {
            if (t === c) return null;
            var m = null;
            if (i.hasOwnProperty(t)) for (var p, v = e.get(t + o), g = 0, f = v.length; f > g; g++) try {
              p = v[g],
              (s === a || s > p.priority) && - 1 != p.restrict.indexOf(r) && (u && (p = h(p, {
                $$start: u,
                $$end: d
              })), n.push(p), m = p)
            } catch (_) {
              l(_)
            }
            return m
          }
          function R(e, n) {
            var a = n.$attr,
            t = e.$attr,
            i = e.$$element;
            r(e, function (t, i) {
              '$' != i.charAt(0) && (n[i] && n[i] !== t && (t += ('style' === i ? ';' : ' ') + n[i]), e.$set(i, t, !0, a[i]))
            }),
            r(n, function (n, r) {
              'class' == r ? (C(i, n), e['class'] = (e['class'] ? e['class'] + ' ' : '') + n)  : 'style' == r ? (i.attr('style', i.attr('style') + ';' + n), e.style = (e.style ? e.style + ';' : '') + n)  : '$' == r.charAt(0) || e.hasOwnProperty(r) || (e[r] = n, t[r] = a[r])
            })
          }
          function K(e, n, a, t, i, o, s, l) {
            var c,
            u,
            h = [
            ],
            v = n[0],
            g = e.shift(),
            f = d({
            }, g, {
              templateUrl: null,
              transclude: null,
              replace: null,
              $$originalDirective: g
            }),
            _ = S(g.templateUrl) ? g.templateUrl(n, a)  : g.templateUrl;
            return n.empty(),
            m.get(k.getTrustedResourceUrl(_), {
              cache: p
            }).success(function (d) {
              var m,
              p,
              y,
              w;
              if (d = X(d), g.replace) {
                if (y = mn(d) ? [
                ] : bt(Tt(d)), m = y[0], 1 != y.length || 1 !== m.nodeType) throw ai('tplrt', 'Template for directive \'{0}\' must have exactly one root element. {1}', g.name, _);
                p = {
                  $attr: {
                  }
                },
                J(t, n, m);
                var k = T(m, [
                ], p);
                b(g.scope) && I(k),
                e = k.concat(e),
                R(a, p)
              } else m = v,
              n.html(d);
              for (e.unshift(f), c = $(e, m, a, i, n, g, o, s, l), r(t, function (e, a) {
                e == m && (t[a] = n[0])
              }), u = z(n[0].childNodes, i); h.length; ) {
                var S = h.shift(),
                A = h.shift(),
                M = h.shift(),
                x = h.shift(),
                D = n[0];
                if (A !== v) {
                  var E = A.className;
                  l.hasElementTranscludeDirective && g.replace || (D = gn(m)),
                  J(M, bt(A), D),
                  C(bt(D), E)
                }
                w = c.transcludeOnThisElement ? P(S, c.transclude, x)  : x,
                c(u, S, D, t, w)
              }
              h = null
            }).error(function (e, n, a, t) {
              throw ai('tpload', 'Failed to load template: {0}', t.url)
            }),
            function (e, n, a, t, i) {
              var r = i;
              h ? (h.push(n), h.push(a), h.push(t), h.push(r))  : (c.transcludeOnThisElement && (r = P(n, c.transclude, i)), c(u, n, a, t, r))
            }
          }
          function F(e, n) {
            var a = n.priority - e.priority;
            return 0 !== a ? a : e.name !== n.name ? e.name < n.name ? - 1 : 1 : e.index - n.index
          }
          function H(e, n, a, t) {
            if (n) throw ai('multidir', 'Multiple directives [{0}, {1}] asking for {2} on: {3}', n.name, a.name, e, q(t))
          }
          function G(e, n) {
            var a = t(n, !0);
            a && e.push({
              priority: 0,
              compile: function (e) {
                var n = e.parent(),
                t = n.length;
                return t && C(e.parent(), 'ng-binding'),
                function (e, n) {
                  var i = n.parent(),
                  r = i.data('$binding') || [
                  ];
                  r.push(a),
                  i.data('$binding', r),
                  t || C(i, 'ng-binding'),
                  e.$watch(a, function (e) {
                    n[0].nodeValue = e
                  })
                }
              }
            })
          }
          function O(e, n) {
            if ('srcdoc' == n) return k.HTML;
            var a = kt(e);
            return 'xlinkHref' == n || 'FORM' == a && 'action' == n || 'IMG' != a && ('src' == n || 'ngSrc' == n) ? k.RESOURCE_URL : void 0
          }
          function W(e, n, a, i) {
            var r = t(a, !0);
            if (r) {
              if ('multiple' === i && 'SELECT' === kt(e)) throw ai('selmulti', 'Binding to the \'multiple\' attribute is not supported. Element: {0}', q(e));
              n.push({
                priority: 100,
                compile: function () {
                  return {
                    pre: function (n, a, o) {
                      var s = o.$$observers || (o.$$observers = {
                      });
                      if (u.test(i)) throw ai('nodomevents', 'Interpolations for HTML DOM event attributes are disallowed.  Please use the ng- versions (such as ng-click instead of onclick) instead.');
                      r = t(o[i], !0, O(e, i)),
                      r && (o[i] = r(n), (s[i] || (s[i] = [
                      ])).$$inter = !0, (o.$$observers && o.$$observers[i].$$scope || n).$watch(r, function (e, n) {
                        'class' === i && e != n ? o.$updateClass(e, n)  : o.$set(i, e)
                      }))
                    }
                  }
                }
              })
            }
          }
          function J(e, a, t) {
            var i,
            r,
            o = a[0],
            s = a.length,
            l = o.parentNode;
            if (e) for (i = 0, r = e.length; r > i; i++) if (e[i] == o) {
              e[i++] = t;
              for (var c = i, u = c + s - 1, d = e.length; d > c; c++, u++) d > u ? e[c] = e[u] : delete e[c];
              e.length -= s - 1;
              break
            }
            l && l.replaceChild(t, o);
            var m = n.createDocumentFragment();
            m.appendChild(o),
            t[bt.expando] = o[bt.expando];
            for (var h = 1, p = a.length; p > h; h++) {
              var v = a[h];
              bt(v).remove(),
              m.appendChild(v),
              delete a[h]
            }
            a[0] = t,
            a.length = 1
          }
          function V(e, n) {
            return d(function () {
              return e.apply(null, arguments)
            }, e, n)
          }
          var U = function (e, n) {
            this.$$element = e,
            this.$attr = n || {
            }
          };
          U.prototype = {
            $normalize: Hn,
            $addClass: function (e) {
              e && e.length > 0 && A.addClass(this.$$element, e)
            },
            $removeClass: function (e) {
              e && e.length > 0 && A.removeClass(this.$$element, e)
            },
            $updateClass: function (e, n) {
              var a = Gn(e, n),
              t = Gn(n, e);
              0 === a.length ? A.removeClass(this.$$element, t)  : 0 === t.length ? A.addClass(this.$$element, a)  : A.setClass(this.$$element, a, t)
            },
            $set: function (e, n, t, i) {
              var o,
              s = Pn(this.$$element[0], e);
              s && (this.$$element.prop(e, n), i = s),
              this[e] = n,
              i ? this.$attr[e] = i : (i = this.$attr[e], i || (this.$attr[e] = i = Q(e, '-'))),
              o = kt(this.$$element),
              ('A' === o && 'href' === e || 'IMG' === o && 'src' === e) && (this[e] = n = M(n, 'src' === e)),
              t !== !1 && (null === n || n === a ? this.$$element.removeAttr(i)  : this.$$element.attr(i, n));
              var c = this.$$observers;
              c && r(c[e], function (e) {
                try {
                  e(n)
                } catch (a) {
                  l(a)
                }
              })
            },
            $observe: function (e, n) {
              var a = this,
              t = a.$$observers || (a.$$observers = {
              }),
              i = t[e] || (t[e] = [
              ]);
              return i.push(n),
              _.$evalAsync(function () {
                i.$$inter || n(a[e])
              }),
              n
            }
          };
          var Z = t.startSymbol(),
          Y = t.endSymbol(),
          X = '{{' == Z || '}}' == Y ? v : function (e) {
            return e.replace(/\{\{/g, Z).replace(/}}/g, Y)
          },
          en = /^ngAttr[A-Z]/;
          return x
        }
        ]
      }
      function Hn(e) {
        return un(e.replace(ti, ''))
      }
      function Gn(e, n) {
        var a = '',
        t = e.split(/\s+/),
        i = n.split(/\s+/);
        e: for (var r = 0; r < t.length; r++) {
          for (var o = t[r], s = 0; s < i.length; s++) if (o == i[s]) continue e;
          a += (a.length > 0 ? ' ' : '') + o
        }
        return a
      }
      function On() {
        var e = {
        },
        n = /^(\S+)(\s+as\s+(\w+))?$/;
        this.register = function (n, a) {
          tn(n, 'controller'),
          b(n) ? d(e, n)  : e[n] = a
        },
        this.$get = [
          '$injector',
          '$window',
          function (a, i) {
            return function (r, o) {
              var s,
              l,
              c,
              u;
              if (y(r) && (l = r.match(n), c = l[1], u = l[3], r = e.hasOwnProperty(c) ? e[c] : rn(o.$scope, c, !0) || rn(i, c, !0), an(r, c, !0)), s = a.instantiate(r, o), u) {
                if (!o || 'object' != typeof o.$scope) throw t('$controller') ('noscp', 'Cannot export controller \'{0}\' as \'{1}\'! No $scope object provided via `locals`.', c || r.name, u);
                o.$scope[u] = s
              }
              return s
            }
          }
        ]
      }
      function qn() {
        this.$get = [
          '$window',
          function (e) {
            return bt(e.document)
          }
        ]
      }
      function Wn() {
        this.$get = [
          '$log',
          function (e) {
            return function () {
              e.error.apply(e, arguments)
            }
          }
        ]
      }
      function Jn(e) {
        var n,
        a,
        t,
        i = {
        };
        return e ? (r(e.split('\n'), function (e) {
          t = e.indexOf(':'),
          n = ht(Tt(e.substr(0, t))),
          a = Tt(e.substr(t + 1)),
          n && (i[n] = i[n] ? i[n] + ', ' + a : a)
        }), i)  : i
      }
      function Vn(e) {
        var n = b(e) ? e : a;
        return function (a) {
          return n || (n = Jn(e)),
          a ? n[ht(a)] || null : n
        }
      }
      function Un(e, n, a) {
        return S(a) ? a(e, n)  : (r(a, function (a) {
          e = a(e, n)
        }), e)
      }
      function Zn(e) {
        return e >= 200 && 300 > e
      }
      function Yn() {
        var e = /^\s*(\[|\{[^\{])/,
        n = /[\}\]]\s*$/,
        t = /^\)\]\}',?\n/,
        i = {
          'Content-Type': 'application/json;charset=utf-8'
        },
        o = this.defaults = {
          transformResponse: [
            function (a) {
              return y(a) && (a = a.replace(t, ''), e.test(a) && n.test(a) && (a = G(a))),
              a
            }
          ],
          transformRequest: [
            function (e) {
              return !b(e) || C(e) || z(e) ? e : H(e)
            }
          ],
          headers: {
            common: {
              Accept: 'application/json, text/plain, */*'
            },
            post: B(i),
            put: B(i),
            patch: B(i)
          },
          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN'
        },
        l = this.interceptors = [
        ],
        c = this.responseInterceptors = [
        ];
        this.$get = [
          '$httpBackend',
          '$browser',
          '$cacheFactory',
          '$rootScope',
          '$q',
          '$injector',
          function (e, n, t, i, u, m) {
            function h(e) {
              function n(e) {
                var n = d({
                }, e, {
                  data: Un(e.data, e.headers, i.transformResponse)
                });
                return Zn(e.status) ? n : u.reject(n)
              }
              function t(e) {
                function n(e) {
                  var n;
                  r(e, function (a, t) {
                    S(a) && (n = a(), null != n ? e[t] = n : delete e[t])
                  })
                }
                var a,
                t,
                i,
                s = o.headers,
                l = d({
                }, e.headers);
                s = d({
                }, s.common, s[ht(e.method)]);
                e: for (a in s) {
                  t = ht(a);
                  for (i in l) if (ht(i) === t) continue e;
                  l[a] = s[a]
                }
                return n(l),
                l
              }
              var i = {
                method: 'get',
                transformRequest: o.transformRequest,
                transformResponse: o.transformResponse
              },
              s = t(e);
              d(i, e),
              i.headers = s,
              i.method = vt(i.method);
              var l = function (e) {
                s = e.headers;
                var a = Un(e.data, Vn(s), e.transformRequest);
                return f(a) && r(s, function (e, n) {
                  'content-type' === ht(n) && delete s[n]
                }),
                f(e.withCredentials) && !f(o.withCredentials) && (e.withCredentials = o.withCredentials),
                g(e, a, s).then(n, n)
              },
              c = [
                l,
                a
              ],
              m = u.when(i);
              for (r(M, function (e) {
                (e.request || e.requestError) && c.unshift(e.request, e.requestError),
                (e.response || e.responseError) && c.push(e.response, e.responseError)
              }); c.length; ) {
                var h = c.shift(),
                p = c.shift();
                m = m.then(h, p)
              }
              return m.success = function (e) {
                return m.then(function (n) {
                  e(n.data, n.status, n.headers, i)
                }),
                m
              },
              m.error = function (e) {
                return m.then(null, function (n) {
                  e(n.data, n.status, n.headers, i)
                }),
                m
              },
              m
            }
            function p() {
              r(arguments, function (e) {
                h[e] = function (n, a) {
                  return h(d(a || {
                  }, {
                    method: e,
                    url: n
                  }))
                }
              })
            }
            function v() {
              r(arguments, function (e) {
                h[e] = function (n, a, t) {
                  return h(d(t || {
                  }, {
                    method: e,
                    url: n,
                    data: a
                  }))
                }
              })
            }
            function g(t, r, s) {
              function l(e, n, a, t) {
                m && (Zn(e) ? m.put(y, [
                  e,
                  n,
                  Jn(a),
                  t
                ])  : m.remove(y)),
                c(n, e, a, t),
                i.$$phase || i.$apply()
              }
              function c(e, n, a, i) {
                n = Math.max(n, 0),
                (Zn(n) ? v.resolve : v.reject) ({
                  data: e,
                  status: n,
                  headers: Vn(a),
                  config: t,
                  statusText: i
                })
              }
              function d() {
                var e = $(h.pendingRequests, t);
                - 1 !== e && h.pendingRequests.splice(e, 1)
              }
              var m,
              p,
              v = u.defer(),
              g = v.promise,
              y = w(t.url, t.params);
              if (h.pendingRequests.push(t), g.then(d, d), !t.cache && !o.cache || t.cache === !1 || 'GET' !== t.method && 'JSONP' !== t.method || (m = b(t.cache) ? t.cache : b(o.cache) ? o.cache : A), m) if (p = m.get(y), _(p)) {
                if (P(p)) return p.then(d, d),
                p;
                Pt(p) ? c(p[1], p[0], B(p[2]), p[3])  : c(p, 200, {
                }, 'OK')
              } else m.put(y, g);
              if (f(p)) {
                var k = Ra(t.url) ? n.cookies() [t.xsrfCookieName || o.xsrfCookieName] : a;
                k && (s[t.xsrfHeaderName || o.xsrfHeaderName] = k),
                e(t.method, y, r, l, s, t.timeout, t.withCredentials, t.responseType)
              }
              return g
            }
            function w(e, n) {
              if (!n) return e;
              var a = [
              ];
              return s(n, function (e, n) {
                null === e || f(e) || (Pt(e) || (e = [
                  e
                ]), r(e, function (e) {
                  b(e) && (e = k(e) ? e.toISOString()  : H(e)),
                  a.push(Z(n) + '=' + Z(e))
                }))
              }),
              a.length > 0 && (e += ( - 1 == e.indexOf('?') ? '?' : '&') + a.join('&')),
              e
            }
            var A = t('$http'),
            M = [
            ];
            return r(l, function (e) {
              M.unshift(y(e) ? m.get(e)  : m.invoke(e))
            }),
            r(c, function (e, n) {
              var a = y(e) ? m.get(e)  : m.invoke(e);
              M.splice(n, 0, {
                response: function (e) {
                  return a(u.when(e))
                },
                responseError: function (e) {
                  return a(u.reject(e))
                }
              })
            }),
            h.pendingRequests = [
            ],
            p('get', 'delete', 'head', 'jsonp'),
            v('post', 'put'),
            h.defaults = o,
            h
          }
        ]
      }
      function Xn(n) {
        if (8 >= _t && (!n.match(/^(get|post|head|put|delete|options)$/i) || !e.XMLHttpRequest)) return new e.ActiveXObject('Microsoft.XMLHTTP');
        if (e.XMLHttpRequest) return new e.XMLHttpRequest;
        throw t('$httpBackend') ('noxhr', 'This browser does not support XMLHttpRequest.')
      }
      function Qn() {
        this.$get = [
          '$browser',
          '$window',
          '$document',
          function (e, n, a) {
            return ea(e, Xn, e.defer, n.angular.callbacks, a[0])
          }
        ]
      }
      function ea(e, n, a, t, i) {
        function o(e, n, a) {
          var r = i.createElement('script'),
          o = null;
          return r.type = 'text/javascript',
          r.src = e,
          r.async = !0,
          o = function (e) {
            Nt(r, 'load', o),
            Nt(r, 'error', o),
            i.body.removeChild(r),
            r = null;
            var s = - 1,
            l = 'unknown';
            e && ('load' !== e.type || t[n].called || (e = {
              type: 'error'
            }), l = e.type, s = 'error' === e.type ? 404 : 200),
            a && a(s, l)
          },
          Bt(r, 'load', o),
          Bt(r, 'error', o),
          8 >= _t && (r.onreadystatechange = function () {
            y(r.readyState) && /loaded|complete/.test(r.readyState) && (r.onreadystatechange = null, o({
              type: 'load'
            }))
          }),
          i.body.appendChild(r),
          o
        }
        var s = - 1;
        return function (i, l, c, u, d, m, h, v) {
          function g() {
            b = s,
            w && w(),
            k && k.abort()
          }
          function f(n, t, i, r, o) {
            A && a.cancel(A),
            w = k = null,
            0 === t && (t = i ? 200 : 'file' == Na(l).protocol ? 404 : 0),
            t = 1223 === t ? 204 : t,
            o = o || '',
            n(t, i, r, o),
            e.$$completeOutstandingRequest(p)
          }
          var b;
          if (e.$$incOutstandingRequestCount(), l = l || e.url(), 'jsonp' == ht(i)) {
            var y = '_' + (t.counter++).toString(36);
            t[y] = function (e) {
              t[y].data = e,
              t[y].called = !0
            };
            var w = o(l.replace('JSON_CALLBACK', 'angular.callbacks.' + y), y, function (e, n) {
              f(u, e, t[y].data, '', n),
              t[y] = p
            })
          } else {
            var k = n(i);
            if (k.open(i, l, !0), r(d, function (e, n) {
              _(e) && k.setRequestHeader(n, e)
            }), k.onreadystatechange = function () {
              if (k && 4 == k.readyState) {
                var e = null,
                n = null,
                a = '';
                b !== s && (e = k.getAllResponseHeaders(), n = 'response' in k ? k.response : k.responseText),
                b === s && 10 > _t || (a = k.statusText),
                f(u, b || k.status, n, e, a)
              }
            }, h && (k.withCredentials = !0), v) try {
              k.responseType = v
            } catch (S) {
              if ('json' !== v) throw S
            }
            k.send(c || null)
          }
          if (m > 0) var A = a(g, m);
           else P(m) && m.then(g)
        }
      }
      function na() {
        var e = '{{',
        n = '}}';
        this.startSymbol = function (n) {
          return n ? (e = n, this)  : e
        },
        this.endSymbol = function (e) {
          return e ? (n = e, this)  : n
        },
        this.$get = [
          '$parse',
          '$exceptionHandler',
          '$sce',
          function (a, t, i) {
            function r(r, l, c) {
              for (var u, d, m, h, p = 0, v = [
              ], g = r.length, f = !1, _ = [
              ]; g > p; ) - 1 != (u = r.indexOf(e, p)) && - 1 != (d = r.indexOf(n, u + o)) ? (p != u && v.push(r.substring(p, u)), v.push(m = a(h = r.substring(u + o, d))), m.exp = h, p = d + s, f = !0)  : (p != g && v.push(r.substring(p)), p = g);
              if ((g = v.length) || (v.push(''), g = 1), c && v.length > 1) throw ii('noconcat', 'Error while interpolating: {0}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See http://docs.angularjs.org/api/ng.$sce', r);
              return !l || f ? (_.length = g, m = function (e) {
                try {
                  for (var n, a = 0, o = g; o > a; a++) {
                    if ('function' == typeof (n = v[a])) if (n = n(e), n = c ? i.getTrusted(c, n)  : i.valueOf(n), null == n) n = '';
                     else switch (typeof n) {
                      case 'string':
                        break;
                      case 'number':
                        n = '' + n;
                        break;
                      default:
                        n = H(n)
                    }
                    _[a] = n
                  }
                  return _.join('')
                } catch (s) {
                  var l = ii('interr', 'Can\'t interpolate: {0}\n{1}', r, s.toString());
                  t(l)
                }
              },
              m.exp = r,
              m.parts = v,
              m) : void 0
            }
            var o = e.length,
            s = n.length;
            return r.startSymbol = function () {
              return e
            },
            r.endSymbol = function () {
              return n
            },
            r
          }
          ]
        }
        function aa() {
          this.$get = [
            '$rootScope',
            '$window',
            '$q',
            function (e, n, a) {
              function t(t, r, o, s) {
                var l = n.setInterval,
                c = n.clearInterval,
                u = a.defer(),
                d = u.promise,
                m = 0,
                h = _(s) && !s;
                return o = _(o) ? o : 0,
                d.then(null, null, t),
                d.$$intervalId = l(function () {
                  u.notify(m++),
                  o > 0 && m >= o && (u.resolve(m), c(d.$$intervalId), delete i[d.$$intervalId]),
                  h || e.$apply()
                }, r),
                i[d.$$intervalId] = u,
                d
              }
              var i = {
              };
              return t.cancel = function (e) {
                return e && e.$$intervalId in i ? (i[e.$$intervalId].reject('canceled'), n.clearInterval(e.$$intervalId), delete i[e.$$intervalId], !0)  : !1
              },
              t
            }
          ]
        }
        function ta() {
          this.$get = function () {
            return {
              id: 'en-us',
              NUMBER_FORMATS: {
                DECIMAL_SEP: '.',
                GROUP_SEP: ',',
                PATTERNS: [
                  {
                    minInt: 1,
                    minFrac: 0,
                    maxFrac: 3,
                    posPre: '',
                    posSuf: '',
                    negPre: '-',
                    negSuf: '',
                    gSize: 3,
                    lgSize: 3
                  },
                  {
                    minInt: 1,
                    minFrac: 2,
                    maxFrac: 2,
                    posPre: '¤',
                    posSuf: '',
                    negPre: '(¤',
                    negSuf: ')',
                    gSize: 3,
                    lgSize: 3
                  }
                ],
                CURRENCY_SYM: '$'
              },
              DATETIME_FORMATS: {
                MONTH: 'January,February,March,April,May,June,July,August,September,October,November,December'.split(','),
                SHORTMONTH: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),
                DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),
                SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),
                AMPMS: [
                  'AM',
                  'PM'
                ],
                medium: 'MMM d, y h:mm:ss a',
                'short': 'M/d/yy h:mm a',
                fullDate: 'EEEE, MMMM d, y',
                longDate: 'MMMM d, y',
                mediumDate: 'MMM d, y',
                shortDate: 'M/d/yy',
                mediumTime: 'h:mm:ss a',
                shortTime: 'h:mm a'
              },
              pluralCat: function (e) {
                return 1 === e ? 'one' : 'other'
              }
            }
          }
        }
        function ia(e) {
          for (var n = e.split('/'), a = n.length; a--; ) n[a] = U(n[a]);
          return n.join('/')
        }
        function ra(e, n, a) {
          var t = Na(e, a);
          n.$$protocol = t.protocol,
          n.$$host = t.hostname,
          n.$$port = m(t.port) || oi[t.protocol] || null
        }
        function oa(e, n, a) {
          var t = '/' !== e.charAt(0);
          t && (e = '/' + e);
          var i = Na(e, a);
          n.$$path = decodeURIComponent(t && '/' === i.pathname.charAt(0) ? i.pathname.substring(1)  : i.pathname),
          n.$$search = J(i.search),
          n.$$hash = decodeURIComponent(i.hash),
          n.$$path && '/' != n.$$path.charAt(0) && (n.$$path = '/' + n.$$path)
        }
        function sa(e, n) {
          return 0 === n.indexOf(e) ? n.substr(e.length)  : void 0
        }
        function la(e) {
          var n = e.indexOf('#');
          return - 1 == n ? e : e.substr(0, n)
        }
        function ca(e) {
          return e.substr(0, la(e).lastIndexOf('/') + 1)
        }
        function ua(e) {
          return e.substring(0, e.indexOf('/', e.indexOf('//') + 2))
        }
        function da(e, n) {
          this.$$html5 = !0,
          n = n || '';
          var t = ca(e);
          ra(e, this, e),
          this.$$parse = function (n) {
            var a = sa(t, n);
            if (!y(a)) throw si('ipthprfx', 'Invalid url "{0}", missing path prefix "{1}".', n, t);
            oa(a, this, e),
            this.$$path || (this.$$path = '/'),
            this.$$compose()
          },
          this.$$compose = function () {
            var e = V(this.$$search),
            n = this.$$hash ? '#' + U(this.$$hash)  : '';
            this.$$url = ia(this.$$path) + (e ? '?' + e : '') + n,
            this.$$absUrl = t + this.$$url.substr(1)
          },
          this.$$rewrite = function (i) {
            var r,
            o;
            return (r = sa(e, i)) !== a ? (o = r, (r = sa(n, r)) !== a ? t + (sa('/', r) || r)  : e + o)  : (r = sa(t, i)) !== a ? t + r : t == i + '/' ? t : void 0
          }
        }
        function ma(e, n) {
          var a = ca(e);
          ra(e, this, e),
          this.$$parse = function (t) {
            function i(e, n, a) {
              var t,
              i = /^\/[A-Z]:(\/.*)/;
              return 0 === n.indexOf(a) && (n = n.replace(a, '')),
              i.exec(n) ? e : (t = i.exec(e), t ? t[1] : e)
            }
            var r = sa(e, t) || sa(a, t),
            o = '#' == r.charAt(0) ? sa(n, r)  : this.$$html5 ? r : '';
            if (!y(o)) throw si('ihshprfx', 'Invalid url "{0}", missing hash prefix "{1}".', t, n);
            oa(o, this, e),
            this.$$path = i(this.$$path, o, e),
            this.$$compose()
          },
          this.$$compose = function () {
            var a = V(this.$$search),
            t = this.$$hash ? '#' + U(this.$$hash)  : '';
            this.$$url = ia(this.$$path) + (a ? '?' + a : '') + t,
            this.$$absUrl = e + (this.$$url ? n + this.$$url : '')
          },
          this.$$rewrite = function (n) {
            return la(e) == la(n) ? n : void 0
          }
        }
        function ha(e, n) {
          this.$$html5 = !0,
          ma.apply(this, arguments);
          var a = ca(e);
          this.$$rewrite = function (t) {
            var i;
            return e == la(t) ? t : (i = sa(a, t)) ? e + n + i : a === t + '/' ? a : void 0
          },
          this.$$compose = function () {
            var a = V(this.$$search),
            t = this.$$hash ? '#' + U(this.$$hash)  : '';
            this.$$url = ia(this.$$path) + (a ? '?' + a : '') + t,
            this.$$absUrl = e + n + this.$$url
          }
        }
        function pa(e) {
          return function () {
            return this[e]
          }
        }
        function va(e, n) {
          return function (a) {
            return f(a) ? this[e] : (this[e] = n(a), this.$$compose(), this)
          }
        }
        function ga() {
          var n = '',
          a = !1;
          this.hashPrefix = function (e) {
            return _(e) ? (n = e, this)  : n
          },
          this.html5Mode = function (e) {
            return _(e) ? (a = e, this)  : a
          },
          this.$get = [
            '$rootScope',
            '$browser',
            '$sniffer',
            '$rootElement',
            function (t, i, r, o) {
              function s(e) {
                t.$broadcast('$locationChangeSuccess', l.absUrl(), e)
              }
              var l,
              c,
              u,
              d = i.baseHref(),
              m = i.url();
              a ? (u = ua(m) + (d || '/'), c = r.history ? da : ha)  : (u = la(m), c = ma),
              l = new c(u, '#' + n),
              l.$$parse(l.$$rewrite(m));
              var h = /^\s*(javascript|mailto):/i;
              o.on('click', function (a) {
                if (!a.ctrlKey && !a.metaKey && 2 != a.which) {
                  for (var r = bt(a.target); 'a' !== ht(r[0].nodeName); ) if (r[0] === o[0] || !(r = r.parent()) [0]) return;
                  var s = r.prop('href');
                  if (b(s) && '[object SVGAnimatedString]' === s.toString() && (s = Na(s.animVal).href), !h.test(s)) {
                    if (c === ha) {
                      var d = r.attr('href') || r.attr('xlink:href');
                      if (d && d.indexOf('://') < 0) {
                        var m = '#' + n;
                        if ('/' == d[0]) s = u + m + d;
                         else if ('#' == d[0]) s = u + m + (l.path() || '/') + d;
                         else {
                          var p = l.path().split('/'),
                          v = d.split('/');
                          2 !== p.length || p[1] || (p.length = 1);
                          for (var g = 0; g < v.length; g++) '.' != v[g] && ('..' == v[g] ? p.pop()  : v[g].length && p.push(v[g]));
                          s = u + m + p.join('/')
                        }
                      }
                    }
                    var f = l.$$rewrite(s);
                    s && !r.attr('target') && f && !a.isDefaultPrevented() && (a.preventDefault(), f != i.url() && (l.$$parse(f), t.$apply(), e.angular['ff-684208-preventDefault'] = !0))
                  }
                }
              }),
              l.absUrl() != m && i.url(l.absUrl(), !0),
              i.onUrlChange(function (e) {
                l.absUrl() != e && (t.$evalAsync(function () {
                  var n = l.absUrl();
                  l.$$parse(e),
                  t.$broadcast('$locationChangeStart', e, n).defaultPrevented ? (l.$$parse(n), i.url(n))  : s(n)
                }), t.$$phase || t.$digest())
              });
              var p = 0;
              return t.$watch(function () {
                var e = i.url(),
                n = l.$$replace;
                return p && e == l.absUrl() || (p++, t.$evalAsync(function () {
                  t.$broadcast('$locationChangeStart', l.absUrl(), e).defaultPrevented ? l.$$parse(e)  : (i.url(l.absUrl(), n), s(e))
                })),
                l.$$replace = !1,
                p
              }),
              l
            }
          ]
        }
        function fa() {
          var e = !0,
          n = this;
          this.debugEnabled = function (n) {
            return _(n) ? (e = n, this)  : e
          },
          this.$get = [
            '$window',
            function (a) {
              function t(e) {
                return e instanceof Error && (e.stack ? e = e.message && - 1 === e.stack.indexOf(e.message) ? 'Error: ' + e.message + '\n' + e.stack : e.stack : e.sourceURL && (e = e.message + '\n' + e.sourceURL + ':' + e.line)),
                e
              }
              function i(e) {
                var n = a.console || {
                },
                i = n[e] || n.log || p,
                o = !1;
                try {
                  o = !!i.apply
                } catch (s) {
                }
                return o ? function () {
                  var e = [
                  ];
                  return r(arguments, function (n) {
                    e.push(t(n))
                  }),
                  i.apply(n, e)
                }
                 : function (e, n) {
                  i(e, null == n ? '' : n)
                }
              }
              return {
                log: i('log'),
                info: i('info'),
                warn: i('warn'),
                error: i('error'),
                debug: function () {
                  var a = i('debug');
                  return function () {
                    e && a.apply(n, arguments)
                  }
                }()
              }
            }
          ]
        }
        function _a(e, n) {
          if ('__defineGetter__' === e || '__defineSetter__' === e || '__lookupGetter__' === e || '__lookupSetter__' === e || '__proto__' === e) throw ci('isecfld', 'Attempting to access a disallowed field in Angular expressions! Expression: {0}', n);
          return e
        }
        function ba(e, n) {
          if (e) {
            if (e.constructor === e) throw ci('isecfn', 'Referencing Function in Angular expressions is disallowed! Expression: {0}', n);
            if (e.document && e.location && e.alert && e.setInterval) throw ci('isecwindow', 'Referencing the Window in Angular expressions is disallowed! Expression: {0}', n);
            if (e.children && (e.nodeName || e.prop && e.attr && e.find)) throw ci('isecdom', 'Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}', n);
            if (e === Object) throw ci('isecobj', 'Referencing Object in Angular expressions is disallowed! Expression: {0}', n)
          }
          return e
        }
        function ya(e, n) {
          if (e) {
            if (e.constructor === e) throw ci('isecfn', 'Referencing Function in Angular expressions is disallowed! Expression: {0}', n);
            if (e === di || e === mi || hi && e === hi) throw ci('isecff', 'Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}', n)
          }
        }
        function wa(e, n, t, i, r) {
          ba(e, i),
          r = r || {
          };
          for (var o, s = n.split('.'), l = 0; s.length > 1; l++) {
            o = _a(s.shift(), i);
            var c = ba(e[o], i);
            c || (c = {
            }, e[o] = c),
            e = c,
            e.then && r.unwrapPromises && (li(i), '$$v' in e || !function (e) {
              e.then(function (n) {
                e.$$v = n
              })
            }(e), e.$$v === a && (e.$$v = {
            }), e = e.$$v)
          }
          return o = _a(s.shift(), i),
          ba(e[o], i),
          e[o] = t,
          t
        }
        function ka(e, n, t, i, r, o, s) {
          return _a(e, o),
          _a(n, o),
          _a(t, o),
          _a(i, o),
          _a(r, o),
          s.unwrapPromises ? function (s, l) {
            var c,
            u = l && l.hasOwnProperty(e) ? l : s;
            return null == u ? u : (u = u[e], u && u.then && (li(o), '$$v' in u || (c = u, c.$$v = a, c.then(function (e) {
              c.$$v = e
            })), u = u.$$v), n ? null == u ? a : (u = u[n], u && u.then && (li(o), '$$v' in u || (c = u, c.$$v = a, c.then(function (e) {
              c.$$v = e
            })), u = u.$$v), t ? null == u ? a : (u = u[t], u && u.then && (li(o), '$$v' in u || (c = u, c.$$v = a, c.then(function (e) {
              c.$$v = e
            })), u = u.$$v), i ? null == u ? a : (u = u[i], u && u.then && (li(o), '$$v' in u || (c = u, c.$$v = a, c.then(function (e) {
              c.$$v = e
            })), u = u.$$v), r ? null == u ? a : (u = u[r], u && u.then && (li(o), '$$v' in u || (c = u, c.$$v = a, c.then(function (e) {
              c.$$v = e
            })), u = u.$$v), u)  : u)  : u)  : u)  : u)
          }
           : function (o, s) {
            var l = s && s.hasOwnProperty(e) ? s : o;
            return null == l ? l : (l = l[e], n ? null == l ? a : (l = l[n], t ? null == l ? a : (l = l[t], i ? null == l ? a : (l = l[i], r ? null == l ? a : l = l[r] : l)  : l)  : l)  : l)
          }
        }
        function Sa(e, n, t) {
          if (_i.hasOwnProperty(e)) return _i[e];
          var i,
          o = e.split('.'),
          s = o.length;
          if (n.csp) i = 6 > s ? ka(o[0], o[1], o[2], o[3], o[4], t, n)  : function (e, i) {
            var r,
            l = 0;
            do r = ka(o[l++], o[l++], o[l++], o[l++], o[l++], t, n) (e, i),
            i = a,
            e = r;
            while (s > l);
            return r
          };
           else {
            var l = 'var p;\n';
            r(o, function (e, a) {
              _a(e, t),
              l += 'if(s == null) return undefined;\ns=' + (a ? 's' : '((k&&k.hasOwnProperty("' + e + '"))?k:s)') + '["' + e + '"];\n' + (n.unwrapPromises ? 'if (s && s.then) {\n pw("' + t.replace(/(["\r\n])/g, '\\$1') + '");\n if (!("$$v" in s)) {\n p=s;\n p.$$v = undefined;\n p.then(function(v) {p.$$v=v;});\n}\n s=s.$$v\n}\n' : '')
            }),
            l += 'return s;';
            var c = new Function('s', 'k', 'pw', l);
            c.toString = g(l),
            i = n.unwrapPromises ? function (e, n) {
              return c(e, n, li)
            }
             : c
          }
          return 'hasOwnProperty' !== e && (_i[e] = i),
          i
        }
        function Aa() {
          var e = {
          },
          n = {
            csp: !1,
            unwrapPromises: !1,
            logPromiseWarnings: !0
          };
          this.unwrapPromises = function (e) {
            return _(e) ? (n.unwrapPromises = !!e, this)  : n.unwrapPromises
          },
          this.logPromiseWarnings = function (e) {
            return _(e) ? (n.logPromiseWarnings = e, this)  : n.logPromiseWarnings
          },
          this.$get = [
            '$filter',
            '$sniffer',
            '$log',
            function (a, t, i) {
              return n.csp = t.csp,
              li = function (e) {
                n.logPromiseWarnings && !ui.hasOwnProperty(e) && (ui[e] = !0, i.warn('[$parse] Promise found in the expression `' + e + '`. Automatic unwrapping of promises in Angular expressions is deprecated.'))
              },
              function (t) {
                var i;
                switch (typeof t) {
                  case 'string':
                    if (e.hasOwnProperty(t)) return e[t];
                    var r = new gi(n),
                    o = new fi(r, a, n);
                    return i = o.parse(t),
                    'hasOwnProperty' !== t && (e[t] = i),
                    i;
                  case 'function':
                    return t;
                  default:
                    return p
                }
              }
            }
            ]
          }
          function Ma() {
            this.$get = [
              '$rootScope',
              '$exceptionHandler',
              function (e, n) {
                return xa(function (n) {
                  e.$evalAsync(n)
                }, n)
              }
            ]
          }
          function xa(e, n) {
            function t(e) {
              return e
            }
            function i(e) {
              return c(e)
            }
            function o(e) {
              var n = s(),
              a = 0,
              t = Pt(e) ? [
              ] : {
              };
              return r(e, function (e, i) {
                a++,
                l(e).then(function (e) {
                  t.hasOwnProperty(i) || (t[i] = e, --a || n.resolve(t))
                }, function (e) {
                  t.hasOwnProperty(i) || n.reject(e)
                })
              }),
              0 === a && n.resolve(t),
              n.promise
            }
            var s = function () {
              var r,
              o,
              c = [
              ];
              return o = {
                resolve: function (n) {
                  if (c) {
                    var t = c;
                    c = a,
                    r = l(n),
                    t.length && e(function () {
                      for (var e, n = 0, a = t.length; a > n; n++) e = t[n],
                      r.then(e[0], e[1], e[2])
                    })
                  }
                },
                reject: function (e) {
                  o.resolve(u(e))
                },
                notify: function (n) {
                  if (c) {
                    var a = c;
                    c.length && e(function () {
                      for (var e, t = 0, i = a.length; i > t; t++) e = a[t],
                      e[2](n)
                    })
                  }
                },
                promise: {
                  then: function (e, a, o) {
                    var l = s(),
                    u = function (a) {
                      try {
                        l.resolve((S(e) ? e : t) (a))
                      } catch (i) {
                        l.reject(i),
                        n(i)
                      }
                    },
                    d = function (e) {
                      try {
                        l.resolve((S(a) ? a : i) (e))
                      } catch (t) {
                        l.reject(t),
                        n(t)
                      }
                    },
                    m = function (e) {
                      try {
                        l.notify((S(o) ? o : t) (e))
                      } catch (a) {
                        n(a)
                      }
                    };
                    return c ? c.push([u,
                    d,
                    m])  : r.then(u, d, m),
                    l.promise
                  },
                  'catch': function (e) {
                    return this.then(null, e)
                  },
                  'finally': function (e) {
                    function n(e, n) {
                      var a = s();
                      return n ? a.resolve(e)  : a.reject(e),
                      a.promise
                    }
                    function a(a, i) {
                      var r = null;
                      try {
                        r = (e || t) ()
                      } catch (o) {
                        return n(o, !1)
                      }
                      return P(r) ? r.then(function () {
                        return n(a, i)
                      }, function (e) {
                        return n(e, !1)
                      })  : n(a, i)
                    }
                    return this.then(function (e) {
                      return a(e, !0)
                    }, function (e) {
                      return a(e, !1)
                    })
                  }
                }
              }
            },
            l = function (n) {
              return P(n) ? n : {
                then: function (a) {
                  var t = s();
                  return e(function () {
                    t.resolve(a(n))
                  }),
                  t.promise
                }
              }
            },
            c = function (e) {
              var n = s();
              return n.reject(e),
              n.promise
            },
            u = function (a) {
              return {
                then: function (t, r) {
                  var o = s();
                  return e(function () {
                    try {
                      o.resolve((S(r) ? r : i) (a))
                    } catch (e) {
                      o.reject(e),
                      n(e)
                    }
                  }),
                  o.promise
                }
              }
            },
            d = function (a, r, o, u) {
              var d,
              m = s(),
              h = function (e) {
                try {
                  return (S(r) ? r : t) (e)
                } catch (a) {
                  return n(a),
                  c(a)
                }
              },
              p = function (e) {
                try {
                  return (S(o) ? o : i) (e)
                } catch (a) {
                  return n(a),
                  c(a)
                }
              },
              v = function (e) {
                try {
                  return (S(u) ? u : t) (e)
                } catch (a) {
                  n(a)
                }
              };
              return e(function () {
                l(a).then(function (e) {
                  d || (d = !0, m.resolve(l(e).then(h, p, v)))
                }, function (e) {
                  d || (d = !0, m.resolve(p(e)))
                }, function (e) {
                  d || m.notify(v(e))
                })
              }),
              m.promise
            };
            return {
              defer: s,
              reject: c,
              when: d,
              all: o
            }
          }
          function Ca() {
            this.$get = [
              '$window',
              '$timeout',
              function (e, n) {
                var a = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame,
                t = e.cancelAnimationFrame || e.webkitCancelAnimationFrame || e.mozCancelAnimationFrame || e.webkitCancelRequestAnimationFrame,
                i = !!a,
                r = i ? function (e) {
                  var n = a(e);
                  return function () {
                    t(n)
                  }
                }
                 : function (e) {
                  var a = n(e, 16.66, !1);
                  return function () {
                    n.cancel(a)
                  }
                };
                return r.supported = i,
                r
              }
            ]
          }
          function za() {
            var e = 10,
            n = t('$rootScope'),
            a = null;
            this.digestTtl = function (n) {
              return arguments.length && (e = n),
              e
            },
            this.$get = [
              '$injector',
              '$exceptionHandler',
              '$parse',
              '$browser',
              function (t, o, s, l) {
                function u() {
                  this.$id = c(),
                  this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null,
                  this['this'] = this.$root = this,
                  this.$$destroyed = !1,
                  this.$$asyncQueue = [
                  ],
                  this.$$postDigestQueue = [
                  ],
                  this.$$listeners = {
                  },
                  this.$$listenerCount = {
                  },
                  this.$$isolateBindings = {
                  }
                }
                function d(e) {
                  if (f.$$phase) throw n('inprog', '{0} already in progress', f.$$phase);
                  f.$$phase = e
                }
                function m() {
                  f.$$phase = null
                }
                function h(e, n) {
                  var a = s(e);
                  return an(a, n),
                  a
                }
                function v(e, n, a) {
                  do e.$$listenerCount[a] -= n,
                  0 === e.$$listenerCount[a] && delete e.$$listenerCount[a];
                  while (e = e.$parent)
                }
                function g() {
                }
                u.prototype = {
                  constructor: u,
                  $new: function (e) {
                    var n;
                    return e ? (n = new u, n.$root = this.$root, n.$$asyncQueue = this.$$asyncQueue, n.$$postDigestQueue = this.$$postDigestQueue)  : (this.$$childScopeClass || (this.$$childScopeClass = function () {
                      this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null,
                      this.$$listeners = {
                      },
                      this.$$listenerCount = {
                      },
                      this.$id = c(),
                      this.$$childScopeClass = null
                    }, this.$$childScopeClass.prototype = this), n = new this.$$childScopeClass),
                    n['this'] = n,
                    n.$parent = this,
                    n.$$prevSibling = this.$$childTail,
                    this.$$childHead ? (this.$$childTail.$$nextSibling = n, this.$$childTail = n)  : this.$$childHead = this.$$childTail = n,
                    n
                  },
                  $watch: function (e, n, t) {
                    var i = this,
                    r = h(e, 'watch'),
                    o = i.$$watchers,
                    s = {
                      fn: n,
                      last: g,
                      get: r,
                      exp: e,
                      eq: !!t
                    };
                    if (a = null, !S(n)) {
                      var l = h(n || p, 'listener');
                      s.fn = function (e, n, a) {
                        l(a)
                      }
                    }
                    if ('string' == typeof e && r.constant) {
                      var c = s.fn;
                      s.fn = function (e, n, a) {
                        c.call(this, e, n, a),
                        I(o, s)
                      }
                    }
                    return o || (o = i.$$watchers = [
                    ]),
                    o.unshift(s),
                    function () {
                      I(o, s),
                      a = null
                    }
                  },
                  $watchCollection: function (e, n) {
                    function a() {
                      r = m(c);
                      var e,
                      n,
                      a;
                      if (b(r)) if (i(r)) {
                        o !== h && (o = h, g = o.length = 0, d++),
                        e = r.length,
                        g !== e && (d++, o.length = g = e);
                        for (var t = 0; e > t; t++) a = o[t] !== o[t] && r[t] !== r[t],
                        a || o[t] === r[t] || (d++, o[t] = r[t])
                      } else {
                        o !== p && (o = p = {
                        }, g = 0, d++),
                        e = 0;
                        for (n in r) r.hasOwnProperty(n) && (e++, o.hasOwnProperty(n) ? (a = o[n] !== o[n] && r[n] !== r[n], a || o[n] === r[n] || (d++, o[n] = r[n]))  : (g++, o[n] = r[n], d++));
                        if (g > e) {
                          d++;
                          for (n in o) o.hasOwnProperty(n) && !r.hasOwnProperty(n) && (g--, delete o[n])
                        }
                      } else o !== r && (o = r, d++);
                      return d
                    }
                    function t() {
                      if (v ? (v = !1, n(r, r, c))  : n(r, l, c), u) if (b(r)) if (i(r)) {
                        l = new Array(r.length);
                        for (var e = 0; e < r.length; e++) l[e] = r[e]
                      } else {
                        l = {
                        };
                        for (var a in r) pt.call(r, a) && (l[a] = r[a])
                      } else l = r
                    }
                    var r,
                    o,
                    l,
                    c = this,
                    u = n.length > 1,
                    d = 0,
                    m = s(e),
                    h = [
                    ],
                    p = {
                    },
                    v = !0,
                    g = 0;
                    return this.$watch(a, t)
                  },
                  $digest: function () {
                    var t,
                    i,
                    r,
                    s,
                    c,
                    u,
                    h,
                    p,
                    v,
                    f,
                    _,
                    b = this.$$asyncQueue,
                    y = this.$$postDigestQueue,
                    w = e,
                    k = this,
                    A = [
                    ];
                    d('$digest'),
                    l.$$checkUrlChange(),
                    a = null;
                    do {
                      for (u = !1, p = k; b.length; ) {
                        try {
                          _ = b.shift(),
                          _.scope.$eval(_.expression)
                        } catch (M) {
                          m(),
                          o(M)
                        }
                        a = null
                      }
                      e: do {
                        if (s = p.$$watchers) for (c = s.length; c--; ) try {
                          if (t = s[c]) if ((i = t.get(p)) === (r = t.last) || (t.eq ? N(i, r)  : 'number' == typeof i && 'number' == typeof r && isNaN(i) && isNaN(r))) {
                            if (t === a) {
                              u = !1;
                              break e
                            }
                          } else u = !0,
                          a = t,
                          t.last = t.eq ? L(i, null)  : i,
                          t.fn(i, r === g ? i : r, p),
                          5 > w && (v = 4 - w, A[v] || (A[v] = [
                          ]), f = S(t.exp) ? 'fn: ' + (t.exp.name || t.exp.toString())  : t.exp, f += '; newVal: ' + H(i) + '; oldVal: ' + H(r), A[v].push(f))
                        } catch (M) {
                          m(),
                          o(M)
                        }
                        if (!(h = p.$$childHead || p !== k && p.$$nextSibling)) for (; p !== k && !(h = p.$$nextSibling); ) p = p.$parent
                      } while (p = h);
                      if ((u || b.length) && !w--) throw m(),
                      n('infdig', '{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iterations: {1}', e, H(A))
                    } while (u || b.length);
                    for (m(); y.length; ) try {
                      y.shift() ()
                    } catch (M) {
                      o(M)
                    }
                  },
                  $destroy: function () {
                    if (!this.$$destroyed) {
                      var e = this.$parent;
                      this.$broadcast('$destroy'),
                      this.$$destroyed = !0,
                      this !== f && (r(this.$$listenerCount, K(null, v, this)), e.$$childHead == this && (e.$$childHead = this.$$nextSibling), e.$$childTail == this && (e.$$childTail = this.$$prevSibling), this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling), this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling), this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = this.$root = null, this.$$listeners = {
                      }, this.$$watchers = this.$$asyncQueue = this.$$postDigestQueue = [
                      ], this.$destroy = this.$digest = this.$apply = p, this.$on = this.$watch = function () {
                        return p
                      })
                    }
                  },
                  $eval: function (e, n) {
                    return s(e) (this, n)
                  },
                  $evalAsync: function (e) {
                    f.$$phase || f.$$asyncQueue.length || l.defer(function () {
                      f.$$asyncQueue.length && f.$digest()
                    }),
                    this.$$asyncQueue.push({
                      scope: this,
                      expression: e
                    })
                  },
                  $$postDigest: function (e) {
                    this.$$postDigestQueue.push(e)
                  },
                  $apply: function (e) {
                    try {
                      return d('$apply'),
                      this.$eval(e)
                    } catch (n) {
                      o(n)
                    } finally {
                      m();
                      try {
                        f.$digest()
                      } catch (n) {
                        throw o(n),
                        n
                      }
                    }
                  },
                  $on: function (e, n) {
                    var a = this.$$listeners[e];
                    a || (this.$$listeners[e] = a = [
                    ]),
                    a.push(n);
                    var t = this;
                    do t.$$listenerCount[e] || (t.$$listenerCount[e] = 0),
                    t.$$listenerCount[e]++;
                    while (t = t.$parent);
                    var i = this;
                    return function () {
                      a[$(a, n)] = null,
                      v(i, 1, e)
                    }
                  },
                  $emit: function (e) {
                    var n,
                    a,
                    t,
                    i = [
                    ],
                    r = this,
                    s = !1,
                    l = {
                      name: e,
                      targetScope: r,
                      stopPropagation: function () {
                        s = !0
                      },
                      preventDefault: function () {
                        l.defaultPrevented = !0
                      },
                      defaultPrevented: !1
                    },
                    c = R([l], arguments, 1);
                    do {
                      for (n = r.$$listeners[e] || i, l.currentScope = r, a = 0, t = n.length; t > a; a++) if (n[a]) try {
                        n[a].apply(null, c)
                      } catch (u) {
                        o(u)
                      } else n.splice(a, 1),
                      a--,
                      t--;
                      if (s) return l;
                      r = r.$parent
                    } while (r);
                    return l
                  },
                  $broadcast: function (e) {
                    for (var n, a, t, i = this, r = i, s = i, l = {
                      name: e,
                      targetScope: i,
                      preventDefault: function () {
                        l.defaultPrevented = !0
                      },
                      defaultPrevented: !1
                    }, c = R([l], arguments, 1); r = s; ) {
                      for (l.currentScope = r, n = r.$$listeners[e] || [
                      ], a = 0, t = n.length; t > a; a++) if (n[a]) try {
                        n[a].apply(null, c)
                      } catch (u) {
                        o(u)
                      } else n.splice(a, 1),
                      a--,
                      t--;
                      if (!(s = r.$$listenerCount[e] && r.$$childHead || r !== i && r.$$nextSibling)) for (; r !== i && !(s = r.$$nextSibling); ) r = r.$parent
                    }
                    return l
                  }
                };
                var f = new u;
                return f
              }
            ]
          }
          function Pa() {
            var e = /^\s*(https?|ftp|mailto|tel|file):/,
            n = /^\s*((https?|ftp|file):|data:image\/)/;
            this.aHrefSanitizationWhitelist = function (n) {
              return _(n) ? (e = n, this)  : e
            },
            this.imgSrcSanitizationWhitelist = function (e) {
              return _(e) ? (n = e, this)  : n
            },
            this.$get = function () {
              return function (a, t) {
                var i,
                r = t ? n : e;
                return _t && !(_t >= 8) || (i = Na(a).href, '' === i || i.match(r)) ? a : 'unsafe:' + i
              }
            }
          }
          function Ta(e) {
            return e.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1').replace(/\x08/g, '\\x08')
          }
          function Da(e) {
            if ('self' === e) return e;
            if (y(e)) {
              if (e.indexOf('***') > - 1) throw bi('iwcard', 'Illegal sequence *** in string matcher.  String: {0}', e);
              return e = Ta(e).replace('\\*\\*', '.*').replace('\\*', '[^:/.?&;]*'),
              new RegExp('^' + e + '$')
            }
            if (A(e)) return new RegExp('^' + e.source + '$');
            throw bi('imatcher', 'Matchers may only be "self", string patterns or RegExp objects')
          }
          function Ea(e) {
            var n = [
            ];
            return _(e) && r(e, function (e) {
              n.push(Da(e))
            }),
            n
          }
          function $a() {
            this.SCE_CONTEXTS = yi;
            var e = [
              'self'
            ],
            n = [
            ];
            this.resourceUrlWhitelist = function (n) {
              return arguments.length && (e = Ea(n)),
              e
            },
            this.resourceUrlBlacklist = function (e) {
              return arguments.length && (n = Ea(e)),
              n
            },
            this.$get = [
              '$injector',
              function (t) {
                function i(e, n) {
                  return 'self' === e ? Ra(n)  : !!e.exec(n.href)
                }
                function r(a) {
                  var t,
                  r,
                  o = Na(a.toString()),
                  s = !1;
                  for (t = 0, r = e.length; r > t; t++) if (i(e[t], o)) {
                    s = !0;
                    break
                  }
                  if (s) for (t = 0, r = n.length; r > t; t++) if (i(n[t], o)) {
                    s = !1;
                    break
                  }
                  return s
                }
                function o(e) {
                  var n = function (e) {
                    this.$$unwrapTrustedValue = function () {
                      return e
                    }
                  };
                  return e && (n.prototype = new e),
                  n.prototype.valueOf = function () {
                    return this.$$unwrapTrustedValue()
                  },
                  n.prototype.toString = function () {
                    return this.$$unwrapTrustedValue().toString()
                  },
                  n
                }
                function s(e, n) {
                  var t = m.hasOwnProperty(e) ? m[e] : null;
                  if (!t) throw bi('icontext', 'Attempted to trust a value in invalid context. Context: {0}; Value: {1}', e, n);
                  if (null === n || n === a || '' === n) return n;
                  if ('string' != typeof n) throw bi('itype', 'Attempted to trust a non-string value in a content requiring a string: Context: {0}', e);
                  return new t(n)
                }
                function l(e) {
                  return e instanceof d ? e.$$unwrapTrustedValue()  : e
                }
                function c(e, n) {
                  if (null === n || n === a || '' === n) return n;
                  var t = m.hasOwnProperty(e) ? m[e] : null;
                  if (t && n instanceof t) return n.$$unwrapTrustedValue();
                  if (e === yi.RESOURCE_URL) {
                    if (r(n)) return n;
                    throw bi('insecurl', 'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}', n.toString())
                  }
                  if (e === yi.HTML) return u(n);
                  throw bi('unsafe', 'Attempting to use an unsafe value in a safe context.')
                }
                var u = function () {
                  throw bi('unsafe', 'Attempting to use an unsafe value in a safe context.')
                };
                t.has('$sanitize') && (u = t.get('$sanitize'));
                var d = o(),
                m = {
                };
                return m[yi.HTML] = o(d),
                m[yi.CSS] = o(d),
                m[yi.URL] = o(d),
                m[yi.JS] = o(d),
                m[yi.RESOURCE_URL] = o(m[yi.URL]),
                {
                  trustAs: s,
                  getTrusted: c,
                  valueOf: l
                }
              }
            ]
          }
          function Ia() {
            var e = !0;
            this.enabled = function (n) {
              return arguments.length && (e = !!n),
              e
            },
            this.$get = [
              '$parse',
              '$sniffer',
              '$sceDelegate',
              function (n, a, t) {
                if (e && a.msie && a.msieDocumentMode < 8) throw bi('iequirks', 'Strict Contextual Escaping does not support Internet Explorer version < 9 in quirks mode.  You can fix this by adding the text <!doctype html> to the top of your HTML document.  See http://docs.angularjs.org/api/ng.$sce for more information.');
                var i = B(yi);
                i.isEnabled = function () {
                  return e
                },
                i.trustAs = t.trustAs,
                i.getTrusted = t.getTrusted,
                i.valueOf = t.valueOf,
                e || (i.trustAs = i.getTrusted = function (e, n) {
                  return n
                }, i.valueOf = v),
                i.parseAs = function (e, a) {
                  var t = n(a);
                  return t.literal && t.constant ? t : function (n, a) {
                    return i.getTrusted(e, t(n, a))
                  }
                };
                var o = i.parseAs,
                s = i.getTrusted,
                l = i.trustAs;
                return r(yi, function (e, n) {
                  var a = ht(n);
                  i[un('parse_as_' + a)] = function (n) {
                    return o(e, n)
                  },
                  i[un('get_trusted_' + a)] = function (n) {
                    return s(e, n)
                  },
                  i[un('trust_as_' + a)] = function (n) {
                    return l(e, n)
                  }
                }),
                i
              }
            ]
          }
          function La() {
            this.$get = [
              '$window',
              '$document',
              function (e, n) {
                var a,
                t,
                i = {
                },
                r = m((/android (\d+)/.exec(ht((e.navigator || {
                }).userAgent)) || [
                ]) [1]),
                o = /Boxee/i.test((e.navigator || {
                }).userAgent),
                s = n[0] || {
                },
                l = s.documentMode,
                c = /^(Moz|webkit|O|ms)(?=[A-Z])/,
                u = s.body && s.body.style,
                d = !1,
                h = !1;
                if (u) {
                  for (var p in u) if (t = c.exec(p)) {
                    a = t[0],
                    a = a.substr(0, 1).toUpperCase() + a.substr(1);
                    break
                  }
                  a || (a = 'WebkitOpacity' in u && 'webkit'),
                  d = !!('transition' in u || a + 'Transition' in u),
                  h = !!('animation' in u || a + 'Animation' in u),
                  !r || d && h || (d = y(s.body.style.webkitTransition), h = y(s.body.style.webkitAnimation))
                }
                return {
                  history: !(!e.history || !e.history.pushState || 4 > r || o),
                  hashchange: 'onhashchange' in e && (!l || l > 7),
                  hasEvent: function (e) {
                    if ('input' == e && 9 == _t) return !1;
                    if (f(i[e])) {
                      var n = s.createElement('div');
                      i[e] = 'on' + e in n
                    }
                    return i[e]
                  },
                  csp: Dt(),
                  vendorPrefix: a,
                  transitions: d,
                  animations: h,
                  android: r,
                  msie: _t,
                  msieDocumentMode: l
                }
              }
            ]
          }
          function Ba() {
            this.$get = [
              '$rootScope',
              '$browser',
              '$q',
              '$exceptionHandler',
              function (e, n, a, t) {
                function i(i, o, s) {
                  var l,
                  c = a.defer(),
                  u = c.promise,
                  d = _(s) && !s;
                  return l = n.defer(function () {
                    try {
                      c.resolve(i())
                    } catch (n) {
                      c.reject(n),
                      t(n)
                    } finally {
                      delete r[u.$$timeoutId]
                    }
                    d || e.$apply()
                  }, o),
                  u.$$timeoutId = l,
                  r[l] = c,
                  u
                }
                var r = {
                };
                return i.cancel = function (e) {
                  return e && e.$$timeoutId in r ? (r[e.$$timeoutId].reject('canceled'), delete r[e.$$timeoutId], n.defer.cancel(e.$$timeoutId))  : !1
                },
                i
              }
            ]
          }
          function Na(e) {
            var n = e;
            return _t && (wi.setAttribute('href', n), n = wi.href),
            wi.setAttribute('href', n),
            {
              href: wi.href,
              protocol: wi.protocol ? wi.protocol.replace(/:$/, '')  : '',
              host: wi.host,
              search: wi.search ? wi.search.replace(/^\?/, '')  : '',
              hash: wi.hash ? wi.hash.replace(/^#/, '')  : '',
              hostname: wi.hostname,
              port: wi.port,
              pathname: '/' === wi.pathname.charAt(0) ? wi.pathname : '/' + wi.pathname
            }
          }
          function Ra(e) {
            var n = y(e) ? Na(e)  : e;
            return n.protocol === ki.protocol && n.host === ki.host
          }
          function ja() {
            this.$get = g(e)
          }
          function Ka(e) {
            function n(t, i) {
              if (b(t)) {
                var o = {
                };
                return r(t, function (e, a) {
                  o[a] = n(a, e)
                }),
                o
              }
              return e.factory(t + a, i)
            }
            var a = 'Filter';
            this.register = n,
            this.$get = [
              '$injector',
              function (e) {
                return function (n) {
                  return e.get(n + a)
                }
              }
            ],
            n('currency', Ha),
            n('date', Za),
            n('filter', Fa),
            n('json', Ya),
            n('limitTo', Xa),
            n('lowercase', Ci),
            n('number', Ga),
            n('orderBy', Qa),
            n('uppercase', zi)
          }
          function Fa() {
            return function (e, n, a) {
              if (!Pt(e)) return e;
              var t = typeof a,
              i = [
              ];
              i.check = function (e) {
                for (var n = 0; n < i.length; n++) if (!i[n](e)) return !1;
                return !0
              },
              'function' !== t && (a = 'boolean' === t && a ? function (e, n) {
                return Ct.equals(e, n)
              }
               : function (e, n) {
                if (e && n && 'object' == typeof e && 'object' == typeof n) {
                  for (var t in e) if ('$' !== t.charAt(0) && pt.call(e, t) && a(e[t], n[t])) return !0;
                  return !1
                }
                return n = ('' + n).toLowerCase(),
                ('' + e).toLowerCase().indexOf(n) > - 1
              });
              var r = function (e, n) {
                if ('string' == typeof n && '!' === n.charAt(0)) return !r(e, n.substr(1));
                switch (typeof e) {
                  case 'boolean':
                  case 'number':
                  case 'string':
                    return a(e, n);
                  case 'object':
                    switch (typeof n) {
                      case 'object':
                        return a(e, n);
                      default:
                        for (var t in e) if ('$' !== t.charAt(0) && r(e[t], n)) return !0
                    }
                    return !1;
                  case 'array':
                    for (var i = 0; i < e.length; i++) if (r(e[i], n)) return !0;
                    return !1;
                  default:
                    return !1
                  }
              };
              switch (typeof n) {
                case 'boolean':
                case 'number':
                case 'string':
                  n = {
                    $: n
                  };
                case 'object':
                  for (var o in n) !function (e) {
                    'undefined' != typeof n[e] && i.push(function (a) {
                      return r('$' == e ? a : a && a[e], n[e])
                    })
                  }(o);
                  break;
                case 'function':
                  i.push(n);
                  break;
                default:
                  return e
              }
              for (var s = [
              ], l = 0; l < e.length; l++) {
                var c = e[l];
                i.check(c) && s.push(c)
            }
            return s
        }
      }
      function Ha(e) {
        var n = e.NUMBER_FORMATS;
        return function (e, a) {
          return f(a) && (a = n.CURRENCY_SYM),
          Oa(e, n.PATTERNS[1], n.GROUP_SEP, n.DECIMAL_SEP, 2).replace(/\u00A4/g, a)
        }
      }
      function Ga(e) {
        var n = e.NUMBER_FORMATS;
        return function (e, a) {
          return Oa(e, n.PATTERNS[0], n.GROUP_SEP, n.DECIMAL_SEP, a)
        }
      }
      function Oa(e, n, a, t, i) {
        if (null == e || !isFinite(e) || b(e)) return '';
        var r = 0 > e;
        e = Math.abs(e);
        var o = e + '',
        s = '',
        l = [
        ],
        c = !1;
        if ( - 1 !== o.indexOf('e')) {
          var u = o.match(/([\d\.]+)e(-?)(\d+)/);
          u && '-' == u[2] && u[3] > i + 1 ? (o = '0', e = 0)  : (s = o, c = !0)
        }
        if (c) i > 0 && e > - 1 && 1 > e && (s = e.toFixed(i));
         else {
          var d = (o.split(Si) [1] || '').length;
          f(i) && (i = Math.min(Math.max(n.minFrac, d), n.maxFrac)),
          e = + (Math.round( + (e.toString() + 'e' + i)).toString() + 'e' + - i),
          0 === e && (r = !1);
          var m = ('' + e).split(Si),
          h = m[0];
          m = m[1] || '';
          var p,
          v = 0,
          g = n.lgSize,
          _ = n.gSize;
          if (h.length >= g + _) for (v = h.length - g, p = 0; v > p; p++) (v - p) % _ === 0 && 0 !== p && (s += a),
          s += h.charAt(p);
          for (p = v; p < h.length; p++) (h.length - p) % g === 0 && 0 !== p && (s += a),
          s += h.charAt(p);
          for (; m.length < i; ) m += '0';
          i && '0' !== i && (s += t + m.substr(0, i))
        }
        return l.push(r ? n.negPre : n.posPre),
        l.push(s),
        l.push(r ? n.negSuf : n.posSuf),
        l.join('')
      }
      function qa(e, n, a) {
        var t = '';
        for (0 > e && (t = '-', e = - e), e = '' + e; e.length < n; ) e = '0' + e;
        return a && (e = e.substr(e.length - n)),
        t + e
      }
      function Wa(e, n, a, t) {
        return a = a || 0,
        function (i) {
          var r = i['get' + e]();
          return (a > 0 || r > - a) && (r += a),
          0 === r && - 12 == a && (r = 12),
          qa(r, n, t)
        }
      }
      function Ja(e, n) {
        return function (a, t) {
          var i = a['get' + e](),
          r = vt(n ? 'SHORT' + e : e);
          return t[r][i]
        }
      }
      function Va(e) {
        var n = - 1 * e.getTimezoneOffset(),
        a = n >= 0 ? '+' : '';
        return a += qa(Math[n > 0 ? 'floor' : 'ceil'](n / 60), 2) + qa(Math.abs(n % 60), 2)
      }
      function Ua(e, n) {
        return e.getHours() < 12 ? n.AMPMS[0] : n.AMPMS[1]
      }
      function Za(e) {
        function n(e) {
          var n;
          if (n = e.match(a)) {
            var t = new Date(0),
            i = 0,
            r = 0,
            o = n[8] ? t.setUTCFullYear : t.setFullYear,
            s = n[8] ? t.setUTCHours : t.setHours;
            n[9] && (i = m(n[9] + n[10]), r = m(n[9] + n[11])),
            o.call(t, m(n[1]), m(n[2]) - 1, m(n[3]));
            var l = m(n[4] || 0) - i,
            c = m(n[5] || 0) - r,
            u = m(n[6] || 0),
            d = Math.round(1000 * parseFloat('0.' + (n[7] || 0)));
            return s.call(t, l, c, u, d),
            t
          }
          return e
        }
        var a = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function (a, t) {
          var i,
          o,
          s = '',
          l = [
          ];
          if (t = t || 'mediumDate', t = e.DATETIME_FORMATS[t] || t, y(a) && (a = xi.test(a) ? m(a)  : n(a)), w(a) && (a = new Date(a)), !k(a)) return a;
          for (; t; ) o = Mi.exec(t),
          o ? (l = R(l, o, 1), t = l.pop())  : (l.push(t), t = null);
          return r(l, function (n) {
            i = Ai[n],
            s += i ? i(a, e.DATETIME_FORMATS)  : n.replace(/(^'|'$)/g, '').replace(/''/g, '\'')
          }),
          s
        }
      }
      function Ya() {
        return function (e) {
          return H(e, !0)
        }
      }
      function Xa() {
        return function (e, n) {
          if (!Pt(e) && !y(e)) return e;
          if (n = 1 / 0 === Math.abs(Number(n)) ? Number(n)  : m(n), y(e)) return n ? n >= 0 ? e.slice(0, n)  : e.slice(n, e.length)  : '';
          var a,
          t,
          i = [
          ];
          for (n > e.length ? n = e.length : n < - e.length && (n = - e.length), n > 0 ? (a = 0, t = n)  : (a = e.length + n, t = e.length); t > a; a++) i.push(e[a]);
          return i
        }
      }
      function Qa(e) {
        return function (n, a, t) {
          function r(e, n) {
            for (var t = 0; t < a.length; t++) {
              var i = a[t](e, n);
              if (0 !== i) return i
            }
            return 0
          }
          function o(e, n) {
            return O(n) ? function (n, a) {
              return e(a, n)
            }
             : e
          }
          function s(e, n) {
            var a = typeof e,
            t = typeof n;
            return a == t ? (k(e) && k(n) && (e = e.valueOf(), n = n.valueOf()), 'string' == a && (e = e.toLowerCase(), n = n.toLowerCase()), e === n ? 0 : n > e ? - 1 : 1)  : t > a ? - 1 : 1
          }
          if (!i(n)) return n;
          if (!a) return n;
          a = Pt(a) ? a : [
            a
          ],
          a = D(a, function (n) {
            var a = !1,
            t = n || v;
            if (y(n) && (('+' == n.charAt(0) || '-' == n.charAt(0)) && (a = '-' == n.charAt(0), n = n.substring(1)), t = e(n), t.constant)) {
              var i = t();
              return o(function (e, n) {
                return s(e[i], n[i])
              }, a)
            }
            return o(function (e, n) {
              return s(t(e), t(n))
            }, a)
          });
          for (var l = [
          ], c = 0; c < n.length; c++) l.push(n[c]);
          return l.sort(o(r, t))
        }
      }
      function et(e) {
        return S(e) && (e = {
          link: e
        }),
        e.restrict = e.restrict || 'AC',
        g(e)
      }
      function nt(e, n, a, t) {
        function i(n, a) {
          a = a ? '-' + Q(a, '-')  : '',
          t.setClass(e, (n ? Fi : Hi) + a, (n ? Hi : Fi) + a)
        }
        var o = this,
        s = e.parent().controller('form') || Di,
        l = 0,
        c = o.$error = {
        },
        u = [
        ];
        o.$name = n.name || n.ngForm,
        o.$dirty = !1,
        o.$pristine = !0,
        o.$valid = !0,
        o.$invalid = !1,
        s.$addControl(o),
        e.addClass(Gi),
        i(!0),
        o.$addControl = function (e) {
          tn(e.$name, 'input'),
          u.push(e),
          e.$name && (o[e.$name] = e)
        },
        o.$removeControl = function (e) {
          e.$name && o[e.$name] === e && delete o[e.$name],
          r(c, function (n, a) {
            o.$setValidity(a, !0, e)
          }),
          I(u, e)
        },
        o.$setValidity = function (e, n, a) {
          var t = c[e];
          if (n) t && (I(t, a), t.length || (l--, l || (i(n), o.$valid = !0, o.$invalid = !1), c[e] = !1, i(!0, e), s.$setValidity(e, !0, o)));
           else {
            if (l || i(n), t) {
              if (E(t, a)) return
            } else c[e] = t = [
            ],
            l++,
            i(!1, e),
            s.$setValidity(e, !1, o);
            t.push(a),
            o.$valid = !1,
            o.$invalid = !0
          }
        },
        o.$setDirty = function () {
          t.removeClass(e, Gi),
          t.addClass(e, Oi),
          o.$dirty = !0,
          o.$pristine = !1,
          s.$setDirty()
        },
        o.$setPristine = function () {
          t.removeClass(e, Oi),
          t.addClass(e, Gi),
          o.$dirty = !1,
          o.$pristine = !0,
          r(u, function (e) {
            e.$setPristine()
          })
        }
      }
      function at(e, n, t, i) {
        return e.$setValidity(n, t),
        t ? i : a
      }
      function tt(e, n) {
        var a,
        t;
        if (n) for (a = 0; a < n.length; ++a) if (t = n[a], e[t]) return !0;
        return !1
      }
      function it(e, n, a, t, i) {
        if (b(i)) {
          e.$$hasNativeValidators = !0;
          var r = function (r) {
            return e.$error[n] || tt(i, t) || !tt(i, a) ? r : void e.$setValidity(n, !1)
          };
          e.$parsers.push(r)
        }
      }
      function rt(e, n, a, i, r, o) {
        var s = n.prop(mt),
        l = n[0].placeholder,
        c = {
        },
        u = ht(n[0].type);
        if (i.$$validityState = s, !r.android) {
          var d = !1;
          n.on('compositionstart', function () {
            d = !0
          }),
          n.on('compositionend', function () {
            d = !1,
            h()
          })
        }
        var h = function (t) {
          if (!d) {
            var r = n.val();
            if (_t && 'input' === (t || c).type && n[0].placeholder !== l) return void (l = n[0].placeholder);
            'password' !== u && O(a.ngTrim || 'T') && (r = Tt(r));
            var o = s && i.$$hasNativeValidators;
            (i.$viewValue !== r || '' === r && o) && (e.$root.$$phase ? i.$setViewValue(r)  : e.$apply(function () {
              i.$setViewValue(r)
            }))
          }
        };
        if (r.hasEvent('input')) n.on('input', h);
         else {
          var p,
          v = function () {
            p || (p = o.defer(function () {
              h(),
              p = null
            }))
          };
          n.on('keydown', function (e) {
            var n = e.keyCode;
            91 === n || n > 15 && 19 > n || n >= 37 && 40 >= n || v()
          }),
          r.hasEvent('paste') && n.on('paste cut', v)
        }
        n.on('change', h),
        i.$render = function () {
          n.val(i.$isEmpty(i.$viewValue) ? '' : i.$viewValue)
        };
        var g,
        f,
        _ = a.ngPattern;
        if (_) {
          var b = function (e, n) {
            return at(i, 'pattern', i.$isEmpty(n) || e.test(n), n)
          };
          f = _.match(/^\/(.*)\/([gim]*)$/),
          f ? (_ = new RegExp(f[1], f[2]), g = function (e) {
            return b(_, e)
          })  : g = function (a) {
            var i = e.$eval(_);
            if (!i || !i.test) throw t('ngPattern') ('noregexp', 'Expected {0} to be a RegExp but was {1}. Element: {2}', _, i, q(n));
            return b(i, a)
          },
          i.$formatters.push(g),
          i.$parsers.push(g)
        }
        if (a.ngMinlength) {
          var y = m(a.ngMinlength),
          w = function (e) {
            return at(i, 'minlength', i.$isEmpty(e) || e.length >= y, e)
          };
          i.$parsers.push(w),
          i.$formatters.push(w)
        }
        if (a.ngMaxlength) {
          var k = m(a.ngMaxlength),
          S = function (e) {
            return at(i, 'maxlength', i.$isEmpty(e) || e.length <= k, e)
          };
          i.$parsers.push(S),
          i.$formatters.push(S)
        }
      }
      function ot(e, n, t, i, r, o) {
        if (rt(e, n, t, i, r, o), i.$parsers.push(function (e) {
          var n = i.$isEmpty(e);
          return n || Ni.test(e) ? (i.$setValidity('number', !0), '' === e ? null : n ? e : parseFloat(e))  : (i.$setValidity('number', !1), a)
        }), it(i, 'number', ji, null, i.$$validityState), i.$formatters.push(function (e) {
          return i.$isEmpty(e) ? '' : '' + e
        }), t.min) {
          var s = function (e) {
            var n = parseFloat(t.min);
            return at(i, 'min', i.$isEmpty(e) || e >= n, e)
          };
          i.$parsers.push(s),
          i.$formatters.push(s)
        }
        if (t.max) {
          var l = function (e) {
            var n = parseFloat(t.max);
            return at(i, 'max', i.$isEmpty(e) || n >= e, e)
          };
          i.$parsers.push(l),
          i.$formatters.push(l)
        }
        i.$formatters.push(function (e) {
          return at(i, 'number', i.$isEmpty(e) || w(e), e)
        })
      }
      function st(e, n, a, t, i, r) {
        rt(e, n, a, t, i, r);
        var o = function (e) {
          return at(t, 'url', t.$isEmpty(e) || Li.test(e), e)
        };
        t.$formatters.push(o),
        t.$parsers.push(o)
      }
      function lt(e, n, a, t, i, r) {
        rt(e, n, a, t, i, r);
        var o = function (e) {
          return at(t, 'email', t.$isEmpty(e) || Bi.test(e), e)
        };
        t.$formatters.push(o),
        t.$parsers.push(o)
      }
      function ct(e, n, a, t) {
        f(a.name) && n.attr('name', c()),
        n.on('click', function () {
          n[0].checked && e.$apply(function () {
            t.$setViewValue(a.value)
          })
        }),
        t.$render = function () {
          var e = a.value;
          n[0].checked = e == t.$viewValue
        },
        a.$observe('value', t.$render)
      }
      function ut(e, n, a, t) {
        var i = a.ngTrueValue,
        r = a.ngFalseValue;
        y(i) || (i = !0),
        y(r) || (r = !1),
        n.on('click', function () {
          e.$apply(function () {
            t.$setViewValue(n[0].checked)
          })
        }),
        t.$render = function () {
          n[0].checked = t.$viewValue
        },
        t.$isEmpty = function (e) {
          return e !== i
        },
        t.$formatters.push(function (e) {
          return e === i
        }),
        t.$parsers.push(function (e) {
          return e ? i : r
        })
      }
      function dt(e, n) {
        return e = 'ngClass' + e,
        [
          '$animate',
          function (a) {
            function t(e, n) {
              var a = [
              ];
              e: for (var t = 0; t < e.length; t++) {
                for (var i = e[t], r = 0; r < n.length; r++) if (i == n[r]) continue e;
                a.push(i)
              }
              return a
            }
            function i(e) {
              if (Pt(e)) return e;
              if (y(e)) return e.split(' ');
              if (b(e)) {
                var n = [
                ];
                return r(e, function (e, a) {
                  e && (n = n.concat(a.split(' ')))
                }),
                n
              }
              return e
            }
            return {
              restrict: 'AC',
              link: function (o, s, l) {
                function c(e) {
                  var n = d(e, 1);
                  l.$addClass(n)
                }
                function u(e) {
                  var n = d(e, - 1);
                  l.$removeClass(n)
                }
                function d(e, n) {
                  var a = s.data('$classCounts') || {
                  },
                  t = [
                  ];
                  return r(e, function (e) {
                    (n > 0 || a[e]) && (a[e] = (a[e] || 0) + n, a[e] === + (n > 0) && t.push(e))
                  }),
                  s.data('$classCounts', a),
                  t.join(' ')
                }
                function m(e, n) {
                  var i = t(n, e),
                  r = t(e, n);
                  r = d(r, - 1),
                  i = d(i, 1),
                  0 === i.length ? a.removeClass(s, r)  : 0 === r.length ? a.addClass(s, i)  : a.setClass(s, i, r)
                }
                function h(e) {
                  if (n === !0 || o.$index % 2 === n) {
                    var a = i(e || [
                    ]);
                    if (p) {
                      if (!N(e, p)) {
                        var t = i(p);
                        m(t, a)
                      }
                    } else c(a)
                  }
                  p = B(e)
                }
                var p;
                o.$watch(l[e], h, !0),
                l.$observe('class', function () {
                  h(o.$eval(l[e]))
                }),
                'ngClass' !== e && o.$watch('$index', function (a, t) {
                  var r = 1 & a;
                  if (r !== (1 & t)) {
                    var s = i(o.$eval(l[e]));
                    r === n ? c(s)  : u(s)
                  }
                })
              }
            }
          }
        ]
      }
      var mt = 'validity',
      ht = function (e) {
        return y(e) ? e.toLowerCase()  : e
      },
      pt = Object.prototype.hasOwnProperty,
      vt = function (e) {
        return y(e) ? e.toUpperCase()  : e
      },
      gt = function (e) {
        return y(e) ? e.replace(/[A-Z]/g, function (e) {
          return String.fromCharCode(32 | e.charCodeAt(0))
        })  : e
      },
      ft = function (e) {
        return y(e) ? e.replace(/[a-z]/g, function (e) {
          return String.fromCharCode( - 33 & e.charCodeAt(0))
        })  : e
      };
      'i' !== 'I'.toLowerCase() && (ht = gt, vt = ft);
      var _t,
      bt,
      yt,
      wt,
      kt,
      St = [
      ].slice,
      At = [
      ].push,
      Mt = Object.prototype.toString,
      xt = t('ng'),
      Ct = e.angular || (e.angular = {
      }),
      zt = [
        '0',
        '0',
        '0'
      ];
      _t = m((/msie (\d+)/.exec(ht(navigator.userAgent)) || [
      ]) [1]),
      isNaN(_t) && (_t = m((/trident\/.*; rv:(\d+)/.exec(ht(navigator.userAgent)) || [
      ]) [1])),
      p.$inject = [
      ],
      v.$inject = [
      ];
      var Pt = function () {
        return S(Array.isArray) ? Array.isArray : function (e) {
          return '[object Array]' === Mt.call(e)
        }
      }(),
      Tt = function () {
        return String.prototype.trim ? function (e) {
          return y(e) ? e.trim()  : e
        }
         : function (e) {
          return y(e) ? e.replace(/^\s\s*/, '').replace(/\s\s*$/, '')  : e
        }
      }();
      kt = 9 > _t ? function (e) {
        return e = e.nodeName ? e : e[0],
        e.scopeName && 'HTML' != e.scopeName ? vt(e.scopeName + ':' + e.nodeName)  : e.nodeName
      }
       : function (e) {
        return e.nodeName ? e.nodeName : e[0].nodeName
      };
      var Dt = function () {
        if (_(Dt.isActive_)) return Dt.isActive_;
        var e = !(!n.querySelector('[ng-csp]') && !n.querySelector('[data-ng-csp]'));
        if (!e) try {
          new Function('')
        } catch (a) {
          e = !0
        }
        return Dt.isActive_ = e
      },
      Et = /[A-Z]/g,
      $t = {
        full: '1.2.25',
        major: 1,
        minor: 2,
        dot: 25,
        codeName: 'hypnotic-gesticulation'
      };
      vn.expando = 'ng339';
      var It = vn.cache = {
      },
      Lt = 1,
      Bt = e.document.addEventListener ? function (e, n, a) {
        e.addEventListener(n, a, !1)
      }
       : function (e, n, a) {
        e.attachEvent('on' + n, a)
      },
      Nt = e.document.removeEventListener ? function (e, n, a) {
        e.removeEventListener(n, a, !1)
      }
       : function (e, n, a) {
        e.detachEvent('on' + n, a)
      },
      Rt = (vn._data = function (e) {
        return this.cache[e[this.expando]] || {
        }
      }, /([\:\-\_]+(.))/g),
      jt = /^moz([A-Z])/,
      Kt = t('jqLite'),
      Ft = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
      Ht = /<|&#?\w+;/,
      Gt = /<([\w:]+)/,
      Ot = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
      qt = {
        option: [
          1,
          '<select multiple="multiple">',
          '</select>'
        ],
        thead: [
          1,
          '<table>',
          '</table>'
        ],
        col: [
          2,
          '<table><colgroup>',
          '</colgroup></table>'
        ],
        tr: [
          2,
          '<table><tbody>',
          '</tbody></table>'
        ],
        td: [
          3,
          '<table><tbody><tr>',
          '</tr></tbody></table>'
        ],
        _default: [
          0,
          '',
          ''
        ]
      };
      qt.optgroup = qt.option,
      qt.tbody = qt.tfoot = qt.colgroup = qt.caption = qt.thead,
      qt.th = qt.td;
      var Wt = vn.prototype = {
        ready: function (a) {
          function t() {
            i || (i = !0, a())
          }
          var i = !1;
          'complete' === n.readyState ? setTimeout(t)  : (this.on('DOMContentLoaded', t), vn(e).on('load', t))
        },
        toString: function () {
          var e = [
          ];
          return r(this, function (n) {
            e.push('' + n)
          }),
          '[' + e.join(', ') + ']'
        },
        eq: function (e) {
          return bt(e >= 0 ? this[e] : this[this.length + e])
        },
        length: 0,
        push: At,
        sort: [
        ].sort,
        splice: [
        ].splice
      },
      Jt = {
      };
      r('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function (e) {
        Jt[ht(e)] = e
      });
      var Vt = {
      };
      r('input,select,option,textarea,button,form,details'.split(','), function (e) {
        Vt[vt(e)] = !0
      }),
      r({
        data: wn,
        removeData: bn
      }, function (e, n) {
        vn[n] = e
      }),
      r({
        data: wn,
        inheritedData: Cn,
        scope: function (e) {
          return bt.data(e, '$scope') || Cn(e.parentNode || e, [
            '$isolateScope',
            '$scope'
          ])
        },
        isolateScope: function (e) {
          return bt.data(e, '$isolateScope') || bt.data(e, '$isolateScopeNoTemplate')
        },
        controller: xn,
        injector: function (e) {
          return Cn(e, '$injector')
        },
        removeAttr: function (e, n) {
          e.removeAttribute(n)
        },
        hasClass: kn,
        css: function (e, n, t) {
          if (n = un(n), !_(t)) {
            var i;
            return 8 >= _t && (i = e.currentStyle && e.currentStyle[n], '' === i && (i = 'auto')),
            i = i || e.style[n],
            8 >= _t && (i = '' === i ? a : i),
            i
          }
          e.style[n] = t
        },
        attr: function (e, n, t) {
          var i = ht(n);
          if (Jt[i]) {
            if (!_(t)) return e[n] || (e.attributes.getNamedItem(n) || p).specified ? i : a;
            t ? (e[n] = !0, e.setAttribute(n, i))  : (e[n] = !1, e.removeAttribute(i))
          } else if (_(t)) e.setAttribute(n, t);
           else if (e.getAttribute) {
            var r = e.getAttribute(n, 2);
            return null === r ? a : r
          }
        },
        prop: function (e, n, a) {
          return _(a) ? void (e[n] = a)  : e[n]
        },
        text: function () {
          function e(e, a) {
            var t = n[e.nodeType];
            return f(a) ? t ? e[t] : '' : void (e[t] = a)
          }
          var n = [
          ];
          return 9 > _t ? (n[1] = 'innerText', n[3] = 'nodeValue')  : n[1] = n[3] = 'textContent',
          e.$dv = '',
          e
        }(),
        val: function (e, n) {
          if (f(n)) {
            if ('SELECT' === kt(e) && e.multiple) {
              var a = [
              ];
              return r(e.options, function (e) {
                e.selected && a.push(e.value || e.text)
              }),
              0 === a.length ? null : a
            }
            return e.value
          }
          e.value = n
        },
        html: function (e, n) {
          if (f(n)) return e.innerHTML;
          for (var a = 0, t = e.childNodes; a < t.length; a++) fn(t[a]);
          e.innerHTML = n
        },
        empty: zn
      }, function (e, n) {
        vn.prototype[n] = function (n, t) {
          var i,
          r,
          o = this.length;
          if (e !== zn && (2 == e.length && e !== kn && e !== xn ? n : t) === a) {
            if (b(n)) {
              for (i = 0; o > i; i++) if (e === wn) e(this[i], n);
               else for (r in n) e(this[i], r, n[r]);
              return this
            }
            for (var s = e.$dv, l = s === a ? Math.min(o, 1)  : o, c = 0; l > c; c++) {
              var u = e(this[c], n, t);
              s = s ? s + u : u
            }
            return s
          }
          for (i = 0; o > i; i++) e(this[i], n, t);
          return this
        }
      }),
      r({
        removeData: bn,
        dealoc: fn,
        on: function zr(e, a, t, i) {
          if (_(i)) throw Kt('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');
          var o = yn(e, 'events'),
          s = yn(e, 'handle');
          o || yn(e, 'events', o = {
          }),
          s || yn(e, 'handle', s = Tn(e, o)),
          r(a.split(' '), function (a) {
            var i = o[a];
            if (!i) {
              if ('mouseenter' == a || 'mouseleave' == a) {
                var r = n.body.contains || n.body.compareDocumentPosition ? function (e, n) {
                  var a = 9 === e.nodeType ? e.documentElement : e,
                  t = n && n.parentNode;
                  return e === t || !(!t || 1 !== t.nodeType || !(a.contains ? a.contains(t)  : e.compareDocumentPosition && 16 & e.compareDocumentPosition(t)))
                }
                 : function (e, n) {
                  if (n) for (; n = n.parentNode; ) if (n === e) return !0;
                  return !1
                };
                o[a] = [
                ];
                var l = {
                  mouseleave: 'mouseout',
                  mouseenter: 'mouseover'
                };
                zr(e, l[a], function (e) {
                  var n = this,
                  t = e.relatedTarget;
                  (!t || t !== n && !r(n, t)) && s(e, a)
                })
              } else Bt(e, a, s),
              o[a] = [
              ];
              i = o[a]
            }
            i.push(t)
          })
        },
        off: _n,
        one: function (e, n, a) {
          e = bt(e),
          e.on(n, function t() {
            e.off(n, a),
            e.off(n, t)
          }),
          e.on(n, a)
        },
        replaceWith: function (e, n) {
          var a,
          t = e.parentNode;
          fn(e),
          r(new vn(n), function (n) {
            a ? t.insertBefore(n, a.nextSibling)  : t.replaceChild(n, e),
            a = n
          })
        },
        children: function (e) {
          var n = [
          ];
          return r(e.childNodes, function (e) {
            1 === e.nodeType && n.push(e)
          }),
          n
        },
        contents: function (e) {
          return e.contentDocument || e.childNodes || [
          ]
        },
        append: function (e, n) {
          r(new vn(n), function (n) {
            (1 === e.nodeType || 11 === e.nodeType) && e.appendChild(n)
          })
        },
        prepend: function (e, n) {
          if (1 === e.nodeType) {
            var a = e.firstChild;
            r(new vn(n), function (n) {
              e.insertBefore(n, a)
            })
          }
        },
        wrap: function (e, n) {
          n = bt(n) [0];
          var a = e.parentNode;
          a && a.replaceChild(n, e),
          n.appendChild(e)
        },
        remove: function (e) {
          fn(e);
          var n = e.parentNode;
          n && n.removeChild(e)
        },
        after: function (e, n) {
          var a = e,
          t = e.parentNode;
          r(new vn(n), function (e) {
            t.insertBefore(e, a.nextSibling),
            a = e
          })
        },
        addClass: An,
        removeClass: Sn,
        toggleClass: function (e, n, a) {
          n && r(n.split(' '), function (n) {
            var t = a;
            f(t) && (t = !kn(e, n)),
            (t ? An : Sn) (e, n)
          })
        },
        parent: function (e) {
          var n = e.parentNode;
          return n && 11 !== n.nodeType ? n : null
        },
        next: function (e) {
          if (e.nextElementSibling) return e.nextElementSibling;
          for (var n = e.nextSibling; null != n && 1 !== n.nodeType; ) n = n.nextSibling;
          return n
        },
        find: function (e, n) {
          return e.getElementsByTagName ? e.getElementsByTagName(n)  : [
          ]
        },
        clone: gn,
        triggerHandler: function (e, n, a) {
          var t,
          i,
          o,
          s = n.type || n,
          l = (yn(e, 'events') || {
          }) [s];
          l && (t = {
            preventDefault: function () {
              this.defaultPrevented = !0
            },
            isDefaultPrevented: function () {
              return this.defaultPrevented === !0
            },
            stopPropagation: p,
            type: s,
            target: e
          }, n.type && (t = d(t, n)), i = B(l), o = a ? [
            t
          ].concat(a)  : [
            t
          ], r(i, function (n) {
            n.apply(e, o)
          }))
        }
      }, function (e, n) {
        vn.prototype[n] = function (n, a, t) {
          for (var i, r = 0; r < this.length; r++) f(i) ? (i = e(this[r], n, a, t), _(i) && (i = bt(i)))  : Mn(i, e(this[r], n, a, t));
          return _(i) ? i : this
        },
        vn.prototype.bind = vn.prototype.on,
        vn.prototype.unbind = vn.prototype.off
      }),
      En.prototype = {
        put: function (e, n) {
          this[Dn(e, this.nextUid)] = n
        },
        get: function (e) {
          return this[Dn(e, this.nextUid)]
        },
        remove: function (e) {
          var n = this[e = Dn(e, this.nextUid)];
          return delete this[e],
          n
        }
      };
      var Ut = /^function\s*[^\(]*\(\s*([^\)]*)\)/m,
      Zt = /,/,
      Yt = /^\s*(_?)(\S+?)\1\s*$/,
      Xt = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
      Qt = t('$injector'),
      ei = t('$animate'),
      ni = [
        '$provide',
        function (e) {
          this.$$selectors = {
          },
          this.register = function (n, a) {
            var t = n + '-animation';
            if (n && '.' != n.charAt(0)) throw ei('notcsel', 'Expecting class selector starting with \'.\' got \'{0}\'.', n);
            this.$$selectors[n.substr(1)] = t,
            e.factory(t, a)
          },
          this.classNameFilter = function (e) {
            return 1 === arguments.length && (this.$$classNameFilter = e instanceof RegExp ? e : null),
            this.$$classNameFilter
          },
          this.$get = [
            '$timeout',
            '$$asyncCallback',
            function (e, n) {
              function a(e) {
                e && n(e)
              }
              return {
                enter: function (e, n, t, i) {
                  t ? t.after(e)  : (n && n[0] || (n = t.parent()), n.append(e)),
                  a(i)
                },
                leave: function (e, n) {
                  e.remove(),
                  a(n)
                },
                move: function (e, n, a, t) {
                  this.enter(e, n, a, t)
                },
                addClass: function (e, n, t) {
                  n = y(n) ? n : Pt(n) ? n.join(' ')  : '',
                  r(e, function (e) {
                    An(e, n)
                  }),
                  a(t)
                },
                removeClass: function (e, n, t) {
                  n = y(n) ? n : Pt(n) ? n.join(' ')  : '',
                  r(e, function (e) {
                    Sn(e, n)
                  }),
                  a(t)
                },
                setClass: function (e, n, t, i) {
                  r(e, function (e) {
                    An(e, n),
                    Sn(e, t)
                  }),
                  a(i)
                },
                enabled: p
              }
            }
          ]
        }
      ],
      ai = t('$compile');
      Fn.$inject = [
        '$provide',
        '$$sanitizeUriProvider'
      ];
      var ti = /^(x[\:\-_]|data[\:\-_])/i,
      ii = t('$interpolate'),
      ri = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/,
      oi = {
        http: 80,
        https: 443,
        ftp: 21
      },
      si = t('$location');
      ha.prototype = ma.prototype = da.prototype = {
        $$html5: !1,
        $$replace: !1,
        absUrl: pa('$$absUrl'),
        url: function (e) {
          if (f(e)) return this.$$url;
          var n = ri.exec(e);
          return n[1] && this.path(decodeURIComponent(n[1])),
          (n[2] || n[1]) && this.search(n[3] || ''),
          this.hash(n[5] || ''),
          this
        },
        protocol: pa('$$protocol'),
        host: pa('$$host'),
        port: pa('$$port'),
        path: va('$$path', function (e) {
          return e = e ? e.toString()  : '',
          '/' == e.charAt(0) ? e : '/' + e
        }),
        search: function (e, n) {
          switch (arguments.length) {
            case 0:
              return this.$$search;
            case 1:
              if (y(e) || w(e)) e = e.toString(),
              this.$$search = J(e);
               else {
                if (!b(e)) throw si('isrcharg', 'The first argument of the `$location#search()` call must be a string or an object.');
                r(e, function (n, a) {
                  null == n && delete e[a]
                }),
                this.$$search = e
              }
              break;
            default:
              f(n) || null === n ? delete this.$$search[e] : this.$$search[e] = n
          }
          return this.$$compose(),
          this
        },
        hash: va('$$hash', function (e) {
          return e ? e.toString()  : ''
        }),
        replace: function () {
          return this.$$replace = !0,
          this
        }
      };
      var li,
      ci = t('$parse'),
      ui = {
      },
      di = Function.prototype.call,
      mi = Function.prototype.apply,
      hi = Function.prototype.bind,
      pi = {
        'null': function () {
          return null
        },
        'true': function () {
          return !0
        },
        'false': function () {
          return !1
        },
        undefined: p,
        '+': function (e, n, t, i) {
          return t = t(e, n),
          i = i(e, n),
          _(t) ? _(i) ? t + i : t : _(i) ? i : a
        },
        '-': function (e, n, a, t) {
          return a = a(e, n),
          t = t(e, n),
          (_(a) ? a : 0) - (_(t) ? t : 0)
        },
        '*': function (e, n, a, t) {
          return a(e, n) * t(e, n)
        },
        '/': function (e, n, a, t) {
          return a(e, n) / t(e, n)
        },
        '%': function (e, n, a, t) {
          return a(e, n) % t(e, n)
        },
        '^': function (e, n, a, t) {
          return a(e, n) ^ t(e, n)
        },
        '=': p,
        '===': function (e, n, a, t) {
          return a(e, n) === t(e, n)
        },
        '!==': function (e, n, a, t) {
          return a(e, n) !== t(e, n)
        },
        '==': function (e, n, a, t) {
          return a(e, n) == t(e, n)
        },
        '!=': function (e, n, a, t) {
          return a(e, n) != t(e, n)
        },
        '<': function (e, n, a, t) {
          return a(e, n) < t(e, n)
        },
        '>': function (e, n, a, t) {
          return a(e, n) > t(e, n)
        },
        '<=': function (e, n, a, t) {
          return a(e, n) <= t(e, n)
        },
        '>=': function (e, n, a, t) {
          return a(e, n) >= t(e, n)
        },
        '&&': function (e, n, a, t) {
          return a(e, n) && t(e, n)
        },
        '||': function (e, n, a, t) {
          return a(e, n) || t(e, n)
        },
        '&': function (e, n, a, t) {
          return a(e, n) & t(e, n)
        },
        '|': function (e, n, a, t) {
          return t(e, n) (e, n, a(e, n))
        },
        '!': function (e, n, a) {
          return !a(e, n)
        }
      },
      vi = {
        n: '\n',
        f: '\f',
        r: '\r',
        t: '\t',
        v: '\v',
        '\'': '\'',
        '"': '"'
      },
      gi = function (e) {
        this.options = e
      };
      gi.prototype = {
        constructor: gi,
        lex: function (e) {
          for (this.text = e, this.index = 0, this.ch = a, this.lastCh = ':', this.tokens = [
          ]; this.index < this.text.length; ) {
            if (this.ch = this.text.charAt(this.index), this.is('"\'')) this.readString(this.ch);
             else if (this.isNumber(this.ch) || this.is('.') && this.isNumber(this.peek())) this.readNumber();
             else if (this.isIdent(this.ch)) this.readIdent();
             else if (this.is('(){}[].,;:?')) this.tokens.push({
              index: this.index,
              text: this.ch
            }),
            this.index++;
             else {
              if (this.isWhitespace(this.ch)) {
                this.index++;
                continue
              }
              var n = this.ch + this.peek(),
              t = n + this.peek(2),
              i = pi[this.ch],
              r = pi[n],
              o = pi[t];
              o ? (this.tokens.push({
                index: this.index,
                text: t,
                fn: o
              }), this.index += 3)  : r ? (this.tokens.push({
                index: this.index,
                text: n,
                fn: r
              }), this.index += 2)  : i ? (this.tokens.push({
                index: this.index,
                text: this.ch,
                fn: i
              }), this.index += 1)  : this.throwError('Unexpected next character ', this.index, this.index + 1)
            }
            this.lastCh = this.ch
          }
          return this.tokens
        },
        is: function (e) {
          return - 1 !== e.indexOf(this.ch)
        },
        was: function (e) {
          return - 1 !== e.indexOf(this.lastCh)
        },
        peek: function (e) {
          var n = e || 1;
          return this.index + n < this.text.length ? this.text.charAt(this.index + n)  : !1
        },
        isNumber: function (e) {
          return e >= '0' && '9' >= e
        },
        isWhitespace: function (e) {
          return ' ' === e || '\r' === e || '\t' === e || '\n' === e || '\v' === e || ' ' === e
        },
        isIdent: function (e) {
          return e >= 'a' && 'z' >= e || e >= 'A' && 'Z' >= e || '_' === e || '$' === e
        },
        isExpOperator: function (e) {
          return '-' === e || '+' === e || this.isNumber(e)
        },
        throwError: function (e, n, a) {
          a = a || this.index;
          var t = _(n) ? 's ' + n + '-' + this.index + ' [' + this.text.substring(n, a) + ']' : ' ' + a;
          throw ci('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].', e, t, this.text)
        },
        readNumber: function () {
          for (var e = '', n = this.index; this.index < this.text.length; ) {
            var a = ht(this.text.charAt(this.index));
            if ('.' == a || this.isNumber(a)) e += a;
             else {
              var t = this.peek();
              if ('e' == a && this.isExpOperator(t)) e += a;
               else if (this.isExpOperator(a) && t && this.isNumber(t) && 'e' == e.charAt(e.length - 1)) e += a;
               else {
                if (!this.isExpOperator(a) || t && this.isNumber(t) || 'e' != e.charAt(e.length - 1)) break;
                this.throwError('Invalid exponent')
              }
            }
            this.index++
          }
          e = 1 * e,
          this.tokens.push({
            index: n,
            text: e,
            literal: !0,
            constant: !0,
            fn: function () {
              return e
            }
          })
        },
        readIdent: function () {
          for (var e, n, a, t, i = this, r = '', o = this.index; this.index < this.text.length && (t = this.text.charAt(this.index), '.' === t || this.isIdent(t) || this.isNumber(t)); ) '.' === t && (e = this.index),
          r += t,
          this.index++;
          if (e) for (n = this.index; n < this.text.length; ) {
            if (t = this.text.charAt(n), '(' === t) {
              a = r.substr(e - o + 1),
              r = r.substr(0, e - o),
              this.index = n;
              break
            }
            if (!this.isWhitespace(t)) break;
            n++
          }
          var s = {
            index: o,
            text: r
          };
          if (pi.hasOwnProperty(r)) s.fn = pi[r],
          s.literal = !0,
          s.constant = !0;
           else {
            var l = Sa(r, this.options, this.text);
            s.fn = d(function (e, n) {
              return l(e, n)
            }, {
              assign: function (e, n) {
                return wa(e, r, n, i.text, i.options)
              }
            })
          }
          this.tokens.push(s),
          a && (this.tokens.push({
            index: e,
            text: '.'
          }), this.tokens.push({
            index: e + 1,
            text: a
          }))
        },
        readString: function (e) {
          var n = this.index;
          this.index++;
          for (var a = '', t = e, i = !1; this.index < this.text.length; ) {
            var r = this.text.charAt(this.index);
            if (t += r, i) {
              if ('u' === r) {
                var o = this.text.substring(this.index + 1, this.index + 5);
                o.match(/[\da-f]{4}/i) || this.throwError('Invalid unicode escape [\\u' + o + ']'),
                this.index += 4,
                a += String.fromCharCode(parseInt(o, 16))
              } else {
                var s = vi[r];
                a += s || r
              }
              i = !1
            } else if ('\\' === r) i = !0;
             else {
              if (r === e) return this.index++,
              void this.tokens.push({
                index: n,
                text: t,
                string: a,
                literal: !0,
                constant: !0,
                fn: function () {
                  return a
                }
              });
              a += r
            }
            this.index++
          }
          this.throwError('Unterminated quote', n)
        }
      };
      var fi = function (e, n, a) {
        this.lexer = e,
        this.$filter = n,
        this.options = a
      };
      fi.ZERO = d(function () {
        return 0
      }, {
        constant: !0
      }),
      fi.prototype = {
        constructor: fi,
        parse: function (e) {
          this.text = e,
          this.tokens = this.lexer.lex(e);
          var n = this.statements();
          return 0 !== this.tokens.length && this.throwError('is an unexpected token', this.tokens[0]),
          n.literal = !!n.literal,
          n.constant = !!n.constant,
          n
        },
        primary: function () {
          var e;
          if (this.expect('(')) e = this.filterChain(),
          this.consume(')');
           else if (this.expect('[')) e = this.arrayDeclaration();
           else if (this.expect('{')) e = this.object();
           else {
            var n = this.expect();
            e = n.fn,
            e || this.throwError('not a primary expression', n),
            e.literal = !!n.literal,
            e.constant = !!n.constant
          }
          for (var a, t; a = this.expect('(', '[', '.'); ) '(' === a.text ? (e = this.functionCall(e, t), t = null)  : '[' === a.text ? (t = e, e = this.objectIndex(e))  : '.' === a.text ? (t = e, e = this.fieldAccess(e))  : this.throwError('IMPOSSIBLE');
          return e
        },
        throwError: function (e, n) {
          throw ci('syntax', 'Syntax Error: Token \'{0}\' {1} at column {2} of the expression [{3}] starting at [{4}].', n.text, e, n.index + 1, this.text, this.text.substring(n.index))
        },
        peekToken: function () {
          if (0 === this.tokens.length) throw ci('ueoe', 'Unexpected end of expression: {0}', this.text);
          return this.tokens[0]
        },
        peek: function (e, n, a, t) {
          if (this.tokens.length > 0) {
            var i = this.tokens[0],
            r = i.text;
            if (r === e || r === n || r === a || r === t || !e && !n && !a && !t) return i
          }
          return !1
        },
        expect: function (e, n, a, t) {
          var i = this.peek(e, n, a, t);
          return i ? (this.tokens.shift(), i)  : !1
        },
        consume: function (e) {
          this.expect(e) || this.throwError('is unexpected, expecting [' + e + ']', this.peek())
        },
        unaryFn: function (e, n) {
          return d(function (a, t) {
            return e(a, t, n)
          }, {
            constant: n.constant
          })
        },
        ternaryFn: function (e, n, a) {
          return d(function (t, i) {
            return e(t, i) ? n(t, i)  : a(t, i)
          }, {
            constant: e.constant && n.constant && a.constant
          })
        },
        binaryFn: function (e, n, a) {
          return d(function (t, i) {
            return n(t, i, e, a)
          }, {
            constant: e.constant && a.constant
          })
        },
        statements: function () {
          for (var e = [
          ]; ; ) if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']') && e.push(this.filterChain()), !this.expect(';')) return 1 === e.length ? e[0] : function (n, a) {
            for (var t, i = 0; i < e.length; i++) {
              var r = e[i];
              r && (t = r(n, a))
            }
            return t
          }
        },
        filterChain: function () {
          for (var e, n = this.expression(); ; ) {
            if (!(e = this.expect('|'))) return n;
            n = this.binaryFn(n, e.fn, this.filter())
          }
        },
        filter: function () {
          for (var e = this.expect(), n = this.$filter(e.text), a = [
          ]; ; ) {
            if (!(e = this.expect(':'))) {
              var t = function (e, t, i) {
                for (var r = [
                  i
                ], o = 0; o < a.length; o++) r.push(a[o](e, t));
                return n.apply(e, r)
              };
              return function () {
                return t
              }
            }
            a.push(this.expression())
          }
        },
        expression: function () {
          return this.assignment()
        },
        assignment: function () {
          var e,
          n,
          a = this.ternary();
          return (n = this.expect('=')) ? (a.assign || this.throwError('implies assignment but [' + this.text.substring(0, n.index) + '] can not be assigned to', n), e = this.ternary(), function (n, t) {
            return a.assign(n, e(n, t), t)
          })  : a
        },
        ternary: function () {
          var e,
          n,
          a = this.logicalOR();
          return (n = this.expect('?')) ? (e = this.assignment(), (n = this.expect(':')) ? this.ternaryFn(a, e, this.assignment())  : void this.throwError('expected :', n))  : a
        },
        logicalOR: function () {
          for (var e, n = this.logicalAND(); ; ) {
            if (!(e = this.expect('||'))) return n;
            n = this.binaryFn(n, e.fn, this.logicalAND())
          }
        },
        logicalAND: function () {
          var e,
          n = this.equality();
          return (e = this.expect('&&')) && (n = this.binaryFn(n, e.fn, this.logicalAND())),
          n
        },
        equality: function () {
          var e,
          n = this.relational();
          return (e = this.expect('==', '!=', '===', '!==')) && (n = this.binaryFn(n, e.fn, this.equality())),
          n
        },
        relational: function () {
          var e,
          n = this.additive();
          return (e = this.expect('<', '>', '<=', '>=')) && (n = this.binaryFn(n, e.fn, this.relational())),
          n
        },
        additive: function () {
          for (var e, n = this.multiplicative(); e = this.expect('+', '-'); ) n = this.binaryFn(n, e.fn, this.multiplicative());
          return n
        },
        multiplicative: function () {
          for (var e, n = this.unary(); e = this.expect('*', '/', '%'); ) n = this.binaryFn(n, e.fn, this.unary());
          return n
        },
        unary: function () {
          var e;
          return this.expect('+') ? this.primary()  : (e = this.expect('-')) ? this.binaryFn(fi.ZERO, e.fn, this.unary())  : (e = this.expect('!')) ? this.unaryFn(e.fn, this.unary())  : this.primary()
        },
        fieldAccess: function (e) {
          var n = this,
          a = this.expect().text,
          t = Sa(a, this.options, this.text);
          return d(function (n, a, i) {
            return t(i || e(n, a))
          }, {
            assign: function (t, i, r) {
              var o = e(t, r);
              return o || e.assign(t, o = {
              }),
              wa(o, a, i, n.text, n.options)
            }
          })
        },
        objectIndex: function (e) {
          var n = this,
          t = this.expression();
          return this.consume(']'),
          d(function (i, r) {
            var o,
            s,
            l = e(i, r),
            c = t(i, r);
            return _a(c, n.text),
            l ? (o = ba(l[c], n.text), o && o.then && n.options.unwrapPromises && (s = o, '$$v' in o || (s.$$v = a, s.then(function (e) {
              s.$$v = e
            })), o = o.$$v), o)  : a
          }, {
            assign: function (a, i, r) {
              var o = _a(t(a, r), n.text),
              s = ba(e(a, r), n.text);
              return s || e.assign(a, s = {
              }),
              s[o] = i
            }
          })
        },
        functionCall: function (e, n) {
          var a = [
          ];
          if (')' !== this.peekToken().text) do a.push(this.expression());
          while (this.expect(','));
          this.consume(')');
          var t = this;
          return function (i, r) {
            for (var o = [
            ], s = n ? n(i, r)  : i, l = 0; l < a.length; l++) o.push(ba(a[l](i, r), t.text));
            var c = e(i, r, s) || p;
            ba(s, t.text),
            ya(c, t.text);
            var u = c.apply ? c.apply(s, o)  : c(o[0], o[1], o[2], o[3], o[4]);
            return ba(u, t.text)
          }
        },
        arrayDeclaration: function () {
          var e = [
          ],
          n = !0;
          if (']' !== this.peekToken().text) do {
            if (this.peek(']')) break;
            var a = this.expression();
            e.push(a),
            a.constant || (n = !1)
          } while (this.expect(','));
          return this.consume(']'),
          d(function (n, a) {
            for (var t = [
            ], i = 0; i < e.length; i++) t.push(e[i](n, a));
            return t
          }, {
            literal: !0,
            constant: n
          })
        },
        object: function () {
          var e = [
          ],
          n = !0;
          if ('}' !== this.peekToken().text) do {
            if (this.peek('}')) break;
            var a = this.expect(),
            t = a.string || a.text;
            this.consume(':');
            var i = this.expression();
            e.push({
              key: t,
              value: i
            }),
            i.constant || (n = !1)
          } while (this.expect(','));
          return this.consume('}'),
          d(function (n, a) {
            for (var t = {
            }, i = 0; i < e.length; i++) {
              var r = e[i];
              t[r.key] = r.value(n, a)
            }
            return t
          }, {
            literal: !0,
            constant: n
          })
        }
      };
      var _i = {
      },
      bi = t('$sce'),
      yi = {
        HTML: 'html',
        CSS: 'css',
        URL: 'url',
        RESOURCE_URL: 'resourceUrl',
        JS: 'js'
      },
      wi = n.createElement('a'),
      ki = Na(e.location.href, !0);
      Ka.$inject = [
        '$provide'
      ],
      Ha.$inject = [
        '$locale'
      ],
      Ga.$inject = [
        '$locale'
      ];
      var Si = '.',
      Ai = {
        yyyy: Wa('FullYear', 4),
        yy: Wa('FullYear', 2, 0, !0),
        y: Wa('FullYear', 1),
        MMMM: Ja('Month'),
        MMM: Ja('Month', !0),
        MM: Wa('Month', 2, 1),
        M: Wa('Month', 1, 1),
        dd: Wa('Date', 2),
        d: Wa('Date', 1),
        HH: Wa('Hours', 2),
        H: Wa('Hours', 1),
        hh: Wa('Hours', 2, - 12),
        h: Wa('Hours', 1, - 12),
        mm: Wa('Minutes', 2),
        m: Wa('Minutes', 1),
        ss: Wa('Seconds', 2),
        s: Wa('Seconds', 1),
        sss: Wa('Milliseconds', 3),
        EEEE: Ja('Day'),
        EEE: Ja('Day', !0),
        a: Ua,
        Z: Va
      },
      Mi = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,
      xi = /^\-?\d+$/;
      Za.$inject = [
        '$locale'
      ];
      var Ci = g(ht),
      zi = g(vt);
      Qa.$inject = [
        '$parse'
      ];
      var Pi = g({
        restrict: 'E',
        compile: function (e, a) {
          return 8 >= _t && (a.href || a.name || a.$set('href', ''), e.append(n.createComment('IE fix'))),
          a.href || a.xlinkHref || a.name ? void 0 : function (e, n) {
            var a = '[object SVGAnimatedString]' === Mt.call(n.prop('href')) ? 'xlink:href' : 'href';
            n.on('click', function (e) {
              n.attr(a) || e.preventDefault()
            })
          }
        }
      }),
      Ti = {
      };
      r(Jt, function (e, n) {
        if ('multiple' != e) {
          var a = Hn('ng-' + n);
          Ti[a] = function () {
            return {
              priority: 100,
              link: function (e, t, i) {
                e.$watch(i[a], function (e) {
                  i.$set(n, !!e)
                })
              }
            }
          }
        }
      }),
      r(['src',
      'srcset',
      'href'], function (e) {
        var n = Hn('ng-' + e);
        Ti[n] = function () {
          return {
            priority: 99,
            link: function (a, t, i) {
              var r = e,
              o = e;
              'href' === e && '[object SVGAnimatedString]' === Mt.call(t.prop('href')) && (o = 'xlinkHref', i.$attr[o] = 'xlink:href', r = null),
              i.$observe(n, function (n) {
                return n ? (i.$set(o, n), void (_t && r && t.prop(r, i[o])))  : void ('href' === e && i.$set(o, null))
              })
            }
          }
        }
      });
      var Di = {
        $addControl: p,
        $removeControl: p,
        $setValidity: p,
        $setDirty: p,
        $setPristine: p
      };
      nt.$inject = [
        '$element',
        '$attrs',
        '$scope',
        '$animate'
      ];
      var Ei = function (e) {
        return ['$timeout',
        function (n) {
          var t = {
            name: 'form',
            restrict: e ? 'EAC' : 'E',
            controller: nt,
            compile: function () {
              return {
                pre: function (e, t, i, r) {
                  if (!i.action) {
                    var o = function (e) {
                      e.preventDefault ? e.preventDefault()  : e.returnValue = !1
                    };
                    Bt(t[0], 'submit', o),
                    t.on('$destroy', function () {
                      n(function () {
                        Nt(t[0], 'submit', o)
                      }, 0, !1)
                    })
                  }
                  var s = t.parent().controller('form'),
                  l = i.name || i.ngForm;
                  l && wa(e, l, r, l),
                  s && t.on('$destroy', function () {
                    s.$removeControl(r),
                    l && wa(e, l, a, l),
                    d(r, Di)
                  })
                }
              }
            }
          };
          return t
        }
        ]
      },
      $i = Ei(),
      Ii = Ei(!0),
      Li = /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/,
      Bi = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,
      Ni = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/,
      Ri = {
        text: rt,
        number: ot,
        url: st,
        email: lt,
        radio: ct,
        checkbox: ut,
        hidden: p,
        button: p,
        submit: p,
        reset: p,
        file: p
      },
      ji = [
        'badInput'
      ],
      Ki = [
        '$browser',
        '$sniffer',
        function (e, n) {
          return {
            restrict: 'E',
            require: '?ngModel',
            link: function (a, t, i, r) {
              r && (Ri[ht(i.type)] || Ri.text) (a, t, i, r, n, e)
            }
          }
        }
      ],
      Fi = 'ng-valid',
      Hi = 'ng-invalid',
      Gi = 'ng-pristine',
      Oi = 'ng-dirty',
      qi = [
        '$scope',
        '$exceptionHandler',
        '$attrs',
        '$element',
        '$parse',
        '$animate',
        function (e, n, a, i, o, s) {
          function l(e, n) {
            n = n ? '-' + Q(n, '-')  : '',
            s.removeClass(i, (e ? Hi : Fi) + n),
            s.addClass(i, (e ? Fi : Hi) + n)
          }
          this.$viewValue = Number.NaN,
          this.$modelValue = Number.NaN,
          this.$parsers = [
          ],
          this.$formatters = [
          ],
          this.$viewChangeListeners = [
          ],
          this.$pristine = !0,
          this.$dirty = !1,
          this.$valid = !0,
          this.$invalid = !1,
          this.$name = a.name;
          var c = o(a.ngModel),
          u = c.assign;
          if (!u) throw t('ngModel') ('nonassign', 'Expression \'{0}\' is non-assignable. Element: {1}', a.ngModel, q(i));
          this.$render = p,
          this.$isEmpty = function (e) {
            return f(e) || '' === e || null === e || e !== e
          };
          var d = i.inheritedData('$formController') || Di,
          m = 0,
          h = this.$error = {
          };
          i.addClass(Gi),
          l(!0),
          this.$setValidity = function (e, n) {
            h[e] !== !n && (n ? (h[e] && m--, m || (l(!0), this.$valid = !0, this.$invalid = !1))  : (l(!1), this.$invalid = !0, this.$valid = !1, m++), h[e] = !n, l(n, e), d.$setValidity(e, n, this))
          },
          this.$setPristine = function () {
            this.$dirty = !1,
            this.$pristine = !0,
            s.removeClass(i, Oi),
            s.addClass(i, Gi)
          },
          this.$setViewValue = function (a) {
            this.$viewValue = a,
            this.$pristine && (this.$dirty = !0, this.$pristine = !1, s.removeClass(i, Gi), s.addClass(i, Oi), d.$setDirty()),
            r(this.$parsers, function (e) {
              a = e(a)
            }),
            this.$modelValue !== a && (this.$modelValue = a, u(e, a), r(this.$viewChangeListeners, function (e) {
              try {
                e()
              } catch (a) {
                n(a)
              }
            }))
          };
          var v = this;
          e.$watch(function () {
            var n = c(e);
            if (v.$modelValue !== n) {
              var a = v.$formatters,
              t = a.length;
              for (v.$modelValue = n; t--; ) n = a[t](n);
              v.$viewValue !== n && (v.$viewValue = n, v.$render())
            }
            return n
          })
        }
      ],
      Wi = function () {
        return {
          require: [
            'ngModel',
            '^?form'
          ],
          controller: qi,
          link: function (e, n, a, t) {
            var i = t[0],
            r = t[1] || Di;
            r.$addControl(i),
            e.$on('$destroy', function () {
              r.$removeControl(i)
            })
          }
        }
      },
      Ji = g({
        require: 'ngModel',
        link: function (e, n, a, t) {
          t.$viewChangeListeners.push(function () {
            e.$eval(a.ngChange)
          })
        }
      }),
      Vi = function () {
        return {
          require: '?ngModel',
          link: function (e, n, a, t) {
            if (t) {
              a.required = !0;
              var i = function (e) {
                return a.required && t.$isEmpty(e) ? void t.$setValidity('required', !1)  : (t.$setValidity('required', !0), e)
              };
              t.$formatters.push(i),
              t.$parsers.unshift(i),
              a.$observe('required', function () {
                i(t.$viewValue)
              })
            }
          }
        }
      },
      Ui = function () {
        return {
          require: 'ngModel',
          link: function (e, n, t, i) {
            var o = /\/(.*)\//.exec(t.ngList),
            s = o && new RegExp(o[1]) || t.ngList || ',',
            l = function (e) {
              if (!f(e)) {
                var n = [
                ];
                return e && r(e.split(s), function (e) {
                  e && n.push(Tt(e))
                }),
                n
              }
            };
            i.$parsers.push(l),
            i.$formatters.push(function (e) {
              return Pt(e) ? e.join(', ')  : a
            }),
            i.$isEmpty = function (e) {
              return !e || !e.length
            }
          }
        }
      },
      Zi = /^(true|false|\d+)$/,
      Yi = function () {
        return {
          priority: 100,
          compile: function (e, n) {
            return Zi.test(n.ngValue) ? function (e, n, a) {
              a.$set('value', e.$eval(a.ngValue))
            }
             : function (e, n, a) {
              e.$watch(a.ngValue, function (e) {
                a.$set('value', e)
              })
            }
          }
        }
      },
      Xi = et({
        compile: function (e) {
          return e.addClass('ng-binding'),
          function (e, n, t) {
            n.data('$binding', t.ngBind),
            e.$watch(t.ngBind, function (e) {
              n.text(e == a ? '' : e)
            })
          }
        }
      }),
      Qi = [
        '$interpolate',
        function (e) {
          return function (n, a, t) {
            var i = e(a.attr(t.$attr.ngBindTemplate));
            a.addClass('ng-binding').data('$binding', i),
            t.$observe('ngBindTemplate', function (e) {
              a.text(e)
            })
          }
        }
      ],
      er = [
        '$sce',
        '$parse',
        function (e, n) {
          return {
            compile: function (a) {
              return a.addClass('ng-binding'),
              function (a, t, i) {
                function r() {
                  return (o(a) || '').toString()
                }
                t.data('$binding', i.ngBindHtml);
                var o = n(i.ngBindHtml);
                a.$watch(r, function () {
                  t.html(e.getTrustedHtml(o(a)) || '')
                })
              }
            }
          }
        }
      ],
      nr = dt('', !0),
      ar = dt('Odd', 0),
      tr = dt('Even', 1),
      ir = et({
        compile: function (e, n) {
          n.$set('ngCloak', a),
          e.removeClass('ng-cloak')
        }
      }),
      rr = [
        function () {
          return {
            scope: !0,
            controller: '@',
            priority: 500
          }
        }
      ],
      or = {
      },
      sr = {
        blur: !0,
        focus: !0
      };
      r('click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '), function (e) {
        var n = Hn('ng-' + e);
        or[n] = [
          '$parse',
          '$rootScope',
          function (a, t) {
            return {
              compile: function (i, r) {
                var o = a(r[n]);
                return function (n, a) {
                  a.on(e, function (a) {
                    var i = function () {
                      o(n, {
                        $event: a
                      })
                    };
                    sr[e] && t.$$phase ? n.$evalAsync(i)  : n.$apply(i)
                  })
                }
              }
            }
          }
        ]
      });
      var lr = [
        '$animate',
        function (e) {
          return {
            transclude: 'element',
            priority: 600,
            terminal: !0,
            restrict: 'A',
            $$tlb: !0,
            link: function (a, t, i, r, o) {
              var s,
              l,
              c;
              a.$watch(i.ngIf, function (r) {
                O(r) ? l || (l = a.$new(), o(l, function (a) {
                  a[a.length++] = n.createComment(' end ngIf: ' + i.ngIf + ' '),
                  s = {
                    clone: a
                  },
                  e.enter(a, t.parent(), t)
                }))  : (c && (c.remove(), c = null), l && (l.$destroy(), l = null), s && (c = on(s.clone), e.leave(c, function () {
                  c = null
                }), s = null))
              })
            }
          }
        }
      ],
      cr = [
        '$http',
        '$templateCache',
        '$anchorScroll',
        '$animate',
        '$sce',
        function (e, n, a, t, i) {
          return {
            restrict: 'ECA',
            priority: 400,
            terminal: !0,
            transclude: 'element',
            controller: Ct.noop,
            compile: function (r, o) {
              var s = o.ngInclude || o.src,
              l = o.onload || '',
              c = o.autoscroll;
              return function (r, o, u, d, m) {
                var h,
                p,
                v,
                g = 0,
                f = function () {
                  p && (p.remove(), p = null),
                  h && (h.$destroy(), h = null),
                  v && (t.leave(v, function () {
                    p = null
                  }), p = v, v = null)
                };
                r.$watch(i.parseAsResourceUrl(s), function (i) {
                  var s = function () {
                    !_(c) || c && !r.$eval(c) || a()
                  },
                  u = ++g;
                  i ? (e.get(i, {
                    cache: n
                  }).success(function (e) {
                    if (u === g) {
                      var n = r.$new();
                      d.template = e;
                      var a = m(n, function (e) {
                        f(),
                        t.enter(e, null, o, s)
                      });
                      h = n,
                      v = a,
                      h.$emit('$includeContentLoaded'),
                      r.$eval(l)
                    }
                  }).error(function () {
                    u === g && f()
                  }), r.$emit('$includeContentRequested'))  : (f(), d.template = null)
                })
              }
            }
          }
        }
      ],
      ur = [
        '$compile',
        function (e) {
          return {
            restrict: 'ECA',
            priority: - 400,
            require: 'ngInclude',
            link: function (n, a, t, i) {
              a.html(i.template),
              e(a.contents()) (n)
            }
          }
        }
      ],
      dr = et({
        priority: 450,
        compile: function () {
          return {
            pre: function (e, n, a) {
              e.$eval(a.ngInit)
            }
          }
        }
      }),
      mr = et({
        terminal: !0,
        priority: 1000
      }),
      hr = [
        '$locale',
        '$interpolate',
        function (e, n) {
          var a = /{}/g;
          return {
            restrict: 'EA',
            link: function (t, i, o) {
              var s = o.count,
              l = o.$attr.when && i.attr(o.$attr.when),
              c = o.offset || 0,
              u = t.$eval(l) || {
              },
              d = {
              },
              m = n.startSymbol(),
              h = n.endSymbol(),
              p = /^when(Minus)?(.+)$/;
              r(o, function (e, n) {
                p.test(n) && (u[ht(n.replace('when', '').replace('Minus', '-'))] = i.attr(o.$attr[n]))
              }),
              r(u, function (e, t) {
                d[t] = n(e.replace(a, m + s + '-' + c + h))
              }),
              t.$watch(function () {
                var n = parseFloat(t.$eval(s));
                return isNaN(n) ? '' : (n in u || (n = e.pluralCat(n - c)), d[n](t, i, !0))
              }, function (e) {
                i.text(e)
              })
            }
          }
        }
      ],
      pr = [
        '$parse',
        '$animate',
        function (e, a) {
          function o(e) {
            return e.clone[0]
          }
          function s(e) {
            return e.clone[e.clone.length - 1]
          }
          var l = '$$NG_REMOVED',
          c = t('ngRepeat');
          return {
            transclude: 'element',
            priority: 1000,
            terminal: !0,
            $$tlb: !0,
            link: function (t, u, d, m, h) {
              var p,
              v,
              g,
              f,
              _,
              b,
              y,
              w,
              k,
              S = d.ngRepeat,
              A = S.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),
              M = {
                $id: Dn
              };
              if (!A) throw c('iexp', 'Expected expression in form of \'_item_ in _collection_[ track by _id_]\' but got \'{0}\'.', S);
              if (b = A[1], y = A[2], p = A[3], p ? (v = e(p), g = function (e, n, a) {
                return k && (M[k] = e),
                M[w] = n,
                M.$index = a,
                v(t, M)
              })  : (f = function (e, n) {
                return Dn(n)
              }, _ = function (e) {
                return e
              }), A = b.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/), !A) throw c('iidexp', '\'_item_\' in \'_item_ in _collection_\' should be an identifier or \'(_key_, _value_)\' expression, but got \'{0}\'.', b);
              w = A[3] || A[1],
              k = A[2];
              var x = {
              };
              t.$watchCollection(y, function (e) {
                var d,
                m,
                p,
                v,
                b,
                y,
                A,
                M,
                C,
                z,
                P,
                T,
                D = u[0],
                E = {
                },
                $ = [
                ];
                if (i(e)) z = e,
                C = g || f;
                 else {
                  C = g || _,
                  z = [
                  ];
                  for (y in e) e.hasOwnProperty(y) && '$' != y.charAt(0) && z.push(y);
                  z.sort()
                }
                for (v = z.length, m = $.length = z.length, d = 0; m > d; d++) if (y = e === z ? d : z[d], A = e[y], M = C(y, A, d), tn(M, '`track by` id'), x.hasOwnProperty(M)) P = x[M],
                delete x[M],
                E[M] = P,
                $[d] = P;
                 else {
                  if (E.hasOwnProperty(M)) throw r($, function (e) {
                    e && e.scope && (x[e.id] = e)
                  }),
                  c('dupes', 'Duplicates in a repeater are not allowed. Use \'track by\' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}', S, M, H(A));
                  $[d] = {
                    id: M
                  },
                  E[M] = !1
                }
                for (y in x) x.hasOwnProperty(y) && (P = x[y], T = on(P.clone), a.leave(T), r(T, function (e) {
                  e[l] = !0
                }), P.scope.$destroy());
                for (d = 0, m = z.length; m > d; d++) {
                  if (y = e === z ? d : z[d], A = e[y], P = $[d], $[d - 1] && (D = s($[d - 1])), P.scope) {
                    b = P.scope,
                    p = D;
                    do p = p.nextSibling;
                    while (p && p[l]);
                    o(P) != p && a.move(on(P.clone), null, bt(D)),
                    D = s(P)
                  } else b = t.$new();
                  b[w] = A,
                  k && (b[k] = y),
                  b.$index = d,
                  b.$first = 0 === d,
                  b.$last = d === v - 1,
                  b.$middle = !(b.$first || b.$last),
                  b.$odd = !(b.$even = 0 === (1 & d)),
                  P.scope || h(b, function (e) {
                    e[e.length++] = n.createComment(' end ngRepeat: ' + S + ' '),
                    a.enter(e, null, bt(D)),
                    D = e,
                    P.scope = b,
                    P.clone = e,
                    E[P.id] = P
                  })
                }
                x = E
              })
            }
          }
        }
      ],
      vr = [
        '$animate',
        function (e) {
          return function (n, a, t) {
            n.$watch(t.ngShow, function (n) {
              e[O(n) ? 'removeClass' : 'addClass'](a, 'ng-hide')
            })
          }
        }
      ],
      gr = [
        '$animate',
        function (e) {
          return function (n, a, t) {
            n.$watch(t.ngHide, function (n) {
              e[O(n) ? 'addClass' : 'removeClass'](a, 'ng-hide')
            })
          }
        }
      ],
      fr = et(function (e, n, a) {
        e.$watch(a.ngStyle, function (e, a) {
          a && e !== a && r(a, function (e, a) {
            n.css(a, '')
          }),
          e && n.css(e)
        }, !0)
      }),
      _r = [
        '$animate',
        function (e) {
          return {
            restrict: 'EA',
            require: 'ngSwitch',
            controller: [
              '$scope',
              function () {
                this.cases = {
                }
              }
            ],
            link: function (n, a, t, i) {
              var o = t.ngSwitch || t.on,
              s = [
              ],
              l = [
              ],
              c = [
              ],
              u = [
              ];
              n.$watch(o, function (a) {
                var o,
                d;
                for (o = 0, d = c.length; d > o; ++o) c[o].remove();
                for (c.length = 0, o = 0, d = u.length; d > o; ++o) {
                  var m = l[o];
                  u[o].$destroy(),
                  c[o] = m,
                  e.leave(m, function () {
                    c.splice(o, 1)
                  })
                }
                l.length = 0,
                u.length = 0,
                (s = i.cases['!' + a] || i.cases['?']) && (n.$eval(t.change), r(s, function (a) {
                  var t = n.$new();
                  u.push(t),
                  a.transclude(t, function (n) {
                    var t = a.element;
                    l.push(n),
                    e.enter(n, t.parent(), t)
                  })
                }))
              })
            }
          }
        }
      ],
      br = et({
        transclude: 'element',
        priority: 800,
        require: '^ngSwitch',
        link: function (e, n, a, t, i) {
          t.cases['!' + a.ngSwitchWhen] = t.cases['!' + a.ngSwitchWhen] || [
          ],
          t.cases['!' + a.ngSwitchWhen].push({
            transclude: i,
            element: n
          })
        }
      }),
      yr = et({
        transclude: 'element',
        priority: 800,
        require: '^ngSwitch',
        link: function (e, n, a, t, i) {
          t.cases['?'] = t.cases['?'] || [
          ],
          t.cases['?'].push({
            transclude: i,
            element: n
          })
        }
      }),
      wr = et({
        link: function (e, n, a, i, r) {
          if (!r) throw t('ngTransclude') ('orphan', 'Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}', q(n));
          r(function (e) {
            n.empty(),
            n.append(e)
          })
        }
      }),
      kr = [
        '$templateCache',
        function (e) {
          return {
            restrict: 'E',
            terminal: !0,
            compile: function (n, a) {
              if ('text/ng-template' == a.type) {
                var t = a.id,
                i = n[0].text;
                e.put(t, i)
              }
            }
          }
        }
      ],
      Sr = t('ngOptions'),
      Ar = g({
        terminal: !0
      }),
      Mr = [
        '$compile',
        '$parse',
        function (e, t) {
          var i = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
          s = {
            $setViewValue: p
          };
          return {
            restrict: 'E',
            require: [
              'select',
              '?ngModel'
            ],
            controller: [
              '$element',
              '$scope',
              '$attrs',
              function (e, n, a) {
                var t,
                i,
                r = this,
                o = {
                },
                l = s;
                r.databound = a.ngModel,
                r.init = function (e, n, a) {
                  l = e,
                  t = n,
                  i = a
                },
                r.addOption = function (n) {
                  tn(n, '"option value"'),
                  o[n] = !0,
                  l.$viewValue == n && (e.val(n), i.parent() && i.remove())
                },
                r.removeOption = function (e) {
                  this.hasOption(e) && (delete o[e], l.$viewValue == e && this.renderUnknownOption(e))
                },
                r.renderUnknownOption = function (n) {
                  var a = '? ' + Dn(n) + ' ?';
                  i.val(a),
                  e.prepend(i),
                  e.val(a),
                  i.prop('selected', !0)
                },
                r.hasOption = function (e) {
                  return o.hasOwnProperty(e)
                },
                n.$on('$destroy', function () {
                  r.renderUnknownOption = p
                })
              }
            ],
            link: function (s, l, c, u) {
              function d(e, n, a, t) {
                a.$render = function () {
                  var e = a.$viewValue;
                  t.hasOption(e) ? (A.parent() && A.remove(), n.val(e), '' === e && p.prop('selected', !0))  : f(e) && p ? n.val('')  : t.renderUnknownOption(e)
                },
                n.on('change', function () {
                  e.$apply(function () {
                    A.parent() && A.remove(),
                    a.$setViewValue(n.val())
                  })
                })
              }
              function m(e, n, a) {
                var t;
                a.$render = function () {
                  var e = new En(a.$viewValue);
                  r(n.find('option'), function (n) {
                    n.selected = _(e.get(n.value))
                  })
                },
                e.$watch(function () {
                  N(t, a.$viewValue) || (t = B(a.$viewValue), a.$render())
                }),
                n.on('change', function () {
                  e.$apply(function () {
                    var e = [
                    ];
                    r(n.find('option'), function (n) {
                      n.selected && e.push(n.value)
                    }),
                    a.$setViewValue(e)
                  })
                })
              }
              function h(n, r, s) {
                function l() {
                  var e = !1;
                  if (b) {
                    var a = s.$modelValue;
                    if (A && Pt(a)) {
                      e = new En([]);
                      for (var t = {
                      }, i = 0; i < a.length; i++) t[m] = a[i],
                      e.put(A(n, t), a[i])
                    } else e = new En(a)
                  }
                  return e
                }
                function c() {
                  var e,
                  a,
                  t,
                  i,
                  c,
                  u,
                  f,
                  y,
                  x,
                  C,
                  z,
                  P,
                  T,
                  D,
                  E,
                  $ = {
                    '': [
                    ]
                  },
                  I = [
                    ''
                  ],
                  L = s.$modelValue,
                  B = g(n) || [
                  ],
                  N = h ? o(B)  : B,
                  R = {
                  },
                  j = l();
                  for (z = 0; x = N.length, x > z; z++) {
                    if (f = z, h) {
                      if (f = N[z], '$' === f.charAt(0)) continue;
                      R[h] = f
                    }
                    if (R[m] = B[f], e = p(n, R) || '', (a = $[e]) || (a = $[e] = [
                    ], I.push(e)), b) P = _(j.remove(A ? A(n, R)  : v(n, R)));
                     else {
                      if (A) {
                        var K = {
                        };
                        K[m] = L,
                        P = A(n, K) === A(n, R)
                      } else P = L === v(n, R);
                      j = j || P
                    }
                    E = d(n, R),
                    E = _(E) ? E : '',
                    a.push({
                      id: A ? A(n, R)  : h ? N[z] : z,
                      label: E,
                      selected: P
                    })
                  }
                  for (b || (w || null === L ? $[''].unshift({
                    id: '',
                    label: '',
                    selected: !j
                  })  : j || $[''].unshift({
                    id: '?',
                    label: '',
                    selected: !0
                  })), C = 0, y = I.length; y > C; C++) {
                    for (e = I[C], a = $[e], M.length <= C ? (i = {
                      element: S.clone().attr('label', e),
                      label: a.label
                    }, c = [
                      i
                    ], M.push(c), r.append(i.element))  : (c = M[C], i = c[0], i.label != e && i.element.attr('label', i.label = e)), T = null, z = 0, x = a.length; x > z; z++) t = a[z],
                    (u = c[z + 1]) ? (T = u.element, u.label !== t.label && T.text(u.label = t.label), u.id !== t.id && T.val(u.id = t.id), T[0].selected !== t.selected && (T.prop('selected', u.selected = t.selected), _t && T.prop('selected', u.selected)))  : ('' === t.id && w ? D = w : (D = k.clone()).val(t.id).prop('selected', t.selected).attr('selected', t.selected).text(t.label), c.push(u = {
                      element: D,
                      label: t.label,
                      id: t.id,
                      selected: t.selected
                    }), T ? T.after(D)  : i.element.append(D), T = D);
                    for (z++; c.length > z; ) c.pop().element.remove()
                  }
                  for (; M.length > C; ) M.pop() [0].element.remove()
                }
                var u;
                if (!(u = y.match(i))) throw Sr('iexp', 'Expected expression in form of \'_select_ (as _label_)? for (_key_,)?_value_ in _collection_\' but got \'{0}\'. Element: {1}', y, q(r));
                var d = t(u[2] || u[1]),
                m = u[4] || u[6],
                h = u[5],
                p = t(u[3] || ''),
                v = t(u[2] ? u[1] : m),
                g = t(u[7]),
                f = u[8],
                A = f ? t(u[8])  : null,
                M = [
                  [{
                    element: r,
                    label: ''
                  }
                  ]
                ];
                w && (e(w) (n), w.removeClass('ng-scope'), w.remove()),
                r.empty(),
                r.on('change', function () {
                  n.$apply(function () {
                    var e,
                    t,
                    i,
                    o,
                    l,
                    u,
                    d,
                    p,
                    f,
                    _ = g(n) || [
                    ],
                    y = {
                    };
                    if (b) {
                      for (i = [
                      ], u = 0, p = M.length; p > u; u++) for (e = M[u], l = 1, d = e.length; d > l; l++) if ((o = e[l].element) [0].selected) {
                        if (t = o.val(), h && (y[h] = t), A) for (f = 0; f < _.length && (y[m] = _[f], A(n, y) != t); f++);
                         else y[m] = _[t];
                        i.push(v(n, y))
                      }
                    } else if (t = r.val(), '?' == t) i = a;
                     else if ('' === t) i = null;
                     else if (A) {
                      for (f = 0; f < _.length; f++) if (y[m] = _[f], A(n, y) == t) {
                        i = v(n, y);
                        break
                      }
                    } else y[m] = _[t],
                    h && (y[h] = t),
                    i = v(n, y);
                    s.$setViewValue(i),
                    c()
                  })
                }),
                s.$render = c,
                n.$watchCollection(g, c),
                n.$watchCollection(function () {
                  var e = {
                  },
                  a = g(n);
                  if (a) {
                    for (var t = new Array(a.length), i = 0, r = a.length; r > i; i++) e[m] = a[i],
                    t[i] = d(n, e);
                    return t
                  }
                }, c),
                b && n.$watchCollection(function () {
                  return s.$modelValue
                }, c)
              }
              if (u[1]) {
                for (var p, v = u[0], g = u[1], b = c.multiple, y = c.ngOptions, w = !1, k = bt(n.createElement('option')), S = bt(n.createElement('optgroup')), A = k.clone(), M = 0, x = l.children(), C = x.length; C > M; M++) if ('' === x[M].value) {
                  p = w = x.eq(M);
                  break
                }
                v.init(g, w, A),
                b && (g.$isEmpty = function (e) {
                  return !e || 0 === e.length
                }),
                y ? h(s, l, g)  : b ? m(s, l, g)  : d(s, l, g, v)
              }
            }
          }
        }
      ],
      xr = [
        '$interpolate',
        function (e) {
          var n = {
            addOption: p,
            removeOption: p
          };
          return {
            restrict: 'E',
            priority: 100,
            compile: function (a, t) {
              if (f(t.value)) {
                var i = e(a.text(), !0);
                i || t.$set('value', a.text())
              }
              return function (e, a, t) {
                var r = '$selectController',
                o = a.parent(),
                s = o.data(r) || o.parent().data(r);
                s && s.databound ? a.prop('selected', !1)  : s = n,
                i ? e.$watch(i, function (e, n) {
                  t.$set('value', e),
                  e !== n && s.removeOption(n),
                  s.addOption(e)
                })  : s.addOption(t.value),
                a.on('$destroy', function () {
                  s.removeOption(t.value)
                })
              }
            }
          }
        }
      ],
      Cr = g({
        restrict: 'E',
        terminal: !0
      });
      return e.angular.bootstrap ? void console.log('WARNING: Tried to load angular more than once.')  : (en(), ln(Ct), void bt(n).ready(function () {
        Y(n, X)
      }))
    }(window, document),
    !window.angular.$$csp() && window.angular.element(document).find('head').prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\\:form{display:block;}.ng-animate-block-transitions{transition:0s all!important;-webkit-transition:0s all!important;}.ng-hide-add-active,.ng-hide-remove{display:block!important;}</style>'),
    function () {
      var e = angular.module('angularFileUpload', [
      ]);
      e.service('$upload', [
        '$http',
        '$q',
        '$timeout',
        function (e, n, a) {
          function t(t) {
            t.method = t.method || 'POST',
            t.headers = t.headers || {
            },
            t.transformRequest = t.transformRequest || function (n, a) {
              return window.ArrayBuffer && n instanceof window.ArrayBuffer ? n : e.defaults.transformRequest[0](n, a)
            };
            var i = n.defer();
            window.XMLHttpRequest.__isShim && (t.headers.__setXHR_ = function () {
              return function (e) {
                e && (t.__XHR = e, t.xhrFn && t.xhrFn(e), e.upload.addEventListener('progress', function (e) {
                  i.notify(e)
                }, !1), e.upload.addEventListener('load', function (e) {
                  e.lengthComputable && i.notify(e)
                }, !1))
              }
            }),
            e(t).then(function (e) {
              i.resolve(e)
            }, function (e) {
              i.reject(e)
            }, function (e) {
              i.notify(e)
            });
            var r = i.promise;
            return r.success = function (e) {
              return r.then(function (n) {
                e(n.data, n.status, n.headers, t)
              }),
              r
            },
            r.error = function (e) {
              return r.then(null, function (n) {
                e(n.data, n.status, n.headers, t)
              }),
              r
            },
            r.progress = function (e) {
              return r.then(null, null, function (n) {
                e(n)
              }),
              r
            },
            r.abort = function () {
              return t.__XHR && a(function () {
                t.__XHR.abort()
              }),
              r
            },
            r.xhr = function (e) {
              return t.xhrFn = function (n) {
                return function () {
                  n && n.apply(r, arguments),
                  e.apply(r, arguments)
                }
              }(t.xhrFn),
              r
            },
            r
          }
          this.upload = function (n) {
            n.headers = n.headers || {
            },
            n.headers['Content-Type'] = void 0,
            n.transformRequest = n.transformRequest || e.defaults.transformRequest;
            var a = new FormData,
            i = n.transformRequest,
            r = n.data;
            return n.transformRequest = function (e, a) {
              if (r) if (n.formDataAppender) for (var t in r) {
                var o = r[t];
                n.formDataAppender(e, t, o)
              } else for (var t in r) {
                var o = r[t];
                if ('function' == typeof i) o = i(o, a);
                 else for (var s = 0; s < i.length; s++) {
                  var l = i[s];
                  'function' == typeof l && (o = l(o, a))
                }
                e.append(t, o)
              }
              if (null != n.file) {
                var c = n.fileFormDataName || 'file';
                if ('[object Array]' === Object.prototype.toString.call(n.file)) for (var u = '[object String]' === Object.prototype.toString.call(c), s = 0; s < n.file.length; s++) e.append(u ? c : c[s], n.file[s], n.fileName && n.fileName[s] || n.file[s].name);
                 else e.append(c, n.file, n.fileName || n.file.name)
              }
              return e
            },
            n.data = a,
            t(n)
          },
          this.http = function (e) {
            return t(e)
          }
        }
      ]),
      e.directive('ngFileSelect', [
        '$parse',
        '$timeout',
        function (e, n) {
          return function (a, t, i) {
            var r = e(i.ngFileSelect);
            if ('input' !== t[0].tagName.toLowerCase() || 'file' !== (t.attr('type') && t.attr('type').toLowerCase())) {
              for (var o = angular.element('<input type="file">'), s = 0; s < t[0].attributes.length; s++) o.attr(t[0].attributes[s].name, t[0].attributes[s].value);
              t.attr('data-multiple') && o.attr('multiple', 'true'),
              o.css('top', 0).css('bottom', 0).css('left', 0).css('right', 0).css('width', '100%').css('opacity', 0).css('position', 'absolute').css('filter', 'alpha(opacity=0)'),
              t.append(o),
              ('' === t.css('position') || 'static' === t.css('position')) && t.css('position', 'relative'),
              t = o
            }
            t.bind('change', function (e) {
              var t,
              i,
              o = [
              ];
              if (t = e.__files_ || e.target.files, null != t) for (i = 0; i < t.length; i++) o.push(t.item(i));
              n(function () {
                r(a, {
                  $files: o,
                  $event: e
                })
              })
            })
          }
        }
      ]),
      e.directive('ngFileDropAvailable', [
        '$parse',
        '$timeout',
        function (e, n) {
          return function (a, t, i) {
            if ('draggable' in document.createElement('span')) {
              var r = e(i.ngFileDropAvailable);
              n(function () {
                r(a)
              })
            }
          }
        }
      ]),
      e.directive('ngFileDrop', [
        '$parse',
        '$timeout',
        '$location',
        function (e, n, a) {
          return function (t, i, r) {
            function o(e) {
              return /^[\000-\177]*$/.test(e)
            }
            function s(e, t) {
              var i = [
              ],
              r = e.dataTransfer.items;
              if (r && r.length > 0 && r[0].webkitGetAsEntry && 'file' != a.protocol() && r[0].webkitGetAsEntry().isDirectory) for (var s = 0; s < r.length; s++) {
                var c = r[s].webkitGetAsEntry();
                null != c && (o(c.name) ? l(i, c)  : i.push(r[s].getAsFile()))
              } else {
                var u = e.dataTransfer.files;
                if (null != u) for (var s = 0; s < u.length; s++) i.push(u.item(s))
              }
              !function m(e) {
                n(function () {
                  d ? m(10)  : t(i)
                }, e || 0)
              }()
            }
            function l(e, n) {
              if (null != n) if (n.isDirectory) {
                var a = n.createReader();
                d++,
                a.readEntries(function (n) {
                  for (var a = 0; a < n.length; a++) l(e, n[a]);
                  d--
                })
              } else d++,
              n.file(function (n) {
                d--,
                e.push(n)
              })
            }
            if ('draggable' in document.createElement('span')) {
              var c = null;
              i[0].addEventListener('dragover', function (a) {
                if (a.stopPropagation(), a.preventDefault(), n.cancel(c), !i[0].__drag_over_class_) {
                  var o = e(r.ngFileDragOverClass);
                  if (o instanceof Function) {
                    var s = o(t, {
                      $event: a
                    });
                    i[0].__drag_over_class_ = s
                  } else i[0].__drag_over_class_ = r.ngFileDragOverClass || 'dragover'
                }
                i.addClass(i[0].__drag_over_class_)
              }, !1),
              i[0].addEventListener('dragenter', function (e) {
                e.stopPropagation(),
                e.preventDefault()
              }, !1),
              i[0].addEventListener('dragleave', function () {
                c = n(function () {
                  i.removeClass(i[0].__drag_over_class_),
                  i[0].__drag_over_class_ = null
                })
              }, !1);
              var u = e(r.ngFileDrop);
              i[0].addEventListener('drop', function (e) {
                e.stopPropagation(),
                e.preventDefault(),
                i.removeClass(i[0].__drag_over_class_),
                i[0].__drag_over_class_ = null,
                s(e, function (n) {
                  u(t, {
                    $files: n,
                    $event: e
                  })
                })
              }, !1);
              var d = 0
            }
          }
        }
      ])
    }(),
    function (e, n) {
      'use strict';
      function a() {
        function e(e, a) {
          return n.extend(new (n.extend(function () {
          }, {
            prototype: e
          })), a)
        }
        function a(e, n) {
          var a = n.caseInsensitiveMatch,
          t = {
            originalPath: e,
            regexp: e
          },
          i = t.keys = [
          ];
          return e = e.replace(/([().])/g, '\\$1').replace(/(\/)?:(\w+)([\?\*])?/g, function (e, n, a, t) {
            var r = '?' === t ? t : null,
            o = '*' === t ? t : null;
            return i.push({
              name: a,
              optional: !!r
            }),
            n = n || '',
            '' + (r ? '' : n) + '(?:' + (r ? n : '') + (o && '(.+?)' || '([^/]+)') + (r || '') + ')' + (r || '')
          }).replace(/([\/$\*])/g, '\\$1'),
          t.regexp = new RegExp('^' + e + '$', a ? 'i' : ''),
          t
        }
        var t = {
        };
        this.when = function (e, i) {
          if (t[e] = n.extend({
            reloadOnSearch: !0
          }, i, e && a(e, i)), e) {
            var r = '/' == e[e.length - 1] ? e.substr(0, e.length - 1)  : e + '/';
            t[r] = n.extend({
              redirectTo: e
            }, a(r, i))
          }
          return this
        },
        this.otherwise = function (e) {
          return this.when(null, e),
          this
        },
        this.$get = [
          '$rootScope',
          '$location',
          '$routeParams',
          '$q',
          '$injector',
          '$http',
          '$templateCache',
          '$sce',
          function (a, i, r, o, s, l, c, u) {
            function d(e, n) {
              var a = n.keys,
              t = {
              };
              if (!n.regexp) return null;
              var i = n.regexp.exec(e);
              if (!i) return null;
              for (var r = 1, o = i.length; o > r; ++r) {
                var s = a[r - 1],
                l = i[r];
                s && l && (t[s.name] = l)
              }
              return t
            }
            function m() {
              var e = h(),
              t = g.current;
              e && t && e.$$route === t.$$route && n.equals(e.pathParams, t.pathParams) && !e.reloadOnSearch && !v ? (t.params = e.params, n.copy(t.params, r), a.$broadcast('$routeUpdate', t))  : (e || t) && (v = !1, a.$broadcast('$routeChangeStart', e, t), g.current = e, e && e.redirectTo && (n.isString(e.redirectTo) ? i.path(p(e.redirectTo, e.params)).search(e.params).replace()  : i.url(e.redirectTo(e.pathParams, i.path(), i.search())).replace()), o.when(e).then(function () {
                if (e) {
                  var a,
                  t,
                  i = n.extend({
                  }, e.resolve);
                  return n.forEach(i, function (e, a) {
                    i[a] = n.isString(e) ? s.get(e)  : s.invoke(e)
                  }),
                  n.isDefined(a = e.template) ? n.isFunction(a) && (a = a(e.params))  : n.isDefined(t = e.templateUrl) && (n.isFunction(t) && (t = t(e.params)), t = u.getTrustedResourceUrl(t), n.isDefined(t) && (e.loadedTemplateUrl = t, a = l.get(t, {
                    cache: c
                  }).then(function (e) {
                    return e.data
                  }))),
                  n.isDefined(a) && (i.$template = a),
                  o.all(i)
                }
              }).then(function (i) {
                e == g.current && (e && (e.locals = i, n.copy(e.params, r)), a.$broadcast('$routeChangeSuccess', e, t))
              }, function (n) {
                e == g.current && a.$broadcast('$routeChangeError', e, t, n)
              }))
            }
            function h() {
              var a,
              r;
              return n.forEach(t, function (t) {
                !r && (a = d(i.path(), t)) && (r = e(t, {
                  params: n.extend({
                  }, i.search(), a),
                  pathParams: a
                }), r.$$route = t)
              }),
              r || t[null] && e(t[null], {
                params: {
                },
                pathParams: {
                }
              })
            }
            function p(e, a) {
              var t = [
              ];
              return n.forEach((e || '').split(':'), function (e, n) {
                if (0 === n) t.push(e);
                 else {
                  var i = e.match(/(\w+)(.*)/),
                  r = i[1];
                  t.push(a[r]),
                  t.push(i[2] || ''),
                  delete a[r]
                }
              }),
              t.join('')
            }
            var v = !1,
            g = {
              routes: t,
              reload: function () {
                v = !0,
                a.$evalAsync(m)
              }
            };
            return a.$on('$locationChangeSuccess', m),
            g
          }
        ]
      }
      function t() {
        this.$get = function () {
          return {
          }
        }
      }
      function i(e, a, t) {
        return {
          restrict: 'ECA',
          terminal: !0,
          priority: 400,
          transclude: 'element',
          link: function (i, r, o, s, l) {
            function c() {
              h && (h.remove(), h = null),
              d && (d.$destroy(), d = null),
              m && (t.leave(m, function () {
                h = null
              }), h = m, m = null)
            }
            function u() {
              var o = e.current && e.current.locals,
              s = o && o.$template;
              if (n.isDefined(s)) {
                var u = i.$new(),
                h = e.current,
                g = l(u, function (e) {
                  t.enter(e, null, m || r, function () {
                    !n.isDefined(p) || p && !i.$eval(p) || a()
                  }),
                  c()
                });
                m = g,
                d = h.scope = u,
                d.$emit('$viewContentLoaded'),
                d.$eval(v)
              } else c()
            }
            var d,
            m,
            h,
            p = o.autoscroll,
            v = o.onload || '';
            i.$on('$routeChangeSuccess', u),
            u()
          }
        }
      }
      function r(e, n, a) {
        return {
          restrict: 'ECA',
          priority: - 400,
          link: function (t, i) {
            var r = a.current,
            o = r.locals;
            i.html(o.$template);
            var s = e(i.contents());
            if (r.controller) {
              o.$scope = t;
              var l = n(r.controller, o);
              r.controllerAs && (t[r.controllerAs] = l),
              i.data('$ngControllerController', l),
              i.children().data('$ngControllerController', l)
            }
            s(t)
          }
        }
      }
      var o = n.module('ngRoute', [
        'ng'
      ]).provider('$route', a);
      o.provider('$routeParams', t),
      o.directive('ngView', i),
      o.directive('ngView', r),
      i.$inject = [
        '$route',
        '$anchorScroll',
        '$animate'
      ],
      r.$inject = [
        '$compile',
        '$controller',
        '$route'
      ]
    }(window, window.angular);
    var I18n = I18n || {
    };
    I18n.defaultLocale = 'en',
    I18n.fallbacks = !1,
    I18n.defaultSeparator = '.',
    I18n.locale = null,
    I18n.PLACEHOLDER = /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm,
    I18n.isValidNode = function (e, n, a) {
      return null !== e[n] && e[n] !== a
    },
    I18n.lookup = function (e, n) {
      var a,
      n = n || {
      },
      t = e,
      i = this.prepareOptions(I18n.translations),
      r = i[n.locale || I18n.currentLocale()],
      n = this.prepareOptions(n);
      if (r) {
        for ('object' == typeof e && (e = e.join(this.defaultSeparator)), n.scope && (e = n.scope.toString() + this.defaultSeparator + e), e = e.split(this.defaultSeparator); e.length > 0; ) if (a = e.shift(), r = r[a], !r) {
          I18n.fallbacks && !n.fallback && (r = I18n.lookup(t, this.prepareOptions({
            locale: I18n.defaultLocale,
            fallback: !0
          }, n)));
          break
        }
        return !r && this.isValidNode(n, 'defaultValue') && (r = n.defaultValue),
        r
      }
    },
    I18n.prepareOptions = function () {
      for (var e, n = {
      }, a = arguments.length, t = 0; a > t; t++) if (e = arguments[t]) for (var i in e) this.isValidNode(n, i) || (n[i] = e[i]);
      return n
    },
    I18n.interpolate = function (e, n) {
      n = this.prepareOptions(n);
      var a,
      t,
      i,
      r = e.match(this.PLACEHOLDER);
      if (!r) return e;
      for (var o = 0; a = r[o]; o++) i = a.replace(this.PLACEHOLDER, '$1'),
      t = n[i],
      this.isValidNode(n, i) || (t = '[missing ' + a + ' value]'),
      regex = new RegExp(a.replace(/\{/gm, '\\{').replace(/\}/gm, '\\}')),
      e = e.replace(regex, t);
      return e
    },
    I18n.translate = function (e, n) {
      n = this.prepareOptions(n);
      var a = this.lookup(e, n);
      try {
        return 'object' == typeof a ? 'number' == typeof n.count ? this.pluralize(n.count, e, n)  : a : this.interpolate(a, n)
      } catch (t) {
        return this.missingTranslation(e)
      }
    },
    I18n.localize = function (e, n) {
      switch (e) {
        case 'currency':
          return this.toCurrency(n);
        case 'number':
          return e = this.lookup('number.format'),
          this.toNumber(n, e);
        case 'percentage':
          return this.toPercentage(n);
        default:
          return e.match(/^(date|time)/) ? this.toTime(e, n)  : n.toString()
      }
    },
    I18n.parseDate = function (e) {
      var n,
      a;
      if ('object' == typeof e) return e;
      if (n = e.toString().match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2}))?(Z|\+0000)?/)) {
        for (var t = 1; 6 >= t; t++) n[t] = parseInt(n[t], 10) || 0;
        n[2] -= 1,
        a = n[7] ? new Date(Date.UTC(n[1], n[2], n[3], n[4], n[5], n[6]))  : new Date(n[1], n[2], n[3], n[4], n[5], n[6])
      } else 'number' == typeof e ? (a = new Date, a.setTime(e))  : e.match(/\d+ \d+:\d+:\d+ [+-]\d+ \d+/) ? (a = new Date, a.setTime(Date.parse(e)))  : (a = new Date, a.setTime(Date.parse(e)));
      return a
    },
    I18n.toTime = function (e, n) {
      var a = this.parseDate(n),
      t = this.lookup(e);
      return a.toString().match(/invalid/i) ? a.toString()  : t ? this.strftime(a, t)  : a.toString()
    },
    I18n.strftime = function (e, n) {
      var a = this.lookup('date');
      if (!a) return e.toString();
      a.meridian = a.meridian || [
        'AM',
        'PM'
      ];
      var t = e.getDay(),
      i = e.getDate(),
      r = e.getFullYear(),
      o = e.getMonth() + 1,
      s = e.getHours(),
      l = s,
      c = s > 11 ? 1 : 0,
      u = e.getSeconds(),
      d = e.getMinutes(),
      m = e.getTimezoneOffset(),
      h = Math.floor(Math.abs(m / 60)),
      p = Math.abs(m) - 60 * h,
      v = (m > 0 ? '-' : '+') + (h.toString().length < 2 ? '0' + h : h) + (p.toString().length < 2 ? '0' + p : p);
      l > 12 ? l -= 12 : 0 === l && (l = 12);
      var g = function (e) {
        var n = '0' + e.toString();
        return n.substr(n.length - 2)
      },
      f = n;
      return f = f.replace('%a', a.abbr_day_names[t]),
      f = f.replace('%A', a.day_names[t]),
      f = f.replace('%b', a.abbr_month_names[o]),
      f = f.replace('%B', a.month_names[o]),
      f = f.replace('%d', g(i)),
      f = f.replace('%e', i),
      f = f.replace('%-d', i),
      f = f.replace('%H', g(s)),
      f = f.replace('%-H', s),
      f = f.replace('%I', g(l)),
      f = f.replace('%-I', l),
      f = f.replace('%m', g(o)),
      f = f.replace('%-m', o),
      f = f.replace('%M', g(d)),
      f = f.replace('%-M', d),
      f = f.replace('%p', a.meridian[c]),
      f = f.replace('%S', g(u)),
      f = f.replace('%-S', u),
      f = f.replace('%w', t),
      f = f.replace('%y', g(r)),
      f = f.replace('%-y', g(r).replace(/^0+/, '')),
      f = f.replace('%Y', r),
      f = f.replace('%z', v)
    },
    I18n.toNumber = function (e, n) {
      n = this.prepareOptions(n, this.lookup('number.format'), {
        precision: 3,
        separator: '.',
        delimiter: ',',
        strip_insignificant_zeros: !1
      });
      var a,
      t,
      i = 0 > e,
      r = Math.abs(e).toFixed(n.precision).toString(),
      o = r.split('.'),
      s = [
      ];
      for (e = o[0], a = o[1]; e.length > 0; ) s.unshift(e.substr(Math.max(0, e.length - 3), 3)),
      e = e.substr(0, e.length - 3);
      if (t = s.join(n.delimiter), n.precision > 0 && (t += n.separator + o[1]), i && (t = '-' + t), n.strip_insignificant_zeros) {
        var l = {
          separator: new RegExp(n.separator.replace(/\./, '\\.') + '$'),
          zeros: /0+$/
        };
        t = t.replace(l.zeros, '').replace(l.separator, '')
      }
      return t
    },
    I18n.toCurrency = function (e, n) {
      return n = this.prepareOptions(n, this.lookup('number.currency.format'), this.lookup('number.format'), {
        unit: '$',
        precision: 2,
        format: '%u%n',
        delimiter: ',',
        separator: '.'
      }),
      e = this.toNumber(e, n),
      e = n.format.replace('%u', n.unit).replace('%n', e)
    },
    I18n.toHumanSize = function (e, n) {
      for (var a, t, i = 1024, r = e, o = 0; r >= i && 4 > o; ) r /= i,
      o += 1;
      return 0 === o ? (a = this.t('number.human.storage_units.units.byte', {
        count: r
      }), t = 0)  : (a = this.t('number.human.storage_units.units.' + [null,
      'kb',
      'mb',
      'gb',
      'tb'][o]), t = r - Math.floor(r) === 0 ? 0 : 1),
      n = this.prepareOptions(n, {
        precision: t,
        format: '%n%u',
        delimiter: ''
      }),
      e = this.toNumber(r, n),
      e = n.format.replace('%u', a).replace('%n', e)
    },
    I18n.toPercentage = function (e, n) {
      return n = this.prepareOptions(n, this.lookup('number.percentage.format'), this.lookup('number.format'), {
        precision: 3,
        separator: '.',
        delimiter: ''
      }),
      e = this.toNumber(e, n),
      e + '%'
    },
    I18n.pluralize = function (e, n, a) {
      var t;
      try {
        t = this.lookup(n, a)
      } catch (i) {
      }
      if (!t) return this.missingTranslation(n);
      var r;
      switch (a = this.prepareOptions(a), a.count = e.toString(), Math.abs(e)) {
        case 0:
          r = this.isValidNode(t, 'zero') ? t.zero : this.isValidNode(t, 'none') ? t.none : this.isValidNode(t, 'other') ? t.other : this.missingTranslation(n, 'zero');
          break;
        case 1:
          r = this.isValidNode(t, 'one') ? t.one : this.missingTranslation(n, 'one');
          break;
        default:
          r = this.isValidNode(t, 'other') ? t.other : this.missingTranslation(n, 'other')
      }
      return this.interpolate(r, a)
    },
    I18n.missingTranslation = function () {
      for (var e = '[missing "' + this.currentLocale(), n = arguments.length, a = 0; n > a; a++) e += '.' + arguments[a];
      return e += '" translation]'
    },
    I18n.currentLocale = function () {
      return I18n.locale || I18n.defaultLocale
    },
    I18n.t = I18n.translate,
    I18n.l = I18n.localize,
    I18n.p = I18n.pluralize;
    var I18n = I18n || {
    };
    I18n.translations = {
      en: {
        date: {
          formats: {
            'default': '%Y-%m-%d',
            'short': '%b %d',
            'long': '%B %d, %Y'
          },
          day_names: [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday'
          ],
          abbr_day_names: [
            'Sun',
            'Mon',
            'Tue',
            'Wed',
            'Thu',
            'Fri',
            'Sat'
          ],
          month_names: [
            null,
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December'
          ],
          abbr_month_names: [
            null,
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec'
          ],
          order: [
            'year',
            'month',
            'day'
          ]
        },
        time: {
          formats: {
            'default': '%a, %d %b %Y %H:%M:%S %z',
            'short': '%d %b %H:%M',
            'long': '%B %d, %Y %H:%M'
          },
          am: 'am',
          pm: 'pm'
        },
        support: 'Support',
        number: {
          format: {
            separator: '.',
            delimiter: ',',
            precision: 3,
            significant: !1,
            strip_insignificant_zeros: !1
          },
          currency: {
            format: {
              format: '%u%n',
              unit: '$',
              separator: '.',
              delimiter: ',',
              precision: 2,
              significant: !1,
              strip_insignificant_zeros: !1
            }
          },
          percentage: {
            format: {
              delimiter: '',
              format: '%n%'
            }
          },
          precision: {
            format: {
              delimiter: ''
            }
          },
          human: {
            format: {
              delimiter: '',
              precision: 3,
              significant: !0,
              strip_insignificant_zeros: !0
            },
            storage_units: {
              format: '%n %u',
              units: {
                'byte': {
                  one: 'Byte',
                  other: 'Bytes'
                },
                kb: 'KB',
                mb: 'MB',
                gb: 'GB',
                tb: 'TB'
              }
            },
            decimal_units: {
              format: '%n %u',
              units: {
                unit: '',
                thousand: 'Thousand',
                million: 'Million',
                billion: 'Billion',
                trillion: 'Trillion',
                quadrillion: 'Quadrillion'
              }
            }
          }
        },
        errors: {
          format: '%{attribute} %{message}',
          messages: {
            inclusion: 'is not included in the list',
            exclusion: 'is reserved',
            invalid: 'is invalid',
            confirmation: 'doesn\'t match %{attribute}',
            accepted: 'must be accepted',
            empty: 'can\'t be empty',
            blank: 'can\'t be blank',
            present: 'must be blank',
            too_long: 'is too long (maximum is %{count} characters)',
            too_short: 'is too short (minimum is %{count} characters)',
            wrong_length: 'is the wrong length (should be %{count} characters)',
            not_a_number: 'is not a number',
            not_an_integer: 'must be an integer',
            greater_than: 'must be greater than %{count}',
            greater_than_or_equal_to: 'must be greater than or equal to %{count}',
            equal_to: 'must be equal to %{count}',
            less_than: 'must be less than %{count}',
            less_than_or_equal_to: 'must be less than or equal to %{count}',
            other_than: 'must be other than %{count}',
            odd: 'must be odd',
            even: 'must be even',
            carrierwave_processing_error: 'failed to be processed',
            carrierwave_integrity_error: 'is not of an allowed file type',
            carrierwave_download_error: 'could not be downloaded',
            extension_white_list_error: 'You are not allowed to upload %{extension} files, allowed types: %{allowed_types}',
            extension_black_list_error: 'You are not allowed to upload %{extension} files, prohibited types: %{prohibited_types}',
            rmagick_processing_error: 'Failed to manipulate with rmagick, maybe it is not an image? Original Error: %{e}',
            mime_types_processing_error: 'Failed to process file with MIME::Types, maybe not valid content-type? Original Error: %{e}',
            mini_magick_processing_error: 'Failed to manipulate with MiniMagick, maybe it is not an image? Original Error: %{e}',
            already_confirmed: 'was already confirmed, please try signing in',
            confirmation_period_expired: 'needs to be confirmed within %{period}, please request a new one',
            expired: 'has expired, please request a new one',
            not_found: 'not found',
            not_locked: 'was not locked',
            not_saved: {
              one: '1 error prohibited this %{resource} from being saved:',
              other: '%{count} errors prohibited this %{resource} from being saved:'
            }
          }
        },
        datetime: {
          distance_in_words: {
            half_a_minute: 'half a minute',
            less_than_x_seconds: {
              one: 'less than 1 second',
              other: 'less than %{count} seconds'
            },
            x_seconds: {
              one: '1 second',
              other: '%{count} seconds'
            },
            less_than_x_minutes: {
              one: 'less than a minute',
              other: 'less than %{count} minutes'
            },
            x_minutes: {
              one: '1 minute',
              other: '%{count} minutes'
            },
            about_x_hours: {
              one: 'about 1 hour',
              other: 'about %{count} hours'
            },
            x_days: {
              one: '1 day',
              other: '%{count} days'
            },
            about_x_months: {
              one: 'about 1 month',
              other: 'about %{count} months'
            },
            x_months: {
              one: '1 month',
              other: '%{count} months'
            },
            about_x_years: {
              one: 'about 1 year',
              other: 'about %{count} years'
            },
            over_x_years: {
              one: 'over 1 year',
              other: 'over %{count} years'
            },
            almost_x_years: {
              one: 'almost 1 year',
              other: 'almost %{count} years'
            }
          },
          prompts: {
            year: 'Year',
            month: 'Month',
            day: 'Day',
            hour: 'Hour',
            minute: 'Minute',
            second: 'Seconds'
          }
        },
        helpers: {
          select: {
            prompt: 'Please select'
          },
          submit: {
            create: 'Create %{model}',
            update: 'Update %{model}',
            submit: 'Save %{model}'
          },
          page_entries_info: {
            one_page: {
              display_entries: {
                zero: 'No %{entry_name} found',
                one: 'Displaying <b>1</b> %{entry_name}',
                other: 'Displaying <b>all %{count}</b> %{entry_name}'
              }
            },
            more_pages: {
              display_entries: 'Displaying %{entry_name} <b>%{first}&nbsp;-&nbsp;%{last}</b> of <b>%{total}</b> in total'
            }
          }
        },
        mongoid: {
          errors: {
            messages: {
              blank_in_locale: 'can\'t be blank in %{location}',
              ambiguous_relationship: {
                message: 'Ambiguous relations %{candidates} defined on %{klass}.',
                summary: 'When Mongoid attempts to set an inverse document of a relation in memory, it needs to know which relation it belongs to. When setting %{name}, Mongoid looked on the class %{inverse} for a matching relation, but multiples were found that could potentially match: %{candidates}.',
                resolution: 'On the %{name} relation on %{inverse} you must add an :inverse_of option to specify the exact relationship on %{klass} that is the opposite of %{name}.'
              },
              callbacks: {
                message: 'Calling %{method} on %{klass} resulted in a false return from a callback.',
                summary: 'If a before callback returns false when using Document.create!, Document#save!, or Documnet#update_attributes! this error will get raised since the document did not actually get saved.',
                resolution: 'Double check all before callbacks to make sure they are not unintentionally returning false.'
              },
              calling_document_find_with_nil_is_invalid: {
                message: 'Calling Document.find with nil is invalid.',
                summary: 'Document.find expects the parameters to be 1 or more ids, and will return a single document if 1 id is provided, otherwise an array of documents if multiple ids are provided.',
                resolution: 'Most likely this is caused by passing parameters directly through to the find, and the parameter either is not present or the key from which it is accessed is incorrect.'
              },
              document_not_destroyed: {
                message: '%{klass} with id %{id} was not destroyed.',
                summary: 'When calling %{klass}#destroy! and a callback halts the destroy callback chain by returning a false value, the deletion will not actually occur.',
                resolution: 'Check the before/after destroy callbacks to ensure that the return values are truthy for the chain to continue.'
              },
              document_not_found: {
                message: 'Document(s) not found for class %{klass} with id(s) %{missing}.',
                summary: 'When calling %{klass}.find with an id or array of ids, each parameter must match a document in the database or this error will be raised. The search was for the id(s): %{searched} (%{total} total) and the following ids were not found: %{missing}.',
                resolution: 'Search for an id that is in the database or set the Mongoid.raise_not_found_error configuration option to false, which will cause a nil to be returned instead of raising this error when searching for a single id, or only the matched documents when searching for multiples.'
              },
              document_with_attributes_not_found: {
                message: 'Document not found for class %{klass} with attributes %{attributes}.',
                summary: 'When calling %{klass}.find_by with a hash of attributes, all attributes provided must match a document in the database or this error will be raised.',
                resolution: 'Search for attributes that are in the database or set the Mongoid.raise_not_found_error configuration option to false, which will cause a nil to be returned instead of raising this error.'
              },
              eager_load: {
                message: 'Eager loading :%{name} is not supported since it is a polymorphic belongs_to relation.',
                summary: 'Mongoid cannot currently determine the classes it needs to eager load when the relation is polymorphic. The parents reside in different collections so a simple id lookup is not sufficient enough.',
                resolution: 'Don\'t attempt to perform this action and have patience, maybe this will be supported in the future.'
              },
              invalid_collection: {
                message: 'Access to the collection for %{klass} is not allowed.',
                summary: '%{klass}.collection was called, and %{klass} is an embedded document - it resides within the collection of the root document of the hierarchy.',
                resolution: 'For access to the collection that the embedded document is in, use %{klass}#_root.collection, or do not attempt to persist an embedded document without a parent set.'
              },
              invalid_config_option: {
                message: 'Invalid configuration option: %{name}.',
                summary: 'A invalid configuration option was provided in your mongoid.yml, or a typo is potentially present. The valid configuration options are: %{options}.',
                resolution: 'Remove the invalid option or fix the typo. If you were expecting the option to be there, please consult the following page with repect to Mongoid\'s configuration:\n\n   http://mongoid.org/en/mongoid/docs/installation.html'
              },
              invalid_field: {
                message: 'Defining a field named \'%{name}\' is not allowed.',
                summary: 'Defining this field would override the method \'%{name}\', which would cause issues with expectations around the original method and cause extremely hard to debug issues. The original method was defined in:\n   Object: %{origin}\n   File: %{file}\n   Line: %{line}',
                resolution: 'Use Mongoid.destructive_fields to see what names are not allowed, and don\'t use these names. These include names that also conflict with core Ruby methods on Object, Module, Enumerable, or included gems that inject methods into these or Mongoid internals.'
              },
              invalid_field_option: {
                message: 'Invalid option :%{option} provided for field :%{name}.',
                summary: 'Mongoid requires that you only provide valid options on each field definition in order to prevent unexpected behaviour later on.',
                resolution: 'When defining the field :%{name} on \'%{klass}\', please provide valid options for the field. These are currently: %{valid}. If you meant to define a custom field option, please do so first like so:\n\n   Mongoid::Fields.option :%{option} do |model, field, value|\n     # Your logic here...\n   end\n   class %{klass}\n     include Mongoid::Document\n     field :%{name}, %{option}: true\n   end\n\n'
              },
              invalid_includes: {
                message: 'Invalid includes directive: %{klass}.includes(%{args})',
                summary: 'Eager loading in Mongoid only supports providing arguments to %{klass}.includes that are the names of relations on the %{klass} model, and only supports one level of eager loading. (ie, eager loading associations not on the %{klass} but one step away via another relation is not allowed.',
                resolution: 'Ensure that each parameter passed to %{klass}.includes is a valid name of a relation on the %{klass} model. These are: %{relations}.'
              },
              invalid_index: {
                message: 'Invalid index specification on %{klass}: %{spec}, %{options}',
                summary: 'Indexes in Mongoid are defined as a hash of field name and direction/2d pairs, with a hash for any additional options.',
                resolution: 'Ensure that the index conforms to the correct syntax and has the correct options.\n\n Valid options are:\n   background: true|false\n   database: \'database_name\'\n   drop_dups: true|false\n   name: \'index_name\'\n   sparse: true|false\n   unique: true|false\n   min: 1\n   max: 1\n   bits: 26\n   bucket_size : 1\n   weights: { content: 1, title: 2 }\n   expire_after_seconds: number_of_seconds\n Valid types are: 1, -1, \'2d\', \'2dsphere\', \'geoHaystack\', \'text\', \'hashed\'\n\n Example:\n   class Band\n     include Mongoid::Document\n     index({ name: 1, label: -1 }, { sparse: true })\n     index({ location: \'2d\' }, { background: true })\n   end\n\n'
              },
              invalid_options: {
                message: 'Invalid option :%{invalid} provided to relation :%{name}.',
                summary: 'Mongoid checks the options that are passed to the relation macros to ensure that no ill side effects occur by letting something slip by.',
                resolution: 'Valid options are: %{valid}, make sure these are the ones you are using.'
              },
              invalid_path: {
                message: 'Having a root path assigned for %{klass} is invalid.',
                summary: 'Mongoid has two different path objects for determining the location of a document in the database, Root and Embedded. This error is raised when an embedded document somehow gets a root path assigned.',
                resolution: 'Most likely your embedded model, %{klass} is also referenced via a has_many from a root document in another collection. Double check the relation definitions and fix any instances where embedded documents are improperly referenced from other collections.'
              },
              invalid_scope: {
                message: 'Defining a scope of value %{value} on %{klass} is not allowed.',
                summary: 'Scopes in Mongoid must be procs that wrap criteria objects.',
                resolution: 'Change the scope to be a proc wrapped critera.\n\n Example:\n   class Band\n     include Mongoid::Document\n     scope :inactive, ->{ where(active: false) }\n   end\n\n'
              },
              invalid_storage_options: {
                message: 'Invalid options passed to %{klass}.store_in: %{options}.',
                summary: 'The :store_in macro takes only a hash of parameters with the keys :database, :collection, or :session.',
                resolution: 'Change the options passed to store_in to match the documented API, and ensure all keys in the options hash are symbols.\n\n Example:\n   class Band\n     include Mongoid::Document\n     store_in collection: \'artists\', database: \'secondary\'\n   end\n\n'
              },
              invalid_storage_parent: {
                message: 'Invalid store_in call on class %{klass}.',
                summary: 'The :store_in macro can only be called on a base Mongoid Document',
                resolution: 'Remove the store_in call on class %{klass}, as it will use its parent store configuration. Or remove the hierarchy extension for this class.'
              },
              invalid_time: {
                message: '\'%{value}\' is not a valid Time.',
                summary: 'Mongoid tries to serialize the values for Date, DateTime, and Time into proper UTC times to store in the database. The provided value could not be parsed.',
                resolution: 'Make sure to pass parsable values to the field setter for Date, DateTime, and Time objects. When this is a String it needs to be valid for Time.parse. Other objects must be valid to pass to Time.local.'
              },
              inverse_not_found: {
                message: 'When adding a(n) %{klass} to %{base}#%{name}, Mongoid could not determine the inverse foreign key to set. The attempted key was \'%{inverse}\'.',
                summary: 'When adding a document to a relation, Mongoid attempts to link the newly added document to the base of the relation in memory, as well as set the foreign key to link them on the database side. In this case Mongoid could not determine what the inverse foreign key was.',
                resolution: 'If an inverse is not required, like a belongs_to or has_and_belongs_to_many, ensure that :inverse_of => nil is set on the relation. If the inverse is needed, most likely the inverse cannot be figured out from the names of the relations and you will need to explicitly tell Mongoid on the relation what the inverse is.\n\n Example:\n   class Lush\n     include Mongoid::Document\n     has_one :whiskey, class_name: "Drink", inverse_of: :alcoholic\n   end\n\n   class Drink\n     include Mongoid::Document\n     belongs_to :alcoholic, class_name: "Lush", inverse_of: :whiskey\n   end'
              },
              invalid_set_polymorphic_relation: {
                message: 'The %{name} attribute can\'t be set to an instance of %{other_klass} as %{other_klass} has multiple relations referencing %{klass} as %{name}.',
                summary: 'If the parent class of a polymorphic relation has multiple definitions for the same relation, the values must be set from the parent side and not the child side since Mongoid cannot determine from the child side which relation to go in.',
                resolution: 'Set the values from the parent, or redefine the relation with only a single definition in the parent.'
              },
              invalid_value: {
                message: 'Value of type %{value_class} cannot be written to a field of type %{field_class}',
                summary: 'Tried to set a value of type %{value_class} to a field of type %{field_class}',
                resolution: 'Verify if the value to be set correspond to field definition'
              },
              mixed_relations: {
                message: 'Referencing a(n) %{embedded} document from the %{root} document via a relational association is not allowed since the %{embedded} is embedded.',
                summary: 'In order to properly access a(n) %{embedded} from %{root} the reference would need to go through the root document of %{embedded}. In a simple case this would require Mongoid to store an extra foreign key for the root, in more complex cases where %{embedded} is multiple levels deep a key would need to be stored for each parent up the hierarchy.',
                resolution: 'Consider not embedding %{embedded}, or do the key storage and access in a custom manner in the application code.'
              },
              mixed_session_configuration: {
                message: 'Both uri and standard configuration options defined for session: \'%{name}\'.',
                summary: 'Instead of simply giving uri or standard options a preference order, Mongoid assumes that you have made a mistake in your configuration and requires that you provide one or the other, but not both. The options that were provided were: %{config}.',
                resolution: 'Provide either only a uri as configuration or only standard options.'
              },
              nested_attributes_metadata_not_found: {
                message: 'Could not find metadata for relation \'%{name}\' on model: %{klass}.',
                summary: 'When defining nested attributes for a relation, Mongoid needs to access the metadata for the relation \'%{name}\' in order if add autosave functionality to it, if applicable. Either no relation named \'%{name}\' could be found, or the relation had not been defined yet.',
                resolution: 'Make sure that there is a relation defined named \'%{name}\' on %{klass} or that the relation definition comes before the accepts_nested_attributes_for macro in the model - order matters so that Mongoid has access to the metadata.\n\n Example:\n   class Band\n     include Mongoid::Document\n     has_many :albums\n     accepts_nested_attributes_for :albums\n   end\n\n'
              },
              no_default_session: {
                message: 'No default session configuration is defined.',
                summary: 'The configuration provided settings for: %{keys}, but Mongoid requires a :default to be defined at minimum.',
                resolution: 'If configuring via a mongoid.yml, ensure that within your :sessions section a :default session is defined.\n\n Example:\n   development:\n     sessions:\n       default:\n         hosts:\n           - localhost:27017\n\n'
              },
              no_environment: {
                message: 'Could not load the configuration since no environment was defined.',
                summary: 'Mongoid attempted to find the appropriate environment but no Rails.env, Sinatra::Base.environment, RACK_ENV, or MONGOID_ENV could be found.',
                resolution: 'Make sure some environment is set from the mentioned options. Mongoid cannot load configuration from the yaml without knowing which environment it is in, and we have considered defaulting to development an undesireable side effect of this not being defined.'
              },
              no_map_reduce_output: {
                message: 'No output location was specified for the map/reduce operation.',
                summary: 'When executing a map/reduce, you must provide the output location of the results. The attempted command was: %{command}.',
                resolution: 'Provide the location that the output of the operation is to go by chaining an #out call to the map/reduce.\n\n Example:\n   Band.map_reduce(map, reduce).out(inline: 1)\n\n Valid options for the out function are:\n   inline:  1\n   merge:   \'collection-name\'\n   replace: \'collection-name\'\n   reduce:  \'collection-name\'\n\n'
              },
              no_metadata: {
                message: 'Metadata not found for document of type %{klass}.',
                summary: 'Mongoid sets the metadata of a relation on the document when it is either loaded from within the relation, or added to one. The presence of the metadata is required in order to provide various functionality around relations. Most likely you are getting this error because the document is embedded and was attempted to be persisted without being associated with a parent, or the relation was not properly defined.',
                resolution: 'Ensure that your relations on the %{klass} model are all properly defined, and that the inverse relations are also properly defined. Embedded relations must have both the parent (embeds_one/embeds_many) and the inverse (embedded_in) present in order to work properly.'
              },
              no_parent: {
                message: 'Cannot persist embedded document %{klass} without a parent document.',
                summary: 'If the document is embedded, in order to be persisted it must always have a reference to its parent document. This is most likely caused by either calling %{klass}.create or %{klass}.create! without setting the parent document as an attribute.',
                resolution: 'Ensure that you\'ve set the parent relation if instantiating the embedded document direcly, or always create new embedded documents via the parent relation.'
              },
              no_session_config: {
                message: 'No configuration could be found for a session named \'%{name}\'.',
                summary: 'When attempting to create the new session, Mongoid could not find a session configuration for the name: \'%{name}\'. This is necessary in order to know the host, port, and options needed to connect.',
                resolution: 'Double check your mongoid.yml to make sure under the sessions key that a configuration exists for \'%{name}\'. If you have set the configuration programatically, ensure that \'%{name}\' exists in the configuration hash.'
              },
              no_sessions_config: {
                message: 'No sessions configuration provided.',
                summary: 'Mongoid\'s configuration requires that you provide details about each session that can be connected to, and requires in the sessions config at least 1 default session to exist.',
                resolution: 'Double check your mongoid.yml to make sure that you have a top-level sessions key with at least 1 default session configuration for it. You can regenerate a new mongoid.yml for assistance via `rails g mongoid:config`.\n\n Example:\n   development:\n     sessions:\n       default:\n         database: mongoid_dev\n         hosts:\n           - localhost:27017\n\n'
              },
              no_session_database: {
                message: 'No database provided for session configuration: :%{name}.',
                summary: 'Each session configuration must provide a database so Mongoid knows where the default database to persist to. What was provided was: %{config}.',
                resolution: 'If configuring via a mongoid.yml, ensure that within your :%{name} section a :database value for the session\'s default database is defined.\n\n Example:\n   development:\n     sessions:\n       %{name}:\n         database: my_app_db\n         hosts:\n           - localhost:27017\n\n'
              },
              no_session_hosts: {
                message: 'No hosts provided for session configuration: :%{name}.',
                summary: 'Each session configuration must provide hosts so Mongoid knows where the database server is located. What was provided was: %{config}.',
                resolution: 'If configuring via a mongoid.yml, ensure that within your :%{name} section a :hosts value for the session hosts is defined.\n\n Example:\n   development:\n     sessions:\n       %{name}:\n         database: my_app_db\n         hosts:\n           - localhost:27017\n\n'
              },
              readonly_attribute: {
                message: 'Attempted to set the readonly attribute \'%{name}\' with the value: %{value}.',
                summary: 'Attributes flagged as readonly via Model.attr_readonly can only have values set when the document is a new record.',
                resolution: 'Don\'t define \'%{name}\' as readonly, or do not attempt to update its value after the document is persisted.'
              },
              readonly_document: {
                message: 'Attempted to persist the readonly document \'%{klass}\'.',
                summary: 'Documents loaded from the database using #only cannot be persisted.',
                resolution: 'Don\'t attempt to persist documents that are flagged as readonly.'
              },
              scope_overwrite: {
                message: 'Cannot create scope :%{scope_name}, because of existing method %{model_name}.%{scope_name}.',
                summary: 'When defining a scope that conflicts with a method that already exists on the model, this error will get raised if Mongoid.scope_overwrite_exception is set to true.',
                resolution: 'Change the name of the scope so it does not conflict with the already defined method %{model_name}, or set the configuration option Mongoid.scope_overwrite_exception to false, which is its default. In this case a warning will be logged.'
              },
              taken: 'is already taken',
              too_many_nested_attribute_records: {
                message: 'Accepting nested attributes for %{association} is limited to %{limit} records.',
                summary: 'More documents were sent to be processed than the allowed limit.',
                resolution: 'The limit is set as an option to the macro, for example: accepts_nested_attributes_for :%{association}, limit: %{limit}. Consider raising this limit or making sure no more are sent than the set value.'
              },
              unknown_attribute: {
                message: 'Attempted to set a value for \'%{name}\' which is not allowed on the model %{klass}.',
                summary: 'Without including Mongoid::Attributes::Dynamic in your model and the attribute does not already exist in the attributes hash, attempting to call %{klass}#%{name}= for it is not allowed. This is also triggered by passing the attribute to any method that accepts an attributes hash, and is raised instead of getting a NoMethodError.',
                resolution: 'You can include Mongoid::Attributes::Dynamic if you expect to be writing values for undefined fields often.'
              },
              unsaved_document: {
                message: 'Attempted to save %{document} before the parent %{base}.',
                summary: 'You cannot call create or create! through the relation (%{document}) who\'s parent (%{base}) is not already saved. This would case the database to be out of sync since the child could potentially reference a nonexistant parent.',
                resolution: 'Make sure to only use create or create! when the parent document %{base} is persisted.'
              },
              unsupported_javascript: {
                message: 'Executing Javascript $where selector on an embedded criteria is not supported.',
                summary: 'Mongoid only supports providing a hash of arguments to #where criterion on embedded documents. Since %{klass} is embedded, the expression %{javascript} is not allowed.',
                resolution: 'Please provide a standard hash to #where when the criteria is for an embedded relation.'
              },
              validations: {
                message: 'Validation of %{document} failed.',
                summary: 'The following errors were found: %{errors}',
                resolution: 'Try persisting the document with valid data or remove the validations.'
              },
              delete_restriction: {
                message: 'Cannot delete %{document} because of dependent \'%{relation}\'.',
                summary: 'When defining \'%{relation}\' with a :dependent => :restrict, Mongoid will raise an error when attempting to delete the %{document} when the child \'%{relation}\' still has documents in it.',
                resolution: 'Don\'t attempt to delete the parent %{document} when it has children, or change the dependent option on the relation.'
              }
            }
          }
        },
        faker: {
          separator: ' & ',
          address: {
            city_prefix: [
              'North',
              'East',
              'West',
              'South',
              'New',
              'Lake',
              'Port'
            ],
            city_suffix: [
              'town',
              'ton',
              'land',
              'ville',
              'berg',
              'burgh',
              'borough',
              'bury',
              'view',
              'port',
              'mouth',
              'stad',
              'furt',
              'chester',
              'mouth',
              'fort',
              'haven',
              'side',
              'shire'
            ],
            country: [
              'Afghanistan',
              'Albania',
              'Algeria',
              'American Samoa',
              'Andorra',
              'Angola',
              'Anguilla',
              'Antarctica (the territory South of 60 deg S)',
              'Antigua and Barbuda',
              'Argentina',
              'Armenia',
              'Aruba',
              'Australia',
              'Austria',
              'Azerbaijan',
              'Bahamas',
              'Bahrain',
              'Bangladesh',
              'Barbados',
              'Belarus',
              'Belgium',
              'Belize',
              'Benin',
              'Bermuda',
              'Bhutan',
              'Bolivia',
              'Bosnia and Herzegovina',
              'Botswana',
              'Bouvet Island (Bouvetoya)',
              'Brazil',
              'British Indian Ocean Territory (Chagos Archipelago)',
              'Brunei Darussalam',
              'Bulgaria',
              'Burkina Faso',
              'Burundi',
              'Cambodia',
              'Cameroon',
              'Canada',
              'Cape Verde',
              'Cayman Islands',
              'Central African Republic',
              'Chad',
              'Chile',
              'China',
              'Christmas Island',
              'Cocos (Keeling) Islands',
              'Colombia',
              'Comoros',
              'Congo',
              'Congo',
              'Cook Islands',
              'Costa Rica',
              'Cote d\'Ivoire',
              'Croatia',
              'Cuba',
              'Cyprus',
              'Czech Republic',
              'Denmark',
              'Djibouti',
              'Dominica',
              'Dominican Republic',
              'Ecuador',
              'Egypt',
              'El Salvador',
              'Equatorial Guinea',
              'Eritrea',
              'Estonia',
              'Ethiopia',
              'Faroe Islands',
              'Falkland Islands (Malvinas)',
              'Fiji',
              'Finland',
              'France',
              'French Guiana',
              'French Polynesia',
              'French Southern Territories',
              'Gabon',
              'Gambia',
              'Georgia',
              'Germany',
              'Ghana',
              'Gibraltar',
              'Greece',
              'Greenland',
              'Grenada',
              'Guadeloupe',
              'Guam',
              'Guatemala',
              'Guernsey',
              'Guinea',
              'Guinea-Bissau',
              'Guyana',
              'Haiti',
              'Heard Island and McDonald Islands',
              'Holy See (Vatican City State)',
              'Honduras',
              'Hong Kong',
              'Hungary',
              'Iceland',
              'India',
              'Indonesia',
              'Iran',
              'Iraq',
              'Ireland',
              'Isle of Man',
              'Israel',
              'Italy',
              'Jamaica',
              'Japan',
              'Jersey',
              'Jordan',
              'Kazakhstan',
              'Kenya',
              'Kiribati',
              'Democratic People\'s Republic of Korea',
              'Republic of Korea',
              'Kuwait',
              'Kyrgyz Republic',
              'Lao People\'s Democratic Republic',
              'Latvia',
              'Lebanon',
              'Lesotho',
              'Liberia',
              'Libyan Arab Jamahiriya',
              'Liechtenstein',
              'Lithuania',
              'Luxembourg',
              'Macao',
              'Macedonia',
              'Madagascar',
              'Malawi',
              'Malaysia',
              'Maldives',
              'Mali',
              'Malta',
              'Marshall Islands',
              'Martinique',
              'Mauritania',
              'Mauritius',
              'Mayotte',
              'Mexico',
              'Micronesia',
              'Moldova',
              'Monaco',
              'Mongolia',
              'Montenegro',
              'Montserrat',
              'Morocco',
              'Mozambique',
              'Myanmar',
              'Namibia',
              'Nauru',
              'Nepal',
              'Netherlands Antilles',
              'Netherlands',
              'New Caledonia',
              'New Zealand',
              'Nicaragua',
              'Niger',
              'Nigeria',
              'Niue',
              'Norfolk Island',
              'Northern Mariana Islands',
              'Norway',
              'Oman',
              'Pakistan',
              'Palau',
              'Palestinian Territory',
              'Panama',
              'Papua New Guinea',
              'Paraguay',
              'Peru',
              'Philippines',
              'Pitcairn Islands',
              'Poland',
              'Portugal',
              'Puerto Rico',
              'Qatar',
              'Reunion',
              'Romania',
              'Russian Federation',
              'Rwanda',
              'Saint Barthelemy',
              'Saint Helena',
              'Saint Kitts and Nevis',
              'Saint Lucia',
              'Saint Martin',
              'Saint Pierre and Miquelon',
              'Saint Vincent and the Grenadines',
              'Samoa',
              'San Marino',
              'Sao Tome and Principe',
              'Saudi Arabia',
              'Senegal',
              'Serbia',
              'Seychelles',
              'Sierra Leone',
              'Singapore',
              'Slovakia (Slovak Republic)',
              'Slovenia',
              'Solomon Islands',
              'Somalia',
              'South Africa',
              'South Georgia and the South Sandwich Islands',
              'Spain',
              'Sri Lanka',
              'Sudan',
              'Suriname',
              'Svalbard & Jan Mayen Islands',
              'Swaziland',
              'Sweden',
              'Switzerland',
              'Syrian Arab Republic',
              'Taiwan',
              'Tajikistan',
              'Tanzania',
              'Thailand',
              'Timor-Leste',
              'Togo',
              'Tokelau',
              'Tonga',
              'Trinidad and Tobago',
              'Tunisia',
              'Turkey',
              'Turkmenistan',
              'Turks and Caicos Islands',
              'Tuvalu',
              'Uganda',
              'Ukraine',
              'United Arab Emirates',
              'United Kingdom',
              'United States of America',
              'United States Minor Outlying Islands',
              'Uruguay',
              'Uzbekistan',
              'Vanuatu',
              'Venezuela',
              'Vietnam',
              'Virgin Islands, British',
              'Virgin Islands, U.S.',
              'Wallis and Futuna',
              'Western Sahara',
              'Yemen',
              'Zambia',
              'Zimbabwe'
            ],
            country_code: [
              'AD',
              'AE',
              'AF',
              'AG',
              'AI',
              'AL',
              'AM',
              'AO',
              'AQ',
              'AR',
              'AS',
              'AT',
              'AU',
              'AW',
              'AX',
              'AZ',
              'BA',
              'BB',
              'BD',
              'BE',
              'BF',
              'BG',
              'BH',
              'BI',
              'BJ',
              'BL',
              'BM',
              'BN',
              'BO',
              'BQ',
              'BQ',
              'BR',
              'BS',
              'BT',
              'BV',
              'BW',
              'BY',
              'BZ',
              'CA',
              'CC',
              'CD',
              'CF',
              'CG',
              'CH',
              'CI',
              'CK',
              'CL',
              'CM',
              'CN',
              'CO',
              'CR',
              'CU',
              'CV',
              'CW',
              'CX',
              'CY',
              'CZ',
              'DE',
              'DJ',
              'DK',
              'DM',
              'DO',
              'DZ',
              'EC',
              'EE',
              'EG',
              'EH',
              'ER',
              'ES',
              'ET',
              'FI',
              'FJ',
              'FK',
              'FM',
              'FO',
              'FR',
              'GA',
              'GB',
              'GD',
              'GE',
              'GF',
              'GG',
              'GH',
              'GI',
              'GL',
              'GM',
              'GN',
              'GP',
              'GQ',
              'GR',
              'GS',
              'GT',
              'GU',
              'GW',
              'GY',
              'HK',
              'HM',
              'HN',
              'HR',
              'HT',
              'HU',
              'ID',
              'IE',
              'IL',
              'IM',
              'IN',
              'IO',
              'IQ',
              'IR',
              'IS',
              'IT',
              'JE',
              'JM',
              'JO',
              'JP',
              'KE',
              'KG',
              'KH',
              'KI',
              'KM',
              'KN',
              'KP',
              'KR',
              'KW',
              'KY',
              'KZ',
              'LA',
              'LB',
              'LC',
              'LI',
              'LK',
              'LR',
              'LS',
              'LT',
              'LU',
              'LV',
              'LY',
              'MA',
              'MC',
              'MD',
              'ME',
              'MF',
              'MG',
              'MH',
              'MK',
              'ML',
              'MM',
              'MN',
              'MO',
              'MP',
              'MQ',
              'MR',
              'MS',
              'MT',
              'MU',
              'MV',
              'MW',
              'MX',
              'MY',
              'MZ',
              'NA',
              'NC',
              'NE',
              'NF',
              'NG',
              'NI',
              'NL',
              'NO',
              'NP',
              'NR',
              'NU',
              'NZ',
              'OM',
              'PA',
              'PE',
              'PF',
              'PG',
              'PH',
              'PK',
              'PL',
              'PM',
              'PN',
              'PR',
              'PS',
              'PT',
              'PW',
              'PY',
              'QA',
              'RE',
              'RO',
              'RS',
              'RU',
              'RW',
              'SA',
              'SB',
              'SC',
              'SD',
              'SE',
              'SG',
              'SH',
              'SI',
              'SJ',
              'SK',
              'SL',
              'SM',
              'SN',
              'SO',
              'SR',
              'SS',
              'ST',
              'SV',
              'SX',
              'SY',
              'SZ',
              'TC',
              'TD',
              'TF',
              'TG',
              'TH',
              'TJ',
              'TK',
              'TL',
              'TM',
              'TN',
              'TO',
              'TR',
              'TT',
              'TV',
              'TW',
              'TZ',
              'UA',
              'UG',
              'UM',
              'US',
              'UY',
              'UZ',
              'VA',
              'VC',
              'VE',
              'VG',
              'VI',
              'VN',
              'VU',
              'WF',
              'WS',
              'YE',
              'YT',
              'ZA',
              'ZM',
              'ZW'
            ],
            building_number: [
              '#####',
              '####',
              '###'
            ],
            street_suffix: [
              'Alley',
              'Avenue',
              'Branch',
              'Bridge',
              'Brook',
              'Brooks',
              'Burg',
              'Burgs',
              'Bypass',
              'Camp',
              'Canyon',
              'Cape',
              'Causeway',
              'Center',
              'Centers',
              'Circle',
              'Circles',
              'Cliff',
              'Cliffs',
              'Club',
              'Common',
              'Corner',
              'Corners',
              'Course',
              'Court',
              'Courts',
              'Cove',
              'Coves',
              'Creek',
              'Crescent',
              'Crest',
              'Crossing',
              'Crossroad',
              'Curve',
              'Dale',
              'Dam',
              'Divide',
              'Drive',
              'Drive',
              'Drives',
              'Estate',
              'Estates',
              'Expressway',
              'Extension',
              'Extensions',
              'Fall',
              'Falls',
              'Ferry',
              'Field',
              'Fields',
              'Flat',
              'Flats',
              'Ford',
              'Fords',
              'Forest',
              'Forge',
              'Forges',
              'Fork',
              'Forks',
              'Fort',
              'Freeway',
              'Garden',
              'Gardens',
              'Gateway',
              'Glen',
              'Glens',
              'Green',
              'Greens',
              'Grove',
              'Groves',
              'Harbor',
              'Harbors',
              'Haven',
              'Heights',
              'Highway',
              'Hill',
              'Hills',
              'Hollow',
              'Inlet',
              'Inlet',
              'Island',
              'Island',
              'Islands',
              'Islands',
              'Isle',
              'Isle',
              'Junction',
              'Junctions',
              'Key',
              'Keys',
              'Knoll',
              'Knolls',
              'Lake',
              'Lakes',
              'Land',
              'Landing',
              'Lane',
              'Light',
              'Lights',
              'Loaf',
              'Lock',
              'Locks',
              'Locks',
              'Lodge',
              'Lodge',
              'Loop',
              'Mall',
              'Manor',
              'Manors',
              'Meadow',
              'Meadows',
              'Mews',
              'Mill',
              'Mills',
              'Mission',
              'Mission',
              'Motorway',
              'Mount',
              'Mountain',
              'Mountain',
              'Mountains',
              'Mountains',
              'Neck',
              'Orchard',
              'Oval',
              'Overpass',
              'Park',
              'Parks',
              'Parkway',
              'Parkways',
              'Pass',
              'Passage',
              'Path',
              'Pike',
              'Pine',
              'Pines',
              'Place',
              'Plain',
              'Plains',
              'Plains',
              'Plaza',
              'Plaza',
              'Point',
              'Points',
              'Port',
              'Port',
              'Ports',
              'Ports',
              'Prairie',
              'Prairie',
              'Radial',
              'Ramp',
              'Ranch',
              'Rapid',
              'Rapids',
              'Rest',
              'Ridge',
              'Ridges',
              'River',
              'Road',
              'Road',
              'Roads',
              'Roads',
              'Route',
              'Row',
              'Rue',
              'Run',
              'Shoal',
              'Shoals',
              'Shore',
              'Shores',
              'Skyway',
              'Spring',
              'Springs',
              'Springs',
              'Spur',
              'Spurs',
              'Square',
              'Square',
              'Squares',
              'Squares',
              'Station',
              'Station',
              'Stravenue',
              'Stravenue',
              'Stream',
              'Stream',
              'Street',
              'Street',
              'Streets',
              'Summit',
              'Summit',
              'Terrace',
              'Throughway',
              'Trace',
              'Track',
              'Trafficway',
              'Trail',
              'Trail',
              'Tunnel',
              'Tunnel',
              'Turnpike',
              'Turnpike',
              'Underpass',
              'Union',
              'Unions',
              'Valley',
              'Valleys',
              'Via',
              'Viaduct',
              'View',
              'Views',
              'Village',
              'Village',
              'Villages',
              'Ville',
              'Vista',
              'Vista',
              'Walk',
              'Walks',
              'Wall',
              'Way',
              'Ways',
              'Well',
              'Wells'
            ],
            secondary_address: [
              'Apt. ###',
              'Suite ###'
            ],
            postcode: [
              '#####',
              '#####-####'
            ],
            postcode_by_state: [
              '#####',
              '#####-####'
            ],
            state: [
              'Alabama',
              'Alaska',
              'Arizona',
              'Arkansas',
              'California',
              'Colorado',
              'Connecticut',
              'Delaware',
              'Florida',
              'Georgia',
              'Hawaii',
              'Idaho',
              'Illinois',
              'Indiana',
              'Iowa',
              'Kansas',
              'Kentucky',
              'Louisiana',
              'Maine',
              'Maryland',
              'Massachusetts',
              'Michigan',
              'Minnesota',
              'Mississippi',
              'Missouri',
              'Montana',
              'Nebraska',
              'Nevada',
              'New Hampshire',
              'New Jersey',
              'New Mexico',
              'New York',
              'North Carolina',
              'North Dakota',
              'Ohio',
              'Oklahoma',
              'Oregon',
              'Pennsylvania',
              'Rhode Island',
              'South Carolina',
              'South Dakota',
              'Tennessee',
              'Texas',
              'Utah',
              'Vermont',
              'Virginia',
              'Washington',
              'West Virginia',
              'Wisconsin',
              'Wyoming'
            ],
            state_abbr: [
              'AL',
              'AK',
              'AZ',
              'AR',
              'CA',
              'CO',
              'CT',
              'DE',
              'FL',
              'GA',
              'HI',
              'ID',
              'IL',
              'IN',
              'IA',
              'KS',
              'KY',
              'LA',
              'ME',
              'MD',
              'MA',
              'MI',
              'MN',
              'MS',
              'MO',
              'MT',
              'NE',
              'NV',
              'NH',
              'NJ',
              'NM',
              'NY',
              'NC',
              'ND',
              'OH',
              'OK',
              'OR',
              'PA',
              'RI',
              'SC',
              'SD',
              'TN',
              'TX',
              'UT',
              'VT',
              'VA',
              'WA',
              'WV',
              'WI',
              'WY'
            ],
            time_zone: [
              'Pacific/Midway',
              'Pacific/Pago_Pago',
              'Pacific/Honolulu',
              'America/Juneau',
              'America/Los_Angeles',
              'America/Tijuana',
              'America/Denver',
              'America/Phoenix',
              'America/Chihuahua',
              'America/Mazatlan',
              'America/Chicago',
              'America/Regina',
              'America/Mexico_City',
              'America/Mexico_City',
              'America/Monterrey',
              'America/Guatemala',
              'America/New_York',
              'America/Indiana/Indianapolis',
              'America/Bogota',
              'America/Lima',
              'America/Lima',
              'America/Halifax',
              'America/Caracas',
              'America/La_Paz',
              'America/Santiago',
              'America/St_Johns',
              'America/Sao_Paulo',
              'America/Argentina/Buenos_Aires',
              'America/Guyana',
              'America/Godthab',
              'Atlantic/South_Georgia',
              'Atlantic/Azores',
              'Atlantic/Cape_Verde',
              'Europe/Dublin',
              'Europe/London',
              'Europe/Lisbon',
              'Europe/London',
              'Africa/Casablanca',
              'Africa/Monrovia',
              'Etc/UTC',
              'Europe/Belgrade',
              'Europe/Bratislava',
              'Europe/Budapest',
              'Europe/Ljubljana',
              'Europe/Prague',
              'Europe/Sarajevo',
              'Europe/Skopje',
              'Europe/Warsaw',
              'Europe/Zagreb',
              'Europe/Brussels',
              'Europe/Copenhagen',
              'Europe/Madrid',
              'Europe/Paris',
              'Europe/Amsterdam',
              'Europe/Berlin',
              'Europe/Berlin',
              'Europe/Rome',
              'Europe/Stockholm',
              'Europe/Vienna',
              'Africa/Algiers',
              'Europe/Bucharest',
              'Africa/Cairo',
              'Europe/Helsinki',
              'Europe/Kiev',
              'Europe/Riga',
              'Europe/Sofia',
              'Europe/Tallinn',
              'Europe/Vilnius',
              'Europe/Athens',
              'Europe/Istanbul',
              'Europe/Minsk',
              'Asia/Jerusalem',
              'Africa/Harare',
              'Africa/Johannesburg',
              'Europe/Moscow',
              'Europe/Moscow',
              'Europe/Moscow',
              'Asia/Kuwait',
              'Asia/Riyadh',
              'Africa/Nairobi',
              'Asia/Baghdad',
              'Asia/Tehran',
              'Asia/Muscat',
              'Asia/Muscat',
              'Asia/Baku',
              'Asia/Tbilisi',
              'Asia/Yerevan',
              'Asia/Kabul',
              'Asia/Yekaterinburg',
              'Asia/Karachi',
              'Asia/Karachi',
              'Asia/Tashkent',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kathmandu',
              'Asia/Dhaka',
              'Asia/Dhaka',
              'Asia/Colombo',
              'Asia/Almaty',
              'Asia/Novosibirsk',
              'Asia/Rangoon',
              'Asia/Bangkok',
              'Asia/Bangkok',
              'Asia/Jakarta',
              'Asia/Krasnoyarsk',
              'Asia/Shanghai',
              'Asia/Chongqing',
              'Asia/Hong_Kong',
              'Asia/Urumqi',
              'Asia/Kuala_Lumpur',
              'Asia/Singapore',
              'Asia/Taipei',
              'Australia/Perth',
              'Asia/Irkutsk',
              'Asia/Ulaanbaatar',
              'Asia/Seoul',
              'Asia/Tokyo',
              'Asia/Tokyo',
              'Asia/Tokyo',
              'Asia/Yakutsk',
              'Australia/Darwin',
              'Australia/Adelaide',
              'Australia/Melbourne',
              'Australia/Melbourne',
              'Australia/Sydney',
              'Australia/Brisbane',
              'Australia/Hobart',
              'Asia/Vladivostok',
              'Pacific/Guam',
              'Pacific/Port_Moresby',
              'Asia/Magadan',
              'Asia/Magadan',
              'Pacific/Noumea',
              'Pacific/Fiji',
              'Asia/Kamchatka',
              'Pacific/Majuro',
              'Pacific/Auckland',
              'Pacific/Auckland',
              'Pacific/Tongatapu',
              'Pacific/Fakaofo',
              'Pacific/Apia'
            ],
            city: [
              '#{city_prefix} #{Name.first_name}#{city_suffix}',
              '#{city_prefix} #{Name.first_name}',
              '#{Name.first_name}#{city_suffix}',
              '#{Name.last_name}#{city_suffix}'
            ],
            street_name: [
              '#{Name.first_name} #{street_suffix}',
              '#{Name.last_name} #{street_suffix}'
            ],
            street_address: [
              '#{building_number} #{street_name}'
            ],
            default_country: [
              'United States of America'
            ]
          },
          credit_card: {
            visa: [
              '/4###########L/',
              '/4###-####-####-###L/'
            ],
            mastercard: [
              '/5[1-5]##-####-####-###L/',
              '/6771-89##-####-###L/'
            ],
            discover: [
              '/6011-####-####-###L/',
              '/65##-####-####-###L/',
              '/64[4-9]#-####-####-###L/',
              '/6011-62##-####-####-###L/',
              '/65##-62##-####-####-###L/',
              '/64[4-9]#-62##-####-####-###L/'
            ],
            american_express: [
              '/34##-######-####L/',
              '/37##-######-####L/'
            ],
            diners_club: [
              '/30[0-5]#-######-###L/',
              '/368#-######-###L/'
            ],
            jcb: [
              '/3528-####-####-###L/',
              '/3529-####-####-###L/',
              '/35[3-8]#-####-####-###L/'
            ],
            'switch': [
              '/6759-####-####-###L/',
              '/6759-####-####-####-#L/',
              '/6759-####-####-####-##L/'
            ],
            solo: [
              '/6767-####-####-###L/',
              '/6767-####-####-####-#L/',
              '/6767-####-####-####-##L/'
            ],
            dankort: '/5019-####-####-###L/',
            maestro: [
              '/50#{9,16}L/',
              '/5[6-8]#{9,16}L/',
              '/56##{9,16}L/'
            ],
            forbrugsforeningen: '/6007-22##-####-###L/',
            laser: [
              '/6304###########L/',
              '/6706###########L/',
              '/6771###########L/',
              '/6709###########L/',
              '/6304#########{5,6}L/',
              '/6706#########{5,6}L/',
              '/6771#########{5,6}L/',
              '/6709#########{5,6}L/'
            ]
          },
          company: {
            suffix: [
              'Inc',
              'and Sons',
              'LLC',
              'Group'
            ],
            buzzwords: [
              ['Adaptive',
              'Advanced',
              'Ameliorated',
              'Assimilated',
              'Automated',
              'Balanced',
              'Business-focused',
              'Centralized',
              'Cloned',
              'Compatible',
              'Configurable',
              'Cross-group',
              'Cross-platform',
              'Customer-focused',
              'Customizable',
              'Decentralized',
              'De-engineered',
              'Devolved',
              'Digitized',
              'Distributed',
              'Diverse',
              'Down-sized',
              'Enhanced',
              'Enterprise-wide',
              'Ergonomic',
              'Exclusive',
              'Expanded',
              'Extended',
              'Face to face',
              'Focused',
              'Front-line',
              'Fully-configurable',
              'Function-based',
              'Fundamental',
              'Future-proofed',
              'Grass-roots',
              'Horizontal',
              'Implemented',
              'Innovative',
              'Integrated',
              'Intuitive',
              'Inverse',
              'Managed',
              'Mandatory',
              'Monitored',
              'Multi-channelled',
              'Multi-lateral',
              'Multi-layered',
              'Multi-tiered',
              'Networked',
              'Object-based',
              'Open-architected',
              'Open-source',
              'Operative',
              'Optimized',
              'Optional',
              'Organic',
              'Organized',
              'Persevering',
              'Persistent',
              'Phased',
              'Polarised',
              'Pre-emptive',
              'Proactive',
              'Profit-focused',
              'Profound',
              'Programmable',
              'Progressive',
              'Public-key',
              'Quality-focused',
              'Reactive',
              'Realigned',
              'Re-contextualized',
              'Re-engineered',
              'Reduced',
              'Reverse-engineered',
              'Right-sized',
              'Robust',
              'Seamless',
              'Secured',
              'Self-enabling',
              'Sharable',
              'Stand-alone',
              'Streamlined',
              'Switchable',
              'Synchronised',
              'Synergistic',
              'Synergized',
              'Team-oriented',
              'Total',
              'Triple-buffered',
              'Universal',
              'Up-sized',
              'Upgradable',
              'User-centric',
              'User-friendly',
              'Versatile',
              'Virtual',
              'Visionary',
              'Vision-oriented'],
              [
                '24 hour',
                '24/7',
                '3rd generation',
                '4th generation',
                '5th generation',
                '6th generation',
                'actuating',
                'analyzing',
                'asymmetric',
                'asynchronous',
                'attitude-oriented',
                'background',
                'bandwidth-monitored',
                'bi-directional',
                'bifurcated',
                'bottom-line',
                'clear-thinking',
                'client-driven',
                'client-server',
                'coherent',
                'cohesive',
                'composite',
                'context-sensitive',
                'contextually-based',
                'content-based',
                'dedicated',
                'demand-driven',
                'didactic',
                'directional',
                'discrete',
                'disintermediate',
                'dynamic',
                'eco-centric',
                'empowering',
                'encompassing',
                'even-keeled',
                'executive',
                'explicit',
                'exuding',
                'fault-tolerant',
                'foreground',
                'fresh-thinking',
                'full-range',
                'global',
                'grid-enabled',
                'heuristic',
                'high-level',
                'holistic',
                'homogeneous',
                'human-resource',
                'hybrid',
                'impactful',
                'incremental',
                'intangible',
                'interactive',
                'intermediate',
                'leading edge',
                'local',
                'logistical',
                'maximized',
                'methodical',
                'mission-critical',
                'mobile',
                'modular',
                'motivating',
                'multimedia',
                'multi-state',
                'multi-tasking',
                'national',
                'needs-based',
                'neutral',
                'next generation',
                'non-volatile',
                'object-oriented',
                'optimal',
                'optimizing',
                'radical',
                'real-time',
                'reciprocal',
                'regional',
                'responsive',
                'scalable',
                'secondary',
                'solution-oriented',
                'stable',
                'static',
                'systematic',
                'systemic',
                'system-worthy',
                'tangible',
                'tertiary',
                'transitional',
                'uniform',
                'upward-trending',
                'user-facing',
                'value-added',
                'web-enabled',
                'well-modulated',
                'zero administration',
                'zero defect',
                'zero tolerance'
              ],
              [
                'ability',
                'access',
                'adapter',
                'algorithm',
                'alliance',
                'analyzer',
                'application',
                'approach',
                'architecture',
                'archive',
                'artificial intelligence',
                'array',
                'attitude',
                'benchmark',
                'budgetary management',
                'capability',
                'capacity',
                'challenge',
                'circuit',
                'collaboration',
                'complexity',
                'concept',
                'conglomeration',
                'contingency',
                'core',
                'customer loyalty',
                'database',
                'data-warehouse',
                'definition',
                'emulation',
                'encoding',
                'encryption',
                'extranet',
                'firmware',
                'flexibility',
                'focus group',
                'forecast',
                'frame',
                'framework',
                'function',
                'functionalities',
                'Graphic Interface',
                'groupware',
                'Graphical User Interface',
                'hardware',
                'help-desk',
                'hierarchy',
                'hub',
                'implementation',
                'info-mediaries',
                'infrastructure',
                'initiative',
                'installation',
                'instruction set',
                'interface',
                'internet solution',
                'intranet',
                'knowledge user',
                'knowledge base',
                'local area network',
                'leverage',
                'matrices',
                'matrix',
                'methodology',
                'middleware',
                'migration',
                'model',
                'moderator',
                'monitoring',
                'moratorium',
                'neural-net',
                'open architecture',
                'open system',
                'orchestration',
                'paradigm',
                'parallelism',
                'policy',
                'portal',
                'pricing structure',
                'process improvement',
                'product',
                'productivity',
                'project',
                'projection',
                'protocol',
                'secured line',
                'service-desk',
                'software',
                'solution',
                'standardization',
                'strategy',
                'structure',
                'success',
                'superstructure',
                'support',
                'synergy',
                'system engine',
                'task-force',
                'throughput',
                'time-frame',
                'toolset',
                'utilisation',
                'website',
                'workforce'
              ]
            ],
            bs: [
              ['implement',
              'utilize',
              'integrate',
              'streamline',
              'optimize',
              'evolve',
              'transform',
              'embrace',
              'enable',
              'orchestrate',
              'leverage',
              'reinvent',
              'aggregate',
              'architect',
              'enhance',
              'incentivize',
              'morph',
              'empower',
              'envisioneer',
              'monetize',
              'harness',
              'facilitate',
              'seize',
              'disintermediate',
              'synergize',
              'strategize',
              'deploy',
              'brand',
              'grow',
              'target',
              'syndicate',
              'synthesize',
              'deliver',
              'mesh',
              'incubate',
              'engage',
              'maximize',
              'benchmark',
              'expedite',
              'reintermediate',
              'whiteboard',
              'visualize',
              'repurpose',
              'innovate',
              'scale',
              'unleash',
              'drive',
              'extend',
              'engineer',
              'revolutionize',
              'generate',
              'exploit',
              'transition',
              'e-enable',
              'iterate',
              'cultivate',
              'matrix',
              'productize',
              'redefine',
              'recontextualize'],
              [
                'clicks-and-mortar',
                'value-added',
                'vertical',
                'proactive',
                'robust',
                'revolutionary',
                'scalable',
                'leading-edge',
                'innovative',
                'intuitive',
                'strategic',
                'e-business',
                'mission-critical',
                'sticky',
                'one-to-one',
                '24/7',
                'end-to-end',
                'global',
                'B2B',
                'B2C',
                'granular',
                'frictionless',
                'virtual',
                'viral',
                'dynamic',
                '24/365',
                'best-of-breed',
                'killer',
                'magnetic',
                'bleeding-edge',
                'web-enabled',
                'interactive',
                'dot-com',
                'sexy',
                'back-end',
                'real-time',
                'efficient',
                'front-end',
                'distributed',
                'seamless',
                'extensible',
                'turn-key',
                'world-class',
                'open-source',
                'cross-platform',
                'cross-media',
                'synergistic',
                'bricks-and-clicks',
                'out-of-the-box',
                'enterprise',
                'integrated',
                'impactful',
                'wireless',
                'transparent',
                'next-generation',
                'cutting-edge',
                'user-centric',
                'visionary',
                'customized',
                'ubiquitous',
                'plug-and-play',
                'collaborative',
                'compelling',
                'holistic',
                'rich'
              ],
              [
                'synergies',
                'web-readiness',
                'paradigms',
                'markets',
                'partnerships',
                'infrastructures',
                'platforms',
                'initiatives',
                'channels',
                'eyeballs',
                'communities',
                'ROI',
                'solutions',
                'e-tailers',
                'e-services',
                'action-items',
                'portals',
                'niches',
                'technologies',
                'content',
                'vortals',
                'supply-chains',
                'convergence',
                'relationships',
                'architectures',
                'interfaces',
                'e-markets',
                'e-commerce',
                'systems',
                'bandwidth',
                'infomediaries',
                'models',
                'mindshare',
                'deliverables',
                'users',
                'schemas',
                'networks',
                'applications',
                'metrics',
                'e-business',
                'functionalities',
                'experiences',
                'web services',
                'methodologies'
              ]
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} and #{Name.last_name}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'com',
              'biz',
              'info',
              'name',
              'net',
              'org'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ],
            supplemental: [
              'abbas',
              'abduco',
              'abeo',
              'abscido',
              'absconditus',
              'absens',
              'absorbeo',
              'absque',
              'abstergo',
              'absum',
              'abundans',
              'abutor',
              'accedo',
              'accendo',
              'acceptus',
              'accipio',
              'accommodo',
              'accusator',
              'acer',
              'acerbitas',
              'acervus',
              'acidus',
              'acies',
              'acquiro',
              'acsi',
              'adamo',
              'adaugeo',
              'addo',
              'adduco',
              'ademptio',
              'adeo',
              'adeptio',
              'adfectus',
              'adfero',
              'adficio',
              'adflicto',
              'adhaero',
              'adhuc',
              'adicio',
              'adimpleo',
              'adinventitias',
              'adipiscor',
              'adiuvo',
              'administratio',
              'admiratio',
              'admitto',
              'admoneo',
              'admoveo',
              'adnuo',
              'adopto',
              'adsidue',
              'adstringo',
              'adsuesco',
              'adsum',
              'adulatio',
              'adulescens',
              'adultus',
              'aduro',
              'advenio',
              'adversus',
              'advoco',
              'aedificium',
              'aeger',
              'aegre',
              'aegrotatio',
              'aegrus',
              'aeneus',
              'aequitas',
              'aequus',
              'aer',
              'aestas',
              'aestivus',
              'aestus',
              'aetas',
              'aeternus',
              'ager',
              'aggero',
              'aggredior',
              'agnitio',
              'agnosco',
              'ago',
              'ait',
              'aiunt',
              'alienus',
              'alii',
              'alioqui',
              'aliqua',
              'alius',
              'allatus',
              'alo',
              'alter',
              'altus',
              'alveus',
              'amaritudo',
              'ambitus',
              'ambulo',
              'amicitia',
              'amiculum',
              'amissio',
              'amita',
              'amitto',
              'amo',
              'amor',
              'amoveo',
              'amplexus',
              'amplitudo',
              'amplus',
              'ancilla',
              'angelus',
              'angulus',
              'angustus',
              'animadverto',
              'animi',
              'animus',
              'annus',
              'anser',
              'ante',
              'antea',
              'antepono',
              'antiquus',
              'aperio',
              'aperte',
              'apostolus',
              'apparatus',
              'appello',
              'appono',
              'appositus',
              'approbo',
              'apto',
              'aptus',
              'apud',
              'aqua',
              'ara',
              'aranea',
              'arbitro',
              'arbor',
              'arbustum',
              'arca',
              'arceo',
              'arcesso',
              'arcus',
              'argentum',
              'argumentum',
              'arguo',
              'arma',
              'armarium',
              'armo',
              'aro',
              'ars',
              'articulus',
              'artificiose',
              'arto',
              'arx',
              'ascisco',
              'ascit',
              'asper',
              'aspicio',
              'asporto',
              'assentator',
              'astrum',
              'atavus',
              'ater',
              'atqui',
              'atrocitas',
              'atrox',
              'attero',
              'attollo',
              'attonbitus',
              'auctor',
              'auctus',
              'audacia',
              'audax',
              'audentia',
              'audeo',
              'audio',
              'auditor',
              'aufero',
              'aureus',
              'auris',
              'aurum',
              'aut',
              'autem',
              'autus',
              'auxilium',
              'avaritia',
              'avarus',
              'aveho',
              'averto',
              'avoco',
              'baiulus',
              'balbus',
              'barba',
              'bardus',
              'basium',
              'beatus',
              'bellicus',
              'bellum',
              'bene',
              'beneficium',
              'benevolentia',
              'benigne',
              'bestia',
              'bibo',
              'bis',
              'blandior',
              'bonus',
              'bos',
              'brevis',
              'cado',
              'caecus',
              'caelestis',
              'caelum',
              'calamitas',
              'calcar',
              'calco',
              'calculus',
              'callide',
              'campana',
              'candidus',
              'canis',
              'canonicus',
              'canto',
              'capillus',
              'capio',
              'capitulus',
              'capto',
              'caput',
              'carbo',
              'carcer',
              'careo',
              'caries',
              'cariosus',
              'caritas',
              'carmen',
              'carpo',
              'carus',
              'casso',
              'caste',
              'casus',
              'catena',
              'caterva',
              'cattus',
              'cauda',
              'causa',
              'caute',
              'caveo',
              'cavus',
              'cedo',
              'celebrer',
              'celer',
              'celo',
              'cena',
              'cenaculum',
              'ceno',
              'censura',
              'centum',
              'cerno',
              'cernuus',
              'certe',
              'certo',
              'certus',
              'cervus',
              'cetera',
              'charisma',
              'chirographum',
              'cibo',
              'cibus',
              'cicuta',
              'cilicium',
              'cimentarius',
              'ciminatio',
              'cinis',
              'circumvenio',
              'cito',
              'civis',
              'civitas',
              'clam',
              'clamo',
              'claro',
              'clarus',
              'claudeo',
              'claustrum',
              'clementia',
              'clibanus',
              'coadunatio',
              'coaegresco',
              'coepi',
              'coerceo',
              'cogito',
              'cognatus',
              'cognomen',
              'cogo',
              'cohaero',
              'cohibeo',
              'cohors',
              'colligo',
              'colloco',
              'collum',
              'colo',
              'color',
              'coma',
              'combibo',
              'comburo',
              'comedo',
              'comes',
              'cometes',
              'comis',
              'comitatus',
              'commemoro',
              'comminor',
              'commodo',
              'communis',
              'comparo',
              'compello',
              'complectus',
              'compono',
              'comprehendo',
              'comptus',
              'conatus',
              'concedo',
              'concido',
              'conculco',
              'condico',
              'conduco',
              'confero',
              'confido',
              'conforto',
              'confugo',
              'congregatio',
              'conicio',
              'coniecto',
              'conitor',
              'coniuratio',
              'conor',
              'conqueror',
              'conscendo',
              'conservo',
              'considero',
              'conspergo',
              'constans',
              'consuasor',
              'contabesco',
              'contego',
              'contigo',
              'contra',
              'conturbo',
              'conventus',
              'convoco',
              'copia',
              'copiose',
              'cornu',
              'corona',
              'corpus',
              'correptius',
              'corrigo',
              'corroboro',
              'corrumpo',
              'coruscus',
              'cotidie',
              'crapula',
              'cras',
              'crastinus',
              'creator',
              'creber',
              'crebro',
              'credo',
              'creo',
              'creptio',
              'crepusculum',
              'cresco',
              'creta',
              'cribro',
              'crinis',
              'cruciamentum',
              'crudelis',
              'cruentus',
              'crur',
              'crustulum',
              'crux',
              'cubicularis',
              'cubitum',
              'cubo',
              'cui',
              'cuius',
              'culpa',
              'culpo',
              'cultellus',
              'cultura',
              'cum',
              'cunabula',
              'cunae',
              'cunctatio',
              'cupiditas',
              'cupio',
              'cuppedia',
              'cupressus',
              'cur',
              'cura',
              'curatio',
              'curia',
              'curiositas',
              'curis',
              'curo',
              'curriculum',
              'currus',
              'cursim',
              'curso',
              'cursus',
              'curto',
              'curtus',
              'curvo',
              'curvus',
              'custodia',
              'damnatio',
              'damno',
              'dapifer',
              'debeo',
              'debilito',
              'decens',
              'decerno',
              'decet',
              'decimus',
              'decipio',
              'decor',
              'decretum',
              'decumbo',
              'dedecor',
              'dedico',
              'deduco',
              'defaeco',
              'defendo',
              'defero',
              'defessus',
              'defetiscor',
              'deficio',
              'defigo',
              'defleo',
              'defluo',
              'defungo',
              'degenero',
              'degero',
              'degusto',
              'deinde',
              'delectatio',
              'delego',
              'deleo',
              'delibero',
              'delicate',
              'delinquo',
              'deludo',
              'demens',
              'demergo',
              'demitto',
              'demo',
              'demonstro',
              'demoror',
              'demulceo',
              'demum',
              'denego',
              'denique',
              'dens',
              'denuncio',
              'denuo',
              'deorsum',
              'depereo',
              'depono',
              'depopulo',
              'deporto',
              'depraedor',
              'deprecator',
              'deprimo',
              'depromo',
              'depulso',
              'deputo',
              'derelinquo',
              'derideo',
              'deripio',
              'desidero',
              'desino',
              'desipio',
              'desolo',
              'desparatus',
              'despecto',
              'despirmatio',
              'infit',
              'inflammatio',
              'paens',
              'patior',
              'patria',
              'patrocinor',
              'patruus',
              'pauci',
              'paulatim',
              'pauper',
              'pax',
              'peccatus',
              'pecco',
              'pecto',
              'pectus',
              'pecunia',
              'pecus',
              'peior',
              'pel',
              'ocer',
              'socius',
              'sodalitas',
              'sol',
              'soleo',
              'solio',
              'solitudo',
              'solium',
              'sollers',
              'sollicito',
              'solum',
              'solus',
              'solutio',
              'solvo',
              'somniculosus',
              'somnus',
              'sonitus',
              'sono',
              'sophismata',
              'sopor',
              'sordeo',
              'sortitus',
              'spargo',
              'speciosus',
              'spectaculum',
              'speculum',
              'sperno',
              'spero',
              'spes',
              'spiculum',
              'spiritus',
              'spoliatio',
              'sponte',
              'stabilis',
              'statim',
              'statua',
              'stella',
              'stillicidium',
              'stipes',
              'stips',
              'sto',
              'strenuus',
              'strues',
              'studio',
              'stultus',
              'suadeo',
              'suasoria',
              'sub',
              'subito',
              'subiungo',
              'sublime',
              'subnecto',
              'subseco',
              'substantia',
              'subvenio',
              'succedo',
              'succurro',
              'sufficio',
              'suffoco',
              'suffragium',
              'suggero',
              'sui',
              'sulum',
              'sum',
              'summa',
              'summisse',
              'summopere',
              'sumo',
              'sumptus',
              'supellex',
              'super',
              'suppellex',
              'supplanto',
              'suppono',
              'supra',
              'surculus',
              'surgo',
              'sursum',
              'suscipio',
              'suspendo',
              'sustineo',
              'suus',
              'synagoga',
              'tabella',
              'tabernus',
              'tabesco',
              'tabgo',
              'tabula',
              'taceo',
              'tactus',
              'taedium',
              'talio',
              'talis',
              'talus',
              'tam',
              'tamdiu',
              'tamen',
              'tametsi',
              'tamisium',
              'tamquam',
              'tandem',
              'tantillus',
              'tantum',
              'tardus',
              'tego',
              'temeritas',
              'temperantia',
              'templum',
              'temptatio',
              'tempus',
              'tenax',
              'tendo',
              'teneo',
              'tener',
              'tenuis',
              'tenus',
              'tepesco',
              'tepidus',
              'ter',
              'terebro',
              'teres',
              'terga',
              'tergeo',
              'tergiversatio',
              'tergo',
              'tergum',
              'termes',
              'terminatio',
              'tero',
              'terra',
              'terreo',
              'territo',
              'terror',
              'tersus',
              'tertius',
              'testimonium',
              'texo',
              'textilis',
              'textor',
              'textus',
              'thalassinus',
              'theatrum',
              'theca',
              'thema',
              'theologus',
              'thermae',
              'thesaurus',
              'thesis',
              'thorax',
              'thymbra',
              'thymum',
              'tibi',
              'timidus',
              'timor',
              'titulus',
              'tolero',
              'tollo',
              'tondeo',
              'tonsor',
              'torqueo',
              'torrens',
              'tot',
              'totidem',
              'toties',
              'totus',
              'tracto',
              'trado',
              'traho',
              'trans',
              'tredecim',
              'tremo',
              'trepide',
              'tres',
              'tribuo',
              'tricesimus',
              'triduana',
              'triginta',
              'tripudio',
              'tristis',
              'triumphus',
              'trucido',
              'truculenter',
              'tubineus',
              'tui',
              'tum',
              'tumultus',
              'tunc',
              'turba',
              'turbo',
              'turpe',
              'turpis',
              'tutamen',
              'tutis',
              'tyrannus',
              'uberrime',
              'ubi',
              'ulciscor',
              'ullus',
              'ulterius',
              'ultio',
              'ultra',
              'umbra',
              'umerus',
              'umquam',
              'una',
              'unde',
              'undique',
              'universe',
              'unus',
              'urbanus',
              'urbs',
              'uredo',
              'usitas',
              'usque',
              'ustilo',
              'ustulo',
              'usus',
              'uter',
              'uterque',
              'utilis',
              'utique',
              'utor',
              'utpote',
              'utrimque',
              'utroque',
              'utrum',
              'uxor',
              'vaco',
              'vacuus',
              'vado',
              'vae',
              'valde',
              'valens',
              'valeo',
              'valetudo',
              'validus',
              'vallum',
              'vapulus',
              'varietas',
              'varius',
              'vehemens',
              'vel',
              'velociter',
              'velum',
              'velut',
              'venia',
              'venio',
              'ventito',
              'ventosus',
              'ventus',
              'venustas',
              'ver',
              'verbera',
              'verbum',
              'vere',
              'verecundia',
              'vereor',
              'vergo',
              'veritas',
              'vero',
              'versus',
              'verto',
              'verumtamen',
              'verus',
              'vesco',
              'vesica',
              'vesper',
              'vespillo',
              'vester',
              'vestigium',
              'vestrum',
              'vetus',
              'via',
              'vicinus',
              'vicissitudo',
              'victoria',
              'victus',
              'videlicet',
              'video',
              'viduata',
              'viduo',
              'vigilo',
              'vigor',
              'vilicus',
              'vilis',
              'vilitas',
              'villa',
              'vinco',
              'vinculum',
              'vindico',
              'vinitor',
              'vinum',
              'vir',
              'virga',
              'virgo',
              'viridis',
              'viriliter',
              'virtus',
              'vis',
              'viscus',
              'vita',
              'vitiosus',
              'vitium',
              'vito',
              'vivo',
              'vix',
              'vobis',
              'vociferor',
              'voco',
              'volaticus',
              'volo',
              'volubilis',
              'voluntarius',
              'volup',
              'volutabrum',
              'volva',
              'vomer',
              'vomica',
              'vomito',
              'vorago',
              'vorax',
              'voro',
              'vos',
              'votum',
              'voveo',
              'vox',
              'vulariter',
              'vulgaris',
              'vulgivagus',
              'vulgo',
              'vulgus',
              'vulnero',
              'vulnus',
              'vulpes',
              'vulticulus',
              'vultuosus',
              'xiphias'
            ]
          },
          name: {
            first_name: [
              'Aaliyah',
              'Aaron',
              'Abagail',
              'Abbey',
              'Abbie',
              'Abbigail',
              'Abby',
              'Abdiel',
              'Abdul',
              'Abdullah',
              'Abe',
              'Abel',
              'Abelardo',
              'Abigail',
              'Abigale',
              'Abigayle',
              'Abner',
              'Abraham',
              'Ada',
              'Adah',
              'Adalberto',
              'Adaline',
              'Adam',
              'Adan',
              'Addie',
              'Addison',
              'Adela',
              'Adelbert',
              'Adele',
              'Adelia',
              'Adeline',
              'Adell',
              'Adella',
              'Adelle',
              'Aditya',
              'Adolf',
              'Adolfo',
              'Adolph',
              'Adolphus',
              'Adonis',
              'Adrain',
              'Adrian',
              'Adriana',
              'Adrianna',
              'Adriel',
              'Adrien',
              'Adrienne',
              'Afton',
              'Aglae',
              'Agnes',
              'Agustin',
              'Agustina',
              'Ahmad',
              'Ahmed',
              'Aida',
              'Aidan',
              'Aiden',
              'Aileen',
              'Aimee',
              'Aisha',
              'Aiyana',
              'Akeem',
              'Al',
              'Alaina',
              'Alan',
              'Alana',
              'Alanis',
              'Alanna',
              'Alayna',
              'Alba',
              'Albert',
              'Alberta',
              'Albertha',
              'Alberto',
              'Albin',
              'Albina',
              'Alda',
              'Alden',
              'Alec',
              'Aleen',
              'Alejandra',
              'Alejandrin',
              'Alek',
              'Alena',
              'Alene',
              'Alessandra',
              'Alessandro',
              'Alessia',
              'Aletha',
              'Alex',
              'Alexa',
              'Alexander',
              'Alexandra',
              'Alexandre',
              'Alexandrea',
              'Alexandria',
              'Alexandrine',
              'Alexandro',
              'Alexane',
              'Alexanne',
              'Alexie',
              'Alexis',
              'Alexys',
              'Alexzander',
              'Alf',
              'Alfonso',
              'Alfonzo',
              'Alford',
              'Alfred',
              'Alfreda',
              'Alfredo',
              'Ali',
              'Alia',
              'Alice',
              'Alicia',
              'Alisa',
              'Alisha',
              'Alison',
              'Alivia',
              'Aliya',
              'Aliyah',
              'Aliza',
              'Alize',
              'Allan',
              'Allen',
              'Allene',
              'Allie',
              'Allison',
              'Ally',
              'Alphonso',
              'Alta',
              'Althea',
              'Alva',
              'Alvah',
              'Alvena',
              'Alvera',
              'Alverta',
              'Alvina',
              'Alvis',
              'Alyce',
              'Alycia',
              'Alysa',
              'Alysha',
              'Alyson',
              'Alysson',
              'Amalia',
              'Amanda',
              'Amani',
              'Amara',
              'Amari',
              'Amaya',
              'Amber',
              'Ambrose',
              'Amelia',
              'Amelie',
              'Amely',
              'America',
              'Americo',
              'Amie',
              'Amina',
              'Amir',
              'Amira',
              'Amiya',
              'Amos',
              'Amparo',
              'Amy',
              'Amya',
              'Ana',
              'Anabel',
              'Anabelle',
              'Anahi',
              'Anais',
              'Anastacio',
              'Anastasia',
              'Anderson',
              'Andre',
              'Andreane',
              'Andreanne',
              'Andres',
              'Andrew',
              'Andy',
              'Angel',
              'Angela',
              'Angelica',
              'Angelina',
              'Angeline',
              'Angelita',
              'Angelo',
              'Angie',
              'Angus',
              'Anibal',
              'Anika',
              'Anissa',
              'Anita',
              'Aniya',
              'Aniyah',
              'Anjali',
              'Anna',
              'Annabel',
              'Annabell',
              'Annabelle',
              'Annalise',
              'Annamae',
              'Annamarie',
              'Anne',
              'Annetta',
              'Annette',
              'Annie',
              'Ansel',
              'Ansley',
              'Anthony',
              'Antoinette',
              'Antone',
              'Antonetta',
              'Antonette',
              'Antonia',
              'Antonietta',
              'Antonina',
              'Antonio',
              'Antwan',
              'Antwon',
              'Anya',
              'April',
              'Ara',
              'Araceli',
              'Aracely',
              'Arch',
              'Archibald',
              'Ardella',
              'Arden',
              'Ardith',
              'Arely',
              'Ari',
              'Ariane',
              'Arianna',
              'Aric',
              'Ariel',
              'Arielle',
              'Arjun',
              'Arlene',
              'Arlie',
              'Arlo',
              'Armand',
              'Armando',
              'Armani',
              'Arnaldo',
              'Arne',
              'Arno',
              'Arnold',
              'Arnoldo',
              'Arnulfo',
              'Aron',
              'Art',
              'Arthur',
              'Arturo',
              'Arvel',
              'Arvid',
              'Arvilla',
              'Aryanna',
              'Asa',
              'Asha',
              'Ashlee',
              'Ashleigh',
              'Ashley',
              'Ashly',
              'Ashlynn',
              'Ashton',
              'Ashtyn',
              'Asia',
              'Assunta',
              'Astrid',
              'Athena',
              'Aubree',
              'Aubrey',
              'Audie',
              'Audra',
              'Audreanne',
              'Audrey',
              'August',
              'Augusta',
              'Augustine',
              'Augustus',
              'Aurelia',
              'Aurelie',
              'Aurelio',
              'Aurore',
              'Austen',
              'Austin',
              'Austyn',
              'Autumn',
              'Ava',
              'Avery',
              'Avis',
              'Axel',
              'Ayana',
              'Ayden',
              'Ayla',
              'Aylin',
              'Baby',
              'Bailee',
              'Bailey',
              'Barbara',
              'Barney',
              'Baron',
              'Barrett',
              'Barry',
              'Bart',
              'Bartholome',
              'Barton',
              'Baylee',
              'Beatrice',
              'Beau',
              'Beaulah',
              'Bell',
              'Bella',
              'Belle',
              'Ben',
              'Benedict',
              'Benjamin',
              'Bennett',
              'Bennie',
              'Benny',
              'Benton',
              'Berenice',
              'Bernadette',
              'Bernadine',
              'Bernard',
              'Bernardo',
              'Berneice',
              'Bernhard',
              'Bernice',
              'Bernie',
              'Berniece',
              'Bernita',
              'Berry',
              'Bert',
              'Berta',
              'Bertha',
              'Bertram',
              'Bertrand',
              'Beryl',
              'Bessie',
              'Beth',
              'Bethany',
              'Bethel',
              'Betsy',
              'Bette',
              'Bettie',
              'Betty',
              'Bettye',
              'Beulah',
              'Beverly',
              'Bianka',
              'Bill',
              'Billie',
              'Billy',
              'Birdie',
              'Blair',
              'Blaise',
              'Blake',
              'Blanca',
              'Blanche',
              'Blaze',
              'Bo',
              'Bobbie',
              'Bobby',
              'Bonita',
              'Bonnie',
              'Boris',
              'Boyd',
              'Brad',
              'Braden',
              'Bradford',
              'Bradley',
              'Bradly',
              'Brady',
              'Braeden',
              'Brain',
              'Brandi',
              'Brando',
              'Brandon',
              'Brandt',
              'Brandy',
              'Brandyn',
              'Brannon',
              'Branson',
              'Brant',
              'Braulio',
              'Braxton',
              'Brayan',
              'Breana',
              'Breanna',
              'Breanne',
              'Brenda',
              'Brendan',
              'Brenden',
              'Brendon',
              'Brenna',
              'Brennan',
              'Brennon',
              'Brent',
              'Bret',
              'Brett',
              'Bria',
              'Brian',
              'Briana',
              'Brianne',
              'Brice',
              'Bridget',
              'Bridgette',
              'Bridie',
              'Brielle',
              'Brigitte',
              'Brionna',
              'Brisa',
              'Britney',
              'Brittany',
              'Brock',
              'Broderick',
              'Brody',
              'Brook',
              'Brooke',
              'Brooklyn',
              'Brooks',
              'Brown',
              'Bruce',
              'Bryana',
              'Bryce',
              'Brycen',
              'Bryon',
              'Buck',
              'Bud',
              'Buddy',
              'Buford',
              'Bulah',
              'Burdette',
              'Burley',
              'Burnice',
              'Buster',
              'Cade',
              'Caden',
              'Caesar',
              'Caitlyn',
              'Cale',
              'Caleb',
              'Caleigh',
              'Cali',
              'Calista',
              'Callie',
              'Camden',
              'Cameron',
              'Camila',
              'Camilla',
              'Camille',
              'Camren',
              'Camron',
              'Camryn',
              'Camylle',
              'Candace',
              'Candelario',
              'Candice',
              'Candida',
              'Candido',
              'Cara',
              'Carey',
              'Carissa',
              'Carlee',
              'Carleton',
              'Carley',
              'Carli',
              'Carlie',
              'Carlo',
              'Carlos',
              'Carlotta',
              'Carmel',
              'Carmela',
              'Carmella',
              'Carmelo',
              'Carmen',
              'Carmine',
              'Carol',
              'Carolanne',
              'Carole',
              'Carolina',
              'Caroline',
              'Carolyn',
              'Carolyne',
              'Carrie',
              'Carroll',
              'Carson',
              'Carter',
              'Cary',
              'Casandra',
              'Casey',
              'Casimer',
              'Casimir',
              'Casper',
              'Cassandra',
              'Cassandre',
              'Cassidy',
              'Cassie',
              'Catalina',
              'Caterina',
              'Catharine',
              'Catherine',
              'Cathrine',
              'Cathryn',
              'Cathy',
              'Cayla',
              'Ceasar',
              'Cecelia',
              'Cecil',
              'Cecile',
              'Cecilia',
              'Cedrick',
              'Celestine',
              'Celestino',
              'Celia',
              'Celine',
              'Cesar',
              'Chad',
              'Chadd',
              'Chadrick',
              'Chaim',
              'Chance',
              'Chandler',
              'Chanel',
              'Chanelle',
              'Charity',
              'Charlene',
              'Charles',
              'Charley',
              'Charlie',
              'Charlotte',
              'Chase',
              'Chasity',
              'Chauncey',
              'Chaya',
              'Chaz',
              'Chelsea',
              'Chelsey',
              'Chelsie',
              'Chesley',
              'Chester',
              'Chet',
              'Cheyanne',
              'Cheyenne',
              'Chloe',
              'Chris',
              'Christ',
              'Christa',
              'Christelle',
              'Christian',
              'Christiana',
              'Christina',
              'Christine',
              'Christop',
              'Christophe',
              'Christopher',
              'Christy',
              'Chyna',
              'Ciara',
              'Cicero',
              'Cielo',
              'Cierra',
              'Cindy',
              'Citlalli',
              'Clair',
              'Claire',
              'Clara',
              'Clarabelle',
              'Clare',
              'Clarissa',
              'Clark',
              'Claud',
              'Claude',
              'Claudia',
              'Claudie',
              'Claudine',
              'Clay',
              'Clemens',
              'Clement',
              'Clementina',
              'Clementine',
              'Clemmie',
              'Cleo',
              'Cleora',
              'Cleta',
              'Cletus',
              'Cleve',
              'Cleveland',
              'Clifford',
              'Clifton',
              'Clint',
              'Clinton',
              'Clotilde',
              'Clovis',
              'Cloyd',
              'Clyde',
              'Coby',
              'Cody',
              'Colby',
              'Cole',
              'Coleman',
              'Colin',
              'Colleen',
              'Collin',
              'Colt',
              'Colten',
              'Colton',
              'Columbus',
              'Concepcion',
              'Conner',
              'Connie',
              'Connor',
              'Conor',
              'Conrad',
              'Constance',
              'Constantin',
              'Consuelo',
              'Cooper',
              'Cora',
              'Coralie',
              'Corbin',
              'Cordelia',
              'Cordell',
              'Cordia',
              'Cordie',
              'Corene',
              'Corine',
              'Cornelius',
              'Cornell',
              'Corrine',
              'Cortez',
              'Cortney',
              'Cory',
              'Coty',
              'Courtney',
              'Coy',
              'Craig',
              'Crawford',
              'Creola',
              'Cristal',
              'Cristian',
              'Cristina',
              'Cristobal',
              'Cristopher',
              'Cruz',
              'Crystal',
              'Crystel',
              'Cullen',
              'Curt',
              'Curtis',
              'Cydney',
              'Cynthia',
              'Cyril',
              'Cyrus',
              'Dagmar',
              'Dahlia',
              'Daija',
              'Daisha',
              'Daisy',
              'Dakota',
              'Dale',
              'Dallas',
              'Dallin',
              'Dalton',
              'Damaris',
              'Dameon',
              'Damian',
              'Damien',
              'Damion',
              'Damon',
              'Dan',
              'Dana',
              'Dandre',
              'Dane',
              'D\'angelo',
              'Dangelo',
              'Danial',
              'Daniela',
              'Daniella',
              'Danielle',
              'Danika',
              'Dannie',
              'Danny',
              'Dante',
              'Danyka',
              'Daphne',
              'Daphnee',
              'Daphney',
              'Darby',
              'Daren',
              'Darian',
              'Dariana',
              'Darien',
              'Dario',
              'Darion',
              'Darius',
              'Darlene',
              'Daron',
              'Darrel',
              'Darrell',
              'Darren',
              'Darrick',
              'Darrin',
              'Darrion',
              'Darron',
              'Darryl',
              'Darwin',
              'Daryl',
              'Dashawn',
              'Dasia',
              'Dave',
              'David',
              'Davin',
              'Davion',
              'Davon',
              'Davonte',
              'Dawn',
              'Dawson',
              'Dax',
              'Dayana',
              'Dayna',
              'Dayne',
              'Dayton',
              'Dean',
              'Deangelo',
              'Deanna',
              'Deborah',
              'Declan',
              'Dedric',
              'Dedrick',
              'Dee',
              'Deion',
              'Deja',
              'Dejah',
              'Dejon',
              'Dejuan',
              'Delaney',
              'Delbert',
              'Delfina',
              'Delia',
              'Delilah',
              'Dell',
              'Della',
              'Delmer',
              'Delores',
              'Delpha',
              'Delphia',
              'Delphine',
              'Delta',
              'Demarco',
              'Demarcus',
              'Demario',
              'Demetris',
              'Demetrius',
              'Demond',
              'Dena',
              'Denis',
              'Dennis',
              'Deon',
              'Deondre',
              'Deontae',
              'Deonte',
              'Dereck',
              'Derek',
              'Derick',
              'Deron',
              'Derrick',
              'Deshaun',
              'Deshawn',
              'Desiree',
              'Desmond',
              'Dessie',
              'Destany',
              'Destin',
              'Destinee',
              'Destiney',
              'Destini',
              'Destiny',
              'Devan',
              'Devante',
              'Deven',
              'Devin',
              'Devon',
              'Devonte',
              'Devyn',
              'Dewayne',
              'Dewitt',
              'Dexter',
              'Diamond',
              'Diana',
              'Dianna',
              'Diego',
              'Dillan',
              'Dillon',
              'Dimitri',
              'Dina',
              'Dino',
              'Dion',
              'Dixie',
              'Dock',
              'Dolly',
              'Dolores',
              'Domenic',
              'Domenica',
              'Domenick',
              'Domenico',
              'Domingo',
              'Dominic',
              'Dominique',
              'Don',
              'Donald',
              'Donato',
              'Donavon',
              'Donna',
              'Donnell',
              'Donnie',
              'Donny',
              'Dora',
              'Dorcas',
              'Dorian',
              'Doris',
              'Dorothea',
              'Dorothy',
              'Dorris',
              'Dortha',
              'Dorthy',
              'Doug',
              'Douglas',
              'Dovie',
              'Doyle',
              'Drake',
              'Drew',
              'Duane',
              'Dudley',
              'Dulce',
              'Duncan',
              'Durward',
              'Dustin',
              'Dusty',
              'Dwight',
              'Dylan',
              'Earl',
              'Earlene',
              'Earline',
              'Earnest',
              'Earnestine',
              'Easter',
              'Easton',
              'Ebba',
              'Ebony',
              'Ed',
              'Eda',
              'Edd',
              'Eddie',
              'Eden',
              'Edgar',
              'Edgardo',
              'Edison',
              'Edmond',
              'Edmund',
              'Edna',
              'Eduardo',
              'Edward',
              'Edwardo',
              'Edwin',
              'Edwina',
              'Edyth',
              'Edythe',
              'Effie',
              'Efrain',
              'Efren',
              'Eileen',
              'Einar',
              'Eino',
              'Eladio',
              'Elaina',
              'Elbert',
              'Elda',
              'Eldon',
              'Eldora',
              'Eldred',
              'Eldridge',
              'Eleanora',
              'Eleanore',
              'Eleazar',
              'Electa',
              'Elena',
              'Elenor',
              'Elenora',
              'Eleonore',
              'Elfrieda',
              'Eli',
              'Elian',
              'Eliane',
              'Elias',
              'Eliezer',
              'Elijah',
              'Elinor',
              'Elinore',
              'Elisa',
              'Elisabeth',
              'Elise',
              'Eliseo',
              'Elisha',
              'Elissa',
              'Eliza',
              'Elizabeth',
              'Ella',
              'Ellen',
              'Ellie',
              'Elliot',
              'Elliott',
              'Ellis',
              'Ellsworth',
              'Elmer',
              'Elmira',
              'Elmo',
              'Elmore',
              'Elna',
              'Elnora',
              'Elody',
              'Eloisa',
              'Eloise',
              'Elouise',
              'Eloy',
              'Elroy',
              'Elsa',
              'Else',
              'Elsie',
              'Elta',
              'Elton',
              'Elva',
              'Elvera',
              'Elvie',
              'Elvis',
              'Elwin',
              'Elwyn',
              'Elyse',
              'Elyssa',
              'Elza',
              'Emanuel',
              'Emelia',
              'Emelie',
              'Emely',
              'Emerald',
              'Emerson',
              'Emery',
              'Emie',
              'Emil',
              'Emile',
              'Emilia',
              'Emiliano',
              'Emilie',
              'Emilio',
              'Emily',
              'Emma',
              'Emmalee',
              'Emmanuel',
              'Emmanuelle',
              'Emmet',
              'Emmett',
              'Emmie',
              'Emmitt',
              'Emmy',
              'Emory',
              'Ena',
              'Enid',
              'Enoch',
              'Enola',
              'Enos',
              'Enrico',
              'Enrique',
              'Ephraim',
              'Era',
              'Eriberto',
              'Eric',
              'Erica',
              'Erich',
              'Erick',
              'Ericka',
              'Erik',
              'Erika',
              'Erin',
              'Erling',
              'Erna',
              'Ernest',
              'Ernestina',
              'Ernestine',
              'Ernesto',
              'Ernie',
              'Ervin',
              'Erwin',
              'Eryn',
              'Esmeralda',
              'Esperanza',
              'Esta',
              'Esteban',
              'Estefania',
              'Estel',
              'Estell',
              'Estella',
              'Estelle',
              'Estevan',
              'Esther',
              'Estrella',
              'Etha',
              'Ethan',
              'Ethel',
              'Ethelyn',
              'Ethyl',
              'Ettie',
              'Eudora',
              'Eugene',
              'Eugenia',
              'Eula',
              'Eulah',
              'Eulalia',
              'Euna',
              'Eunice',
              'Eusebio',
              'Eva',
              'Evalyn',
              'Evan',
              'Evangeline',
              'Evans',
              'Eve',
              'Eveline',
              'Evelyn',
              'Everardo',
              'Everett',
              'Everette',
              'Evert',
              'Evie',
              'Ewald',
              'Ewell',
              'Ezekiel',
              'Ezequiel',
              'Ezra',
              'Fabian',
              'Fabiola',
              'Fae',
              'Fannie',
              'Fanny',
              'Fatima',
              'Faustino',
              'Fausto',
              'Favian',
              'Fay',
              'Faye',
              'Federico',
              'Felicia',
              'Felicita',
              'Felicity',
              'Felipa',
              'Felipe',
              'Felix',
              'Felton',
              'Fermin',
              'Fern',
              'Fernando',
              'Ferne',
              'Fidel',
              'Filiberto',
              'Filomena',
              'Finn',
              'Fiona',
              'Flavie',
              'Flavio',
              'Fleta',
              'Fletcher',
              'Flo',
              'Florence',
              'Florencio',
              'Florian',
              'Florida',
              'Florine',
              'Flossie',
              'Floy',
              'Floyd',
              'Ford',
              'Forest',
              'Forrest',
              'Foster',
              'Frances',
              'Francesca',
              'Francesco',
              'Francis',
              'Francisca',
              'Francisco',
              'Franco',
              'Frank',
              'Frankie',
              'Franz',
              'Fred',
              'Freda',
              'Freddie',
              'Freddy',
              'Frederic',
              'Frederick',
              'Frederik',
              'Frederique',
              'Fredrick',
              'Fredy',
              'Freeda',
              'Freeman',
              'Freida',
              'Frida',
              'Frieda',
              'Friedrich',
              'Fritz',
              'Furman',
              'Gabe',
              'Gabriel',
              'Gabriella',
              'Gabrielle',
              'Gaetano',
              'Gage',
              'Gail',
              'Gardner',
              'Garett',
              'Garfield',
              'Garland',
              'Garnet',
              'Garnett',
              'Garret',
              'Garrett',
              'Garrick',
              'Garrison',
              'Garry',
              'Garth',
              'Gaston',
              'Gavin',
              'Gay',
              'Gayle',
              'Gaylord',
              'Gene',
              'General',
              'Genesis',
              'Genevieve',
              'Gennaro',
              'Genoveva',
              'Geo',
              'Geoffrey',
              'George',
              'Georgette',
              'Georgiana',
              'Georgianna',
              'Geovanni',
              'Geovanny',
              'Geovany',
              'Gerald',
              'Geraldine',
              'Gerard',
              'Gerardo',
              'Gerda',
              'Gerhard',
              'Germaine',
              'German',
              'Gerry',
              'Gerson',
              'Gertrude',
              'Gia',
              'Gianni',
              'Gideon',
              'Gilbert',
              'Gilberto',
              'Gilda',
              'Giles',
              'Gillian',
              'Gina',
              'Gino',
              'Giovani',
              'Giovanna',
              'Giovanni',
              'Giovanny',
              'Gisselle',
              'Giuseppe',
              'Gladyce',
              'Gladys',
              'Glen',
              'Glenda',
              'Glenna',
              'Glennie',
              'Gloria',
              'Godfrey',
              'Golda',
              'Golden',
              'Gonzalo',
              'Gordon',
              'Grace',
              'Gracie',
              'Graciela',
              'Grady',
              'Graham',
              'Grant',
              'Granville',
              'Grayce',
              'Grayson',
              'Green',
              'Greg',
              'Gregg',
              'Gregoria',
              'Gregorio',
              'Gregory',
              'Greta',
              'Gretchen',
              'Greyson',
              'Griffin',
              'Grover',
              'Guadalupe',
              'Gudrun',
              'Guido',
              'Guillermo',
              'Guiseppe',
              'Gunnar',
              'Gunner',
              'Gus',
              'Gussie',
              'Gust',
              'Gustave',
              'Guy',
              'Gwen',
              'Gwendolyn',
              'Hadley',
              'Hailee',
              'Hailey',
              'Hailie',
              'Hal',
              'Haleigh',
              'Haley',
              'Halie',
              'Halle',
              'Hallie',
              'Hank',
              'Hanna',
              'Hannah',
              'Hans',
              'Hardy',
              'Harley',
              'Harmon',
              'Harmony',
              'Harold',
              'Harrison',
              'Harry',
              'Harvey',
              'Haskell',
              'Hassan',
              'Hassie',
              'Hattie',
              'Haven',
              'Hayden',
              'Haylee',
              'Hayley',
              'Haylie',
              'Hazel',
              'Hazle',
              'Heath',
              'Heather',
              'Heaven',
              'Heber',
              'Hector',
              'Heidi',
              'Helen',
              'Helena',
              'Helene',
              'Helga',
              'Hellen',
              'Helmer',
              'Heloise',
              'Henderson',
              'Henri',
              'Henriette',
              'Henry',
              'Herbert',
              'Herman',
              'Hermann',
              'Hermina',
              'Herminia',
              'Herminio',
              'Hershel',
              'Herta',
              'Hertha',
              'Hester',
              'Hettie',
              'Hilario',
              'Hilbert',
              'Hilda',
              'Hildegard',
              'Hillard',
              'Hillary',
              'Hilma',
              'Hilton',
              'Hipolito',
              'Hiram',
              'Hobart',
              'Holden',
              'Hollie',
              'Hollis',
              'Holly',
              'Hope',
              'Horace',
              'Horacio',
              'Hortense',
              'Hosea',
              'Houston',
              'Howard',
              'Howell',
              'Hoyt',
              'Hubert',
              'Hudson',
              'Hugh',
              'Hulda',
              'Humberto',
              'Hunter',
              'Hyman',
              'Ian',
              'Ibrahim',
              'Icie',
              'Ida',
              'Idell',
              'Idella',
              'Ignacio',
              'Ignatius',
              'Ike',
              'Ila',
              'Ilene',
              'Iliana',
              'Ima',
              'Imani',
              'Imelda',
              'Immanuel',
              'Imogene',
              'Ines',
              'Irma',
              'Irving',
              'Irwin',
              'Isaac',
              'Isabel',
              'Isabell',
              'Isabella',
              'Isabelle',
              'Isac',
              'Isadore',
              'Isai',
              'Isaiah',
              'Isaias',
              'Isidro',
              'Ismael',
              'Isobel',
              'Isom',
              'Israel',
              'Issac',
              'Itzel',
              'Iva',
              'Ivah',
              'Ivory',
              'Ivy',
              'Izabella',
              'Izaiah',
              'Jabari',
              'Jace',
              'Jacey',
              'Jacinthe',
              'Jacinto',
              'Jack',
              'Jackeline',
              'Jackie',
              'Jacklyn',
              'Jackson',
              'Jacky',
              'Jaclyn',
              'Jacquelyn',
              'Jacques',
              'Jacynthe',
              'Jada',
              'Jade',
              'Jaden',
              'Jadon',
              'Jadyn',
              'Jaeden',
              'Jaida',
              'Jaiden',
              'Jailyn',
              'Jaime',
              'Jairo',
              'Jakayla',
              'Jake',
              'Jakob',
              'Jaleel',
              'Jalen',
              'Jalon',
              'Jalyn',
              'Jamaal',
              'Jamal',
              'Jamar',
              'Jamarcus',
              'Jamel',
              'Jameson',
              'Jamey',
              'Jamie',
              'Jamil',
              'Jamir',
              'Jamison',
              'Jammie',
              'Jan',
              'Jana',
              'Janae',
              'Jane',
              'Janelle',
              'Janessa',
              'Janet',
              'Janice',
              'Janick',
              'Janie',
              'Janis',
              'Janiya',
              'Jannie',
              'Jany',
              'Jaquan',
              'Jaquelin',
              'Jaqueline',
              'Jared',
              'Jaren',
              'Jarod',
              'Jaron',
              'Jarred',
              'Jarrell',
              'Jarret',
              'Jarrett',
              'Jarrod',
              'Jarvis',
              'Jasen',
              'Jasmin',
              'Jason',
              'Jasper',
              'Jaunita',
              'Javier',
              'Javon',
              'Javonte',
              'Jay',
              'Jayce',
              'Jaycee',
              'Jayda',
              'Jayde',
              'Jayden',
              'Jaydon',
              'Jaylan',
              'Jaylen',
              'Jaylin',
              'Jaylon',
              'Jayme',
              'Jayne',
              'Jayson',
              'Jazlyn',
              'Jazmin',
              'Jazmyn',
              'Jazmyne',
              'Jean',
              'Jeanette',
              'Jeanie',
              'Jeanne',
              'Jed',
              'Jedediah',
              'Jedidiah',
              'Jeff',
              'Jefferey',
              'Jeffery',
              'Jeffrey',
              'Jeffry',
              'Jena',
              'Jenifer',
              'Jennie',
              'Jennifer',
              'Jennings',
              'Jennyfer',
              'Jensen',
              'Jerad',
              'Jerald',
              'Jeramie',
              'Jeramy',
              'Jerel',
              'Jeremie',
              'Jeremy',
              'Jermain',
              'Jermaine',
              'Jermey',
              'Jerod',
              'Jerome',
              'Jeromy',
              'Jerrell',
              'Jerrod',
              'Jerrold',
              'Jerry',
              'Jess',
              'Jesse',
              'Jessica',
              'Jessie',
              'Jessika',
              'Jessy',
              'Jessyca',
              'Jesus',
              'Jett',
              'Jettie',
              'Jevon',
              'Jewel',
              'Jewell',
              'Jillian',
              'Jimmie',
              'Jimmy',
              'Jo',
              'Joan',
              'Joana',
              'Joanie',
              'Joanne',
              'Joannie',
              'Joanny',
              'Joany',
              'Joaquin',
              'Jocelyn',
              'Jodie',
              'Jody',
              'Joe',
              'Joel',
              'Joelle',
              'Joesph',
              'Joey',
              'Johan',
              'Johann',
              'Johanna',
              'Johathan',
              'John',
              'Johnathan',
              'Johnathon',
              'Johnnie',
              'Johnny',
              'Johnpaul',
              'Johnson',
              'Jolie',
              'Jon',
              'Jonas',
              'Jonatan',
              'Jonathan',
              'Jonathon',
              'Jordan',
              'Jordane',
              'Jordi',
              'Jordon',
              'Jordy',
              'Jordyn',
              'Jorge',
              'Jose',
              'Josefa',
              'Josefina',
              'Joseph',
              'Josephine',
              'Josh',
              'Joshua',
              'Joshuah',
              'Josiah',
              'Josiane',
              'Josianne',
              'Josie',
              'Josue',
              'Jovan',
              'Jovani',
              'Jovanny',
              'Jovany',
              'Joy',
              'Joyce',
              'Juana',
              'Juanita',
              'Judah',
              'Judd',
              'Jude',
              'Judge',
              'Judson',
              'Judy',
              'Jules',
              'Julia',
              'Julian',
              'Juliana',
              'Julianne',
              'Julie',
              'Julien',
              'Juliet',
              'Julio',
              'Julius',
              'June',
              'Junior',
              'Junius',
              'Justen',
              'Justice',
              'Justina',
              'Justine',
              'Juston',
              'Justus',
              'Justyn',
              'Juvenal',
              'Juwan',
              'Kacey',
              'Kaci',
              'Kacie',
              'Kade',
              'Kaden',
              'Kadin',
              'Kaela',
              'Kaelyn',
              'Kaia',
              'Kailee',
              'Kailey',
              'Kailyn',
              'Kaitlin',
              'Kaitlyn',
              'Kale',
              'Kaleb',
              'Kaleigh',
              'Kaley',
              'Kali',
              'Kallie',
              'Kameron',
              'Kamille',
              'Kamren',
              'Kamron',
              'Kamryn',
              'Kane',
              'Kara',
              'Kareem',
              'Karelle',
              'Karen',
              'Kari',
              'Kariane',
              'Karianne',
              'Karina',
              'Karine',
              'Karl',
              'Karlee',
              'Karley',
              'Karli',
              'Karlie',
              'Karolann',
              'Karson',
              'Kasandra',
              'Kasey',
              'Kassandra',
              'Katarina',
              'Katelin',
              'Katelyn',
              'Katelynn',
              'Katharina',
              'Katherine',
              'Katheryn',
              'Kathleen',
              'Kathlyn',
              'Kathryn',
              'Kathryne',
              'Katlyn',
              'Katlynn',
              'Katrina',
              'Katrine',
              'Kattie',
              'Kavon',
              'Kay',
              'Kaya',
              'Kaycee',
              'Kayden',
              'Kayla',
              'Kaylah',
              'Kaylee',
              'Kayleigh',
              'Kayley',
              'Kayli',
              'Kaylie',
              'Kaylin',
              'Keagan',
              'Keanu',
              'Keara',
              'Keaton',
              'Keegan',
              'Keeley',
              'Keely',
              'Keenan',
              'Keira',
              'Keith',
              'Kellen',
              'Kelley',
              'Kelli',
              'Kellie',
              'Kelly',
              'Kelsi',
              'Kelsie',
              'Kelton',
              'Kelvin',
              'Ken',
              'Kendall',
              'Kendra',
              'Kendrick',
              'Kenna',
              'Kennedi',
              'Kennedy',
              'Kenneth',
              'Kennith',
              'Kenny',
              'Kenton',
              'Kenya',
              'Kenyatta',
              'Kenyon',
              'Keon',
              'Keshaun',
              'Keshawn',
              'Keven',
              'Kevin',
              'Kevon',
              'Keyon',
              'Keyshawn',
              'Khalid',
              'Khalil',
              'Kian',
              'Kiana',
              'Kianna',
              'Kiara',
              'Kiarra',
              'Kiel',
              'Kiera',
              'Kieran',
              'Kiley',
              'Kim',
              'Kimberly',
              'King',
              'Kip',
              'Kira',
              'Kirk',
              'Kirsten',
              'Kirstin',
              'Kitty',
              'Kobe',
              'Koby',
              'Kody',
              'Kolby',
              'Kole',
              'Korbin',
              'Korey',
              'Kory',
              'Kraig',
              'Kris',
              'Krista',
              'Kristian',
              'Kristin',
              'Kristina',
              'Kristofer',
              'Kristoffer',
              'Kristopher',
              'Kristy',
              'Krystal',
              'Krystel',
              'Krystina',
              'Kurt',
              'Kurtis',
              'Kyla',
              'Kyle',
              'Kylee',
              'Kyleigh',
              'Kyler',
              'Kylie',
              'Kyra',
              'Lacey',
              'Lacy',
              'Ladarius',
              'Lafayette',
              'Laila',
              'Laisha',
              'Lamar',
              'Lambert',
              'Lamont',
              'Lance',
              'Landen',
              'Lane',
              'Laney',
              'Larissa',
              'Laron',
              'Larry',
              'Larue',
              'Laura',
              'Laurel',
              'Lauren',
              'Laurence',
              'Lauretta',
              'Lauriane',
              'Laurianne',
              'Laurie',
              'Laurine',
              'Laury',
              'Lauryn',
              'Lavada',
              'Lavern',
              'Laverna',
              'Laverne',
              'Lavina',
              'Lavinia',
              'Lavon',
              'Lavonne',
              'Lawrence',
              'Lawson',
              'Layla',
              'Layne',
              'Lazaro',
              'Lea',
              'Leann',
              'Leanna',
              'Leanne',
              'Leatha',
              'Leda',
              'Lee',
              'Leif',
              'Leila',
              'Leilani',
              'Lela',
              'Lelah',
              'Leland',
              'Lelia',
              'Lempi',
              'Lemuel',
              'Lenna',
              'Lennie',
              'Lenny',
              'Lenora',
              'Lenore',
              'Leo',
              'Leola',
              'Leon',
              'Leonard',
              'Leonardo',
              'Leone',
              'Leonel',
              'Leonie',
              'Leonor',
              'Leonora',
              'Leopold',
              'Leopoldo',
              'Leora',
              'Lera',
              'Lesley',
              'Leslie',
              'Lesly',
              'Lessie',
              'Lester',
              'Leta',
              'Letha',
              'Letitia',
              'Levi',
              'Lew',
              'Lewis',
              'Lexi',
              'Lexie',
              'Lexus',
              'Lia',
              'Liam',
              'Liana',
              'Libbie',
              'Libby',
              'Lila',
              'Lilian',
              'Liliana',
              'Liliane',
              'Lilla',
              'Lillian',
              'Lilliana',
              'Lillie',
              'Lilly',
              'Lily',
              'Lilyan',
              'Lina',
              'Lincoln',
              'Linda',
              'Lindsay',
              'Lindsey',
              'Linnea',
              'Linnie',
              'Linwood',
              'Lionel',
              'Lisa',
              'Lisandro',
              'Lisette',
              'Litzy',
              'Liza',
              'Lizeth',
              'Lizzie',
              'Llewellyn',
              'Lloyd',
              'Logan',
              'Lois',
              'Lola',
              'Lolita',
              'Loma',
              'Lon',
              'London',
              'Lonie',
              'Lonnie',
              'Lonny',
              'Lonzo',
              'Lora',
              'Loraine',
              'Loren',
              'Lorena',
              'Lorenz',
              'Lorenza',
              'Lorenzo',
              'Lori',
              'Lorine',
              'Lorna',
              'Lottie',
              'Lou',
              'Louie',
              'Louisa',
              'Lourdes',
              'Louvenia',
              'Lowell',
              'Loy',
              'Loyal',
              'Loyce',
              'Lucas',
              'Luciano',
              'Lucie',
              'Lucienne',
              'Lucile',
              'Lucinda',
              'Lucio',
              'Lucious',
              'Lucius',
              'Lucy',
              'Ludie',
              'Ludwig',
              'Lue',
              'Luella',
              'Luigi',
              'Luis',
              'Luisa',
              'Lukas',
              'Lula',
              'Lulu',
              'Luna',
              'Lupe',
              'Lura',
              'Lurline',
              'Luther',
              'Luz',
              'Lyda',
              'Lydia',
              'Lyla',
              'Lynn',
              'Lyric',
              'Lysanne',
              'Mabel',
              'Mabelle',
              'Mable',
              'Mac',
              'Macey',
              'Maci',
              'Macie',
              'Mack',
              'Mackenzie',
              'Macy',
              'Madaline',
              'Madalyn',
              'Maddison',
              'Madeline',
              'Madelyn',
              'Madelynn',
              'Madge',
              'Madie',
              'Madilyn',
              'Madisen',
              'Madison',
              'Madisyn',
              'Madonna',
              'Madyson',
              'Mae',
              'Maegan',
              'Maeve',
              'Mafalda',
              'Magali',
              'Magdalen',
              'Magdalena',
              'Maggie',
              'Magnolia',
              'Magnus',
              'Maia',
              'Maida',
              'Maiya',
              'Major',
              'Makayla',
              'Makenna',
              'Makenzie',
              'Malachi',
              'Malcolm',
              'Malika',
              'Malinda',
              'Mallie',
              'Mallory',
              'Malvina',
              'Mandy',
              'Manley',
              'Manuel',
              'Manuela',
              'Mara',
              'Marc',
              'Marcel',
              'Marcelina',
              'Marcelino',
              'Marcella',
              'Marcelle',
              'Marcellus',
              'Marcelo',
              'Marcia',
              'Marco',
              'Marcos',
              'Marcus',
              'Margaret',
              'Margarete',
              'Margarett',
              'Margaretta',
              'Margarette',
              'Margarita',
              'Marge',
              'Margie',
              'Margot',
              'Margret',
              'Marguerite',
              'Maria',
              'Mariah',
              'Mariam',
              'Marian',
              'Mariana',
              'Mariane',
              'Marianna',
              'Marianne',
              'Mariano',
              'Maribel',
              'Marie',
              'Mariela',
              'Marielle',
              'Marietta',
              'Marilie',
              'Marilou',
              'Marilyne',
              'Marina',
              'Mario',
              'Marion',
              'Marisa',
              'Marisol',
              'Maritza',
              'Marjolaine',
              'Marjorie',
              'Marjory',
              'Mark',
              'Markus',
              'Marlee',
              'Marlen',
              'Marlene',
              'Marley',
              'Marlin',
              'Marlon',
              'Marques',
              'Marquis',
              'Marquise',
              'Marshall',
              'Marta',
              'Martin',
              'Martina',
              'Martine',
              'Marty',
              'Marvin',
              'Mary',
              'Maryam',
              'Maryjane',
              'Maryse',
              'Mason',
              'Mateo',
              'Mathew',
              'Mathias',
              'Mathilde',
              'Matilda',
              'Matilde',
              'Matt',
              'Matteo',
              'Mattie',
              'Maud',
              'Maude',
              'Maudie',
              'Maureen',
              'Maurice',
              'Mauricio',
              'Maurine',
              'Maverick',
              'Mavis',
              'Max',
              'Maxie',
              'Maxime',
              'Maximilian',
              'Maximillia',
              'Maximillian',
              'Maximo',
              'Maximus',
              'Maxine',
              'Maxwell',
              'May',
              'Maya',
              'Maybell',
              'Maybelle',
              'Maye',
              'Maymie',
              'Maynard',
              'Mayra',
              'Mazie',
              'Mckayla',
              'Mckenna',
              'Mckenzie',
              'Meagan',
              'Meaghan',
              'Meda',
              'Megane',
              'Meggie',
              'Meghan',
              'Mekhi',
              'Melany',
              'Melba',
              'Melisa',
              'Melissa',
              'Mellie',
              'Melody',
              'Melvin',
              'Melvina',
              'Melyna',
              'Melyssa',
              'Mercedes',
              'Meredith',
              'Merl',
              'Merle',
              'Merlin',
              'Merritt',
              'Mertie',
              'Mervin',
              'Meta',
              'Mia',
              'Micaela',
              'Micah',
              'Michael',
              'Michaela',
              'Michale',
              'Micheal',
              'Michel',
              'Michele',
              'Michelle',
              'Miguel',
              'Mikayla',
              'Mike',
              'Mikel',
              'Milan',
              'Miles',
              'Milford',
              'Miller',
              'Millie',
              'Milo',
              'Milton',
              'Mina',
              'Minerva',
              'Minnie',
              'Miracle',
              'Mireille',
              'Mireya',
              'Misael',
              'Missouri',
              'Misty',
              'Mitchel',
              'Mitchell',
              'Mittie',
              'Modesta',
              'Modesto',
              'Mohamed',
              'Mohammad',
              'Mohammed',
              'Moises',
              'Mollie',
              'Molly',
              'Mona',
              'Monica',
              'Monique',
              'Monroe',
              'Monserrat',
              'Monserrate',
              'Montana',
              'Monte',
              'Monty',
              'Morgan',
              'Moriah',
              'Morris',
              'Mortimer',
              'Morton',
              'Mose',
              'Moses',
              'Moshe',
              'Mossie',
              'Mozell',
              'Mozelle',
              'Muhammad',
              'Muriel',
              'Murl',
              'Murphy',
              'Murray',
              'Mustafa',
              'Mya',
              'Myah',
              'Mylene',
              'Myles',
              'Myra',
              'Myriam',
              'Myrl',
              'Myrna',
              'Myron',
              'Myrtice',
              'Myrtie',
              'Myrtis',
              'Myrtle',
              'Nadia',
              'Nakia',
              'Name',
              'Nannie',
              'Naomi',
              'Naomie',
              'Napoleon',
              'Narciso',
              'Nash',
              'Nasir',
              'Nat',
              'Natalia',
              'Natalie',
              'Natasha',
              'Nathan',
              'Nathanael',
              'Nathanial',
              'Nathaniel',
              'Nathen',
              'Nayeli',
              'Neal',
              'Ned',
              'Nedra',
              'Neha',
              'Neil',
              'Nelda',
              'Nella',
              'Nelle',
              'Nellie',
              'Nels',
              'Nelson',
              'Neoma',
              'Nestor',
              'Nettie',
              'Neva',
              'Newell',
              'Newton',
              'Nia',
              'Nicholas',
              'Nicholaus',
              'Nichole',
              'Nick',
              'Nicklaus',
              'Nickolas',
              'Nico',
              'Nicola',
              'Nicolas',
              'Nicole',
              'Nicolette',
              'Nigel',
              'Nikita',
              'Nikki',
              'Nikko',
              'Niko',
              'Nikolas',
              'Nils',
              'Nina',
              'Noah',
              'Noble',
              'Noe',
              'Noel',
              'Noelia',
              'Noemi',
              'Noemie',
              'Noemy',
              'Nola',
              'Nolan',
              'Nona',
              'Nora',
              'Norbert',
              'Norberto',
              'Norene',
              'Norma',
              'Norris',
              'Norval',
              'Norwood',
              'Nova',
              'Novella',
              'Nya',
              'Nyah',
              'Nyasia',
              'Obie',
              'Oceane',
              'Ocie',
              'Octavia',
              'Oda',
              'Odell',
              'Odessa',
              'Odie',
              'Ofelia',
              'Okey',
              'Ola',
              'Olaf',
              'Ole',
              'Olen',
              'Oleta',
              'Olga',
              'Olin',
              'Oliver',
              'Ollie',
              'Oma',
              'Omari',
              'Omer',
              'Ona',
              'Onie',
              'Opal',
              'Ophelia',
              'Ora',
              'Oral',
              'Oran',
              'Oren',
              'Orie',
              'Orin',
              'Orion',
              'Orland',
              'Orlando',
              'Orlo',
              'Orpha',
              'Orrin',
              'Orval',
              'Orville',
              'Osbaldo',
              'Osborne',
              'Oscar',
              'Osvaldo',
              'Oswald',
              'Oswaldo',
              'Otha',
              'Otho',
              'Otilia',
              'Otis',
              'Ottilie',
              'Ottis',
              'Otto',
              'Ova',
              'Owen',
              'Ozella',
              'Pablo',
              'Paige',
              'Palma',
              'Pamela',
              'Pansy',
              'Paolo',
              'Paris',
              'Parker',
              'Pascale',
              'Pasquale',
              'Pat',
              'Patience',
              'Patricia',
              'Patrick',
              'Patsy',
              'Pattie',
              'Paul',
              'Paula',
              'Pauline',
              'Paxton',
              'Payton',
              'Pearl',
              'Pearlie',
              'Pearline',
              'Pedro',
              'Peggie',
              'Penelope',
              'Percival',
              'Percy',
              'Perry',
              'Pete',
              'Peter',
              'Petra',
              'Peyton',
              'Philip',
              'Phoebe',
              'Phyllis',
              'Pierce',
              'Pierre',
              'Pietro',
              'Pink',
              'Pinkie',
              'Piper',
              'Polly',
              'Porter',
              'Precious',
              'Presley',
              'Preston',
              'Price',
              'Prince',
              'Princess',
              'Priscilla',
              'Providenci',
              'Prudence',
              'Queen',
              'Queenie',
              'Quentin',
              'Quincy',
              'Quinn',
              'Quinten',
              'Quinton',
              'Rachael',
              'Rachel',
              'Rachelle',
              'Rae',
              'Raegan',
              'Rafael',
              'Rafaela',
              'Raheem',
              'Rahsaan',
              'Rahul',
              'Raina',
              'Raleigh',
              'Ralph',
              'Ramiro',
              'Ramon',
              'Ramona',
              'Randal',
              'Randall',
              'Randi',
              'Randy',
              'Ransom',
              'Raoul',
              'Raphael',
              'Raphaelle',
              'Raquel',
              'Rashad',
              'Rashawn',
              'Rasheed',
              'Raul',
              'Raven',
              'Ray',
              'Raymond',
              'Raymundo',
              'Reagan',
              'Reanna',
              'Reba',
              'Rebeca',
              'Rebecca',
              'Rebeka',
              'Rebekah',
              'Reece',
              'Reed',
              'Reese',
              'Regan',
              'Reggie',
              'Reginald',
              'Reid',
              'Reilly',
              'Reina',
              'Reinhold',
              'Remington',
              'Rene',
              'Renee',
              'Ressie',
              'Reta',
              'Retha',
              'Retta',
              'Reuben',
              'Reva',
              'Rex',
              'Rey',
              'Reyes',
              'Reymundo',
              'Reyna',
              'Reynold',
              'Rhea',
              'Rhett',
              'Rhianna',
              'Rhiannon',
              'Rhoda',
              'Ricardo',
              'Richard',
              'Richie',
              'Richmond',
              'Rick',
              'Rickey',
              'Rickie',
              'Ricky',
              'Rico',
              'Rigoberto',
              'Riley',
              'Rita',
              'River',
              'Robb',
              'Robbie',
              'Robert',
              'Roberta',
              'Roberto',
              'Robin',
              'Robyn',
              'Rocio',
              'Rocky',
              'Rod',
              'Roderick',
              'Rodger',
              'Rodolfo',
              'Rodrick',
              'Rodrigo',
              'Roel',
              'Rogelio',
              'Roger',
              'Rogers',
              'Rolando',
              'Rollin',
              'Roma',
              'Romaine',
              'Roman',
              'Ron',
              'Ronaldo',
              'Ronny',
              'Roosevelt',
              'Rory',
              'Rosa',
              'Rosalee',
              'Rosalia',
              'Rosalind',
              'Rosalinda',
              'Rosalyn',
              'Rosamond',
              'Rosanna',
              'Rosario',
              'Roscoe',
              'Rose',
              'Rosella',
              'Roselyn',
              'Rosemarie',
              'Rosemary',
              'Rosendo',
              'Rosetta',
              'Rosie',
              'Rosina',
              'Roslyn',
              'Ross',
              'Rossie',
              'Rowan',
              'Rowena',
              'Rowland',
              'Roxane',
              'Roxanne',
              'Roy',
              'Royal',
              'Royce',
              'Rozella',
              'Ruben',
              'Rubie',
              'Ruby',
              'Rubye',
              'Rudolph',
              'Rudy',
              'Rupert',
              'Russ',
              'Russel',
              'Russell',
              'Rusty',
              'Ruth',
              'Ruthe',
              'Ruthie',
              'Ryan',
              'Ryann',
              'Ryder',
              'Rylan',
              'Rylee',
              'Ryleigh',
              'Ryley',
              'Sabina',
              'Sabrina',
              'Sabryna',
              'Sadie',
              'Sadye',
              'Sage',
              'Saige',
              'Sallie',
              'Sally',
              'Salma',
              'Salvador',
              'Salvatore',
              'Sam',
              'Samanta',
              'Samantha',
              'Samara',
              'Samir',
              'Sammie',
              'Sammy',
              'Samson',
              'Sandra',
              'Sandrine',
              'Sandy',
              'Sanford',
              'Santa',
              'Santiago',
              'Santina',
              'Santino',
              'Santos',
              'Sarah',
              'Sarai',
              'Sarina',
              'Sasha',
              'Saul',
              'Savanah',
              'Savanna',
              'Savannah',
              'Savion',
              'Scarlett',
              'Schuyler',
              'Scot',
              'Scottie',
              'Scotty',
              'Seamus',
              'Sean',
              'Sebastian',
              'Sedrick',
              'Selena',
              'Selina',
              'Selmer',
              'Serena',
              'Serenity',
              'Seth',
              'Shad',
              'Shaina',
              'Shakira',
              'Shana',
              'Shane',
              'Shanel',
              'Shanelle',
              'Shania',
              'Shanie',
              'Shaniya',
              'Shanna',
              'Shannon',
              'Shanny',
              'Shanon',
              'Shany',
              'Sharon',
              'Shaun',
              'Shawn',
              'Shawna',
              'Shaylee',
              'Shayna',
              'Shayne',
              'Shea',
              'Sheila',
              'Sheldon',
              'Shemar',
              'Sheridan',
              'Sherman',
              'Sherwood',
              'Shirley',
              'Shyann',
              'Shyanne',
              'Sibyl',
              'Sid',
              'Sidney',
              'Sienna',
              'Sierra',
              'Sigmund',
              'Sigrid',
              'Sigurd',
              'Silas',
              'Sim',
              'Simeon',
              'Simone',
              'Sincere',
              'Sister',
              'Skye',
              'Skyla',
              'Skylar',
              'Sofia',
              'Soledad',
              'Solon',
              'Sonia',
              'Sonny',
              'Sonya',
              'Sophia',
              'Sophie',
              'Spencer',
              'Stacey',
              'Stacy',
              'Stan',
              'Stanford',
              'Stanley',
              'Stanton',
              'Stefan',
              'Stefanie',
              'Stella',
              'Stephan',
              'Stephania',
              'Stephanie',
              'Stephany',
              'Stephen',
              'Stephon',
              'Sterling',
              'Steve',
              'Stevie',
              'Stewart',
              'Stone',
              'Stuart',
              'Summer',
              'Sunny',
              'Susan',
              'Susana',
              'Susanna',
              'Susie',
              'Suzanne',
              'Sven',
              'Syble',
              'Sydnee',
              'Sydney',
              'Sydni',
              'Sydnie',
              'Sylvan',
              'Sylvester',
              'Sylvia',
              'Tabitha',
              'Tad',
              'Talia',
              'Talon',
              'Tamara',
              'Tamia',
              'Tania',
              'Tanner',
              'Tanya',
              'Tara',
              'Taryn',
              'Tate',
              'Tatum',
              'Tatyana',
              'Taurean',
              'Tavares',
              'Taya',
              'Taylor',
              'Teagan',
              'Ted',
              'Telly',
              'Terence',
              'Teresa',
              'Terrance',
              'Terrell',
              'Terrence',
              'Terrill',
              'Terry',
              'Tess',
              'Tessie',
              'Tevin',
              'Thad',
              'Thaddeus',
              'Thalia',
              'Thea',
              'Thelma',
              'Theo',
              'Theodora',
              'Theodore',
              'Theresa',
              'Therese',
              'Theresia',
              'Theron',
              'Thomas',
              'Thora',
              'Thurman',
              'Tia',
              'Tiana',
              'Tianna',
              'Tiara',
              'Tierra',
              'Tiffany',
              'Tillman',
              'Timmothy',
              'Timmy',
              'Timothy',
              'Tina',
              'Tito',
              'Titus',
              'Tobin',
              'Toby',
              'Tod',
              'Tom',
              'Tomas',
              'Tomasa',
              'Tommie',
              'Toney',
              'Toni',
              'Tony',
              'Torey',
              'Torrance',
              'Torrey',
              'Toy',
              'Trace',
              'Tracey',
              'Tracy',
              'Travis',
              'Travon',
              'Tre',
              'Tremaine',
              'Tremayne',
              'Trent',
              'Trenton',
              'Tressa',
              'Tressie',
              'Treva',
              'Trever',
              'Trevion',
              'Trevor',
              'Trey',
              'Trinity',
              'Trisha',
              'Tristian',
              'Tristin',
              'Triston',
              'Troy',
              'Trudie',
              'Trycia',
              'Trystan',
              'Turner',
              'Twila',
              'Tyler',
              'Tyra',
              'Tyree',
              'Tyreek',
              'Tyrel',
              'Tyrell',
              'Tyrese',
              'Tyrique',
              'Tyshawn',
              'Tyson',
              'Ubaldo',
              'Ulices',
              'Ulises',
              'Una',
              'Unique',
              'Urban',
              'Uriah',
              'Uriel',
              'Ursula',
              'Vada',
              'Valentin',
              'Valentina',
              'Valentine',
              'Valerie',
              'Vallie',
              'Van',
              'Vance',
              'Vanessa',
              'Vaughn',
              'Veda',
              'Velda',
              'Vella',
              'Velma',
              'Velva',
              'Vena',
              'Verda',
              'Verdie',
              'Vergie',
              'Verla',
              'Verlie',
              'Vern',
              'Verna',
              'Verner',
              'Vernice',
              'Vernie',
              'Vernon',
              'Verona',
              'Veronica',
              'Vesta',
              'Vicenta',
              'Vicente',
              'Vickie',
              'Vicky',
              'Victor',
              'Victoria',
              'Vida',
              'Vidal',
              'Vilma',
              'Vince',
              'Vincent',
              'Vincenza',
              'Vincenzo',
              'Vinnie',
              'Viola',
              'Violet',
              'Violette',
              'Virgie',
              'Virgil',
              'Virginia',
              'Virginie',
              'Vita',
              'Vito',
              'Viva',
              'Vivian',
              'Viviane',
              'Vivianne',
              'Vivien',
              'Vivienne',
              'Vladimir',
              'Wade',
              'Waino',
              'Waldo',
              'Walker',
              'Wallace',
              'Walter',
              'Walton',
              'Wanda',
              'Ward',
              'Warren',
              'Watson',
              'Wava',
              'Waylon',
              'Wayne',
              'Webster',
              'Weldon',
              'Wellington',
              'Wendell',
              'Wendy',
              'Werner',
              'Westley',
              'Weston',
              'Whitney',
              'Wilber',
              'Wilbert',
              'Wilburn',
              'Wiley',
              'Wilford',
              'Wilfred',
              'Wilfredo',
              'Wilfrid',
              'Wilhelm',
              'Wilhelmine',
              'Will',
              'Willa',
              'Willard',
              'William',
              'Willie',
              'Willis',
              'Willow',
              'Willy',
              'Wilma',
              'Wilmer',
              'Wilson',
              'Wilton',
              'Winfield',
              'Winifred',
              'Winnifred',
              'Winona',
              'Winston',
              'Woodrow',
              'Wyatt',
              'Wyman',
              'Xander',
              'Xavier',
              'Xzavier',
              'Yadira',
              'Yasmeen',
              'Yasmin',
              'Yasmine',
              'Yazmin',
              'Yesenia',
              'Yessenia',
              'Yolanda',
              'Yoshiko',
              'Yvette',
              'Yvonne',
              'Zachariah',
              'Zachary',
              'Zachery',
              'Zack',
              'Zackary',
              'Zackery',
              'Zakary',
              'Zander',
              'Zane',
              'Zaria',
              'Zechariah',
              'Zelda',
              'Zella',
              'Zelma',
              'Zena',
              'Zetta',
              'Zion',
              'Zita',
              'Zoe',
              'Zoey',
              'Zoie',
              'Zoila',
              'Zola',
              'Zora',
              'Zula'
            ],
            last_name: [
              'Abbott',
              'Abernathy',
              'Abshire',
              'Adams',
              'Altenwerth',
              'Anderson',
              'Ankunding',
              'Armstrong',
              'Auer',
              'Aufderhar',
              'Bahringer',
              'Bailey',
              'Balistreri',
              'Barrows',
              'Bartell',
              'Bartoletti',
              'Barton',
              'Bashirian',
              'Batz',
              'Bauch',
              'Baumbach',
              'Bayer',
              'Beahan',
              'Beatty',
              'Bechtelar',
              'Becker',
              'Bednar',
              'Beer',
              'Beier',
              'Berge',
              'Bergnaum',
              'Bergstrom',
              'Bernhard',
              'Bernier',
              'Bins',
              'Blanda',
              'Blick',
              'Block',
              'Bode',
              'Boehm',
              'Bogan',
              'Bogisich',
              'Borer',
              'Bosco',
              'Botsford',
              'Boyer',
              'Boyle',
              'Bradtke',
              'Brakus',
              'Braun',
              'Breitenberg',
              'Brekke',
              'Brown',
              'Bruen',
              'Buckridge',
              'Carroll',
              'Carter',
              'Cartwright',
              'Casper',
              'Cassin',
              'Champlin',
              'Christiansen',
              'Cole',
              'Collier',
              'Collins',
              'Conn',
              'Connelly',
              'Conroy',
              'Considine',
              'Corkery',
              'Cormier',
              'Corwin',
              'Cremin',
              'Crist',
              'Crona',
              'Cronin',
              'Crooks',
              'Cruickshank',
              'Cummerata',
              'Cummings',
              'Dach',
              'D\'Amore',
              'Daniel',
              'Dare',
              'Daugherty',
              'Davis',
              'Deckow',
              'Denesik',
              'Dibbert',
              'Dickens',
              'Dicki',
              'Dickinson',
              'Dietrich',
              'Donnelly',
              'Dooley',
              'Douglas',
              'Doyle',
              'DuBuque',
              'Durgan',
              'Ebert',
              'Effertz',
              'Eichmann',
              'Emard',
              'Emmerich',
              'Erdman',
              'Ernser',
              'Fadel',
              'Fahey',
              'Farrell',
              'Fay',
              'Feeney',
              'Feest',
              'Feil',
              'Ferry',
              'Fisher',
              'Flatley',
              'Frami',
              'Franecki',
              'Friesen',
              'Fritsch',
              'Funk',
              'Gaylord',
              'Gerhold',
              'Gerlach',
              'Gibson',
              'Gislason',
              'Gleason',
              'Gleichner',
              'Glover',
              'Goldner',
              'Goodwin',
              'Gorczany',
              'Gottlieb',
              'Goyette',
              'Grady',
              'Graham',
              'Grant',
              'Green',
              'Greenfelder',
              'Greenholt',
              'Grimes',
              'Gulgowski',
              'Gusikowski',
              'Gutkowski',
              'Gutmann',
              'Haag',
              'Hackett',
              'Hagenes',
              'Hahn',
              'Haley',
              'Halvorson',
              'Hamill',
              'Hammes',
              'Hand',
              'Hane',
              'Hansen',
              'Harber',
              'Harris',
              'Hartmann',
              'Harvey',
              'Hauck',
              'Hayes',
              'Heaney',
              'Heathcote',
              'Hegmann',
              'Heidenreich',
              'Heller',
              'Herman',
              'Hermann',
              'Hermiston',
              'Herzog',
              'Hessel',
              'Hettinger',
              'Hickle',
              'Hilll',
              'Hills',
              'Hilpert',
              'Hintz',
              'Hirthe',
              'Hodkiewicz',
              'Hoeger',
              'Homenick',
              'Hoppe',
              'Howe',
              'Howell',
              'Hudson',
              'Huel',
              'Huels',
              'Hyatt',
              'Jacobi',
              'Jacobs',
              'Jacobson',
              'Jakubowski',
              'Jaskolski',
              'Jast',
              'Jenkins',
              'Jerde',
              'Johns',
              'Johnson',
              'Johnston',
              'Jones',
              'Kassulke',
              'Kautzer',
              'Keebler',
              'Keeling',
              'Kemmer',
              'Kerluke',
              'Kertzmann',
              'Kessler',
              'Kiehn',
              'Kihn',
              'Kilback',
              'King',
              'Kirlin',
              'Klein',
              'Kling',
              'Klocko',
              'Koch',
              'Koelpin',
              'Koepp',
              'Kohler',
              'Konopelski',
              'Koss',
              'Kovacek',
              'Kozey',
              'Krajcik',
              'Kreiger',
              'Kris',
              'Kshlerin',
              'Kub',
              'Kuhic',
              'Kuhlman',
              'Kuhn',
              'Kulas',
              'Kunde',
              'Kunze',
              'Kuphal',
              'Kutch',
              'Kuvalis',
              'Labadie',
              'Lakin',
              'Lang',
              'Langosh',
              'Langworth',
              'Larkin',
              'Larson',
              'Leannon',
              'Lebsack',
              'Ledner',
              'Leffler',
              'Legros',
              'Lehner',
              'Lemke',
              'Lesch',
              'Leuschke',
              'Lind',
              'Lindgren',
              'Littel',
              'Little',
              'Lockman',
              'Lowe',
              'Lubowitz',
              'Lueilwitz',
              'Luettgen',
              'Lynch',
              'Macejkovic',
              'MacGyver',
              'Maggio',
              'Mann',
              'Mante',
              'Marks',
              'Marquardt',
              'Marvin',
              'Mayer',
              'Mayert',
              'McClure',
              'McCullough',
              'McDermott',
              'McGlynn',
              'McKenzie',
              'McLaughlin',
              'Medhurst',
              'Mertz',
              'Metz',
              'Miller',
              'Mills',
              'Mitchell',
              'Moen',
              'Mohr',
              'Monahan',
              'Moore',
              'Morar',
              'Morissette',
              'Mosciski',
              'Mraz',
              'Mueller',
              'Muller',
              'Murazik',
              'Murphy',
              'Murray',
              'Nader',
              'Nicolas',
              'Nienow',
              'Nikolaus',
              'Nitzsche',
              'Nolan',
              'Oberbrunner',
              'O\'Connell',
              'O\'Conner',
              'O\'Hara',
              'O\'Keefe',
              'O\'Kon',
              'Okuneva',
              'Olson',
              'Ondricka',
              'O\'Reilly',
              'Orn',
              'Ortiz',
              'Osinski',
              'Pacocha',
              'Padberg',
              'Pagac',
              'Parisian',
              'Parker',
              'Paucek',
              'Pfannerstill',
              'Pfeffer',
              'Pollich',
              'Pouros',
              'Powlowski',
              'Predovic',
              'Price',
              'Prohaska',
              'Prosacco',
              'Purdy',
              'Quigley',
              'Quitzon',
              'Rath',
              'Ratke',
              'Rau',
              'Raynor',
              'Reichel',
              'Reichert',
              'Reilly',
              'Reinger',
              'Rempel',
              'Renner',
              'Reynolds',
              'Rice',
              'Rippin',
              'Ritchie',
              'Robel',
              'Roberts',
              'Rodriguez',
              'Rogahn',
              'Rohan',
              'Rolfson',
              'Romaguera',
              'Roob',
              'Rosenbaum',
              'Rowe',
              'Ruecker',
              'Runolfsdottir',
              'Runolfsson',
              'Runte',
              'Russel',
              'Rutherford',
              'Ryan',
              'Sanford',
              'Satterfield',
              'Sauer',
              'Sawayn',
              'Schaden',
              'Schaefer',
              'Schamberger',
              'Schiller',
              'Schimmel',
              'Schinner',
              'Schmeler',
              'Schmidt',
              'Schmitt',
              'Schneider',
              'Schoen',
              'Schowalter',
              'Schroeder',
              'Schulist',
              'Schultz',
              'Schumm',
              'Schuppe',
              'Schuster',
              'Senger',
              'Shanahan',
              'Shields',
              'Simonis',
              'Sipes',
              'Skiles',
              'Smith',
              'Smitham',
              'Spencer',
              'Spinka',
              'Sporer',
              'Stamm',
              'Stanton',
              'Stark',
              'Stehr',
              'Steuber',
              'Stiedemann',
              'Stokes',
              'Stoltenberg',
              'Stracke',
              'Streich',
              'Stroman',
              'Strosin',
              'Swaniawski',
              'Swift',
              'Terry',
              'Thiel',
              'Thompson',
              'Tillman',
              'Torp',
              'Torphy',
              'Towne',
              'Toy',
              'Trantow',
              'Tremblay',
              'Treutel',
              'Tromp',
              'Turcotte',
              'Turner',
              'Ullrich',
              'Upton',
              'Vandervort',
              'Veum',
              'Volkman',
              'Von',
              'VonRueden',
              'Waelchi',
              'Walker',
              'Walsh',
              'Walter',
              'Ward',
              'Waters',
              'Watsica',
              'Weber',
              'Wehner',
              'Weimann',
              'Weissnat',
              'Welch',
              'West',
              'White',
              'Wiegand',
              'Wilderman',
              'Wilkinson',
              'Will',
              'Williamson',
              'Willms',
              'Windler',
              'Wintheiser',
              'Wisoky',
              'Wisozk',
              'Witting',
              'Wiza',
              'Wolf',
              'Wolff',
              'Wuckert',
              'Wunsch',
              'Wyman',
              'Yost',
              'Yundt',
              'Zboncak',
              'Zemlak',
              'Ziemann',
              'Zieme',
              'Zulauf'
            ],
            prefix: [
              'Mr.',
              'Mrs.',
              'Ms.',
              'Miss',
              'Dr.'
            ],
            suffix: [
              'Jr.',
              'Sr.',
              'I',
              'II',
              'III',
              'IV',
              'V',
              'MD',
              'DDS',
              'PhD',
              'DVM'
            ],
            title: {
              descriptor: [
                'Lead',
                'Senior',
                'Direct',
                'Corporate',
                'Dynamic',
                'Future',
                'Product',
                'National',
                'Regional',
                'District',
                'Central',
                'Global',
                'Customer',
                'Investor',
                'Dynamic',
                'International',
                'Legacy',
                'Forward',
                'Internal',
                'Human',
                'Chief',
                'Principal'
              ],
              level: [
                'Solutions',
                'Program',
                'Brand',
                'Security',
                'Research',
                'Marketing',
                'Directives',
                'Implementation',
                'Integration',
                'Functionality',
                'Response',
                'Paradigm',
                'Tactics',
                'Identity',
                'Markets',
                'Group',
                'Division',
                'Applications',
                'Optimization',
                'Operations',
                'Infrastructure',
                'Intranet',
                'Communications',
                'Web',
                'Branding',
                'Quality',
                'Assurance',
                'Mobility',
                'Accounts',
                'Data',
                'Creative',
                'Configuration',
                'Accountability',
                'Interactions',
                'Factors',
                'Usability',
                'Metrics'
              ],
              job: [
                'Supervisor',
                'Associate',
                'Executive',
                'Liason',
                'Officer',
                'Manager',
                'Engineer',
                'Specialist',
                'Director',
                'Coordinator',
                'Administrator',
                'Architect',
                'Analyst',
                'Designer',
                'Planner',
                'Orchestrator',
                'Technician',
                'Developer',
                'Producer',
                'Consultant',
                'Assistant',
                'Facilitator',
                'Agent',
                'Representative',
                'Strategist'
              ]
            },
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{last_name} #{suffix}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '###-###-####',
              '(###) ###-####',
              '1-###-###-####',
              '###.###.####',
              '###-###-####',
              '(###) ###-####',
              '1-###-###-####',
              '###.###.####',
              '###-###-#### x###',
              '(###) ###-#### x###',
              '1-###-###-#### x###',
              '###.###.#### x###',
              '###-###-#### x####',
              '(###) ###-#### x####',
              '1-###-###-#### x####',
              '###.###.#### x####',
              '###-###-#### x#####',
              '(###) ###-#### x#####',
              '1-###-###-#### x#####',
              '###.###.#### x#####'
            ]
          },
          cell_phone: {
            formats: [
              '###-###-####',
              '(###) ###-####',
              '1-###-###-####',
              '###.###.####'
            ]
          },
          business: {
            credit_card_numbers: [
              '1234-2121-1221-1211',
              '1212-1221-1121-1234',
              '1211-1221-1234-2201',
              '1228-1221-1221-1431'
            ],
            credit_card_expiry_dates: [
              '2011-10-12',
              '2012-11-12',
              '2015-11-11',
              '2013-9-12'
            ],
            credit_card_types: [
              'visa',
              'mastercard',
              'americanexpress',
              'discover'
            ]
          },
          commerce: {
            color: [
              'red',
              'green',
              'blue',
              'yellow',
              'purple',
              'mint green',
              'teal',
              'white',
              'black',
              'orange',
              'pink',
              'grey',
              'maroon',
              'violet',
              'turquoise',
              'tan',
              'sky blue',
              'salmon',
              'plum',
              'orchid',
              'olive',
              'magenta',
              'lime',
              'ivory',
              'indigo',
              'gold',
              'fuchsia',
              'cyan',
              'azure',
              'lavender',
              'silver'
            ],
            department: [
              'Books',
              'Movies',
              'Music',
              'Games',
              'Electronics',
              'Computers',
              'Home',
              'Garden',
              'Tools',
              'Grocery',
              'Health',
              'Beauty',
              'Toys',
              'Kids',
              'Baby',
              'Clothing',
              'Shoes',
              'Jewelery',
              'Sports',
              'Outdoors',
              'Automotive',
              'Industrial'
            ],
            product_name: {
              adjective: [
                'Small',
                'Ergonomic',
                'Rustic',
                'Intelligent',
                'Gorgeous',
                'Incredible',
                'Fantastic',
                'Practical',
                'Sleek',
                'Awesome'
              ],
              material: [
                'Steel',
                'Wooden',
                'Concrete',
                'Plastic',
                'Cotton',
                'Granite',
                'Rubber'
              ],
              product: [
                'Chair',
                'Car',
                'Computer',
                'Gloves',
                'Pants',
                'Shirt',
                'Table',
                'Shoes',
                'Hat'
              ]
            }
          },
          team: {
            creature: [
              'ants',
              'bats',
              'bears',
              'bees',
              'birds',
              'buffalo',
              'cats',
              'chickens',
              'cattle',
              'dogs',
              'dolphins',
              'ducks',
              'elephants',
              'fishes',
              'foxes',
              'frogs',
              'geese',
              'goats',
              'horses',
              'kangaroos',
              'lions',
              'monkeys',
              'owls',
              'oxen',
              'penguins',
              'people',
              'pigs',
              'rabbits',
              'sheep',
              'tigers',
              'whales',
              'wolves',
              'zebras',
              'banshees',
              'crows',
              'black cats',
              'chimeras',
              'ghosts',
              'conspirators',
              'dragons',
              'dwarves',
              'elves',
              'enchanters',
              'exorcists',
              'sons',
              'foes',
              'giants',
              'gnomes',
              'goblins',
              'gooses',
              'griffins',
              'lycanthropes',
              'nemesis',
              'ogres',
              'oracles',
              'prophets',
              'sorcerors',
              'spiders',
              'spirits',
              'vampires',
              'warlocks',
              'vixens',
              'werewolves',
              'witches',
              'worshipers',
              'zombies',
              'druids'
            ],
            name: [
              '#{Address.state} #{creature}'
            ]
          },
          hacker: {
            abbreviation: [
              'TCP',
              'HTTP',
              'SDD',
              'RAM',
              'GB',
              'CSS',
              'SSL',
              'AGP',
              'SQL',
              'FTP',
              'PCI',
              'AI',
              'ADP',
              'RSS',
              'XML',
              'EXE',
              'COM',
              'HDD',
              'THX',
              'SMTP',
              'SMS',
              'USB',
              'PNG',
              'SAS',
              'IB',
              'SCSI',
              'JSON',
              'XSS',
              'JBOD'
            ],
            adjective: [
              'auxiliary',
              'primary',
              'back-end',
              'digital',
              'open-source',
              'virtual',
              'cross-platform',
              'redundant',
              'online',
              'haptic',
              'multi-byte',
              'bluetooth',
              'wireless',
              '1080p',
              'neural',
              'optical',
              'solid state',
              'mobile'
            ],
            noun: [
              'driver',
              'protocol',
              'bandwidth',
              'panel',
              'microchip',
              'program',
              'port',
              'card',
              'array',
              'interface',
              'system',
              'sensor',
              'firewall',
              'hard drive',
              'pixel',
              'alarm',
              'feed',
              'monitor',
              'application',
              'transmitter',
              'bus',
              'circuit',
              'capacitor',
              'matrix'
            ],
            verb: [
              'back up',
              'bypass',
              'hack',
              'override',
              'compress',
              'copy',
              'navigate',
              'index',
              'connect',
              'generate',
              'quantify',
              'calculate',
              'synthesize',
              'input',
              'transmit',
              'program',
              'reboot',
              'parse'
            ],
            ingverb: [
              'backing up',
              'bypassing',
              'hacking',
              'overriding',
              'compressing',
              'copying',
              'navigating',
              'indexing',
              'connecting',
              'generating',
              'quantifying',
              'calculating',
              'synthesizing',
              'transmitting',
              'programming',
              'parsing'
            ]
          },
          app: {
            name: [
              'Redhold',
              'Treeflex',
              'Trippledex',
              'Kanlam',
              'Bigtax',
              'Daltfresh',
              'Toughjoyfax',
              'Mat Lam Tam',
              'Otcom',
              'Tres-Zap',
              'Y-Solowarm',
              'Tresom',
              'Voltsillam',
              'Biodex',
              'Greenlam',
              'Viva',
              'Matsoft',
              'Temp',
              'Zoolab',
              'Subin',
              'Rank',
              'Job',
              'Stringtough',
              'Tin',
              'It',
              'Home Ing',
              'Zamit',
              'Sonsing',
              'Konklab',
              'Alpha',
              'Latlux',
              'Voyatouch',
              'Alphazap',
              'Holdlamis',
              'Zaam-Dox',
              'Sub-Ex',
              'Quo Lux',
              'Bamity',
              'Ventosanzap',
              'Lotstring',
              'Hatity',
              'Tempsoft',
              'Overhold',
              'Fixflex',
              'Konklux',
              'Zontrax',
              'Tampflex',
              'Span',
              'Namfix',
              'Transcof',
              'Stim',
              'Fix San',
              'Sonair',
              'Stronghold',
              'Fintone',
              'Y-find',
              'Opela',
              'Lotlux',
              'Ronstring',
              'Zathin',
              'Duobam',
              'Keylex'
            ],
            version: [
              '0.#.#',
              '0.##',
              '#.##',
              '#.#',
              '#.#.#'
            ],
            author: [
              '#{Name.name}',
              '#{Company.name}'
            ]
          }
        },
        devise: {
          confirmations: {
            confirmed: 'Your email address has been successfully confirmed.',
            send_instructions: 'You will receive an email with instructions for how to confirm your email address in a few minutes.',
            send_paranoid_instructions: 'If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes.'
          },
          failure: {
            already_authenticated: 'You are already signed in.',
            inactive: 'Your account is not activated yet.',
            invalid: 'Invalid email or password.',
            locked: 'Your account is locked.',
            last_attempt: 'You have one more attempt before your account is locked.',
            not_found_in_database: 'Invalid email address or password.',
            timeout: 'Your session expired. Please sign in again to continue.',
            unauthenticated: 'You need to sign in or sign up before continuing.',
            unconfirmed: 'You have to confirm your email address before continuing.'
          },
          mailer: {
            confirmation_instructions: {
              subject: 'DKN email account confirmed.'
            },
            reset_password_instructions: {
              subject: 'Instructions to reset password'
            },
            unlock_instructions: {
              subject: 'Unlock instructions'
            }
          },
          omniauth_callbacks: {
            failure: 'Could not authenticate you from %{kind} because "%{reason}".',
            success: 'Successfully authenticated from %{kind} account.'
          },
          passwords: {
            no_token: 'You can\'t access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided.',
            send_instructions: 'You will receive an email with instructions on how to reset your password in a few minutes.',
            send_paranoid_instructions: 'If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes.',
            updated: 'Your password has been changed successfully. You are now signed in.',
            updated_not_active: 'Your password has been changed successfully.'
          },
          registrations: {
            destroyed: 'Bye! Your account has been successfully cancelled. We hope to see you again soon.',
            signed_up: 'Welcome! You have signed up successfully.',
            signed_up_but_inactive: 'You have signed up successfully. However, we could not sign you in because your account is not yet activated.',
            signed_up_but_locked: 'You have signed up successfully. However, we could not sign you in because your account is locked.',
            signed_up_but_unconfirmed: 'A message with a confirmation link has been sent to your email address. Please follow the link to activate your account.',
            update_needs_confirmation: 'You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirm link to confirm your new email address.',
            updated: 'Your account has been updated successfully.'
          },
          sessions: {
            signed_in: 'Signed in successfully.',
            signed_out: 'Signed out successfully.',
            already_signed_out: 'Signed out successfully.'
          },
          unlocks: {
            send_instructions: 'You will receive an email with instructions for how to unlock your account in a few minutes.',
            send_paranoid_instructions: 'If your account exists, you will receive an email with instructions for how to unlock it in a few minutes.',
            unlocked: 'Your account has been unlocked successfully. Please sign in to continue.'
          }
        },
        views: {
          pagination: {
            first: '&laquo; First',
            last: 'Last &raquo;',
            previous: '&lsaquo; Prev',
            next: 'Next &rsaquo;',
            truncate: '&hellip;'
          }
        },
        adjust: {
          title: 'User settings',
          title_admin: 'Admin user settings',
          personal: 'Personal details',
          language: 'Language',
          spanish: 'Español',
          english: 'English',
          french: 'Français',
          italian: 'Italiano',
          portuguese: 'Português',
          german: 'Deutsch',
          password: {
            password_change: 'Change password',
            new_password_placeholder: 'New password',
            new_password_repeat_placeholder: 'Repeat new password',
            old_password_placeholder: 'Current password'
          },
          require: {
            name: 'Enter your name',
            surname: 'Enter your surname'
          },
          advanced_adjust: 'Advanced settings',
          advanced_adjust_text: 'Display advanced settings',
          type_temp: 'Temperature',
          type_temp_text: 'Temperature mode',
          save: {
            title: 'Saved settings',
            body: 'Your settings have been successfully saved.'
          },
          unsubscribe_confirm: 'Do you want to unsubscribe from the application? Once your data is deleted it cannot be restored.',
          unsubscribe: {
            title: 'You have been unsubscribed',
            body: 'You have been unsubscribed, your personal information is now deleted.'
          },
          change_pass: 'Change password'
        },
        languages: {
        },
        modal_mode: {
          cold: 'Cooling',
          cold_text: 'Cooling mode',
          heat: 'Heating',
          heat_text: 'Heating mode',
          ventilate_cold: 'Cooling',
          ventilate_cold_text: 'Ventilation in cooling mode',
          heat_cold_auto: 'Auto',
          heat_cold_auto_text: 'Auto mode',
          dehumidify: 'Dry',
          dehumidify_text: 'Dry mode',
          cold_auto: 'Auto cooling',
          cold_auto_text: 'Auto cooling mode',
          heat_auto: 'Auto heating',
          heat_auto_text: 'Auto heating mode',
          ventilate_heat: 'Heating ventilation',
          ventilate_heat_text: 'Ventilation in heating mode'
        },
        modal_speed: {
          title: 'Available AC speed modes',
          speed_1: 'Your AC unit has only one speed available.',
          speed_2: 'Select one of the available speeds. For a larger selected value, a higher speed will be set.',
          speed_3: 'Select one of the available speeds. For a larger selected value, a higher speed will be set.',
          speed_4: 'Select one of the available speeds. For a larger selected value, a higher speed will be set.',
          speed_5: 'Select one of the available speeds. For a larger selected value, a higher speed will be set.'
        },
        modal_vertical: {
          title: 'Vertical slats position',
          position_0: 'Inclination 0: 90º inclination',
          position_1: 'Inclination 1: 72º inclination',
          position_2: 'Inclination 2: 54º inclination',
          position_3: 'Inclination 3: 36º inclination',
          position_4: 'Inclination 4: 0º inclination',
          position_swing: 'Swing: it alternates all the slats positions'
        },
        modal_horizontal: {
          title: 'Horizontal slats position',
          position_0: 'Inclinación 0: 180º inclination',
          position_1: 'Inclinación 1: 135º inclination',
          position_2: 'Inclinación 2: 90º inclination',
          position_3: 'Inclinación 3: 45º inclination',
          position_4: 'Inclinación 4: 0º inclination',
          position_swing: 'Swing: it alternates all the slats positions'
        },
        modal_scenary: {
          vacant: 'Unoccupied mode',
          vacant_text: 'This mode will turn on and off your AC unit to maintain the temperature within the limits pre-established in settings.',
          occupied: 'Occupied mode',
          occupied_text: 'It is the default operating mode of your AC unit.',
          sleep: 'Auto power off mode',
          sleep_text: 'Your unit will turn off after a period of time pre-established in settings.'
        },
        advanced_adjust: {
        },
        adjust_zone: {
          'true': !0,
          help: {
          }
        },
        installations: {
          'return': 'Return',
          exit: 'Exit',
          finish: 'Finish',
          next: 'Next',
          edit: 'Edit',
          error: 'An error occurred while connecting with the webserver',
          retry: 'Retry',
          state1: {
            text: 'Please follow the following steps to associate your webserver to your router'
          },
          state2: {
            text: 'Verify the unit is powered and in access point mode. Ap LED steady.'
          },
          state3: {
            text: 'Select the association process',
            assisted: 'Assisted',
            wps: 'WPS'
          },
          state4: {
            text: 'Change your WiFi network for the one beginning with:',
            text4: 'The password is: 123456789'
          },
          state5: {
            text: 'Select the router to associate:',
            loading_text: 'Connecting with the unit. Please wait...',
            loading_text2: '(If this operation takes over a minute, check if the connection with the unit is correct)',
            low_signal: {
              title: 'Limited range',
              text: 'Please place the Webserver closer to the router or install a WiFi signal amplifier'
            }
          },
          state6: {
            text: 'Select the security type of your WiFi network and enter your password',
            text2: 'Enter the data of your Wi-Fi network',
            none: 'No security',
            wep: 'WEP',
            wpa: 'WPA/WPA2',
            pass: 'Password',
            name: 'Name'
          },
          state7: {
            text: 'Network configuration data',
            ip: 'IP',
            port: 'Gateway',
            masc: 'Netmask',
            manual: 'MANUAL',
            dhcp: 'DHCP',
            loading_text: 'Configuring DKN WServer. Please wait...'
          },
          state8: {
            text: 'Once associated, the AP LED will blink slowly.'
          },
          state9: {
            text: 'Process successfully completed'
          },
          state21: {
            text1: 'Press the WPS configuration button of the router.',
            text2: 'It may be also reppresented by this symbol.'
          },
          state22: {
            text1: 'Press and hold the WPS configuration button of the unit until the AP LED changes its state.',
            text2: 'Once associated, the LED Ap will remain blinking slowly.'
          },
          state41: {
            title: 'Select the association type to router',
            auto_info: 'Auto. The system starts searching for available WiFi networks.',
            manual_info: 'Manual. You have to manually enter the data of your WiFi network.',
            auto: 'Auto',
            manual: 'Manual'
          }
        },
        buttons: {
          sign_in: 'Access',
          cancel: 'Cancel',
          init: 'Start',
          send: 'Send',
          save: 'Save',
          save_installation: 'Add installation',
          accept: 'Accept',
          resend_confirmation: 'Resend confirmation',
          back: 'Return',
          icon: 'Icon',
          unsubscribe: 'Unsubscribe',
          remove: 'Remove',
          restore_factory: 'Restore factory values',
          next: 'Next',
          prev: 'Previous',
          close: 'Close',
          recharge: 'Refresh',
          hide: 'Hide',
          'continue': 'Continue',
          exit: 'Exit',
          help: 'Help',
          modify: 'Change',
          contact: 'Contact'
        },
        devices: {
          warnings: {
            installer: 'Installer',
            text: 'Error code:'
          },
          alert_installer_modal: {
            name_placeholder: 'Enter your name',
            phone_placeholder: 'Enter your telephone number',
            send_button: 'Notify the installer',
            user_params: 'Enter your name and contact details:',
            installer_params: 'Contact the installer',
            success_title: 'Your installer has been notified',
            success_message: 'Your installer has been contacted by email. Please, wait before sending a new notification.',
            error: {
              name: 'Please enter your name',
              phone: 'Please enter your telephone number'
            },
            no_email: 'We were unable to notify the installer due to the lack of contact information. To notify the installer, enter his/her contact details on installation settings.'
          },
          adjusts: {
            name: 'Name',
            mac: 'MAC',
            pin: 'PIN',
            installation: 'Installation',
            device: 'Data Device',
            name_text: 'Device name',
            installation_text: 'Installation associated. Change the installation of the device if you have access permission',
            links: {
              adjust: 'Settings',
              params: 'Parameters'
            },
            model_device: 'Device model',
            sleep: 'Auto power off',
            min_temp_unoccupied: 'Unoccupied heating setpoint',
            min_temp_unoccupied_text: 'It defines the minimum temperature when the unoccupied mode is activated',
            max_temp_unoccupied: 'Unoccupied cooling setpoint',
            max_temp_unoccupied_text: 'It defines the maximum temperature when the unoccupied mode is activated',
            sleep_time: 'Auto power off',
            sleep_time_text: 'It defines the waiting time before deactivating the installation'
          },
          schedules: {
            init: 'Start',
            days: 'Days',
            monday: 'Mo',
            tuesday: 'Tu',
            wednesday: 'We',
            thursday: 'Th',
            friday: 'Fr',
            saturday: 'Sa',
            sunday: 'Su',
            add_schedule: 'Add schedule',
            schedules_types: 'Schedule type',
            on_off: 'On/off',
            mode: 'Mode',
            start_mode: 'Start mode',
            close: 'Close',
            remove: 'Remove',
            save: 'Save',
            hour: 'Time',
            temperature: 'Temperature',
            new_prog: 'New schedule',
            edit_prog: 'Edit schedule',
            schedules_name: 'Name',
            all_devices: 'All devices',
            waiting_title: 'Creating schedules',
            waiting_text: 'Creating schedules. This process may take some seconds to be completed in all DKN WServer.',
            days_error: 'You must select a day'
          }
        },
        email: 'Email',
        name: 'Name',
        surname: 'Surname',
        password: 'Password',
        new_password: 'New password',
        repeat_password: 'Repeat password',
        server: 'Server',
        state: 'State',
        enabled: 'Activated',
        sleeping: 'Ready',
        connected: 'Connected',
        activated: 'Activated',
        components: 'Components',
        historic: 'History',
        system: 'System',
        filters: 'Filters',
        mac: 'Mac',
        locality: 'Location',
        all: 'All',
        pin: 'PIN',
        status: 'Status',
        videos: 'Videos',
        documents: 'Documents',
        error: {
          internal: {
            title: 'Internal error',
            body: 'Your action could not be performed. Please try again later.'
          }
        },
        errors_page: {
          page_404: {
            title: 'Page not found',
            text: 'Sorry, we cannot find the page you are searching.',
            button: 'Go to home page'
          },
          page_403: {
            title: 'Access forbidden',
            text: 'Sorry, you do not have permission to access this area.',
            button: 'Return to home page'
          }
        },
        home: {
          menu: {
            installations: 'Installations',
            adjusts: 'User',
            help: 'Help',
            admin: 'Servers',
            exit: 'Log out',
            admin_users: 'Users',
            admins: 'Admins',
            support: 'Support'
          },
          upload: {
            title: 'New DKN Cloud version available',
            description: 'Please, update the app to use it.'
          },
          maintenance: {
            title: 'This site is temporarily in maintenance',
            description: 'This site is currently down for maintenance.',
            text: 'It will be restored soon.'
          }
        },
        list_installations: {
          edit: 'Edit',
          close: 'Close'
        },
        edit_installation: {
          installator: {
            name: 'Name',
            phone: 'Telephone number',
            email: 'Email'
          }
        },
        installation: {
          temp: 'TEMPERATURE',
          months: {
            0: 'JAN',
            1: 'FEB',
            2: 'MAR',
            3: 'APR',
            4: 'MAY',
            5: 'JUN',
            6: 'JUL',
            7: 'AUG',
            8: 'SEP',
            9: 'OCT',
            10: 'NOV',
            11: 'DEC'
          },
          days: {
            0: 'Sunday',
            1: 'Monday',
            2: 'Tuesday',
            3: 'Wednesday',
            4: 'Thursday',
            5: 'Friday',
            6: 'Saturday'
          },
          modes: {
            header: 'Operating modes',
            cool: 'Cooling',
            heat: 'Heating',
            ventilate: 'Ventilation',
            'ventilate-cold': 'Cooling ventilation',
            'heat-cold-auto': 'Automatic',
            dehumidify: 'Dry',
            'cool-air': 'Automatic cooling',
            'heat-air': 'Automatic heating',
            'ventilate-heat': 'Ventilation heating'
          },
          velocity: {
            header: 'Air speed',
            'velocity-0': 'Auto',
            'velocity-1': 'Ultra-low',
            'velocity-2': 'Low',
            'velocity-3': 'Medium',
            'velocity-4': 'Medium-high',
            'velocity-5': 'High'
          },
          vertical: {
            header: 'Vertical inclination',
            'vertical-0000': 'Inclination 0',
            'vertical-0001': 'Inclination 1',
            'vertical-0010': 'Inclination 2',
            'vertical-0011': 'Inclination 3',
            'vertical-0100': 'Inclination 4',
            'vertical-0111': 'Swing'
          },
          horizontal: {
            header: 'Horizontal inclination',
            'horizontal-0000': 'Inclination 0',
            'horizontal-0001': 'Inclination 1',
            'horizontal-0010': 'Inclination 2',
            'horizontal-0011': 'Inclination 3',
            'horizontal-0100': 'Inclination 4',
            'horizontal-0111': 'Swing'
          },
          scenary: {
            header: 'Scene',
            occupied: 'Occupied',
            vacant: 'Unoccupied',
            sleep30: '30\' Auto power off',
            sleep60: '60\' Auto power off',
            sleep90: '90\' Auto power off',
            sleep: 'Auto power off'
          },
          modal: {
            name: 'Installation name',
            location: 'Location',
            icon: 'Icon',
            users: 'Users',
            installer: 'Installer details',
            installer_name: 'Name',
            installer_phone: 'Telephone number',
            installer_email: 'Email',
            add_user: 'Add user',
            save: 'Save changes',
            remove: 'Remove installation',
            cancel: 'Cancel',
            title: 'Installation settings',
            unoccupied: 'Unoccupied Temperatures',
            unoccupied_min_temp: 'Unoccupied heating setpoint',
            unoccupied_max_temp: 'Unoccupied cooling setpoint',
            name_error: 'You must enter a name for the installation',
            location_error: 'You must enter a location for the installation',
            type: 'Installation type',
            type_home: 'Residential',
            type_commercial: 'Commercial',
            type_business: 'Office',
            type_others: 'Other',
            postal_code: 'Zip code',
            sleep_time: 'Auto power off',
            links: {
              adjust: 'Settings',
              params: 'Parameters',
              users: 'Users'
            },
            new_user: {
              title: 'Add user to the installation',
              name: 'Name',
              surname: 'Surname',
              email: 'Email',
              avanced: 'Advanced user',
              name_blank: 'Please enter an user name',
              surname_blank: 'Please enter an user surname',
              email_blank: 'Please enter an user email',
              email_invalid: 'The email is not valid'
            },
            help: {
              name: 'Name',
              name_text: 'It allows you to change the installation name',
              location: 'Location',
              location_text: 'It allows you to change the installation location',
              icon: 'Icon',
              icon_text: 'It allows you to change the installation icon',
              users: 'Users',
              users_text: 'It allows you to manage the users that can use the application. Basic user: Control of the air conditioning basic functions. Advanced user: Access to basic functions and the following menus: installation and unit settings, time schedules, management of the users.',
              installer: 'Installer',
              installer_text: 'These details will help you contact the installer in case of incident',
              postal_code: 'Post code',
              postal_code_text: 'Zip code of the installation location',
              type: 'Installation type',
              type_text: 'Select the installation type',
              min_temp_unoccupied: 'Unoccupied heating setpoint',
              min_temp_unoccupied_text: 'It defines the minimum temperature when the unoccupied mode is activated',
              max_temp_unoccupied: 'Unoccupied cooling setpoint',
              max_temp_unoccupied_text: 'It defines the maximum temperature when the unoccupied mode is activated',
              sleep_time: 'Auto power off',
              sleep_time_text: 'Select the waiting time before deactivating the system'
            }
          }
        },
        login: {
          restore_password: 'Remember password',
          demo: 'Demo',
          router: 'Associate router'
        },
        register: {
          sign_up: 'Create account',
          repeat_password: 'Repeat password'
        },
        complete_registration: {
          title: 'Complete your registration'
        },
        mailers: {
          confirmation: {
            welcome: 'Welcome to DKN WServer,',
            text: 'To complete your registration confirm your email address by clicking on the following link:',
            confirm: 'Confirm registration'
          },
          reset_password: {
            welcome: 'Hello',
            text: 'Apparently you forgot your password. Don\'t worry, these things happen. Click the next link to change your password.',
            change_password: 'Change password',
            subject: 'You have been invited to DKN WServer'
          },
          complete_registration: {
            title: 'Complete your registration in DKN WServer',
            text: 'An user invited you to manage an installation in DKN WServer. Please, complete your registration to access the platform and manage it.',
            link: 'Complete registration',
            subject: 'Invitation to DKN WServer platform'
          },
          invitation: {
            title: 'Access to DKN WServer',
            text: 'An user invited you to manage an installation in DKN WServer. Please, complete your registration to access the platform and manage it.',
            link: 'Access to DKN WServer',
            subject: 'Invitation to manage an installation in DKN WServer'
          },
          alert_installer: {
            subject: 'There is a problem in one of the DKN WServer units',
            text: 'An user reported a problem with the AC unit.',
            title: 'Problem reported with an AC unit',
            user_name: 'User name',
            user_phone: 'User phone',
            error: 'Error'
          },
          import_devices: {
            title: 'Imported devices report:',
            subject: 'DKN - Import'
          }
        },
        messages: {
          errors: {
            name_blank: 'Please enter a name',
            surname_blank: 'Please enter a surname',
            login: 'Sorry, the email or the password are not valid',
            email: 'Sorry, the email is not valid',
            email_blank: 'Please enter an email',
            email_taken: 'Sorry, the email account is already in use',
            password_length: 'Passwords must have at least 8 characters',
            password_blank: 'Please enter a password',
            password_confirmation_check: 'Sorry, the password and the confirmation password must be the same',
            password_confirmation_blank: 'You must confirm your password',
            password_new_length: 'The new password must have at least 8 characters',
            password_new_blank: 'Please enter a new password',
            invalid_old_password: 'The password you have entered is not valid.',
            condition: 'You must accept the terms and conditions to continue',
            token_invalid: 'The activation code is erroneous. Please ask for a new password.',
            email_not_exist: 'Sorry but there is not any account associated to that email account',
            confirmation: 'An error ocurred during the confirmation process. Please, fill the form and we will send you a new confirmation email.',
            unconfirmed: 'Email not confirmed!',
            device_blank: 'Please enter a name for your server',
            installation_blank: 'Please enter a name for your installation',
            mac_blank: 'Please enter the MAC address of your server',
            mac_invalid: 'Sorry, the MAC address you have introduced does not belong to any device. Check that the MAC address is correct. Check that your device is connected to the router and you have Internet connection.',
            mac_format: 'MAC Format is invalid',
            mac_repeated: 'Sorry, there is already a server using this MAC',
            pin_blank: 'Please enter a PIN code for the server',
            pin_invalid: 'Sorry, the PIN code you have introduced is not correct.',
            server_sleeping: 'The requested device is not connected to the Internet. Check that the Webserver cloud is associated with a router and it has internet',
            device_taken: 'The MAC requested is already register in the Cloud',
            location_blank: 'Please enter the location of your installation',
            icon_blank: 'You must select an icon to represent your installation',
            file_error: 'The file you are trying to import is erroneous. These are the supported formats: xls, xlsx y csv.',
            must_select_file: 'You must select a file',
            not_connected: 'You do not have Internet connection, the actions requested will not be implemented in your DKN WServer. Please, refresh the page once you have Internet connection and try again.',
            not_connected_title: 'There is a problem with your Internet connection',
            not_connected_device: 'Your DKN WServer is not connected to the Internet:',
            not_connected_devices: 'Your DKN WServers are not connected to the Internet:',
            not_connected_device_title: 'Connection problem',
            error_device: 'An error has occurred to your device. If this message persists, contact the installer.',
            registration_already_completed: 'The registration has been already completed. Please log in.',
            user_taken: 'The user is already associated with the server',
            not_permission_title: 'Permission denied',
            not_permission: 'Your user can\'t access this feature.',
            not_permission_new_schedule: 'You have reached the maximum number of available schedules (24), please, delete an existing schedule to create a new one.',
            without_internet_title: 'Internet Connection',
            without_internet_text: 'This application needs internet connection to work. Please connect your device and try again',
            mac_length_seek: 'Minimum 4 digits required',
            email_length_seek: 'Minimum 3 characters required',
            machine_error_11_title: 'Connection error with the unit',
            machine_error_11_text: 'Check the connection on the P1 and P2 ports of the unit.',
            backend_error: 'Error sending request, please, try again later.'
          },
          success: {
            register: 'Registration completed!',
            send_reset_password: 'We have sent you an email with the instructions for changing your password.',
            reset_password: 'Your password has been changed',
            resend_confirmation: 'We have sent a new confirmation email to your email account.',
            user_device_added: 'The connection with the AC unit has been successfully made. You can access from the Installations view.',
            user_device_updated: 'Server information udpated.',
            restore_factory: 'Server has restored default settings.',
            remove_installation_confirmation: 'Are you sure you want to remove the installation?',
            remove_device_confirmation: 'Are you sure you want to remove the DKN Webserver?',
            remove_last_device_confirmation: 'This action will remove the installation. Do you really want to do this?',
            remove_installation_without_devices: 'There are no DKN Webservers associated. If you exit this menu, all installation data will be lost. Do you want to continue?',
            remove_user_confirmation: 'Are you sure you want to remove the user\'s access to the installation?',
            confirmed: 'Email account successfully confirmed. Log in to access the platform.'
          },
          info: {
            has_email: 'New email!',
            go_login: 'Go to log in',
            reset_password: 'Return to log in and enter your email and your new password to access.',
            change_password: 'Enter and repeat your new password.',
            send_reset_password: 'Don\'t worry, these things happen. Just enter your email address and we will send you an email with instructions to change your password.',
            register_success: 'We have sent you an email to verify your identity.',
            complete_registration_success: 'Registration completed. You can now log in and and manage your DKN WServer.',
            resend_confirmation: 'Enter your email address and we will send you a new confirmation email.',
            unconfirmed: 'Please confirm your email before logging in',
            remove_server_admin: {
              question: 'Do you want to remove this server?',
              info: 'All the data associated to this server will be deleted.'
            },
            restore_server_admin: {
              question: 'Do you want to restore server default settings?',
              info: 'All the data associated to this server will be reset.'
            },
            browsers: 'Sorry, the browser you are using cannot be supported by our application or it is an old version. To use the app, please select one of the supported browsers or update your browser.',
            firmware_updated: 'Email account successfully confirmed. Log in to access the platform.',
            remove_schedule: 'Do you want to remove the schedule permanently?',
            disable_permission_device: 'The DKN WServer must have at least one user'
          },
          title: {
            reset_password: 'Remember password',
            change_password: 'Change password',
            resend_confirmation: 'Send confirmation one more time',
            user_device_added: 'AC unit successfully created',
            user_device_updated: 'AC unit successfully updated',
            add_device: 'Add DKN WServer',
            server_data: 'Server data',
            remove_server: 'Remove server',
            restore_factory: 'Restore default server',
            remove_installation_confirm: 'Remove installation',
            remove_user_confirm: 'Remove user from installation',
            firmware_updated: 'Firmware updated',
            device_permissions: 'Permissions DKN WServer',
            installation_permissions: 'Permissions of the installation'
          }
        },
        servers: {
          no_results: 'Sorry, we did not find any server',
          tags: {
            servers: 'servers',
            results: 'results',
            page: 'Page',
            of: ' of ',
            update: 'Update'
          },
          'new': {
            add_servers: 'Add servers',
            'return': 'Return',
            from_file: 'From file',
            select_file: 'Select file',
            select_file2: 'Select a file',
            from_form: 'From form',
            success_add2: 'Servers',
            success_add_f2: 'successfully added',
            success_add1: 'Server',
            success_add_f1: 'successfully added',
            failure_add1: 'We couldn\'t add this server',
            failure_add2: 'We couldn\'t add these servers',
            failure_add_f2: 'servers',
            accept: 'Accept',
            success: {
              added: 'Server successfully added',
              added2: 'The server has been successfully registered on the platform'
            }
          },
          remove: {
            message: 'Server removed',
            confirmation_deleted: 'Server successfully removed'
          }
        },
        terms: {
          accept: 'I accept the ',
          legal_terms: 'Terms of Use',
          and: ' and the ',
          privacy: 'Privacy policy',
          publicity: 'I wish to receive commercial communications'
        },
        installation_relation_list: {
          title: 'Installations',
          no_installations_title: 'Welcome!',
          no_installations_info: 'Please add a server to your account for controlling your installation.',
          internal_error: 'Internal error',
          internal_error_message: 'We could not perform your action. Please try again later',
          actions: {
            edit: 'Edit',
            close: 'Close',
            add_device: 'Add DKN WServer'
          }
        },
        add_device: {
          name_placeholder: 'Name (kitchen, living room, bedroom)',
          mac_placeholder: 'MAC (12:AB:34:CD:45:F0)',
          pin_placeholder: 'PIN',
          choose_installation: 'Choose an installation',
          add_device: 'Data device'
        },
        add_installation: {
          add_installation: 'Add installation',
          name_placeholder: 'Name (house, apartment, office)',
          location_placeholder: 'Installation location',
          postal_code_placeholder: 'Post code',
          type: 'Installation type'
        },
        add_user_to_device: {
        },
        users: {
          title: 'Users',
          basic: 'basic',
          advanced: 'advanced'
        },
        admin_users: {
          title: 'USERS',
          email: 'Email',
          name: 'Name',
          results: 'Results',
          no_results: 'No results',
          page: 'Page',
          of: 'of',
          device_modal: {
            title: 'Accessible units by the user',
            no_devices: 'The user cannot access any AC unit',
            location: 'Location'
          }
        }
      },
      'de-AT': {
        faker: {
          address: {
            country: [
              'Ägypten',
              'Äquatorialguinea',
              'Äthiopien',
              'Österreich',
              'Afghanistan',
              'Albanien',
              'Algerien',
              'Amerikanisch-Samoa',
              'Amerikanische Jungferninseln',
              'Andorra',
              'Angola',
              'Anguilla',
              'Antarktis',
              'Antigua und Barbuda',
              'Argentinien',
              'Armenien',
              'Aruba',
              'Aserbaidschan',
              'Australien',
              'Bahamas',
              'Bahrain',
              'Bangladesch',
              'Barbados',
              'Belarus',
              'Belgien',
              'Belize',
              'Benin',
              'die Bermudas',
              'Bhutan',
              'Bolivien',
              'Bosnien und Herzegowina',
              'Botsuana',
              'Bouvetinsel',
              'Brasilien',
              'Britische Jungferninseln',
              'Britisches Territorium im Indischen Ozean',
              'Brunei Darussalam',
              'Bulgarien',
              'Burkina Faso',
              'Burundi',
              'Chile',
              'China',
              'Cookinseln',
              'Costa Rica',
              'Dänemark',
              'Demokratische Republik Kongo',
              'Demokratische Volksrepublik Korea',
              'Deutschland',
              'Dominica',
              'Dominikanische Republik',
              'Dschibuti',
              'Ecuador',
              'El Salvador',
              'Eritrea',
              'Estland',
              'Färöer',
              'Falklandinseln',
              'Fidschi',
              'Finnland',
              'Frankreich',
              'Französisch-Guayana',
              'Französisch-Polynesien',
              'Französische Gebiete im südlichen Indischen Ozean',
              'Gabun',
              'Gambia',
              'Georgien',
              'Ghana',
              'Gibraltar',
              'Grönland',
              'Grenada',
              'Griechenland',
              'Guadeloupe',
              'Guam',
              'Guatemala',
              'Guinea',
              'Guinea-Bissau',
              'Guyana',
              'Haiti',
              'Heard und McDonaldinseln',
              'Honduras',
              'Hongkong',
              'Indien',
              'Indonesien',
              'Irak',
              'Iran',
              'Irland',
              'Island',
              'Israel',
              'Italien',
              'Jamaika',
              'Japan',
              'Jemen',
              'Jordanien',
              'Jugoslawien',
              'Kaimaninseln',
              'Kambodscha',
              'Kamerun',
              'Kanada',
              'Kap Verde',
              'Kasachstan',
              'Katar',
              'Kenia',
              'Kirgisistan',
              'Kiribati',
              'Kleinere amerikanische Überseeinseln',
              'Kokosinseln',
              'Kolumbien',
              'Komoren',
              'Kongo',
              'Kroatien',
              'Kuba',
              'Kuwait',
              'Laos',
              'Lesotho',
              'Lettland',
              'Libanon',
              'Liberia',
              'Libyen',
              'Liechtenstein',
              'Litauen',
              'Luxemburg',
              'Macau',
              'Madagaskar',
              'Malawi',
              'Malaysia',
              'Malediven',
              'Mali',
              'Malta',
              'ehemalige jugoslawische Republik Mazedonien',
              'Marokko',
              'Marshallinseln',
              'Martinique',
              'Mauretanien',
              'Mauritius',
              'Mayotte',
              'Mexiko',
              'Mikronesien',
              'Monaco',
              'Mongolei',
              'Montserrat',
              'Mosambik',
              'Myanmar',
              'Nördliche Marianen',
              'Namibia',
              'Nauru',
              'Nepal',
              'Neukaledonien',
              'Neuseeland',
              'Nicaragua',
              'Niederländische Antillen',
              'Niederlande',
              'Niger',
              'Nigeria',
              'Niue',
              'Norfolkinsel',
              'Norwegen',
              'Oman',
              'Osttimor',
              'Pakistan',
              'Palau',
              'Panama',
              'Papua-Neuguinea',
              'Paraguay',
              'Peru',
              'Philippinen',
              'Pitcairninseln',
              'Polen',
              'Portugal',
              'Puerto Rico',
              'Réunion',
              'Republik Korea',
              'Republik Moldau',
              'Ruanda',
              'Rumänien',
              'Russische Föderation',
              'São Tomé und Príncipe',
              'Südafrika',
              'Südgeorgien und Südliche Sandwichinseln',
              'Salomonen',
              'Sambia',
              'Samoa',
              'San Marino',
              'Saudi-Arabien',
              'Schweden',
              'Schweiz',
              'Senegal',
              'Seychellen',
              'Sierra Leone',
              'Simbabwe',
              'Singapur',
              'Slowakei',
              'Slowenien',
              'Somalien',
              'Spanien',
              'Sri Lanka',
              'St. Helena',
              'St. Kitts und Nevis',
              'St. Lucia',
              'St. Pierre und Miquelon',
              'St. Vincent und die Grenadinen',
              'Sudan',
              'Surinam',
              'Svalbard und Jan Mayen',
              'Swasiland',
              'Syrien',
              'Türkei',
              'Tadschikistan',
              'Taiwan',
              'Tansania',
              'Thailand',
              'Togo',
              'Tokelau',
              'Tonga',
              'Trinidad und Tobago',
              'Tschad',
              'Tschechische Republik',
              'Tunesien',
              'Turkmenistan',
              'Turks- und Caicosinseln',
              'Tuvalu',
              'Uganda',
              'Ukraine',
              'Ungarn',
              'Uruguay',
              'Usbekistan',
              'Vanuatu',
              'Vatikanstadt',
              'Venezuela',
              'Vereinigte Arabische Emirate',
              'Vereinigte Staaten',
              'Vereinigtes Königreich',
              'Vietnam',
              'Wallis und Futuna',
              'Weihnachtsinsel',
              'Westsahara',
              'Zentralafrikanische Republik',
              'Zypern'
            ],
            street_root: [
              'Ahorn',
              'Ahorngasse (St. Andrä)',
              'Alleestraße (Poysbrunn)',
              'Alpenlandstraße',
              'Alte Poststraße',
              'Alte Ufergasse',
              'Am Kronawett (Hagenbrunn)',
              'Am Mühlwasser',
              'Am Rebenhang',
              'Am Sternweg',
              'Anton Wildgans-Straße',
              'Auer-von-Welsbach-Weg',
              'Auf der Stift',
              'Aufeldgasse',
              'Bahngasse',
              'Bahnhofstraße',
              'Bahnstraße (Gerhaus)',
              'Basteigasse',
              'Berggasse',
              'Bergstraße',
              'Birkenweg',
              'Blasiussteig',
              'Blattur',
              'Bruderhofgasse',
              'Brunnelligasse',
              'Bühelweg',
              'Darnautgasse',
              'Donaugasse',
              'Dorfplatz (Haselbach)',
              'Dr.-Oberreiter-Straße',
              'Dr.Karl Holoubek-Str.',
              'Drautal Bundesstraße',
              'Dürnrohrer Straße',
              'Ebenthalerstraße',
              'Eckgrabenweg',
              'Erlenstraße',
              'Erlenweg',
              'Eschenweg',
              'Etrichgasse',
              'Fassergasse',
              'Feichteggerwiese',
              'Feld-Weg',
              'Feldgasse',
              'Feldstapfe',
              'Fischpointweg',
              'Flachbergstraße',
              'Flurweg',
              'Franz Schubert-Gasse',
              'Franz-Schneeweiß-Weg',
              'Franz-von-Assisi-Straße',
              'Fritz-Pregl-Straße',
              'Fuchsgrubenweg',
              'Födlerweg',
              'Föhrenweg',
              'Fünfhaus (Paasdorf)',
              'Gabelsbergerstraße',
              'Gartenstraße',
              'Geigen',
              'Geigergasse',
              'Gemeindeaugasse',
              'Gemeindeplatz',
              'Georg-Aichinger-Straße',
              'Glanfeldbachweg',
              'Graben (Burgauberg)',
              'Grub',
              'Gröretgasse',
              'Grünbach',
              'Gösting',
              'Hainschwang',
              'Hans-Mauracher-Straße',
              'Hart',
              'Teichstraße',
              'Hauptplatz',
              'Hauptstraße',
              'Heideweg',
              'Heinrich Landauer Gasse',
              'Helenengasse',
              'Hermann von Gilmweg',
              'Hermann-Löns-Gasse',
              'Herminengasse',
              'Hernstorferstraße',
              'Hirsdorf',
              'Hochfeistritz',
              'Hochhaus Neue Donau',
              'Hof',
              'Hussovits Gasse',
              'Höggen',
              'Hütten',
              'Janzgasse',
              'Jochriemgutstraße',
              'Johann-Strauß-Gasse',
              'Julius-Raab-Straße',
              'Kahlenberger Straße',
              'Karl Kraft-Straße',
              'Kegelprielstraße',
              'Keltenberg-Eponaweg',
              'Kennedybrücke',
              'Kerpelystraße',
              'Kindergartenstraße',
              'Kinderheimgasse',
              'Kirchenplatz',
              'Kirchweg',
              'Klagenfurter Straße',
              'Klamm',
              'Kleinbaumgarten',
              'Klingergasse',
              'Koloniestraße',
              'Konrad-Duden-Gasse',
              'Krankenhausstraße',
              'Kubinstraße',
              'Köhldorfergasse',
              'Lackenweg',
              'Lange Mekotte',
              'Leifling',
              'Leopold Frank-Straße (Pellendorf)',
              'Lerchengasse (Pirka)',
              'Lichtensternsiedlung V',
              'Lindenhofstraße',
              'Lindenweg',
              'Luegstraße',
              'Maierhof',
              'Malerweg',
              'Mitterweg',
              'Mittlere Hauptstraße',
              'Moosbachgasse',
              'Morettigasse',
              'Musikpavillon Riezlern',
              'Mühlboden',
              'Mühle',
              'Mühlenweg',
              'Neustiftgasse',
              'Niederegg',
              'Niedergams',
              'Nordwestbahnbrücke',
              'Oberbödenalm',
              'Obere Berggasse',
              'Oedt',
              'Am Färberberg',
              'Ottogasse',
              'Paul Peters-Gasse',
              'Perspektivstraße',
              'Poppichl',
              'Privatweg',
              'Prixgasse',
              'Pyhra',
              'Radetzkystraße',
              'Raiden',
              'Reichensteinstraße',
              'Reitbauernstraße',
              'Reiterweg',
              'Reitschulgasse',
              'Ringweg',
              'Rupertistraße',
              'Römerstraße',
              'Römerweg',
              'Sackgasse',
              'Schaunbergerstraße',
              'Schloßweg',
              'Schulgasse (Langeck)',
              'Schönholdsiedlung',
              'Seeblick',
              'Seestraße',
              'Semriacherstraße',
              'Simling',
              'Sipbachzeller Straße',
              'Sonnenweg',
              'Spargelfeldgasse',
              'Spiesmayrweg',
              'Sportplatzstraße',
              'St.Ulrich',
              'Steilmannstraße',
              'Steingrüneredt',
              'Strassfeld',
              'Straßerau',
              'Stöpflweg',
              'Stüra',
              'Taferngasse',
              'Tennweg',
              'Thomas Koschat-Gasse',
              'Tiroler Straße',
              'Torrogasse',
              'Uferstraße (Schwarzau am Steinfeld)',
              'Unterdörfl',
              'Unterer Sonnrainweg',
              'Verwaltersiedlung',
              'Waldhang',
              'Wasen',
              'Weidenstraße',
              'Weiherweg',
              'Wettsteingasse',
              'Wiener Straße',
              'Windisch',
              'Zebragasse',
              'Zellerstraße',
              'Ziehrerstraße',
              'Zulechnerweg',
              'Zwergjoch',
              'Ötzbruck'
            ],
            building_number: [
              '###',
              '##',
              '#',
              '##a',
              '##b',
              '##c'
            ],
            secondary_address: [
              'Apt. ###',
              'Zimmer ###',
              '# OG'
            ],
            postcode: [
              '####'
            ],
            state: [
              'Burgenland',
              'Kärnten',
              'Niederösterreich',
              'Oberösterreich',
              'Salzburg',
              'Steiermark',
              'Tirol',
              'Vorarlberg',
              'Wien'
            ],
            state_abbr: [
              'Bgld.',
              'Ktn.',
              'NÖ',
              'OÖ',
              'Sbg.',
              'Stmk.',
              'T',
              'Vbg.',
              'W'
            ],
            city_name: [
              'Aigen im Mühlkreis',
              'Allerheiligen bei Wildon',
              'Altenfelden',
              'Arriach',
              'Axams',
              'Baumgartenberg',
              'Bergern im Dunkelsteinerwald',
              'Berndorf bei Salzburg',
              'Bregenz',
              'Breitenbach am Inn',
              'Deutsch-Wagram',
              'Dienten am Hochkönig',
              'Dietach',
              'Dornbirn',
              'Dürnkrut',
              'Eben im Pongau',
              'Ebenthal in Kärnten',
              'Eichgraben',
              'Eisenstadt',
              'Ellmau',
              'Feistritz am Wechsel',
              'Finkenberg',
              'Fiss',
              'Frantschach-St. Gertraud',
              'Fritzens',
              'Gams bei Hieflau',
              'Geiersberg',
              'Graz',
              'Großhöflein',
              'Gößnitz',
              'Hartl',
              'Hausleiten',
              'Herzogenburg',
              'Hinterhornbach',
              'Hochwolkersdorf',
              'Ilz',
              'Ilztal',
              'Innerbraz',
              'Innsbruck',
              'Itter',
              'Jagerberg',
              'Jeging',
              'Johnsbach',
              'Johnsdorf-Brunn',
              'Jungholz',
              'Kirchdorf am Inn',
              'Klagenfurt',
              'Kottes-Purk',
              'Krumau am Kamp',
              'Krumbach',
              'Lavamünd',
              'Lech',
              'Linz',
              'Ludesch',
              'Lödersdorf',
              'Marbach an der Donau',
              'Mattsee',
              'Mautern an der Donau',
              'Mauterndorf',
              'Mitterbach am Erlaufsee',
              'Neudorf bei Passail',
              'Neudorf bei Staatz',
              'Neukirchen an der Enknach',
              'Neustift an der Lafnitz',
              'Niederleis',
              'Oberndorf in Tirol',
              'Oberstorcha',
              'Oberwaltersdorf',
              'Oed-Oehling',
              'Ort im Innkreis',
              'Pilgersdorf',
              'Pitschgau',
              'Pollham',
              'Preitenegg',
              'Purbach am Neusiedler See',
              'Rabenwald',
              'Raiding',
              'Rastenfeld',
              'Ratten',
              'Rettenegg',
              'Salzburg',
              'Sankt Johann im Saggautal',
              'St. Peter am Kammersberg',
              'St. Pölten',
              'St. Veit an der Glan',
              'Taxenbach',
              'Tragwein',
              'Trebesing',
              'Trieben',
              'Turnau',
              'Ungerdorf',
              'Unterauersbach',
              'Unterstinkenbrunn',
              'Untertilliach',
              'Uttendorf',
              'Vals',
              'Velden am Wörther See',
              'Viehhofen',
              'Villach',
              'Vitis',
              'Waidhofen an der Thaya',
              'Waldkirchen am Wesen',
              'Weißkirchen an der Traun',
              'Wien',
              'Wimpassing im Schwarzatale',
              'Ybbs an der Donau',
              'Ybbsitz',
              'Yspertal',
              'Zeillern',
              'Zell am Pettenfirst',
              'Zell an der Pram',
              'Zerlach',
              'Zwölfaxing',
              'Öblarn',
              'Übelbach',
              'Überackern',
              'Übersaxen',
              'Übersbach'
            ],
            city: [
              '#{city_name}'
            ],
            street_name: [
              '#{street_root}'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            default_country: [
              'Österreich'
            ]
          },
          company: {
            suffix: [
              'GmbH',
              'AG',
              'Gruppe',
              'KG',
              'GmbH & Co. KG',
              'UG',
              'OHG'
            ],
            legal_form: [
              'GmbH',
              'AG',
              'Gruppe',
              'KG',
              'GmbH & Co. KG',
              'UG',
              'OHG'
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} und #{Name.last_name}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'com',
              'info',
              'name',
              'net',
              'org',
              'de',
              'ch',
              'at'
            ]
          },
          name: {
            first_name: [
              'Aaron',
              'Abdul',
              'Abdullah',
              'Adam',
              'Adrian',
              'Adriano',
              'Ahmad',
              'Ahmed',
              'Ahmet',
              'Alan',
              'Albert',
              'Alessandro',
              'Alessio',
              'Alex',
              'Alexander',
              'Alfred',
              'Ali',
              'Amar',
              'Amir',
              'Amon',
              'Andre',
              'Andreas',
              'Andrew',
              'Angelo',
              'Ansgar',
              'Anthony',
              'Anton',
              'Antonio',
              'Arda',
              'Arian',
              'Armin',
              'Arne',
              'Arno',
              'Arthur',
              'Artur',
              'Arved',
              'Arvid',
              'Ayman',
              'Baran',
              'Baris',
              'Bastian',
              'Batuhan',
              'Bela',
              'Ben',
              'Benedikt',
              'Benjamin',
              'Bennet',
              'Bennett',
              'Benno',
              'Bent',
              'Berat',
              'Berkay',
              'Bernd',
              'Bilal',
              'Bjarne',
              'Björn',
              'Bo',
              'Boris',
              'Brandon',
              'Brian',
              'Bruno',
              'Bryan',
              'Burak',
              'Calvin',
              'Can',
              'Carl',
              'Carlo',
              'Carlos',
              'Caspar',
              'Cedric',
              'Cedrik',
              'Cem',
              'Charlie',
              'Chris',
              'Christian',
              'Christiano',
              'Christoph',
              'Christopher',
              'Claas',
              'Clemens',
              'Colin',
              'Collin',
              'Conner',
              'Connor',
              'Constantin',
              'Corvin',
              'Curt',
              'Damian',
              'Damien',
              'Daniel',
              'Danilo',
              'Danny',
              'Darian',
              'Dario',
              'Darius',
              'Darren',
              'David',
              'Davide',
              'Davin',
              'Dean',
              'Deniz',
              'Dennis',
              'Denny',
              'Devin',
              'Diego',
              'Dion',
              'Domenic',
              'Domenik',
              'Dominic',
              'Dominik',
              'Dorian',
              'Dustin',
              'Dylan',
              'Ecrin',
              'Eddi',
              'Eddy',
              'Edgar',
              'Edwin',
              'Efe',
              'Ege',
              'Elia',
              'Eliah',
              'Elias',
              'Elijah',
              'Emanuel',
              'Emil',
              'Emilian',
              'Emilio',
              'Emir',
              'Emirhan',
              'Emre',
              'Enes',
              'Enno',
              'Enrico',
              'Eren',
              'Eric',
              'Erik',
              'Etienne',
              'Fabian',
              'Fabien',
              'Fabio',
              'Fabrice',
              'Falk',
              'Felix',
              'Ferdinand',
              'Fiete',
              'Filip',
              'Finlay',
              'Finley',
              'Finn',
              'Finnley',
              'Florian',
              'Francesco',
              'Franz',
              'Frederic',
              'Frederick',
              'Frederik',
              'Friedrich',
              'Fritz',
              'Furkan',
              'Fynn',
              'Gabriel',
              'Georg',
              'Gerrit',
              'Gian',
              'Gianluca',
              'Gino',
              'Giuliano',
              'Giuseppe',
              'Gregor',
              'Gustav',
              'Hagen',
              'Hamza',
              'Hannes',
              'Hanno',
              'Hans',
              'Hasan',
              'Hassan',
              'Hauke',
              'Hendrik',
              'Hennes',
              'Henning',
              'Henri',
              'Henrick',
              'Henrik',
              'Henry',
              'Hugo',
              'Hussein',
              'Ian',
              'Ibrahim',
              'Ilias',
              'Ilja',
              'Ilyas',
              'Immanuel',
              'Ismael',
              'Ismail',
              'Ivan',
              'Iven',
              'Jack',
              'Jacob',
              'Jaden',
              'Jakob',
              'Jamal',
              'James',
              'Jamie',
              'Jan',
              'Janek',
              'Janis',
              'Janne',
              'Jannek',
              'Jannes',
              'Jannik',
              'Jannis',
              'Jano',
              'Janosch',
              'Jared',
              'Jari',
              'Jarne',
              'Jarno',
              'Jaron',
              'Jason',
              'Jasper',
              'Jay',
              'Jayden',
              'Jayson',
              'Jean',
              'Jens',
              'Jeremias',
              'Jeremie',
              'Jeremy',
              'Jermaine',
              'Jerome',
              'Jesper',
              'Jesse',
              'Jim',
              'Jimmy',
              'Joe',
              'Joel',
              'Joey',
              'Johann',
              'Johannes',
              'John',
              'Johnny',
              'Jon',
              'Jona',
              'Jonah',
              'Jonas',
              'Jonathan',
              'Jonte',
              'Joost',
              'Jordan',
              'Joris',
              'Joscha',
              'Joschua',
              'Josef',
              'Joseph',
              'Josh',
              'Joshua',
              'Josua',
              'Juan',
              'Julian',
              'Julien',
              'Julius',
              'Juri',
              'Justin',
              'Justus',
              'Kaan',
              'Kai',
              'Kalle',
              'Karim',
              'Karl',
              'Karlo',
              'Kay',
              'Keanu',
              'Kenan',
              'Kenny',
              'Keno',
              'Kerem',
              'Kerim',
              'Kevin',
              'Kian',
              'Kilian',
              'Kim',
              'Kimi',
              'Kjell',
              'Klaas',
              'Klemens',
              'Konrad',
              'Konstantin',
              'Koray',
              'Korbinian',
              'Kurt',
              'Lars',
              'Lasse',
              'Laurence',
              'Laurens',
              'Laurenz',
              'Laurin',
              'Lean',
              'Leander',
              'Leandro',
              'Leif',
              'Len',
              'Lenn',
              'Lennard',
              'Lennart',
              'Lennert',
              'Lennie',
              'Lennox',
              'Lenny',
              'Leo',
              'Leon',
              'Leonard',
              'Leonardo',
              'Leonhard',
              'Leonidas',
              'Leopold',
              'Leroy',
              'Levent',
              'Levi',
              'Levin',
              'Lewin',
              'Lewis',
              'Liam',
              'Lian',
              'Lias',
              'Lino',
              'Linus',
              'Lio',
              'Lion',
              'Lionel',
              'Logan',
              'Lorenz',
              'Lorenzo',
              'Loris',
              'Louis',
              'Luan',
              'Luc',
              'Luca',
              'Lucas',
              'Lucian',
              'Lucien',
              'Ludwig',
              'Luis',
              'Luiz',
              'Luk',
              'Luka',
              'Lukas',
              'Luke',
              'Lutz',
              'Maddox',
              'Mads',
              'Magnus',
              'Maik',
              'Maksim',
              'Malik',
              'Malte',
              'Manuel',
              'Marc',
              'Marcel',
              'Marco',
              'Marcus',
              'Marek',
              'Marian',
              'Mario',
              'Marius',
              'Mark',
              'Marko',
              'Markus',
              'Marlo',
              'Marlon',
              'Marten',
              'Martin',
              'Marvin',
              'Marwin',
              'Mateo',
              'Mathis',
              'Matis',
              'Mats',
              'Matteo',
              'Mattes',
              'Matthias',
              'Matthis',
              'Matti',
              'Mattis',
              'Maurice',
              'Max',
              'Maxim',
              'Maximilian',
              'Mehmet',
              'Meik',
              'Melvin',
              'Merlin',
              'Mert',
              'Michael',
              'Michel',
              'Mick',
              'Miguel',
              'Mika',
              'Mikail',
              'Mike',
              'Milan',
              'Milo',
              'Mio',
              'Mirac',
              'Mirco',
              'Mirko',
              'Mohamed',
              'Mohammad',
              'Mohammed',
              'Moritz',
              'Morten',
              'Muhammed',
              'Murat',
              'Mustafa',
              'Nathan',
              'Nathanael',
              'Nelson',
              'Neo',
              'Nevio',
              'Nick',
              'Niclas',
              'Nico',
              'Nicolai',
              'Nicolas',
              'Niels',
              'Nikita',
              'Niklas',
              'Niko',
              'Nikolai',
              'Nikolas',
              'Nils',
              'Nino',
              'Noah',
              'Noel',
              'Norman',
              'Odin',
              'Oke',
              'Ole',
              'Oliver',
              'Omar',
              'Onur',
              'Oscar',
              'Oskar',
              'Pascal',
              'Patrice',
              'Patrick',
              'Paul',
              'Peer',
              'Pepe',
              'Peter',
              'Phil',
              'Philip',
              'Philipp',
              'Pierre',
              'Piet',
              'Pit',
              'Pius',
              'Quentin',
              'Quirin',
              'Rafael',
              'Raik',
              'Ramon',
              'Raphael',
              'Rasmus',
              'Raul',
              'Rayan',
              'René',
              'Ricardo',
              'Riccardo',
              'Richard',
              'Rick',
              'Rico',
              'Robert',
              'Robin',
              'Rocco',
              'Roman',
              'Romeo',
              'Ron',
              'Ruben',
              'Ryan',
              'Said',
              'Salih',
              'Sam',
              'Sami',
              'Sammy',
              'Samuel',
              'Sandro',
              'Santino',
              'Sascha',
              'Sean',
              'Sebastian',
              'Selim',
              'Semih',
              'Shawn',
              'Silas',
              'Simeon',
              'Simon',
              'Sinan',
              'Sky',
              'Stefan',
              'Steffen',
              'Stephan',
              'Steve',
              'Steven',
              'Sven',
              'Sönke',
              'Sören',
              'Taha',
              'Tamino',
              'Tammo',
              'Tarik',
              'Tayler',
              'Taylor',
              'Teo',
              'Theo',
              'Theodor',
              'Thies',
              'Thilo',
              'Thomas',
              'Thorben',
              'Thore',
              'Thorge',
              'Tiago',
              'Til',
              'Till',
              'Tillmann',
              'Tim',
              'Timm',
              'Timo',
              'Timon',
              'Timothy',
              'Tino',
              'Titus',
              'Tizian',
              'Tjark',
              'Tobias',
              'Tom',
              'Tommy',
              'Toni',
              'Tony',
              'Torben',
              'Tore',
              'Tristan',
              'Tyler',
              'Tyron',
              'Umut',
              'Valentin',
              'Valentino',
              'Veit',
              'Victor',
              'Viktor',
              'Vin',
              'Vincent',
              'Vito',
              'Vitus',
              'Wilhelm',
              'Willi',
              'William',
              'Willy',
              'Xaver',
              'Yannic',
              'Yannick',
              'Yannik',
              'Yannis',
              'Yasin',
              'Youssef',
              'Yunus',
              'Yusuf',
              'Yven',
              'Yves',
              'Ömer',
              'Aaliyah',
              'Abby',
              'Abigail',
              'Ada',
              'Adelina',
              'Adriana',
              'Aileen',
              'Aimee',
              'Alana',
              'Alea',
              'Alena',
              'Alessa',
              'Alessia',
              'Alexa',
              'Alexandra',
              'Alexia',
              'Alexis',
              'Aleyna',
              'Alia',
              'Alica',
              'Alice',
              'Alicia',
              'Alina',
              'Alisa',
              'Alisha',
              'Alissa',
              'Aliya',
              'Aliyah',
              'Allegra',
              'Alma',
              'Alyssa',
              'Amalia',
              'Amanda',
              'Amelia',
              'Amelie',
              'Amina',
              'Amira',
              'Amy',
              'Ana',
              'Anabel',
              'Anastasia',
              'Andrea',
              'Angela',
              'Angelina',
              'Angelique',
              'Anja',
              'Ann',
              'Anna',
              'Annabel',
              'Annabell',
              'Annabelle',
              'Annalena',
              'Anne',
              'Anneke',
              'Annelie',
              'Annemarie',
              'Anni',
              'Annie',
              'Annika',
              'Anny',
              'Anouk',
              'Antonia',
              'Arda',
              'Ariana',
              'Ariane',
              'Arwen',
              'Ashley',
              'Asya',
              'Aurelia',
              'Aurora',
              'Ava',
              'Ayleen',
              'Aylin',
              'Ayse',
              'Azra',
              'Betty',
              'Bianca',
              'Bianka',
              'Caitlin',
              'Cara',
              'Carina',
              'Carla',
              'Carlotta',
              'Carmen',
              'Carolin',
              'Carolina',
              'Caroline',
              'Cassandra',
              'Catharina',
              'Catrin',
              'Cecile',
              'Cecilia',
              'Celia',
              'Celina',
              'Celine',
              'Ceyda',
              'Ceylin',
              'Chantal',
              'Charleen',
              'Charlotta',
              'Charlotte',
              'Chayenne',
              'Cheyenne',
              'Chiara',
              'Christin',
              'Christina',
              'Cindy',
              'Claire',
              'Clara',
              'Clarissa',
              'Colleen',
              'Collien',
              'Cora',
              'Corinna',
              'Cosima',
              'Dana',
              'Daniela',
              'Daria',
              'Darleen',
              'Defne',
              'Delia',
              'Denise',
              'Diana',
              'Dilara',
              'Dina',
              'Dorothea',
              'Ecrin',
              'Eda',
              'Eileen',
              'Ela',
              'Elaine',
              'Elanur',
              'Elea',
              'Elena',
              'Eleni',
              'Eleonora',
              'Eliana',
              'Elif',
              'Elina',
              'Elisa',
              'Elisabeth',
              'Ella',
              'Ellen',
              'Elli',
              'Elly',
              'Elsa',
              'Emelie',
              'Emely',
              'Emilia',
              'Emilie',
              'Emily',
              'Emma',
              'Emmely',
              'Emmi',
              'Emmy',
              'Enie',
              'Enna',
              'Enya',
              'Esma',
              'Estelle',
              'Esther',
              'Eva',
              'Evelin',
              'Evelina',
              'Eveline',
              'Evelyn',
              'Fabienne',
              'Fatima',
              'Fatma',
              'Felicia',
              'Felicitas',
              'Felina',
              'Femke',
              'Fenja',
              'Fine',
              'Finia',
              'Finja',
              'Finnja',
              'Fiona',
              'Flora',
              'Florentine',
              'Francesca',
              'Franka',
              'Franziska',
              'Frederike',
              'Freya',
              'Frida',
              'Frieda',
              'Friederike',
              'Giada',
              'Gina',
              'Giulia',
              'Giuliana',
              'Greta',
              'Hailey',
              'Hana',
              'Hanna',
              'Hannah',
              'Heidi',
              'Helen',
              'Helena',
              'Helene',
              'Helin',
              'Henriette',
              'Henrike',
              'Hermine',
              'Ida',
              'Ilayda',
              'Imke',
              'Ina',
              'Ines',
              'Inga',
              'Inka',
              'Irem',
              'Isa',
              'Isabel',
              'Isabell',
              'Isabella',
              'Isabelle',
              'Ivonne',
              'Jacqueline',
              'Jamie',
              'Jamila',
              'Jana',
              'Jane',
              'Janin',
              'Janina',
              'Janine',
              'Janna',
              'Janne',
              'Jara',
              'Jasmin',
              'Jasmina',
              'Jasmine',
              'Jella',
              'Jenna',
              'Jennifer',
              'Jenny',
              'Jessica',
              'Jessy',
              'Jette',
              'Jil',
              'Jill',
              'Joana',
              'Joanna',
              'Joelina',
              'Joeline',
              'Joelle',
              'Johanna',
              'Joleen',
              'Jolie',
              'Jolien',
              'Jolin',
              'Jolina',
              'Joline',
              'Jona',
              'Jonah',
              'Jonna',
              'Josefin',
              'Josefine',
              'Josephin',
              'Josephine',
              'Josie',
              'Josy',
              'Joy',
              'Joyce',
              'Judith',
              'Judy',
              'Jule',
              'Julia',
              'Juliana',
              'Juliane',
              'Julie',
              'Julienne',
              'Julika',
              'Julina',
              'Juna',
              'Justine',
              'Kaja',
              'Karina',
              'Karla',
              'Karlotta',
              'Karolina',
              'Karoline',
              'Kassandra',
              'Katarina',
              'Katharina',
              'Kathrin',
              'Katja',
              'Katrin',
              'Kaya',
              'Kayra',
              'Kiana',
              'Kiara',
              'Kim',
              'Kimberley',
              'Kimberly',
              'Kira',
              'Klara',
              'Korinna',
              'Kristin',
              'Kyra',
              'Laila',
              'Lana',
              'Lara',
              'Larissa',
              'Laura',
              'Laureen',
              'Lavinia',
              'Lea',
              'Leah',
              'Leana',
              'Leandra',
              'Leann',
              'Lee',
              'Leila',
              'Lena',
              'Lene',
              'Leni',
              'Lenia',
              'Lenja',
              'Lenya',
              'Leona',
              'Leoni',
              'Leonie',
              'Leonora',
              'Leticia',
              'Letizia',
              'Levke',
              'Leyla',
              'Lia',
              'Liah',
              'Liana',
              'Lili',
              'Lilia',
              'Lilian',
              'Liliana',
              'Lilith',
              'Lilli',
              'Lillian',
              'Lilly',
              'Lily',
              'Lina',
              'Linda',
              'Lindsay',
              'Line',
              'Linn',
              'Linnea',
              'Lisa',
              'Lisann',
              'Lisanne',
              'Liv',
              'Livia',
              'Liz',
              'Lola',
              'Loreen',
              'Lorena',
              'Lotta',
              'Lotte',
              'Louisa',
              'Louise',
              'Luana',
              'Luca',
              'Lucia',
              'Lucie',
              'Lucienne',
              'Lucy',
              'Luisa',
              'Luise',
              'Luka',
              'Luna',
              'Luzie',
              'Lya',
              'Lydia',
              'Lyn',
              'Lynn',
              'Madeleine',
              'Madita',
              'Madleen',
              'Madlen',
              'Magdalena',
              'Maike',
              'Mailin',
              'Maira',
              'Maja',
              'Malena',
              'Malia',
              'Malin',
              'Malina',
              'Mandy',
              'Mara',
              'Marah',
              'Mareike',
              'Maren',
              'Maria',
              'Mariam',
              'Marie',
              'Marieke',
              'Mariella',
              'Marika',
              'Marina',
              'Marisa',
              'Marissa',
              'Marit',
              'Marla',
              'Marleen',
              'Marlen',
              'Marlena',
              'Marlene',
              'Marta',
              'Martha',
              'Mary',
              'Maryam',
              'Mathilda',
              'Mathilde',
              'Matilda',
              'Maxi',
              'Maxima',
              'Maxine',
              'Maya',
              'Mayra',
              'Medina',
              'Medine',
              'Meike',
              'Melanie',
              'Melek',
              'Melike',
              'Melina',
              'Melinda',
              'Melis',
              'Melisa',
              'Melissa',
              'Merle',
              'Merve',
              'Meryem',
              'Mette',
              'Mia',
              'Michaela',
              'Michelle',
              'Mieke',
              'Mila',
              'Milana',
              'Milena',
              'Milla',
              'Mina',
              'Mira',
              'Miray',
              'Miriam',
              'Mirja',
              'Mona',
              'Monique',
              'Nadine',
              'Nadja',
              'Naemi',
              'Nancy',
              'Naomi',
              'Natalia',
              'Natalie',
              'Nathalie',
              'Neele',
              'Nela',
              'Nele',
              'Nelli',
              'Nelly',
              'Nia',
              'Nicole',
              'Nika',
              'Nike',
              'Nikita',
              'Nila',
              'Nina',
              'Nisa',
              'Noemi',
              'Nora',
              'Olivia',
              'Patricia',
              'Patrizia',
              'Paula',
              'Paulina',
              'Pauline',
              'Penelope',
              'Philine',
              'Phoebe',
              'Pia',
              'Rahel',
              'Rania',
              'Rebecca',
              'Rebekka',
              'Riana',
              'Rieke',
              'Rike',
              'Romina',
              'Romy',
              'Ronja',
              'Rosa',
              'Rosalie',
              'Ruby',
              'Sabrina',
              'Sahra',
              'Sally',
              'Salome',
              'Samantha',
              'Samia',
              'Samira',
              'Sandra',
              'Sandy',
              'Sanja',
              'Saphira',
              'Sara',
              'Sarah',
              'Saskia',
              'Selin',
              'Selina',
              'Selma',
              'Sena',
              'Sidney',
              'Sienna',
              'Silja',
              'Sina',
              'Sinja',
              'Smilla',
              'Sofia',
              'Sofie',
              'Sonja',
              'Sophia',
              'Sophie',
              'Soraya',
              'Stefanie',
              'Stella',
              'Stephanie',
              'Stina',
              'Sude',
              'Summer',
              'Susanne',
              'Svea',
              'Svenja',
              'Sydney',
              'Tabea',
              'Talea',
              'Talia',
              'Tamara',
              'Tamia',
              'Tamina',
              'Tanja',
              'Tara',
              'Tarja',
              'Teresa',
              'Tessa',
              'Thalea',
              'Thalia',
              'Thea',
              'Theresa',
              'Tia',
              'Tina',
              'Tomke',
              'Tuana',
              'Valentina',
              'Valeria',
              'Valerie',
              'Vanessa',
              'Vera',
              'Veronika',
              'Victoria',
              'Viktoria',
              'Viola',
              'Vivian',
              'Vivien',
              'Vivienne',
              'Wibke',
              'Wiebke',
              'Xenia',
              'Yara',
              'Yaren',
              'Yasmin',
              'Ylvi',
              'Ylvie',
              'Yvonne',
              'Zara',
              'Zehra',
              'Zeynep',
              'Zoe',
              'Zoey',
              'Zoé'
            ],
            last_name: [
              'Abel',
              'Abicht',
              'Abraham',
              'Abramovic',
              'Abt',
              'Achilles',
              'Achkinadze',
              'Ackermann',
              'Adam',
              'Adams',
              'Ade',
              'Agostini',
              'Ahlke',
              'Ahrenberg',
              'Ahrens',
              'Aigner',
              'Albert',
              'Albrecht',
              'Alexa',
              'Alexander',
              'Alizadeh',
              'Allgeyer',
              'Amann',
              'Amberg',
              'Anding',
              'Anggreny',
              'Apitz',
              'Arendt',
              'Arens',
              'Arndt',
              'Aryee',
              'Aschenbroich',
              'Assmus',
              'Astafei',
              'Auer',
              'Axmann',
              'Baarck',
              'Bachmann',
              'Badane',
              'Bader',
              'Baganz',
              'Bahl',
              'Bak',
              'Balcer',
              'Balck',
              'Balkow',
              'Balnuweit',
              'Balzer',
              'Banse',
              'Barr',
              'Bartels',
              'Barth',
              'Barylla',
              'Baseda',
              'Battke',
              'Bauer',
              'Bauermeister',
              'Baumann',
              'Baumeister',
              'Bauschinger',
              'Bauschke',
              'Bayer',
              'Beavogui',
              'Beck',
              'Beckel',
              'Becker',
              'Beckmann',
              'Bedewitz',
              'Beele',
              'Beer',
              'Beggerow',
              'Beh',
              'Behr',
              'Behrenbruch',
              'Belz',
              'Bender',
              'Benecke',
              'Benner',
              'Benninger',
              'Benzing',
              'Berends',
              'Berger',
              'Berner',
              'Berning',
              'Bertenbreiter',
              'Best',
              'Bethke',
              'Betz',
              'Beushausen',
              'Beutelspacher',
              'Beyer',
              'Biba',
              'Bichler',
              'Bickel',
              'Biedermann',
              'Bieler',
              'Bielert',
              'Bienasch',
              'Bienias',
              'Biesenbach',
              'Bigdeli',
              'Birkemeyer',
              'Bittner',
              'Blank',
              'Blaschek',
              'Blassneck',
              'Bloch',
              'Blochwitz',
              'Blockhaus',
              'Blum',
              'Blume',
              'Bock',
              'Bode',
              'Bogdashin',
              'Bogenrieder',
              'Bohge',
              'Bolm',
              'Borgschulze',
              'Bork',
              'Bormann',
              'Bornscheuer',
              'Borrmann',
              'Borsch',
              'Boruschewski',
              'Bos',
              'Bosler',
              'Bourrouag',
              'Bouschen',
              'Boxhammer',
              'Boyde',
              'Bozsik',
              'Brand',
              'Brandenburg',
              'Brandis',
              'Brandt',
              'Brauer',
              'Braun',
              'Brehmer',
              'Breitenstein',
              'Bremer',
              'Bremser',
              'Brenner',
              'Brettschneider',
              'Breu',
              'Breuer',
              'Briesenick',
              'Bringmann',
              'Brinkmann',
              'Brix',
              'Broening',
              'Brosch',
              'Bruckmann',
              'Bruder',
              'Bruhns',
              'Brunner',
              'Bruns',
              'Bräutigam',
              'Brömme',
              'Brüggmann',
              'Buchholz',
              'Buchrucker',
              'Buder',
              'Bultmann',
              'Bunjes',
              'Burger',
              'Burghagen',
              'Burkhard',
              'Burkhardt',
              'Burmeister',
              'Busch',
              'Buschbaum',
              'Busemann',
              'Buss',
              'Busse',
              'Bussmann',
              'Byrd',
              'Bäcker',
              'Böhm',
              'Bönisch',
              'Börgeling',
              'Börner',
              'Böttner',
              'Büchele',
              'Bühler',
              'Büker',
              'Büngener',
              'Bürger',
              'Bürklein',
              'Büscher',
              'Büttner',
              'Camara',
              'Carlowitz',
              'Carlsohn',
              'Caspari',
              'Caspers',
              'Chapron',
              'Christ',
              'Cierpinski',
              'Clarius',
              'Cleem',
              'Cleve',
              'Co',
              'Conrad',
              'Cordes',
              'Cornelsen',
              'Cors',
              'Cotthardt',
              'Crews',
              'Cronjäger',
              'Crosskofp',
              'Da',
              'Dahm',
              'Dahmen',
              'Daimer',
              'Damaske',
              'Danneberg',
              'Danner',
              'Daub',
              'Daubner',
              'Daudrich',
              'Dauer',
              'Daum',
              'Dauth',
              'Dautzenberg',
              'De',
              'Decker',
              'Deckert',
              'Deerberg',
              'Dehmel',
              'Deja',
              'Delonge',
              'Demut',
              'Dengler',
              'Denner',
              'Denzinger',
              'Derr',
              'Dertmann',
              'Dethloff',
              'Deuschle',
              'Dieckmann',
              'Diedrich',
              'Diekmann',
              'Dienel',
              'Dies',
              'Dietrich',
              'Dietz',
              'Dietzsch',
              'Diezel',
              'Dilla',
              'Dingelstedt',
              'Dippl',
              'Dittmann',
              'Dittmar',
              'Dittmer',
              'Dix',
              'Dobbrunz',
              'Dobler',
              'Dohring',
              'Dolch',
              'Dold',
              'Dombrowski',
              'Donie',
              'Doskoczynski',
              'Dragu',
              'Drechsler',
              'Drees',
              'Dreher',
              'Dreier',
              'Dreissigacker',
              'Dressler',
              'Drews',
              'Duma',
              'Dutkiewicz',
              'Dyett',
              'Dylus',
              'Dächert',
              'Döbel',
              'Döring',
              'Dörner',
              'Dörre',
              'Dück',
              'Eberhard',
              'Eberhardt',
              'Ecker',
              'Eckhardt',
              'Edorh',
              'Effler',
              'Eggenmueller',
              'Ehm',
              'Ehmann',
              'Ehrig',
              'Eich',
              'Eichmann',
              'Eifert',
              'Einert',
              'Eisenlauer',
              'Ekpo',
              'Elbe',
              'Eleyth',
              'Elss',
              'Emert',
              'Emmelmann',
              'Ender',
              'Engel',
              'Engelen',
              'Engelmann',
              'Eplinius',
              'Erdmann',
              'Erhardt',
              'Erlei',
              'Erm',
              'Ernst',
              'Ertl',
              'Erwes',
              'Esenwein',
              'Esser',
              'Evers',
              'Everts',
              'Ewald',
              'Fahner',
              'Faller',
              'Falter',
              'Farber',
              'Fassbender',
              'Faulhaber',
              'Fehrig',
              'Feld',
              'Felke',
              'Feller',
              'Fenner',
              'Fenske',
              'Feuerbach',
              'Fietz',
              'Figl',
              'Figura',
              'Filipowski',
              'Filsinger',
              'Fincke',
              'Fink',
              'Finke',
              'Fischer',
              'Fitschen',
              'Fleischer',
              'Fleischmann',
              'Floder',
              'Florczak',
              'Flore',
              'Flottmann',
              'Forkel',
              'Forst',
              'Frahmeke',
              'Frank',
              'Franke',
              'Franta',
              'Frantz',
              'Franz',
              'Franzis',
              'Franzmann',
              'Frauen',
              'Frauendorf',
              'Freigang',
              'Freimann',
              'Freimuth',
              'Freisen',
              'Frenzel',
              'Frey',
              'Fricke',
              'Fried',
              'Friedek',
              'Friedenberg',
              'Friedmann',
              'Friedrich',
              'Friess',
              'Frisch',
              'Frohn',
              'Frosch',
              'Fuchs',
              'Fuhlbrügge',
              'Fusenig',
              'Fust',
              'Förster',
              'Gaba',
              'Gabius',
              'Gabler',
              'Gadschiew',
              'Gakstädter',
              'Galander',
              'Gamlin',
              'Gamper',
              'Gangnus',
              'Ganzmann',
              'Garatva',
              'Gast',
              'Gastel',
              'Gatzka',
              'Gauder',
              'Gebhardt',
              'Geese',
              'Gehre',
              'Gehrig',
              'Gehring',
              'Gehrke',
              'Geiger',
              'Geisler',
              'Geissler',
              'Gelling',
              'Gens',
              'Gerbennow',
              'Gerdel',
              'Gerhardt',
              'Gerschler',
              'Gerson',
              'Gesell',
              'Geyer',
              'Ghirmai',
              'Ghosh',
              'Giehl',
              'Gierisch',
              'Giesa',
              'Giesche',
              'Gilde',
              'Glatting',
              'Goebel',
              'Goedicke',
              'Goldbeck',
              'Goldfuss',
              'Goldkamp',
              'Goldkühle',
              'Goller',
              'Golling',
              'Gollnow',
              'Golomski',
              'Gombert',
              'Gotthardt',
              'Gottschalk',
              'Gotz',
              'Goy',
              'Gradzki',
              'Graf',
              'Grams',
              'Grasse',
              'Gratzky',
              'Grau',
              'Greb',
              'Green',
              'Greger',
              'Greithanner',
              'Greschner',
              'Griem',
              'Griese',
              'Grimm',
              'Gromisch',
              'Gross',
              'Grosser',
              'Grossheim',
              'Grosskopf',
              'Grothaus',
              'Grothkopp',
              'Grotke',
              'Grube',
              'Gruber',
              'Grundmann',
              'Gruning',
              'Gruszecki',
              'Gröss',
              'Grötzinger',
              'Grün',
              'Grüner',
              'Gummelt',
              'Gunkel',
              'Gunther',
              'Gutjahr',
              'Gutowicz',
              'Gutschank',
              'Göbel',
              'Göckeritz',
              'Göhler',
              'Görlich',
              'Görmer',
              'Götz',
              'Götzelmann',
              'Güldemeister',
              'Günther',
              'Günz',
              'Gürbig',
              'Haack',
              'Haaf',
              'Habel',
              'Hache',
              'Hackbusch',
              'Hackelbusch',
              'Hadfield',
              'Hadwich',
              'Haferkamp',
              'Hahn',
              'Hajek',
              'Hallmann',
              'Hamann',
              'Hanenberger',
              'Hannecker',
              'Hanniske',
              'Hansen',
              'Hardy',
              'Hargasser',
              'Harms',
              'Harnapp',
              'Harter',
              'Harting',
              'Hartlieb',
              'Hartmann',
              'Hartwig',
              'Hartz',
              'Haschke',
              'Hasler',
              'Hasse',
              'Hassfeld',
              'Haug',
              'Hauke',
              'Haupt',
              'Haverney',
              'Heberstreit',
              'Hechler',
              'Hecht',
              'Heck',
              'Hedermann',
              'Hehl',
              'Heidelmann',
              'Heidler',
              'Heinemann',
              'Heinig',
              'Heinke',
              'Heinrich',
              'Heinze',
              'Heiser',
              'Heist',
              'Hellmann',
              'Helm',
              'Helmke',
              'Helpling',
              'Hengmith',
              'Henkel',
              'Hennes',
              'Henry',
              'Hense',
              'Hensel',
              'Hentel',
              'Hentschel',
              'Hentschke',
              'Hepperle',
              'Herberger',
              'Herbrand',
              'Hering',
              'Hermann',
              'Hermecke',
              'Herms',
              'Herold',
              'Herrmann',
              'Herschmann',
              'Hertel',
              'Herweg',
              'Herwig',
              'Herzenberg',
              'Hess',
              'Hesse',
              'Hessek',
              'Hessler',
              'Hetzler',
              'Heuck',
              'Heydemüller',
              'Hiebl',
              'Hildebrand',
              'Hildenbrand',
              'Hilgendorf',
              'Hillard',
              'Hiller',
              'Hingsen',
              'Hingst',
              'Hinrichs',
              'Hirsch',
              'Hirschberg',
              'Hirt',
              'Hodea',
              'Hoffman',
              'Hoffmann',
              'Hofmann',
              'Hohenberger',
              'Hohl',
              'Hohn',
              'Hohnheiser',
              'Hold',
              'Holdt',
              'Holinski',
              'Holl',
              'Holtfreter',
              'Holz',
              'Holzdeppe',
              'Holzner',
              'Hommel',
              'Honz',
              'Hooss',
              'Hoppe',
              'Horak',
              'Horn',
              'Horna',
              'Hornung',
              'Hort',
              'Howard',
              'Huber',
              'Huckestein',
              'Hudak',
              'Huebel',
              'Hugo',
              'Huhn',
              'Hujo',
              'Huke',
              'Huls',
              'Humbert',
              'Huneke',
              'Huth',
              'Häber',
              'Häfner',
              'Höcke',
              'Höft',
              'Höhne',
              'Hönig',
              'Hördt',
              'Hübenbecker',
              'Hübl',
              'Hübner',
              'Hügel',
              'Hüttcher',
              'Hütter',
              'Ibe',
              'Ihly',
              'Illing',
              'Isak',
              'Isekenmeier',
              'Itt',
              'Jacob',
              'Jacobs',
              'Jagusch',
              'Jahn',
              'Jahnke',
              'Jakobs',
              'Jakubczyk',
              'Jambor',
              'Jamrozy',
              'Jander',
              'Janich',
              'Janke',
              'Jansen',
              'Jarets',
              'Jaros',
              'Jasinski',
              'Jasper',
              'Jegorov',
              'Jellinghaus',
              'Jeorga',
              'Jerschabek',
              'Jess',
              'John',
              'Jonas',
              'Jossa',
              'Jucken',
              'Jung',
              'Jungbluth',
              'Jungton',
              'Just',
              'Jürgens',
              'Kaczmarek',
              'Kaesmacher',
              'Kahl',
              'Kahlert',
              'Kahles',
              'Kahlmeyer',
              'Kaiser',
              'Kalinowski',
              'Kallabis',
              'Kallensee',
              'Kampf',
              'Kampschulte',
              'Kappe',
              'Kappler',
              'Karhoff',
              'Karrass',
              'Karst',
              'Karsten',
              'Karus',
              'Kass',
              'Kasten',
              'Kastner',
              'Katzinski',
              'Kaufmann',
              'Kaul',
              'Kausemann',
              'Kawohl',
              'Kazmarek',
              'Kedzierski',
              'Keil',
              'Keiner',
              'Keller',
              'Kelm',
              'Kempe',
              'Kemper',
              'Kempter',
              'Kerl',
              'Kern',
              'Kesselring',
              'Kesselschläger',
              'Kette',
              'Kettenis',
              'Keutel',
              'Kick',
              'Kiessling',
              'Kinadeter',
              'Kinzel',
              'Kinzy',
              'Kirch',
              'Kirst',
              'Kisabaka',
              'Klaas',
              'Klabuhn',
              'Klapper',
              'Klauder',
              'Klaus',
              'Kleeberg',
              'Kleiber',
              'Klein',
              'Kleinert',
              'Kleininger',
              'Kleinmann',
              'Kleinsteuber',
              'Kleiss',
              'Klemme',
              'Klimczak',
              'Klinger',
              'Klink',
              'Klopsch',
              'Klose',
              'Kloss',
              'Kluge',
              'Kluwe',
              'Knabe',
              'Kneifel',
              'Knetsch',
              'Knies',
              'Knippel',
              'Knobel',
              'Knoblich',
              'Knoll',
              'Knorr',
              'Knorscheidt',
              'Knut',
              'Kobs',
              'Koch',
              'Kochan',
              'Kock',
              'Koczulla',
              'Koderisch',
              'Koehl',
              'Koehler',
              'Koenig',
              'Koester',
              'Kofferschlager',
              'Koha',
              'Kohle',
              'Kohlmann',
              'Kohnle',
              'Kohrt',
              'Koj',
              'Kolb',
              'Koleiski',
              'Kolokas',
              'Komoll',
              'Konieczny',
              'Konig',
              'Konow',
              'Konya',
              'Koob',
              'Kopf',
              'Kosenkow',
              'Koster',
              'Koszewski',
              'Koubaa',
              'Kovacs',
              'Kowalick',
              'Kowalinski',
              'Kozakiewicz',
              'Krabbe',
              'Kraft',
              'Kral',
              'Kramer',
              'Krauel',
              'Kraus',
              'Krause',
              'Krauspe',
              'Kreb',
              'Krebs',
              'Kreissig',
              'Kresse',
              'Kreutz',
              'Krieger',
              'Krippner',
              'Krodinger',
              'Krohn',
              'Krol',
              'Kron',
              'Krueger',
              'Krug',
              'Kruger',
              'Krull',
              'Kruschinski',
              'Krämer',
              'Kröckert',
              'Kröger',
              'Krüger',
              'Kubera',
              'Kufahl',
              'Kuhlee',
              'Kuhnen',
              'Kulimann',
              'Kulma',
              'Kumbernuss',
              'Kummle',
              'Kunz',
              'Kupfer',
              'Kupprion',
              'Kuprion',
              'Kurnicki',
              'Kurrat',
              'Kurschilgen',
              'Kuschewitz',
              'Kuschmann',
              'Kuske',
              'Kustermann',
              'Kutscherauer',
              'Kutzner',
              'Kwadwo',
              'Kähler',
              'Käther',
              'Köhler',
              'Köhrbrück',
              'Köhre',
              'Kölotzei',
              'König',
              'Köpernick',
              'Köseoglu',
              'Kúhn',
              'Kúhnert',
              'Kühn',
              'Kühnel',
              'Kühnemund',
              'Kühnert',
              'Kühnke',
              'Küsters',
              'Küter',
              'Laack',
              'Lack',
              'Ladewig',
              'Lakomy',
              'Lammert',
              'Lamos',
              'Landmann',
              'Lang',
              'Lange',
              'Langfeld',
              'Langhirt',
              'Lanig',
              'Lauckner',
              'Lauinger',
              'Laurén',
              'Lausecker',
              'Laux',
              'Laws',
              'Lax',
              'Leberer',
              'Lehmann',
              'Lehner',
              'Leibold',
              'Leide',
              'Leimbach',
              'Leipold',
              'Leist',
              'Leiter',
              'Leiteritz',
              'Leitheim',
              'Leiwesmeier',
              'Lenfers',
              'Lenk',
              'Lenz',
              'Lenzen',
              'Leo',
              'Lepthin',
              'Lesch',
              'Leschnik',
              'Letzelter',
              'Lewin',
              'Lewke',
              'Leyckes',
              'Lg',
              'Lichtenfeld',
              'Lichtenhagen',
              'Lichtl',
              'Liebach',
              'Liebe',
              'Liebich',
              'Liebold',
              'Lieder',
              'Lienshöft',
              'Linden',
              'Lindenberg',
              'Lindenmayer',
              'Lindner',
              'Linke',
              'Linnenbaum',
              'Lippe',
              'Lipske',
              'Lipus',
              'Lischka',
              'Lobinger',
              'Logsch',
              'Lohmann',
              'Lohre',
              'Lohse',
              'Lokar',
              'Loogen',
              'Lorenz',
              'Losch',
              'Loska',
              'Lott',
              'Loy',
              'Lubina',
              'Ludolf',
              'Lufft',
              'Lukoschek',
              'Lutje',
              'Lutz',
              'Löser',
              'Löwa',
              'Lübke',
              'Maak',
              'Maczey',
              'Madetzky',
              'Madubuko',
              'Mai',
              'Maier',
              'Maisch',
              'Malek',
              'Malkus',
              'Mallmann',
              'Malucha',
              'Manns',
              'Manz',
              'Marahrens',
              'Marchewski',
              'Margis',
              'Markowski',
              'Marl',
              'Marner',
              'Marquart',
              'Marschek',
              'Martel',
              'Marten',
              'Martin',
              'Marx',
              'Marxen',
              'Mathes',
              'Mathies',
              'Mathiszik',
              'Matschke',
              'Mattern',
              'Matthes',
              'Matula',
              'Mau',
              'Maurer',
              'Mauroff',
              'May',
              'Maybach',
              'Mayer',
              'Mebold',
              'Mehl',
              'Mehlhorn',
              'Mehlorn',
              'Meier',
              'Meisch',
              'Meissner',
              'Meloni',
              'Melzer',
              'Menga',
              'Menne',
              'Mensah',
              'Mensing',
              'Merkel',
              'Merseburg',
              'Mertens',
              'Mesloh',
              'Metzger',
              'Metzner',
              'Mewes',
              'Meyer',
              'Michallek',
              'Michel',
              'Mielke',
              'Mikitenko',
              'Milde',
              'Minah',
              'Mintzlaff',
              'Mockenhaupt',
              'Moede',
              'Moedl',
              'Moeller',
              'Moguenara',
              'Mohr',
              'Mohrhard',
              'Molitor',
              'Moll',
              'Moller',
              'Molzan',
              'Montag',
              'Moormann',
              'Mordhorst',
              'Morgenstern',
              'Morhelfer',
              'Moritz',
              'Moser',
              'Motchebon',
              'Motzenbbäcker',
              'Mrugalla',
              'Muckenthaler',
              'Mues',
              'Muller',
              'Mulrain',
              'Mächtig',
              'Mäder',
              'Möcks',
              'Mögenburg',
              'Möhsner',
              'Möldner',
              'Möllenbeck',
              'Möller',
              'Möllinger',
              'Mörsch',
              'Mühleis',
              'Müller',
              'Münch',
              'Nabein',
              'Nabow',
              'Nagel',
              'Nannen',
              'Nastvogel',
              'Nau',
              'Naubert',
              'Naumann',
              'Ne',
              'Neimke',
              'Nerius',
              'Neubauer',
              'Neubert',
              'Neuendorf',
              'Neumair',
              'Neumann',
              'Neupert',
              'Neurohr',
              'Neuschwander',
              'Newton',
              'Ney',
              'Nicolay',
              'Niedermeier',
              'Nieklauson',
              'Niklaus',
              'Nitzsche',
              'Noack',
              'Nodler',
              'Nolte',
              'Normann',
              'Norris',
              'Northoff',
              'Nowak',
              'Nussbeck',
              'Nwachukwu',
              'Nytra',
              'Nöh',
              'Oberem',
              'Obergföll',
              'Obermaier',
              'Ochs',
              'Oeser',
              'Olbrich',
              'Onnen',
              'Ophey',
              'Oppong',
              'Orth',
              'Orthmann',
              'Oschkenat',
              'Osei',
              'Osenberg',
              'Ostendarp',
              'Ostwald',
              'Otte',
              'Otto',
              'Paesler',
              'Pajonk',
              'Pallentin',
              'Panzig',
              'Paschke',
              'Patzwahl',
              'Paukner',
              'Peselman',
              'Peter',
              'Peters',
              'Petzold',
              'Pfeiffer',
              'Pfennig',
              'Pfersich',
              'Pfingsten',
              'Pflieger',
              'Pflügner',
              'Philipp',
              'Pichlmaier',
              'Piesker',
              'Pietsch',
              'Pingpank',
              'Pinnock',
              'Pippig',
              'Pitschugin',
              'Plank',
              'Plass',
              'Platzer',
              'Plauk',
              'Plautz',
              'Pletsch',
              'Plotzitzka',
              'Poehn',
              'Poeschl',
              'Pogorzelski',
              'Pohl',
              'Pohland',
              'Pohle',
              'Polifka',
              'Polizzi',
              'Pollmächer',
              'Pomp',
              'Ponitzsch',
              'Porsche',
              'Porth',
              'Poschmann',
              'Poser',
              'Pottel',
              'Prah',
              'Prange',
              'Prediger',
              'Pressler',
              'Preuk',
              'Preuss',
              'Prey',
              'Priemer',
              'Proske',
              'Pusch',
              'Pöche',
              'Pöge',
              'Raabe',
              'Rabenstein',
              'Rach',
              'Radtke',
              'Rahn',
              'Ranftl',
              'Rangen',
              'Ranz',
              'Rapp',
              'Rath',
              'Rau',
              'Raubuch',
              'Raukuc',
              'Rautenkranz',
              'Rehwagen',
              'Reiber',
              'Reichardt',
              'Reichel',
              'Reichling',
              'Reif',
              'Reifenrath',
              'Reimann',
              'Reinberg',
              'Reinelt',
              'Reinhardt',
              'Reinke',
              'Reitze',
              'Renk',
              'Rentz',
              'Renz',
              'Reppin',
              'Restle',
              'Restorff',
              'Retzke',
              'Reuber',
              'Reumann',
              'Reus',
              'Reuss',
              'Reusse',
              'Rheder',
              'Rhoden',
              'Richards',
              'Richter',
              'Riedel',
              'Riediger',
              'Rieger',
              'Riekmann',
              'Riepl',
              'Riermeier',
              'Riester',
              'Riethmüller',
              'Rietmüller',
              'Rietscher',
              'Ringel',
              'Ringer',
              'Rink',
              'Ripken',
              'Ritosek',
              'Ritschel',
              'Ritter',
              'Rittweg',
              'Ritz',
              'Roba',
              'Rockmeier',
              'Rodehau',
              'Rodowski',
              'Roecker',
              'Roggatz',
              'Rohländer',
              'Rohrer',
              'Rokossa',
              'Roleder',
              'Roloff',
              'Roos',
              'Rosbach',
              'Roschinsky',
              'Rose',
              'Rosenauer',
              'Rosenbauer',
              'Rosenthal',
              'Rosksch',
              'Rossberg',
              'Rossler',
              'Roth',
              'Rother',
              'Ruch',
              'Ruckdeschel',
              'Rumpf',
              'Rupprecht',
              'Ruth',
              'Ryjikh',
              'Ryzih',
              'Rädler',
              'Räntsch',
              'Rödiger',
              'Röse',
              'Röttger',
              'Rücker',
              'Rüdiger',
              'Rüter',
              'Sachse',
              'Sack',
              'Saflanis',
              'Sagafe',
              'Sagonas',
              'Sahner',
              'Saile',
              'Sailer',
              'Salow',
              'Salzer',
              'Salzmann',
              'Sammert',
              'Sander',
              'Sarvari',
              'Sattelmaier',
              'Sauer',
              'Sauerland',
              'Saumweber',
              'Savoia',
              'Scc',
              'Schacht',
              'Schaefer',
              'Schaffarzik',
              'Schahbasian',
              'Scharf',
              'Schedler',
              'Scheer',
              'Schelk',
              'Schellenbeck',
              'Schembera',
              'Schenk',
              'Scherbarth',
              'Scherer',
              'Schersing',
              'Scherz',
              'Scheurer',
              'Scheuring',
              'Scheytt',
              'Schielke',
              'Schieskow',
              'Schildhauer',
              'Schilling',
              'Schima',
              'Schimmer',
              'Schindzielorz',
              'Schirmer',
              'Schirrmeister',
              'Schlachter',
              'Schlangen',
              'Schlawitz',
              'Schlechtweg',
              'Schley',
              'Schlicht',
              'Schlitzer',
              'Schmalzle',
              'Schmid',
              'Schmidt',
              'Schmidtchen',
              'Schmitt',
              'Schmitz',
              'Schmuhl',
              'Schneider',
              'Schnelting',
              'Schnieder',
              'Schniedermeier',
              'Schnürer',
              'Schoberg',
              'Scholz',
              'Schonberg',
              'Schondelmaier',
              'Schorr',
              'Schott',
              'Schottmann',
              'Schouren',
              'Schrader',
              'Schramm',
              'Schreck',
              'Schreiber',
              'Schreiner',
              'Schreiter',
              'Schroder',
              'Schröder',
              'Schuermann',
              'Schuff',
              'Schuhaj',
              'Schuldt',
              'Schult',
              'Schulte',
              'Schultz',
              'Schultze',
              'Schulz',
              'Schulze',
              'Schumacher',
              'Schumann',
              'Schupp',
              'Schuri',
              'Schuster',
              'Schwab',
              'Schwalm',
              'Schwanbeck',
              'Schwandke',
              'Schwanitz',
              'Schwarthoff',
              'Schwartz',
              'Schwarz',
              'Schwarzer',
              'Schwarzkopf',
              'Schwarzmeier',
              'Schwatlo',
              'Schweisfurth',
              'Schwennen',
              'Schwerdtner',
              'Schwidde',
              'Schwirkschlies',
              'Schwuchow',
              'Schäfer',
              'Schäffel',
              'Schäffer',
              'Schäning',
              'Schöckel',
              'Schönball',
              'Schönbeck',
              'Schönberg',
              'Schönebeck',
              'Schönenberger',
              'Schönfeld',
              'Schönherr',
              'Schönlebe',
              'Schötz',
              'Schüler',
              'Schüppel',
              'Schütz',
              'Schütze',
              'Seeger',
              'Seelig',
              'Sehls',
              'Seibold',
              'Seidel',
              'Seiders',
              'Seigel',
              'Seiler',
              'Seitz',
              'Semisch',
              'Senkel',
              'Sewald',
              'Siebel',
              'Siebert',
              'Siegling',
              'Sielemann',
              'Siemon',
              'Siener',
              'Sievers',
              'Siewert',
              'Sihler',
              'Sillah',
              'Simon',
              'Sinnhuber',
              'Sischka',
              'Skibicki',
              'Sladek',
              'Slotta',
              'Smieja',
              'Soboll',
              'Sokolowski',
              'Soller',
              'Sollner',
              'Sommer',
              'Somssich',
              'Sonn',
              'Sonnabend',
              'Spahn',
              'Spank',
              'Spelmeyer',
              'Spiegelburg',
              'Spielvogel',
              'Spinner',
              'Spitzmüller',
              'Splinter',
              'Sporrer',
              'Sprenger',
              'Spöttel',
              'Stahl',
              'Stang',
              'Stanger',
              'Stauss',
              'Steding',
              'Steffen',
              'Steffny',
              'Steidl',
              'Steigauf',
              'Stein',
              'Steinecke',
              'Steinert',
              'Steinkamp',
              'Steinmetz',
              'Stelkens',
              'Stengel',
              'Stengl',
              'Stenzel',
              'Stepanov',
              'Stephan',
              'Stern',
              'Steuk',
              'Stief',
              'Stifel',
              'Stoll',
              'Stolle',
              'Stolz',
              'Storl',
              'Storp',
              'Stoutjesdijk',
              'Stratmann',
              'Straub',
              'Strausa',
              'Streck',
              'Streese',
              'Strege',
              'Streit',
              'Streller',
              'Strieder',
              'Striezel',
              'Strogies',
              'Strohschank',
              'Strunz',
              'Strutz',
              'Stube',
              'Stöckert',
              'Stöppler',
              'Stöwer',
              'Stürmer',
              'Suffa',
              'Sujew',
              'Sussmann',
              'Suthe',
              'Sutschet',
              'Swillims',
              'Szendrei',
              'Sören',
              'Sürth',
              'Tafelmeier',
              'Tang',
              'Tasche',
              'Taufratshofer',
              'Tegethof',
              'Teichmann',
              'Tepper',
              'Terheiden',
              'Terlecki',
              'Teufel',
              'Theele',
              'Thieke',
              'Thimm',
              'Thiomas',
              'Thomas',
              'Thriene',
              'Thränhardt',
              'Thust',
              'Thyssen',
              'Thöne',
              'Tidow',
              'Tiedtke',
              'Tietze',
              'Tilgner',
              'Tillack',
              'Timmermann',
              'Tischler',
              'Tischmann',
              'Tittman',
              'Tivontschik',
              'Tonat',
              'Tonn',
              'Trampeli',
              'Trauth',
              'Trautmann',
              'Travan',
              'Treff',
              'Tremmel',
              'Tress',
              'Tsamonikian',
              'Tschiers',
              'Tschirch',
              'Tuch',
              'Tucholke',
              'Tudow',
              'Tuschmo',
              'Tächl',
              'Többen',
              'Töpfer',
              'Uhlemann',
              'Uhlig',
              'Uhrig',
              'Uibel',
              'Uliczka',
              'Ullmann',
              'Ullrich',
              'Umbach',
              'Umlauft',
              'Umminger',
              'Unger',
              'Unterpaintner',
              'Urban',
              'Urbaniak',
              'Urbansky',
              'Urhig',
              'Vahlensieck',
              'Van',
              'Vangermain',
              'Vater',
              'Venghaus',
              'Verniest',
              'Verzi',
              'Vey',
              'Viellehner',
              'Vieweg',
              'Voelkel',
              'Vogel',
              'Vogelgsang',
              'Vogt',
              'Voigt',
              'Vokuhl',
              'Volk',
              'Volker',
              'Volkmann',
              'Von',
              'Vona',
              'Vontein',
              'Wachenbrunner',
              'Wachtel',
              'Wagner',
              'Waibel',
              'Wakan',
              'Waldmann',
              'Wallner',
              'Wallstab',
              'Walter',
              'Walther',
              'Walton',
              'Walz',
              'Wanner',
              'Wartenberg',
              'Waschbüsch',
              'Wassilew',
              'Wassiluk',
              'Weber',
              'Wehrsen',
              'Weidlich',
              'Weidner',
              'Weigel',
              'Weight',
              'Weiler',
              'Weimer',
              'Weis',
              'Weiss',
              'Weller',
              'Welsch',
              'Welz',
              'Welzel',
              'Weniger',
              'Wenk',
              'Werle',
              'Werner',
              'Werrmann',
              'Wessel',
              'Wessinghage',
              'Weyel',
              'Wezel',
              'Wichmann',
              'Wickert',
              'Wiebe',
              'Wiechmann',
              'Wiegelmann',
              'Wierig',
              'Wiese',
              'Wieser',
              'Wilhelm',
              'Wilky',
              'Will',
              'Willwacher',
              'Wilts',
              'Wimmer',
              'Winkelmann',
              'Winkler',
              'Winter',
              'Wischek',
              'Wischer',
              'Wissing',
              'Wittich',
              'Wittl',
              'Wolf',
              'Wolfarth',
              'Wolff',
              'Wollenberg',
              'Wollmann',
              'Woytkowska',
              'Wujak',
              'Wurm',
              'Wyludda',
              'Wölpert',
              'Wöschler',
              'Wühn',
              'Wünsche',
              'Zach',
              'Zaczkiewicz',
              'Zahn',
              'Zaituc',
              'Zandt',
              'Zanner',
              'Zapletal',
              'Zauber',
              'Zeidler',
              'Zekl',
              'Zender',
              'Zeuch',
              'Zeyen',
              'Zeyhle',
              'Ziegler',
              'Zimanyi',
              'Zimmer',
              'Zimmermann',
              'Zinser',
              'Zintl',
              'Zipp',
              'Zipse',
              'Zschunke',
              'Zuber',
              'Zwiener',
              'Zümsande',
              'Östringer',
              'Überacker'
            ],
            prefix: [
              'Dr.',
              'Prof. Dr.'
            ],
            nobility_title_prefix: [
              'zu',
              'von',
              'vom',
              'von der'
            ],
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{nobility_title_prefix} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '01 #######',
              '01#######',
              '+43-1-#######',
              '+431#######',
              '0#### ####',
              '0#########',
              '+43-####-####',
              '+43 ########'
            ]
          },
          cell_phone: {
            formats: [
              '+43-6##-#######',
              '06##-########',
              '+436#########',
              '06##########'
            ]
          }
        }
      },
      'de-CH': {
        faker: {
          address: {
            country_code: [
              'CH',
              'CH',
              'CH',
              'DE',
              'AT',
              'US',
              'LI',
              'US',
              'HK',
              'VN'
            ],
            postcode: [
              '1###',
              '2###',
              '3###',
              '4###',
              '5###',
              '6###',
              '7###',
              '8###',
              '9###'
            ],
            default_country: [
              'Schweiz'
            ]
          },
          company: {
            suffix: [
              'AG',
              'GmbH',
              'und Söhne',
              'und Partner',
              '& Co.',
              'Gruppe',
              'LLC',
              'Inc.'
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} und #{Name.last_name}'
            ]
          },
          internet: {
            domain_suffix: [
              'com',
              'net',
              'biz',
              'ch',
              'de',
              'li',
              'at',
              'ch',
              'ch'
            ]
          },
          phone_number: {
            formats: [
              '0800 ### ###',
              '0800 ## ## ##',
              '0## ### ## ##',
              '0## ### ## ##',
              '+41 ## ### ## ##',
              '0900 ### ###',
              '076 ### ## ##',
              '+4178 ### ## ##',
              '0041 79 ### ## ##'
            ]
          }
        }
      },
      de: {
        faker: {
          address: {
            city_prefix: [
              'Nord',
              'Ost',
              'West',
              'Süd',
              'Neu',
              'Alt',
              'Bad'
            ],
            city_suffix: [
              'stadt',
              'dorf',
              'land',
              'scheid',
              'burg'
            ],
            country: [
              'Ägypten',
              'Äquatorialguinea',
              'Äthiopien',
              'Österreich',
              'Afghanistan',
              'Albanien',
              'Algerien',
              'Amerikanisch-Samoa',
              'Amerikanische Jungferninseln',
              'Andorra',
              'Angola',
              'Anguilla',
              'Antarktis',
              'Antigua und Barbuda',
              'Argentinien',
              'Armenien',
              'Aruba',
              'Aserbaidschan',
              'Australien',
              'Bahamas',
              'Bahrain',
              'Bangladesch',
              'Barbados',
              'Belarus',
              'Belgien',
              'Belize',
              'Benin',
              'die Bermudas',
              'Bhutan',
              'Bolivien',
              'Bosnien und Herzegowina',
              'Botsuana',
              'Bouvetinsel',
              'Brasilien',
              'Britische Jungferninseln',
              'Britisches Territorium im Indischen Ozean',
              'Brunei Darussalam',
              'Bulgarien',
              'Burkina Faso',
              'Burundi',
              'Chile',
              'China',
              'Cookinseln',
              'Costa Rica',
              'Dänemark',
              'Demokratische Republik Kongo',
              'Demokratische Volksrepublik Korea',
              'Deutschland',
              'Dominica',
              'Dominikanische Republik',
              'Dschibuti',
              'Ecuador',
              'El Salvador',
              'Eritrea',
              'Estland',
              'Färöer',
              'Falklandinseln',
              'Fidschi',
              'Finnland',
              'Frankreich',
              'Französisch-Guayana',
              'Französisch-Polynesien',
              'Französische Gebiete im südlichen Indischen Ozean',
              'Gabun',
              'Gambia',
              'Georgien',
              'Ghana',
              'Gibraltar',
              'Grönland',
              'Grenada',
              'Griechenland',
              'Guadeloupe',
              'Guam',
              'Guatemala',
              'Guinea',
              'Guinea-Bissau',
              'Guyana',
              'Haiti',
              'Heard und McDonaldinseln',
              'Honduras',
              'Hongkong',
              'Indien',
              'Indonesien',
              'Irak',
              'Iran',
              'Irland',
              'Island',
              'Israel',
              'Italien',
              'Jamaika',
              'Japan',
              'Jemen',
              'Jordanien',
              'Jugoslawien',
              'Kaimaninseln',
              'Kambodscha',
              'Kamerun',
              'Kanada',
              'Kap Verde',
              'Kasachstan',
              'Katar',
              'Kenia',
              'Kirgisistan',
              'Kiribati',
              'Kleinere amerikanische Überseeinseln',
              'Kokosinseln',
              'Kolumbien',
              'Komoren',
              'Kongo',
              'Kroatien',
              'Kuba',
              'Kuwait',
              'Laos',
              'Lesotho',
              'Lettland',
              'Libanon',
              'Liberia',
              'Libyen',
              'Liechtenstein',
              'Litauen',
              'Luxemburg',
              'Macau',
              'Madagaskar',
              'Malawi',
              'Malaysia',
              'Malediven',
              'Mali',
              'Malta',
              'ehemalige jugoslawische Republik Mazedonien',
              'Marokko',
              'Marshallinseln',
              'Martinique',
              'Mauretanien',
              'Mauritius',
              'Mayotte',
              'Mexiko',
              'Mikronesien',
              'Monaco',
              'Mongolei',
              'Montserrat',
              'Mosambik',
              'Myanmar',
              'Nördliche Marianen',
              'Namibia',
              'Nauru',
              'Nepal',
              'Neukaledonien',
              'Neuseeland',
              'Nicaragua',
              'Niederländische Antillen',
              'Niederlande',
              'Niger',
              'Nigeria',
              'Niue',
              'Norfolkinsel',
              'Norwegen',
              'Oman',
              'Osttimor',
              'Pakistan',
              'Palau',
              'Panama',
              'Papua-Neuguinea',
              'Paraguay',
              'Peru',
              'Philippinen',
              'Pitcairninseln',
              'Polen',
              'Portugal',
              'Puerto Rico',
              'Réunion',
              'Republik Korea',
              'Republik Moldau',
              'Ruanda',
              'Rumänien',
              'Russische Föderation',
              'São Tomé und Príncipe',
              'Südafrika',
              'Südgeorgien und Südliche Sandwichinseln',
              'Salomonen',
              'Sambia',
              'Samoa',
              'San Marino',
              'Saudi-Arabien',
              'Schweden',
              'Schweiz',
              'Senegal',
              'Seychellen',
              'Sierra Leone',
              'Simbabwe',
              'Singapur',
              'Slowakei',
              'Slowenien',
              'Somalien',
              'Spanien',
              'Sri Lanka',
              'St. Helena',
              'St. Kitts und Nevis',
              'St. Lucia',
              'St. Pierre und Miquelon',
              'St. Vincent und die Grenadinen',
              'Sudan',
              'Surinam',
              'Svalbard und Jan Mayen',
              'Swasiland',
              'Syrien',
              'Türkei',
              'Tadschikistan',
              'Taiwan',
              'Tansania',
              'Thailand',
              'Togo',
              'Tokelau',
              'Tonga',
              'Trinidad und Tobago',
              'Tschad',
              'Tschechische Republik',
              'Tunesien',
              'Turkmenistan',
              'Turks- und Caicosinseln',
              'Tuvalu',
              'Uganda',
              'Ukraine',
              'Ungarn',
              'Uruguay',
              'Usbekistan',
              'Vanuatu',
              'Vatikanstadt',
              'Venezuela',
              'Vereinigte Arabische Emirate',
              'Vereinigte Staaten',
              'Vereinigtes Königreich',
              'Vietnam',
              'Wallis und Futuna',
              'Weihnachtsinsel',
              'Westsahara',
              'Zentralafrikanische Republik',
              'Zypern'
            ],
            street_root: [
              'Ackerweg',
              'Adalbert-Stifter-Str.',
              'Adalbertstr.',
              'Adolf-Baeyer-Str.',
              'Adolf-Kaschny-Str.',
              'Adolf-Reichwein-Str.',
              'Adolfsstr.',
              'Ahornweg',
              'Ahrstr.',
              'Akazienweg',
              'Albert-Einstein-Str.',
              'Albert-Schweitzer-Str.',
              'Albertus-Magnus-Str.',
              'Albert-Zarthe-Weg',
              'Albin-Edelmann-Str.',
              'Albrecht-Haushofer-Str.',
              'Aldegundisstr.',
              'Alexanderstr.',
              'Alfred-Delp-Str.',
              'Alfred-Kubin-Str.',
              'Alfred-Stock-Str.',
              'Alkenrather Str.',
              'Allensteiner Str.',
              'Alsenstr.',
              'Alt Steinbücheler Weg',
              'Alte Garten',
              'Alte Heide',
              'Alte Landstr.',
              'Alte Ziegelei',
              'Altenberger Str.',
              'Altenhof',
              'Alter Grenzweg',
              'Altstadtstr.',
              'Am Alten Gaswerk',
              'Am Alten Schafstall',
              'Am Arenzberg',
              'Am Benthal',
              'Am Birkenberg',
              'Am Blauen Berg',
              'Am Borsberg',
              'Am Brungen',
              'Am Büchelter Hof',
              'Am Buttermarkt',
              'Am Ehrenfriedhof',
              'Am Eselsdamm',
              'Am Falkenberg',
              'Am Frankenberg',
              'Am Gesundheitspark',
              'Am Gierlichshof',
              'Am Graben',
              'Am Hagelkreuz',
              'Am Hang',
              'Am Heidkamp',
              'Am Hemmelrather Hof',
              'Am Hofacker',
              'Am Hohen Ufer',
              'Am Höllers Eck',
              'Am Hühnerberg',
              'Am Jägerhof',
              'Am Junkernkamp',
              'Am Kemperstiegel',
              'Am Kettnersbusch',
              'Am Kiesberg',
              'Am Klösterchen',
              'Am Knechtsgraben',
              'Am Köllerweg',
              'Am Köttersbach',
              'Am Kreispark',
              'Am Kronefeld',
              'Am Küchenhof',
              'Am Kühnsbusch',
              'Am Lindenfeld',
              'Am Märchen',
              'Am Mittelberg',
              'Am Mönchshof',
              'Am Mühlenbach',
              'Am Neuenhof',
              'Am Nonnenbruch',
              'Am Plattenbusch',
              'Am Quettinger Feld',
              'Am Rosenhügel',
              'Am Sandberg',
              'Am Scherfenbrand',
              'Am Schokker',
              'Am Silbersee',
              'Am Sonnenhang',
              'Am Sportplatz',
              'Am Stadtpark',
              'Am Steinberg',
              'Am Telegraf',
              'Am Thelenhof',
              'Am Vogelkreuz',
              'Am Vogelsang',
              'Am Vogelsfeldchen',
              'Am Wambacher Hof',
              'Am Wasserturm',
              'Am Weidenbusch',
              'Am Weiher',
              'Am Weingarten',
              'Am Werth',
              'Amselweg',
              'An den Irlen',
              'An den Rheinauen',
              'An der Bergerweide',
              'An der Dingbank',
              'An der Evangelischen Kirche',
              'An der Evgl. Kirche',
              'An der Feldgasse',
              'An der Fettehenne',
              'An der Kante',
              'An der Laach',
              'An der Lehmkuhle',
              'An der Lichtenburg',
              'An der Luisenburg',
              'An der Robertsburg',
              'An der Schmitten',
              'An der Schusterinsel',
              'An der Steinrütsch',
              'An St. Andreas',
              'An St. Remigius',
              'Andreasstr.',
              'Ankerweg',
              'Annette-Kolb-Str.',
              'Apenrader Str.',
              'Arnold-Ohletz-Str.',
              'Atzlenbacher Str.',
              'Auerweg',
              'Auestr.',
              'Auf dem Acker',
              'Auf dem Blahnenhof',
              'Auf dem Bohnbüchel',
              'Auf dem Bruch',
              'Auf dem End',
              'Auf dem Forst',
              'Auf dem Herberg',
              'Auf dem Lehn',
              'Auf dem Stein',
              'Auf dem Weierberg',
              'Auf dem Weiherhahn',
              'Auf den Reien',
              'Auf der Donnen',
              'Auf der Grieße',
              'Auf der Ohmer',
              'Auf der Weide',
              'Auf\'m Berg',
              'Auf\'m Kamp',
              'Augustastr.',
              'August-Kekulé-Str.',
              'A.-W.-v.-Hofmann-Str.',
              'Bahnallee',
              'Bahnhofstr.',
              'Baltrumstr.',
              'Bamberger Str.',
              'Baumberger Str.',
              'Bebelstr.',
              'Beckers Kämpchen',
              'Beerenstr.',
              'Beethovenstr.',
              'Behringstr.',
              'Bendenweg',
              'Bensberger Str.',
              'Benzstr.',
              'Bergische Landstr.',
              'Bergstr.',
              'Berliner Platz',
              'Berliner Str.',
              'Bernhard-Letterhaus-Str.',
              'Bernhard-Lichtenberg-Str.',
              'Bernhard-Ridder-Str.',
              'Bernsteinstr.',
              'Bertha-Middelhauve-Str.',
              'Bertha-von-Suttner-Str.',
              'Bertolt-Brecht-Str.',
              'Berzeliusstr.',
              'Bielertstr.',
              'Biesenbach',
              'Billrothstr.',
              'Birkenbergstr.',
              'Birkengartenstr.',
              'Birkenweg',
              'Bismarckstr.',
              'Bitterfelder Str.',
              'Blankenburg',
              'Blaukehlchenweg',
              'Blütenstr.',
              'Boberstr.',
              'Böcklerstr.',
              'Bodelschwinghstr.',
              'Bodestr.',
              'Bogenstr.',
              'Bohnenkampsweg',
              'Bohofsweg',
              'Bonifatiusstr.',
              'Bonner Str.',
              'Borkumstr.',
              'Bornheimer Str.',
              'Borsigstr.',
              'Borussiastr.',
              'Bracknellstr.',
              'Brahmsweg',
              'Brandenburger Str.',
              'Breidenbachstr.',
              'Breslauer Str.',
              'Bruchhauser Str.',
              'Brückenstr.',
              'Brucknerstr.',
              'Brüder-Bonhoeffer-Str.',
              'Buchenweg',
              'Bürgerbuschweg',
              'Burgloch',
              'Burgplatz',
              'Burgstr.',
              'Burgweg',
              'Bürriger Weg',
              'Burscheider Str.',
              'Buschkämpchen',
              'Butterheider Str.',
              'Carl-Duisberg-Platz',
              'Carl-Duisberg-Str.',
              'Carl-Leverkus-Str.',
              'Carl-Maria-von-Weber-Platz',
              'Carl-Maria-von-Weber-Str.',
              'Carlo-Mierendorff-Str.',
              'Carl-Rumpff-Str.',
              'Carl-von-Ossietzky-Str.',
              'Charlottenburger Str.',
              'Christian-Heß-Str.',
              'Claasbruch',
              'Clemens-Winkler-Str.',
              'Concordiastr.',
              'Cranachstr.',
              'Dahlemer Str.',
              'Daimlerstr.',
              'Damaschkestr.',
              'Danziger Str.',
              'Debengasse',
              'Dechant-Fein-Str.',
              'Dechant-Krey-Str.',
              'Deichtorstr.',
              'Dhünnberg',
              'Dhünnstr.',
              'Dianastr.',
              'Diedenhofener Str.',
              'Diepental',
              'Diepenthaler Str.',
              'Dieselstr.',
              'Dillinger Str.',
              'Distelkamp',
              'Dohrgasse',
              'Domblick',
              'Dönhoffstr.',
              'Dornierstr.',
              'Drachenfelsstr.',
              'Dr.-August-Blank-Str.',
              'Dresdener Str.',
              'Driescher Hecke',
              'Drosselweg',
              'Dudweilerstr.',
              'Dünenweg',
              'Dünfelder Str.',
              'Dünnwalder Grenzweg',
              'Düppeler Str.',
              'Dürerstr.',
              'Dürscheider Weg',
              'Düsseldorfer Str.',
              'Edelrather Weg',
              'Edmund-Husserl-Str.',
              'Eduard-Spranger-Str.',
              'Ehrlichstr.',
              'Eichenkamp',
              'Eichenweg',
              'Eidechsenweg',
              'Eifelstr.',
              'Eifgenstr.',
              'Eintrachtstr.',
              'Elbestr.',
              'Elisabeth-Langgässer-Str.',
              'Elisabethstr.',
              'Elisabeth-von-Thadden-Str.',
              'Elisenstr.',
              'Elsa-Brändström-Str.',
              'Elsbachstr.',
              'Else-Lasker-Schüler-Str.',
              'Elsterstr.',
              'Emil-Fischer-Str.',
              'Emil-Nolde-Str.',
              'Engelbertstr.',
              'Engstenberger Weg',
              'Entenpfuhl',
              'Erbelegasse',
              'Erftstr.',
              'Erfurter Str.',
              'Erich-Heckel-Str.',
              'Erich-Klausener-Str.',
              'Erich-Ollenhauer-Str.',
              'Erlenweg',
              'Ernst-Bloch-Str.',
              'Ernst-Ludwig-Kirchner-Str.',
              'Erzbergerstr.',
              'Eschenallee',
              'Eschenweg',
              'Esmarchstr.',
              'Espenweg',
              'Euckenstr.',
              'Eulengasse',
              'Eulenkamp',
              'Ewald-Flamme-Str.',
              'Ewald-Röll-Str.',
              'Fährstr.',
              'Farnweg',
              'Fasanenweg',
              'Faßbacher Hof',
              'Felderstr.',
              'Feldkampstr.',
              'Feldsiefer Weg',
              'Feldsiefer Wiesen',
              'Feldstr.',
              'Feldtorstr.',
              'Felix-von-Roll-Str.',
              'Ferdinand-Lassalle-Str.',
              'Fester Weg',
              'Feuerbachstr.',
              'Feuerdornweg',
              'Fichtenweg',
              'Fichtestr.',
              'Finkelsteinstr.',
              'Finkenweg',
              'Fixheider Str.',
              'Flabbenhäuschen',
              'Flensburger Str.',
              'Fliederweg',
              'Florastr.',
              'Florianweg',
              'Flotowstr.',
              'Flurstr.',
              'Föhrenweg',
              'Fontanestr.',
              'Forellental',
              'Fortunastr.',
              'Franz-Esser-Str.',
              'Franz-Hitze-Str.',
              'Franz-Kail-Str.',
              'Franz-Marc-Str.',
              'Freiburger Str.',
              'Freiheitstr.',
              'Freiherr-vom-Stein-Str.',
              'Freudenthal',
              'Freudenthaler Weg',
              'Fridtjof-Nansen-Str.',
              'Friedenberger Str.',
              'Friedensstr.',
              'Friedhofstr.',
              'Friedlandstr.',
              'Friedlieb-Ferdinand-Runge-Str.',
              'Friedrich-Bayer-Str.',
              'Friedrich-Bergius-Platz',
              'Friedrich-Ebert-Platz',
              'Friedrich-Ebert-Str.',
              'Friedrich-Engels-Str.',
              'Friedrich-List-Str.',
              'Friedrich-Naumann-Str.',
              'Friedrich-Sertürner-Str.',
              'Friedrichstr.',
              'Friedrich-Weskott-Str.',
              'Friesenweg',
              'Frischenberg',
              'Fritz-Erler-Str.',
              'Fritz-Henseler-Str.',
              'Fröbelstr.',
              'Fürstenbergplatz',
              'Fürstenbergstr.',
              'Gabriele-Münter-Str.',
              'Gartenstr.',
              'Gebhardstr.',
              'Geibelstr.',
              'Gellertstr.',
              'Georg-von-Vollmar-Str.',
              'Gerhard-Domagk-Str.',
              'Gerhart-Hauptmann-Str.',
              'Gerichtsstr.',
              'Geschwister-Scholl-Str.',
              'Gezelinallee',
              'Gierener Weg',
              'Ginsterweg',
              'Gisbert-Cremer-Str.',
              'Glücksburger Str.',
              'Gluckstr.',
              'Gneisenaustr.',
              'Goetheplatz',
              'Goethestr.',
              'Golo-Mann-Str.',
              'Görlitzer Str.',
              'Görresstr.',
              'Graebestr.',
              'Graf-Galen-Platz',
              'Gregor-Mendel-Str.',
              'Greifswalder Str.',
              'Grillenweg',
              'Gronenborner Weg',
              'Große Kirchstr.',
              'Grunder Wiesen',
              'Grundermühle',
              'Grundermühlenhof',
              'Grundermühlenweg',
              'Grüner Weg',
              'Grunewaldstr.',
              'Grünstr.',
              'Günther-Weisenborn-Str.',
              'Gustav-Freytag-Str.',
              'Gustav-Heinemann-Str.',
              'Gustav-Radbruch-Str.',
              'Gut Reuschenberg',
              'Gutenbergstr.',
              'Haberstr.',
              'Habichtgasse',
              'Hafenstr.',
              'Hagenauer Str.',
              'Hahnenblecher',
              'Halenseestr.',
              'Halfenleimbach',
              'Hallesche Str.',
              'Halligstr.',
              'Hamberger Str.',
              'Hammerweg',
              'Händelstr.',
              'Hannah-Höch-Str.',
              'Hans-Arp-Str.',
              'Hans-Gerhard-Str.',
              'Hans-Sachs-Str.',
              'Hans-Schlehahn-Str.',
              'Hans-von-Dohnanyi-Str.',
              'Hardenbergstr.',
              'Haselweg',
              'Hauptstr.',
              'Haus-Vorster-Str.',
              'Hauweg',
              'Havelstr.',
              'Havensteinstr.',
              'Haydnstr.',
              'Hebbelstr.',
              'Heckenweg',
              'Heerweg',
              'Hegelstr.',
              'Heidberg',
              'Heidehöhe',
              'Heidestr.',
              'Heimstättenweg',
              'Heinrich-Böll-Str.',
              'Heinrich-Brüning-Str.',
              'Heinrich-Claes-Str.',
              'Heinrich-Heine-Str.',
              'Heinrich-Hörlein-Str.',
              'Heinrich-Lübke-Str.',
              'Heinrich-Lützenkirchen-Weg',
              'Heinrichstr.',
              'Heinrich-Strerath-Str.',
              'Heinrich-von-Kleist-Str.',
              'Heinrich-von-Stephan-Str.',
              'Heisterbachstr.',
              'Helenenstr.',
              'Helmestr.',
              'Hemmelrather Weg',
              'Henry-T.-v.-Böttinger-Str.',
              'Herderstr.',
              'Heribertstr.',
              'Hermann-Ehlers-Str.',
              'Hermann-Hesse-Str.',
              'Hermann-König-Str.',
              'Hermann-Löns-Str.',
              'Hermann-Milde-Str.',
              'Hermann-Nörrenberg-Str.',
              'Hermann-von-Helmholtz-Str.',
              'Hermann-Waibel-Str.',
              'Herzogstr.',
              'Heymannstr.',
              'Hindenburgstr.',
              'Hirzenberg',
              'Hitdorfer Kirchweg',
              'Hitdorfer Str.',
              'Höfer Mühle',
              'Höfer Weg',
              'Hohe Str.',
              'Höhenstr.',
              'Höltgestal',
              'Holunderweg',
              'Holzer Weg',
              'Holzer Wiesen',
              'Hornpottweg',
              'Hubertusweg',
              'Hufelandstr.',
              'Hufer Weg',
              'Humboldtstr.',
              'Hummelsheim',
              'Hummelweg',
              'Humperdinckstr.',
              'Hüscheider Gärten',
              'Hüscheider Str.',
              'Hütte',
              'Ilmstr.',
              'Im Bergischen Heim',
              'Im Bruch',
              'Im Buchenhain',
              'Im Bühl',
              'Im Burgfeld',
              'Im Dorf',
              'Im Eisholz',
              'Im Friedenstal',
              'Im Frohental',
              'Im Grunde',
              'Im Hederichsfeld',
              'Im Jücherfeld',
              'Im Kalkfeld',
              'Im Kirberg',
              'Im Kirchfeld',
              'Im Kreuzbruch',
              'Im Mühlenfeld',
              'Im Nesselrader Kamp',
              'Im Oberdorf',
              'Im Oberfeld',
              'Im Rosengarten',
              'Im Rottland',
              'Im Scheffengarten',
              'Im Staderfeld',
              'Im Steinfeld',
              'Im Weidenblech',
              'Im Winkel',
              'Im Ziegelfeld',
              'Imbach',
              'Imbacher Weg',
              'Immenweg',
              'In den Blechenhöfen',
              'In den Dehlen',
              'In der Birkenau',
              'In der Dasladen',
              'In der Felderhütten',
              'In der Hartmannswiese',
              'In der Höhle',
              'In der Schaafsdellen',
              'In der Wasserkuhl',
              'In der Wüste',
              'In Holzhausen',
              'Insterstr.',
              'Jacob-Fröhlen-Str.',
              'Jägerstr.',
              'Jahnstr.',
              'Jakob-Eulenberg-Weg',
              'Jakobistr.',
              'Jakob-Kaiser-Str.',
              'Jenaer Str.',
              'Johannes-Baptist-Str.',
              'Johannes-Dott-Str.',
              'Johannes-Popitz-Str.',
              'Johannes-Wislicenus-Str.',
              'Johannisburger Str.',
              'Johann-Janssen-Str.',
              'Johann-Wirtz-Weg',
              'Josefstr.',
              'Jüch',
              'Julius-Doms-Str.',
              'Julius-Leber-Str.',
              'Kaiserplatz',
              'Kaiserstr.',
              'Kaiser-Wilhelm-Allee',
              'Kalkstr.',
              'Kämpchenstr.',
              'Kämpenwiese',
              'Kämper Weg',
              'Kamptalweg',
              'Kanalstr.',
              'Kandinskystr.',
              'Kantstr.',
              'Kapellenstr.',
              'Karl-Arnold-Str.',
              'Karl-Bosch-Str.',
              'Karl-Bückart-Str.',
              'Karl-Carstens-Ring',
              'Karl-Friedrich-Goerdeler-Str.',
              'Karl-Jaspers-Str.',
              'Karl-König-Str.',
              'Karl-Krekeler-Str.',
              'Karl-Marx-Str.',
              'Karlstr.',
              'Karl-Ulitzka-Str.',
              'Karl-Wichmann-Str.',
              'Karl-Wingchen-Str.',
              'Käsenbrod',
              'Käthe-Kollwitz-Str.',
              'Katzbachstr.',
              'Kerschensteinerstr.',
              'Kiefernweg',
              'Kieler Str.',
              'Kieselstr.',
              'Kiesweg',
              'Kinderhausen',
              'Kleiberweg',
              'Kleine Kirchstr.',
              'Kleingansweg',
              'Kleinheider Weg',
              'Klief',
              'Kneippstr.',
              'Knochenbergsweg',
              'Kochergarten',
              'Kocherstr.',
              'Kockelsberg',
              'Kolberger Str.',
              'Kolmarer Str.',
              'Kölner Gasse',
              'Kölner Str.',
              'Kolpingstr.',
              'Königsberger Platz',
              'Konrad-Adenauer-Platz',
              'Köpenicker Str.',
              'Kopernikusstr.',
              'Körnerstr.',
              'Köschenberg',
              'Köttershof',
              'Kreuzbroicher Str.',
              'Kreuzkamp',
              'Krummer Weg',
              'Kruppstr.',
              'Kuhlmannweg',
              'Kump',
              'Kumper Weg',
              'Kunstfeldstr.',
              'Küppersteger Str.',
              'Kursiefen',
              'Kursiefer Weg',
              'Kurtekottenweg',
              'Kurt-Schumacher-Ring',
              'Kyllstr.',
              'Langenfelder Str.',
              'Längsleimbach',
              'Lärchenweg',
              'Legienstr.',
              'Lehner Mühle',
              'Leichlinger Str.',
              'Leimbacher Hof',
              'Leinestr.',
              'Leineweberstr.',
              'Leipziger Str.',
              'Lerchengasse',
              'Lessingstr.',
              'Libellenweg',
              'Lichstr.',
              'Liebigstr.',
              'Lindenstr.',
              'Lingenfeld',
              'Linienstr.',
              'Lippe',
              'Löchergraben',
              'Löfflerstr.',
              'Loheweg',
              'Lohrbergstr.',
              'Lohrstr.',
              'Löhstr.',
              'Lortzingstr.',
              'Lötzener Str.',
              'Löwenburgstr.',
              'Lucasstr.',
              'Ludwig-Erhard-Platz',
              'Ludwig-Girtler-Str.',
              'Ludwig-Knorr-Str.',
              'Luisenstr.',
              'Lupinenweg',
              'Lurchenweg',
              'Lützenkirchener Str.',
              'Lycker Str.',
              'Maashofstr.',
              'Manforter Str.',
              'Marc-Chagall-Str.',
              'Maria-Dresen-Str.',
              'Maria-Terwiel-Str.',
              'Marie-Curie-Str.',
              'Marienburger Str.',
              'Mariendorfer Str.',
              'Marienwerderstr.',
              'Marie-Schlei-Str.',
              'Marktplatz',
              'Markusweg',
              'Martin-Buber-Str.',
              'Martin-Heidegger-Str.',
              'Martin-Luther-Str.',
              'Masurenstr.',
              'Mathildenweg',
              'Maurinusstr.',
              'Mauspfad',
              'Max-Beckmann-Str.',
              'Max-Delbrück-Str.',
              'Max-Ernst-Str.',
              'Max-Holthausen-Platz',
              'Max-Horkheimer-Str.',
              'Max-Liebermann-Str.',
              'Max-Pechstein-Str.',
              'Max-Planck-Str.',
              'Max-Scheler-Str.',
              'Max-Schönenberg-Str.',
              'Maybachstr.',
              'Meckhofer Feld',
              'Meisenweg',
              'Memelstr.',
              'Menchendahler Str.',
              'Mendelssohnstr.',
              'Merziger Str.',
              'Mettlacher Str.',
              'Metzer Str.',
              'Michaelsweg',
              'Miselohestr.',
              'Mittelstr.',
              'Mohlenstr.',
              'Moltkestr.',
              'Monheimer Str.',
              'Montanusstr.',
              'Montessoriweg',
              'Moosweg',
              'Morsbroicher Str.',
              'Moselstr.',
              'Moskauer Str.',
              'Mozartstr.',
              'Mühlenweg',
              'Muhrgasse',
              'Muldestr.',
              'Mülhausener Str.',
              'Mülheimer Str.',
              'Münsters Gäßchen',
              'Münzstr.',
              'Müritzstr.',
              'Myliusstr.',
              'Nachtigallenweg',
              'Nauener Str.',
              'Neißestr.',
              'Nelly-Sachs-Str.',
              'Netzestr.',
              'Neuendriesch',
              'Neuenhausgasse',
              'Neuenkamp',
              'Neujudenhof',
              'Neukronenberger Str.',
              'Neustadtstr.',
              'Nicolai-Hartmann-Str.',
              'Niederblecher',
              'Niederfeldstr.',
              'Nietzschestr.',
              'Nikolaus-Groß-Str.',
              'Nobelstr.',
              'Norderneystr.',
              'Nordstr.',
              'Ober dem Hof',
              'Obere Lindenstr.',
              'Obere Str.',
              'Oberölbach',
              'Odenthaler Str.',
              'Oderstr.',
              'Okerstr.',
              'Olof-Palme-Str.',
              'Ophovener Str.',
              'Opladener Platz',
              'Opladener Str.',
              'Ortelsburger Str.',
              'Oskar-Moll-Str.',
              'Oskar-Schlemmer-Str.',
              'Oststr.',
              'Oswald-Spengler-Str.',
              'Otto-Dix-Str.',
              'Otto-Grimm-Str.',
              'Otto-Hahn-Str.',
              'Otto-Müller-Str.',
              'Otto-Stange-Str.',
              'Ottostr.',
              'Otto-Varnhagen-Str.',
              'Otto-Wels-Str.',
              'Ottweilerstr.',
              'Oulustr.',
              'Overfeldweg',
              'Pappelweg',
              'Paracelsusstr.',
              'Parkstr.',
              'Pastor-Louis-Str.',
              'Pastor-Scheibler-Str.',
              'Pastorskamp',
              'Paul-Klee-Str.',
              'Paul-Löbe-Str.',
              'Paulstr.',
              'Peenestr.',
              'Pescher Busch',
              'Peschstr.',
              'Pestalozzistr.',
              'Peter-Grieß-Str.',
              'Peter-Joseph-Lenné-Str.',
              'Peter-Neuenheuser-Str.',
              'Petersbergstr.',
              'Peterstr.',
              'Pfarrer-Jekel-Str.',
              'Pfarrer-Klein-Str.',
              'Pfarrer-Röhr-Str.',
              'Pfeilshofstr.',
              'Philipp-Ott-Str.',
              'Piet-Mondrian-Str.',
              'Platanenweg',
              'Pommernstr.',
              'Porschestr.',
              'Poststr.',
              'Potsdamer Str.',
              'Pregelstr.',
              'Prießnitzstr.',
              'Pützdelle',
              'Quarzstr.',
              'Quettinger Str.',
              'Rat-Deycks-Str.',
              'Rathenaustr.',
              'Ratherkämp',
              'Ratiborer Str.',
              'Raushofstr.',
              'Regensburger Str.',
              'Reinickendorfer Str.',
              'Renkgasse',
              'Rennbaumplatz',
              'Rennbaumstr.',
              'Reuschenberger Str.',
              'Reusrather Str.',
              'Reuterstr.',
              'Rheinallee',
              'Rheindorfer Str.',
              'Rheinstr.',
              'Rhein-Wupper-Platz',
              'Richard-Wagner-Str.',
              'Rilkestr.',
              'Ringstr.',
              'Robert-Blum-Str.',
              'Robert-Koch-Str.',
              'Robert-Medenwald-Str.',
              'Rolandstr.',
              'Romberg',
              'Röntgenstr.',
              'Roonstr.',
              'Ropenstall',
              'Ropenstaller Weg',
              'Rosenthal',
              'Rostocker Str.',
              'Rotdornweg',
              'Röttgerweg',
              'Rückertstr.',
              'Rudolf-Breitscheid-Str.',
              'Rudolf-Mann-Platz',
              'Rudolf-Stracke-Str.',
              'Ruhlachplatz',
              'Ruhlachstr.',
              'Rüttersweg',
              'Saalestr.',
              'Saarbrücker Str.',
              'Saarlauterner Str.',
              'Saarstr.',
              'Salamanderweg',
              'Samlandstr.',
              'Sanddornstr.',
              'Sandstr.',
              'Sauerbruchstr.',
              'Schäfershütte',
              'Scharnhorststr.',
              'Scheffershof',
              'Scheidemannstr.',
              'Schellingstr.',
              'Schenkendorfstr.',
              'Schießbergstr.',
              'Schillerstr.',
              'Schlangenhecke',
              'Schlebuscher Heide',
              'Schlebuscher Str.',
              'Schlebuschrath',
              'Schlehdornstr.',
              'Schleiermacherstr.',
              'Schloßstr.',
              'Schmalenbruch',
              'Schnepfenflucht',
              'Schöffenweg',
              'Schöllerstr.',
              'Schöne Aussicht',
              'Schöneberger Str.',
              'Schopenhauerstr.',
              'Schubertplatz',
              'Schubertstr.',
              'Schulberg',
              'Schulstr.',
              'Schumannstr.',
              'Schwalbenweg',
              'Schwarzastr.',
              'Sebastianusweg',
              'Semmelweisstr.',
              'Siebelplatz',
              'Siemensstr.',
              'Solinger Str.',
              'Sonderburger Str.',
              'Spandauer Str.',
              'Speestr.',
              'Sperberweg',
              'Sperlingsweg',
              'Spitzwegstr.',
              'Sporrenberger Mühle',
              'Spreestr.',
              'St. Ingberter Str.',
              'Starenweg',
              'Stauffenbergstr.',
              'Stefan-Zweig-Str.',
              'Stegerwaldstr.',
              'Steglitzer Str.',
              'Steinbücheler Feld',
              'Steinbücheler Str.',
              'Steinstr.',
              'Steinweg',
              'Stephan-Lochner-Str.',
              'Stephanusstr.',
              'Stettiner Str.',
              'Stixchesstr.',
              'Stöckenstr.',
              'Stralsunder Str.',
              'Straßburger Str.',
              'Stresemannplatz',
              'Strombergstr.',
              'Stromstr.',
              'Stüttekofener Str.',
              'Sudestr.',
              'Sürderstr.',
              'Syltstr.',
              'Talstr.',
              'Tannenbergstr.',
              'Tannenweg',
              'Taubenweg',
              'Teitscheider Weg',
              'Telegrafenstr.',
              'Teltower Str.',
              'Tempelhofer Str.',
              'Theodor-Adorno-Str.',
              'Theodor-Fliedner-Str.',
              'Theodor-Gierath-Str.',
              'Theodor-Haubach-Str.',
              'Theodor-Heuss-Ring',
              'Theodor-Storm-Str.',
              'Theodorstr.',
              'Thomas-Dehler-Str.',
              'Thomas-Morus-Str.',
              'Thomas-von-Aquin-Str.',
              'Tönges Feld',
              'Torstr.',
              'Treptower Str.',
              'Treuburger Str.',
              'Uhlandstr.',
              'Ulmenweg',
              'Ulmer Str.',
              'Ulrichstr.',
              'Ulrich-von-Hassell-Str.',
              'Umlag',
              'Unstrutstr.',
              'Unter dem Schildchen',
              'Unterölbach',
              'Unterstr.',
              'Uppersberg',
              'Van\\\'t-Hoff-Str.',
              'Veit-Stoß-Str.',
              'Vereinsstr.',
              'Viktor-Meyer-Str.',
              'Vincent-van-Gogh-Str.',
              'Virchowstr.',
              'Voigtslach',
              'Volhardstr.',
              'Völklinger Str.',
              'Von-Brentano-Str.',
              'Von-Diergardt-Str.',
              'Von-Eichendorff-Str.',
              'Von-Ketteler-Str.',
              'Von-Knoeringen-Str.',
              'Von-Pettenkofer-Str.',
              'Von-Siebold-Str.',
              'Wacholderweg',
              'Waldstr.',
              'Walter-Flex-Str.',
              'Walter-Hempel-Str.',
              'Walter-Hochapfel-Str.',
              'Walter-Nernst-Str.',
              'Wannseestr.',
              'Warnowstr.',
              'Warthestr.',
              'Weddigenstr.',
              'Weichselstr.',
              'Weidenstr.',
              'Weidfeldstr.',
              'Weiherfeld',
              'Weiherstr.',
              'Weinhäuser Str.',
              'Weißdornweg',
              'Weißenseestr.',
              'Weizkamp',
              'Werftstr.',
              'Werkstättenstr.',
              'Werner-Heisenberg-Str.',
              'Werrastr.',
              'Weyerweg',
              'Widdauener Str.',
              'Wiebertshof',
              'Wiehbachtal',
              'Wiembachallee',
              'Wiesdorfer Platz',
              'Wiesenstr.',
              'Wilhelm-Busch-Str.',
              'Wilhelm-Hastrich-Str.',
              'Wilhelm-Leuschner-Str.',
              'Wilhelm-Liebknecht-Str.',
              'Wilhelmsgasse',
              'Wilhelmstr.',
              'Willi-Baumeister-Str.',
              'Willy-Brandt-Ring',
              'Winand-Rossi-Str.',
              'Windthorststr.',
              'Winkelweg',
              'Winterberg',
              'Wittenbergstr.',
              'Wolf-Vostell-Str.',
              'Wolkenburgstr.',
              'Wupperstr.',
              'Wuppertalstr.',
              'Wüstenhof',
              'Yitzhak-Rabin-Str.',
              'Zauberkuhle',
              'Zedernweg',
              'Zehlendorfer Str.',
              'Zehntenweg',
              'Zeisigweg',
              'Zeppelinstr.',
              'Zschopaustr.',
              'Zum Claashäuschen',
              'Zündhütchenweg',
              'Zur Alten Brauerei',
              'Zur alten Fabrik'
            ],
            building_number: [
              '###',
              '##',
              '#',
              '##a',
              '##b',
              '##c'
            ],
            secondary_address: [
              'Apt. ###',
              'Zimmer ###',
              '# OG'
            ],
            postcode: [
              '#####',
              '#####'
            ],
            state: [
              'Baden-Württemberg',
              'Bayern',
              'Berlin',
              'Brandenburg',
              'Bremen',
              'Hamburg',
              'Hessen',
              'Mecklenburg-Vorpommern',
              'Niedersachsen',
              'Nordrhein-Westfalen',
              'Rheinland-Pfalz',
              'Saarland',
              'Sachsen',
              'Sachsen-Anhalt',
              'Schleswig-Holstein',
              'Thüringen'
            ],
            state_abbr: [
              'BW',
              'BY',
              'BE',
              'BB',
              'HB',
              'HH',
              'HE',
              'MV',
              'NI',
              'NW',
              'RP',
              'SL',
              'SN',
              'ST',
              'SH',
              'TH'
            ],
            city: [
              '#{city_prefix} #{Name.first_name}#{city_suffix}',
              '#{city_prefix} #{Name.first_name}',
              '#{Name.first_name}#{city_suffix}',
              '#{Name.last_name}#{city_suffix}'
            ],
            street_name: [
              '#{street_root}'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            default_country: [
              'Deutschland'
            ]
          },
          company: {
            suffix: [
              'GmbH',
              'AG',
              'Gruppe',
              'KG',
              'GmbH & Co. KG',
              'UG',
              'OHG'
            ],
            legal_form: [
              'GmbH',
              'AG',
              'Gruppe',
              'KG',
              'GmbH & Co. KG',
              'UG',
              'OHG'
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} und #{Name.last_name}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'com',
              'info',
              'name',
              'net',
              'org',
              'de',
              'ch'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ]
          },
          name: {
            first_name: [
              'Aaron',
              'Abdul',
              'Abdullah',
              'Adam',
              'Adrian',
              'Adriano',
              'Ahmad',
              'Ahmed',
              'Ahmet',
              'Alan',
              'Albert',
              'Alessandro',
              'Alessio',
              'Alex',
              'Alexander',
              'Alfred',
              'Ali',
              'Amar',
              'Amir',
              'Amon',
              'Andre',
              'Andreas',
              'Andrew',
              'Angelo',
              'Ansgar',
              'Anthony',
              'Anton',
              'Antonio',
              'Arda',
              'Arian',
              'Armin',
              'Arne',
              'Arno',
              'Arthur',
              'Artur',
              'Arved',
              'Arvid',
              'Ayman',
              'Baran',
              'Baris',
              'Bastian',
              'Batuhan',
              'Bela',
              'Ben',
              'Benedikt',
              'Benjamin',
              'Bennet',
              'Bennett',
              'Benno',
              'Bent',
              'Berat',
              'Berkay',
              'Bernd',
              'Bilal',
              'Bjarne',
              'Björn',
              'Bo',
              'Boris',
              'Brandon',
              'Brian',
              'Bruno',
              'Bryan',
              'Burak',
              'Calvin',
              'Can',
              'Carl',
              'Carlo',
              'Carlos',
              'Caspar',
              'Cedric',
              'Cedrik',
              'Cem',
              'Charlie',
              'Chris',
              'Christian',
              'Christiano',
              'Christoph',
              'Christopher',
              'Claas',
              'Clemens',
              'Colin',
              'Collin',
              'Conner',
              'Connor',
              'Constantin',
              'Corvin',
              'Curt',
              'Damian',
              'Damien',
              'Daniel',
              'Danilo',
              'Danny',
              'Darian',
              'Dario',
              'Darius',
              'Darren',
              'David',
              'Davide',
              'Davin',
              'Dean',
              'Deniz',
              'Dennis',
              'Denny',
              'Devin',
              'Diego',
              'Dion',
              'Domenic',
              'Domenik',
              'Dominic',
              'Dominik',
              'Dorian',
              'Dustin',
              'Dylan',
              'Ecrin',
              'Eddi',
              'Eddy',
              'Edgar',
              'Edwin',
              'Efe',
              'Ege',
              'Elia',
              'Eliah',
              'Elias',
              'Elijah',
              'Emanuel',
              'Emil',
              'Emilian',
              'Emilio',
              'Emir',
              'Emirhan',
              'Emre',
              'Enes',
              'Enno',
              'Enrico',
              'Eren',
              'Eric',
              'Erik',
              'Etienne',
              'Fabian',
              'Fabien',
              'Fabio',
              'Fabrice',
              'Falk',
              'Felix',
              'Ferdinand',
              'Fiete',
              'Filip',
              'Finlay',
              'Finley',
              'Finn',
              'Finnley',
              'Florian',
              'Francesco',
              'Franz',
              'Frederic',
              'Frederick',
              'Frederik',
              'Friedrich',
              'Fritz',
              'Furkan',
              'Fynn',
              'Gabriel',
              'Georg',
              'Gerrit',
              'Gian',
              'Gianluca',
              'Gino',
              'Giuliano',
              'Giuseppe',
              'Gregor',
              'Gustav',
              'Hagen',
              'Hamza',
              'Hannes',
              'Hanno',
              'Hans',
              'Hasan',
              'Hassan',
              'Hauke',
              'Hendrik',
              'Hennes',
              'Henning',
              'Henri',
              'Henrick',
              'Henrik',
              'Henry',
              'Hugo',
              'Hussein',
              'Ian',
              'Ibrahim',
              'Ilias',
              'Ilja',
              'Ilyas',
              'Immanuel',
              'Ismael',
              'Ismail',
              'Ivan',
              'Iven',
              'Jack',
              'Jacob',
              'Jaden',
              'Jakob',
              'Jamal',
              'James',
              'Jamie',
              'Jan',
              'Janek',
              'Janis',
              'Janne',
              'Jannek',
              'Jannes',
              'Jannik',
              'Jannis',
              'Jano',
              'Janosch',
              'Jared',
              'Jari',
              'Jarne',
              'Jarno',
              'Jaron',
              'Jason',
              'Jasper',
              'Jay',
              'Jayden',
              'Jayson',
              'Jean',
              'Jens',
              'Jeremias',
              'Jeremie',
              'Jeremy',
              'Jermaine',
              'Jerome',
              'Jesper',
              'Jesse',
              'Jim',
              'Jimmy',
              'Joe',
              'Joel',
              'Joey',
              'Johann',
              'Johannes',
              'John',
              'Johnny',
              'Jon',
              'Jona',
              'Jonah',
              'Jonas',
              'Jonathan',
              'Jonte',
              'Joost',
              'Jordan',
              'Joris',
              'Joscha',
              'Joschua',
              'Josef',
              'Joseph',
              'Josh',
              'Joshua',
              'Josua',
              'Juan',
              'Julian',
              'Julien',
              'Julius',
              'Juri',
              'Justin',
              'Justus',
              'Kaan',
              'Kai',
              'Kalle',
              'Karim',
              'Karl',
              'Karlo',
              'Kay',
              'Keanu',
              'Kenan',
              'Kenny',
              'Keno',
              'Kerem',
              'Kerim',
              'Kevin',
              'Kian',
              'Kilian',
              'Kim',
              'Kimi',
              'Kjell',
              'Klaas',
              'Klemens',
              'Konrad',
              'Konstantin',
              'Koray',
              'Korbinian',
              'Kurt',
              'Lars',
              'Lasse',
              'Laurence',
              'Laurens',
              'Laurenz',
              'Laurin',
              'Lean',
              'Leander',
              'Leandro',
              'Leif',
              'Len',
              'Lenn',
              'Lennard',
              'Lennart',
              'Lennert',
              'Lennie',
              'Lennox',
              'Lenny',
              'Leo',
              'Leon',
              'Leonard',
              'Leonardo',
              'Leonhard',
              'Leonidas',
              'Leopold',
              'Leroy',
              'Levent',
              'Levi',
              'Levin',
              'Lewin',
              'Lewis',
              'Liam',
              'Lian',
              'Lias',
              'Lino',
              'Linus',
              'Lio',
              'Lion',
              'Lionel',
              'Logan',
              'Lorenz',
              'Lorenzo',
              'Loris',
              'Louis',
              'Luan',
              'Luc',
              'Luca',
              'Lucas',
              'Lucian',
              'Lucien',
              'Ludwig',
              'Luis',
              'Luiz',
              'Luk',
              'Luka',
              'Lukas',
              'Luke',
              'Lutz',
              'Maddox',
              'Mads',
              'Magnus',
              'Maik',
              'Maksim',
              'Malik',
              'Malte',
              'Manuel',
              'Marc',
              'Marcel',
              'Marco',
              'Marcus',
              'Marek',
              'Marian',
              'Mario',
              'Marius',
              'Mark',
              'Marko',
              'Markus',
              'Marlo',
              'Marlon',
              'Marten',
              'Martin',
              'Marvin',
              'Marwin',
              'Mateo',
              'Mathis',
              'Matis',
              'Mats',
              'Matteo',
              'Mattes',
              'Matthias',
              'Matthis',
              'Matti',
              'Mattis',
              'Maurice',
              'Max',
              'Maxim',
              'Maximilian',
              'Mehmet',
              'Meik',
              'Melvin',
              'Merlin',
              'Mert',
              'Michael',
              'Michel',
              'Mick',
              'Miguel',
              'Mika',
              'Mikail',
              'Mike',
              'Milan',
              'Milo',
              'Mio',
              'Mirac',
              'Mirco',
              'Mirko',
              'Mohamed',
              'Mohammad',
              'Mohammed',
              'Moritz',
              'Morten',
              'Muhammed',
              'Murat',
              'Mustafa',
              'Nathan',
              'Nathanael',
              'Nelson',
              'Neo',
              'Nevio',
              'Nick',
              'Niclas',
              'Nico',
              'Nicolai',
              'Nicolas',
              'Niels',
              'Nikita',
              'Niklas',
              'Niko',
              'Nikolai',
              'Nikolas',
              'Nils',
              'Nino',
              'Noah',
              'Noel',
              'Norman',
              'Odin',
              'Oke',
              'Ole',
              'Oliver',
              'Omar',
              'Onur',
              'Oscar',
              'Oskar',
              'Pascal',
              'Patrice',
              'Patrick',
              'Paul',
              'Peer',
              'Pepe',
              'Peter',
              'Phil',
              'Philip',
              'Philipp',
              'Pierre',
              'Piet',
              'Pit',
              'Pius',
              'Quentin',
              'Quirin',
              'Rafael',
              'Raik',
              'Ramon',
              'Raphael',
              'Rasmus',
              'Raul',
              'Rayan',
              'René',
              'Ricardo',
              'Riccardo',
              'Richard',
              'Rick',
              'Rico',
              'Robert',
              'Robin',
              'Rocco',
              'Roman',
              'Romeo',
              'Ron',
              'Ruben',
              'Ryan',
              'Said',
              'Salih',
              'Sam',
              'Sami',
              'Sammy',
              'Samuel',
              'Sandro',
              'Santino',
              'Sascha',
              'Sean',
              'Sebastian',
              'Selim',
              'Semih',
              'Shawn',
              'Silas',
              'Simeon',
              'Simon',
              'Sinan',
              'Sky',
              'Stefan',
              'Steffen',
              'Stephan',
              'Steve',
              'Steven',
              'Sven',
              'Sönke',
              'Sören',
              'Taha',
              'Tamino',
              'Tammo',
              'Tarik',
              'Tayler',
              'Taylor',
              'Teo',
              'Theo',
              'Theodor',
              'Thies',
              'Thilo',
              'Thomas',
              'Thorben',
              'Thore',
              'Thorge',
              'Tiago',
              'Til',
              'Till',
              'Tillmann',
              'Tim',
              'Timm',
              'Timo',
              'Timon',
              'Timothy',
              'Tino',
              'Titus',
              'Tizian',
              'Tjark',
              'Tobias',
              'Tom',
              'Tommy',
              'Toni',
              'Tony',
              'Torben',
              'Tore',
              'Tristan',
              'Tyler',
              'Tyron',
              'Umut',
              'Valentin',
              'Valentino',
              'Veit',
              'Victor',
              'Viktor',
              'Vin',
              'Vincent',
              'Vito',
              'Vitus',
              'Wilhelm',
              'Willi',
              'William',
              'Willy',
              'Xaver',
              'Yannic',
              'Yannick',
              'Yannik',
              'Yannis',
              'Yasin',
              'Youssef',
              'Yunus',
              'Yusuf',
              'Yven',
              'Yves',
              'Ömer',
              'Aaliyah',
              'Abby',
              'Abigail',
              'Ada',
              'Adelina',
              'Adriana',
              'Aileen',
              'Aimee',
              'Alana',
              'Alea',
              'Alena',
              'Alessa',
              'Alessia',
              'Alexa',
              'Alexandra',
              'Alexia',
              'Alexis',
              'Aleyna',
              'Alia',
              'Alica',
              'Alice',
              'Alicia',
              'Alina',
              'Alisa',
              'Alisha',
              'Alissa',
              'Aliya',
              'Aliyah',
              'Allegra',
              'Alma',
              'Alyssa',
              'Amalia',
              'Amanda',
              'Amelia',
              'Amelie',
              'Amina',
              'Amira',
              'Amy',
              'Ana',
              'Anabel',
              'Anastasia',
              'Andrea',
              'Angela',
              'Angelina',
              'Angelique',
              'Anja',
              'Ann',
              'Anna',
              'Annabel',
              'Annabell',
              'Annabelle',
              'Annalena',
              'Anne',
              'Anneke',
              'Annelie',
              'Annemarie',
              'Anni',
              'Annie',
              'Annika',
              'Anny',
              'Anouk',
              'Antonia',
              'Arda',
              'Ariana',
              'Ariane',
              'Arwen',
              'Ashley',
              'Asya',
              'Aurelia',
              'Aurora',
              'Ava',
              'Ayleen',
              'Aylin',
              'Ayse',
              'Azra',
              'Betty',
              'Bianca',
              'Bianka',
              'Caitlin',
              'Cara',
              'Carina',
              'Carla',
              'Carlotta',
              'Carmen',
              'Carolin',
              'Carolina',
              'Caroline',
              'Cassandra',
              'Catharina',
              'Catrin',
              'Cecile',
              'Cecilia',
              'Celia',
              'Celina',
              'Celine',
              'Ceyda',
              'Ceylin',
              'Chantal',
              'Charleen',
              'Charlotta',
              'Charlotte',
              'Chayenne',
              'Cheyenne',
              'Chiara',
              'Christin',
              'Christina',
              'Cindy',
              'Claire',
              'Clara',
              'Clarissa',
              'Colleen',
              'Collien',
              'Cora',
              'Corinna',
              'Cosima',
              'Dana',
              'Daniela',
              'Daria',
              'Darleen',
              'Defne',
              'Delia',
              'Denise',
              'Diana',
              'Dilara',
              'Dina',
              'Dorothea',
              'Ecrin',
              'Eda',
              'Eileen',
              'Ela',
              'Elaine',
              'Elanur',
              'Elea',
              'Elena',
              'Eleni',
              'Eleonora',
              'Eliana',
              'Elif',
              'Elina',
              'Elisa',
              'Elisabeth',
              'Ella',
              'Ellen',
              'Elli',
              'Elly',
              'Elsa',
              'Emelie',
              'Emely',
              'Emilia',
              'Emilie',
              'Emily',
              'Emma',
              'Emmely',
              'Emmi',
              'Emmy',
              'Enie',
              'Enna',
              'Enya',
              'Esma',
              'Estelle',
              'Esther',
              'Eva',
              'Evelin',
              'Evelina',
              'Eveline',
              'Evelyn',
              'Fabienne',
              'Fatima',
              'Fatma',
              'Felicia',
              'Felicitas',
              'Felina',
              'Femke',
              'Fenja',
              'Fine',
              'Finia',
              'Finja',
              'Finnja',
              'Fiona',
              'Flora',
              'Florentine',
              'Francesca',
              'Franka',
              'Franziska',
              'Frederike',
              'Freya',
              'Frida',
              'Frieda',
              'Friederike',
              'Giada',
              'Gina',
              'Giulia',
              'Giuliana',
              'Greta',
              'Hailey',
              'Hana',
              'Hanna',
              'Hannah',
              'Heidi',
              'Helen',
              'Helena',
              'Helene',
              'Helin',
              'Henriette',
              'Henrike',
              'Hermine',
              'Ida',
              'Ilayda',
              'Imke',
              'Ina',
              'Ines',
              'Inga',
              'Inka',
              'Irem',
              'Isa',
              'Isabel',
              'Isabell',
              'Isabella',
              'Isabelle',
              'Ivonne',
              'Jacqueline',
              'Jamie',
              'Jamila',
              'Jana',
              'Jane',
              'Janin',
              'Janina',
              'Janine',
              'Janna',
              'Janne',
              'Jara',
              'Jasmin',
              'Jasmina',
              'Jasmine',
              'Jella',
              'Jenna',
              'Jennifer',
              'Jenny',
              'Jessica',
              'Jessy',
              'Jette',
              'Jil',
              'Jill',
              'Joana',
              'Joanna',
              'Joelina',
              'Joeline',
              'Joelle',
              'Johanna',
              'Joleen',
              'Jolie',
              'Jolien',
              'Jolin',
              'Jolina',
              'Joline',
              'Jona',
              'Jonah',
              'Jonna',
              'Josefin',
              'Josefine',
              'Josephin',
              'Josephine',
              'Josie',
              'Josy',
              'Joy',
              'Joyce',
              'Judith',
              'Judy',
              'Jule',
              'Julia',
              'Juliana',
              'Juliane',
              'Julie',
              'Julienne',
              'Julika',
              'Julina',
              'Juna',
              'Justine',
              'Kaja',
              'Karina',
              'Karla',
              'Karlotta',
              'Karolina',
              'Karoline',
              'Kassandra',
              'Katarina',
              'Katharina',
              'Kathrin',
              'Katja',
              'Katrin',
              'Kaya',
              'Kayra',
              'Kiana',
              'Kiara',
              'Kim',
              'Kimberley',
              'Kimberly',
              'Kira',
              'Klara',
              'Korinna',
              'Kristin',
              'Kyra',
              'Laila',
              'Lana',
              'Lara',
              'Larissa',
              'Laura',
              'Laureen',
              'Lavinia',
              'Lea',
              'Leah',
              'Leana',
              'Leandra',
              'Leann',
              'Lee',
              'Leila',
              'Lena',
              'Lene',
              'Leni',
              'Lenia',
              'Lenja',
              'Lenya',
              'Leona',
              'Leoni',
              'Leonie',
              'Leonora',
              'Leticia',
              'Letizia',
              'Levke',
              'Leyla',
              'Lia',
              'Liah',
              'Liana',
              'Lili',
              'Lilia',
              'Lilian',
              'Liliana',
              'Lilith',
              'Lilli',
              'Lillian',
              'Lilly',
              'Lily',
              'Lina',
              'Linda',
              'Lindsay',
              'Line',
              'Linn',
              'Linnea',
              'Lisa',
              'Lisann',
              'Lisanne',
              'Liv',
              'Livia',
              'Liz',
              'Lola',
              'Loreen',
              'Lorena',
              'Lotta',
              'Lotte',
              'Louisa',
              'Louise',
              'Luana',
              'Luca',
              'Lucia',
              'Lucie',
              'Lucienne',
              'Lucy',
              'Luisa',
              'Luise',
              'Luka',
              'Luna',
              'Luzie',
              'Lya',
              'Lydia',
              'Lyn',
              'Lynn',
              'Madeleine',
              'Madita',
              'Madleen',
              'Madlen',
              'Magdalena',
              'Maike',
              'Mailin',
              'Maira',
              'Maja',
              'Malena',
              'Malia',
              'Malin',
              'Malina',
              'Mandy',
              'Mara',
              'Marah',
              'Mareike',
              'Maren',
              'Maria',
              'Mariam',
              'Marie',
              'Marieke',
              'Mariella',
              'Marika',
              'Marina',
              'Marisa',
              'Marissa',
              'Marit',
              'Marla',
              'Marleen',
              'Marlen',
              'Marlena',
              'Marlene',
              'Marta',
              'Martha',
              'Mary',
              'Maryam',
              'Mathilda',
              'Mathilde',
              'Matilda',
              'Maxi',
              'Maxima',
              'Maxine',
              'Maya',
              'Mayra',
              'Medina',
              'Medine',
              'Meike',
              'Melanie',
              'Melek',
              'Melike',
              'Melina',
              'Melinda',
              'Melis',
              'Melisa',
              'Melissa',
              'Merle',
              'Merve',
              'Meryem',
              'Mette',
              'Mia',
              'Michaela',
              'Michelle',
              'Mieke',
              'Mila',
              'Milana',
              'Milena',
              'Milla',
              'Mina',
              'Mira',
              'Miray',
              'Miriam',
              'Mirja',
              'Mona',
              'Monique',
              'Nadine',
              'Nadja',
              'Naemi',
              'Nancy',
              'Naomi',
              'Natalia',
              'Natalie',
              'Nathalie',
              'Neele',
              'Nela',
              'Nele',
              'Nelli',
              'Nelly',
              'Nia',
              'Nicole',
              'Nika',
              'Nike',
              'Nikita',
              'Nila',
              'Nina',
              'Nisa',
              'Noemi',
              'Nora',
              'Olivia',
              'Patricia',
              'Patrizia',
              'Paula',
              'Paulina',
              'Pauline',
              'Penelope',
              'Philine',
              'Phoebe',
              'Pia',
              'Rahel',
              'Rania',
              'Rebecca',
              'Rebekka',
              'Riana',
              'Rieke',
              'Rike',
              'Romina',
              'Romy',
              'Ronja',
              'Rosa',
              'Rosalie',
              'Ruby',
              'Sabrina',
              'Sahra',
              'Sally',
              'Salome',
              'Samantha',
              'Samia',
              'Samira',
              'Sandra',
              'Sandy',
              'Sanja',
              'Saphira',
              'Sara',
              'Sarah',
              'Saskia',
              'Selin',
              'Selina',
              'Selma',
              'Sena',
              'Sidney',
              'Sienna',
              'Silja',
              'Sina',
              'Sinja',
              'Smilla',
              'Sofia',
              'Sofie',
              'Sonja',
              'Sophia',
              'Sophie',
              'Soraya',
              'Stefanie',
              'Stella',
              'Stephanie',
              'Stina',
              'Sude',
              'Summer',
              'Susanne',
              'Svea',
              'Svenja',
              'Sydney',
              'Tabea',
              'Talea',
              'Talia',
              'Tamara',
              'Tamia',
              'Tamina',
              'Tanja',
              'Tara',
              'Tarja',
              'Teresa',
              'Tessa',
              'Thalea',
              'Thalia',
              'Thea',
              'Theresa',
              'Tia',
              'Tina',
              'Tomke',
              'Tuana',
              'Valentina',
              'Valeria',
              'Valerie',
              'Vanessa',
              'Vera',
              'Veronika',
              'Victoria',
              'Viktoria',
              'Viola',
              'Vivian',
              'Vivien',
              'Vivienne',
              'Wibke',
              'Wiebke',
              'Xenia',
              'Yara',
              'Yaren',
              'Yasmin',
              'Ylvi',
              'Ylvie',
              'Yvonne',
              'Zara',
              'Zehra',
              'Zeynep',
              'Zoe',
              'Zoey',
              'Zoé'
            ],
            last_name: [
              'Abel',
              'Abicht',
              'Abraham',
              'Abramovic',
              'Abt',
              'Achilles',
              'Achkinadze',
              'Ackermann',
              'Adam',
              'Adams',
              'Ade',
              'Agostini',
              'Ahlke',
              'Ahrenberg',
              'Ahrens',
              'Aigner',
              'Albert',
              'Albrecht',
              'Alexa',
              'Alexander',
              'Alizadeh',
              'Allgeyer',
              'Amann',
              'Amberg',
              'Anding',
              'Anggreny',
              'Apitz',
              'Arendt',
              'Arens',
              'Arndt',
              'Aryee',
              'Aschenbroich',
              'Assmus',
              'Astafei',
              'Auer',
              'Axmann',
              'Baarck',
              'Bachmann',
              'Badane',
              'Bader',
              'Baganz',
              'Bahl',
              'Bak',
              'Balcer',
              'Balck',
              'Balkow',
              'Balnuweit',
              'Balzer',
              'Banse',
              'Barr',
              'Bartels',
              'Barth',
              'Barylla',
              'Baseda',
              'Battke',
              'Bauer',
              'Bauermeister',
              'Baumann',
              'Baumeister',
              'Bauschinger',
              'Bauschke',
              'Bayer',
              'Beavogui',
              'Beck',
              'Beckel',
              'Becker',
              'Beckmann',
              'Bedewitz',
              'Beele',
              'Beer',
              'Beggerow',
              'Beh',
              'Behr',
              'Behrenbruch',
              'Belz',
              'Bender',
              'Benecke',
              'Benner',
              'Benninger',
              'Benzing',
              'Berends',
              'Berger',
              'Berner',
              'Berning',
              'Bertenbreiter',
              'Best',
              'Bethke',
              'Betz',
              'Beushausen',
              'Beutelspacher',
              'Beyer',
              'Biba',
              'Bichler',
              'Bickel',
              'Biedermann',
              'Bieler',
              'Bielert',
              'Bienasch',
              'Bienias',
              'Biesenbach',
              'Bigdeli',
              'Birkemeyer',
              'Bittner',
              'Blank',
              'Blaschek',
              'Blassneck',
              'Bloch',
              'Blochwitz',
              'Blockhaus',
              'Blum',
              'Blume',
              'Bock',
              'Bode',
              'Bogdashin',
              'Bogenrieder',
              'Bohge',
              'Bolm',
              'Borgschulze',
              'Bork',
              'Bormann',
              'Bornscheuer',
              'Borrmann',
              'Borsch',
              'Boruschewski',
              'Bos',
              'Bosler',
              'Bourrouag',
              'Bouschen',
              'Boxhammer',
              'Boyde',
              'Bozsik',
              'Brand',
              'Brandenburg',
              'Brandis',
              'Brandt',
              'Brauer',
              'Braun',
              'Brehmer',
              'Breitenstein',
              'Bremer',
              'Bremser',
              'Brenner',
              'Brettschneider',
              'Breu',
              'Breuer',
              'Briesenick',
              'Bringmann',
              'Brinkmann',
              'Brix',
              'Broening',
              'Brosch',
              'Bruckmann',
              'Bruder',
              'Bruhns',
              'Brunner',
              'Bruns',
              'Bräutigam',
              'Brömme',
              'Brüggmann',
              'Buchholz',
              'Buchrucker',
              'Buder',
              'Bultmann',
              'Bunjes',
              'Burger',
              'Burghagen',
              'Burkhard',
              'Burkhardt',
              'Burmeister',
              'Busch',
              'Buschbaum',
              'Busemann',
              'Buss',
              'Busse',
              'Bussmann',
              'Byrd',
              'Bäcker',
              'Böhm',
              'Bönisch',
              'Börgeling',
              'Börner',
              'Böttner',
              'Büchele',
              'Bühler',
              'Büker',
              'Büngener',
              'Bürger',
              'Bürklein',
              'Büscher',
              'Büttner',
              'Camara',
              'Carlowitz',
              'Carlsohn',
              'Caspari',
              'Caspers',
              'Chapron',
              'Christ',
              'Cierpinski',
              'Clarius',
              'Cleem',
              'Cleve',
              'Co',
              'Conrad',
              'Cordes',
              'Cornelsen',
              'Cors',
              'Cotthardt',
              'Crews',
              'Cronjäger',
              'Crosskofp',
              'Da',
              'Dahm',
              'Dahmen',
              'Daimer',
              'Damaske',
              'Danneberg',
              'Danner',
              'Daub',
              'Daubner',
              'Daudrich',
              'Dauer',
              'Daum',
              'Dauth',
              'Dautzenberg',
              'De',
              'Decker',
              'Deckert',
              'Deerberg',
              'Dehmel',
              'Deja',
              'Delonge',
              'Demut',
              'Dengler',
              'Denner',
              'Denzinger',
              'Derr',
              'Dertmann',
              'Dethloff',
              'Deuschle',
              'Dieckmann',
              'Diedrich',
              'Diekmann',
              'Dienel',
              'Dies',
              'Dietrich',
              'Dietz',
              'Dietzsch',
              'Diezel',
              'Dilla',
              'Dingelstedt',
              'Dippl',
              'Dittmann',
              'Dittmar',
              'Dittmer',
              'Dix',
              'Dobbrunz',
              'Dobler',
              'Dohring',
              'Dolch',
              'Dold',
              'Dombrowski',
              'Donie',
              'Doskoczynski',
              'Dragu',
              'Drechsler',
              'Drees',
              'Dreher',
              'Dreier',
              'Dreissigacker',
              'Dressler',
              'Drews',
              'Duma',
              'Dutkiewicz',
              'Dyett',
              'Dylus',
              'Dächert',
              'Döbel',
              'Döring',
              'Dörner',
              'Dörre',
              'Dück',
              'Eberhard',
              'Eberhardt',
              'Ecker',
              'Eckhardt',
              'Edorh',
              'Effler',
              'Eggenmueller',
              'Ehm',
              'Ehmann',
              'Ehrig',
              'Eich',
              'Eichmann',
              'Eifert',
              'Einert',
              'Eisenlauer',
              'Ekpo',
              'Elbe',
              'Eleyth',
              'Elss',
              'Emert',
              'Emmelmann',
              'Ender',
              'Engel',
              'Engelen',
              'Engelmann',
              'Eplinius',
              'Erdmann',
              'Erhardt',
              'Erlei',
              'Erm',
              'Ernst',
              'Ertl',
              'Erwes',
              'Esenwein',
              'Esser',
              'Evers',
              'Everts',
              'Ewald',
              'Fahner',
              'Faller',
              'Falter',
              'Farber',
              'Fassbender',
              'Faulhaber',
              'Fehrig',
              'Feld',
              'Felke',
              'Feller',
              'Fenner',
              'Fenske',
              'Feuerbach',
              'Fietz',
              'Figl',
              'Figura',
              'Filipowski',
              'Filsinger',
              'Fincke',
              'Fink',
              'Finke',
              'Fischer',
              'Fitschen',
              'Fleischer',
              'Fleischmann',
              'Floder',
              'Florczak',
              'Flore',
              'Flottmann',
              'Forkel',
              'Forst',
              'Frahmeke',
              'Frank',
              'Franke',
              'Franta',
              'Frantz',
              'Franz',
              'Franzis',
              'Franzmann',
              'Frauen',
              'Frauendorf',
              'Freigang',
              'Freimann',
              'Freimuth',
              'Freisen',
              'Frenzel',
              'Frey',
              'Fricke',
              'Fried',
              'Friedek',
              'Friedenberg',
              'Friedmann',
              'Friedrich',
              'Friess',
              'Frisch',
              'Frohn',
              'Frosch',
              'Fuchs',
              'Fuhlbrügge',
              'Fusenig',
              'Fust',
              'Förster',
              'Gaba',
              'Gabius',
              'Gabler',
              'Gadschiew',
              'Gakstädter',
              'Galander',
              'Gamlin',
              'Gamper',
              'Gangnus',
              'Ganzmann',
              'Garatva',
              'Gast',
              'Gastel',
              'Gatzka',
              'Gauder',
              'Gebhardt',
              'Geese',
              'Gehre',
              'Gehrig',
              'Gehring',
              'Gehrke',
              'Geiger',
              'Geisler',
              'Geissler',
              'Gelling',
              'Gens',
              'Gerbennow',
              'Gerdel',
              'Gerhardt',
              'Gerschler',
              'Gerson',
              'Gesell',
              'Geyer',
              'Ghirmai',
              'Ghosh',
              'Giehl',
              'Gierisch',
              'Giesa',
              'Giesche',
              'Gilde',
              'Glatting',
              'Goebel',
              'Goedicke',
              'Goldbeck',
              'Goldfuss',
              'Goldkamp',
              'Goldkühle',
              'Goller',
              'Golling',
              'Gollnow',
              'Golomski',
              'Gombert',
              'Gotthardt',
              'Gottschalk',
              'Gotz',
              'Goy',
              'Gradzki',
              'Graf',
              'Grams',
              'Grasse',
              'Gratzky',
              'Grau',
              'Greb',
              'Green',
              'Greger',
              'Greithanner',
              'Greschner',
              'Griem',
              'Griese',
              'Grimm',
              'Gromisch',
              'Gross',
              'Grosser',
              'Grossheim',
              'Grosskopf',
              'Grothaus',
              'Grothkopp',
              'Grotke',
              'Grube',
              'Gruber',
              'Grundmann',
              'Gruning',
              'Gruszecki',
              'Gröss',
              'Grötzinger',
              'Grün',
              'Grüner',
              'Gummelt',
              'Gunkel',
              'Gunther',
              'Gutjahr',
              'Gutowicz',
              'Gutschank',
              'Göbel',
              'Göckeritz',
              'Göhler',
              'Görlich',
              'Görmer',
              'Götz',
              'Götzelmann',
              'Güldemeister',
              'Günther',
              'Günz',
              'Gürbig',
              'Haack',
              'Haaf',
              'Habel',
              'Hache',
              'Hackbusch',
              'Hackelbusch',
              'Hadfield',
              'Hadwich',
              'Haferkamp',
              'Hahn',
              'Hajek',
              'Hallmann',
              'Hamann',
              'Hanenberger',
              'Hannecker',
              'Hanniske',
              'Hansen',
              'Hardy',
              'Hargasser',
              'Harms',
              'Harnapp',
              'Harter',
              'Harting',
              'Hartlieb',
              'Hartmann',
              'Hartwig',
              'Hartz',
              'Haschke',
              'Hasler',
              'Hasse',
              'Hassfeld',
              'Haug',
              'Hauke',
              'Haupt',
              'Haverney',
              'Heberstreit',
              'Hechler',
              'Hecht',
              'Heck',
              'Hedermann',
              'Hehl',
              'Heidelmann',
              'Heidler',
              'Heinemann',
              'Heinig',
              'Heinke',
              'Heinrich',
              'Heinze',
              'Heiser',
              'Heist',
              'Hellmann',
              'Helm',
              'Helmke',
              'Helpling',
              'Hengmith',
              'Henkel',
              'Hennes',
              'Henry',
              'Hense',
              'Hensel',
              'Hentel',
              'Hentschel',
              'Hentschke',
              'Hepperle',
              'Herberger',
              'Herbrand',
              'Hering',
              'Hermann',
              'Hermecke',
              'Herms',
              'Herold',
              'Herrmann',
              'Herschmann',
              'Hertel',
              'Herweg',
              'Herwig',
              'Herzenberg',
              'Hess',
              'Hesse',
              'Hessek',
              'Hessler',
              'Hetzler',
              'Heuck',
              'Heydemüller',
              'Hiebl',
              'Hildebrand',
              'Hildenbrand',
              'Hilgendorf',
              'Hillard',
              'Hiller',
              'Hingsen',
              'Hingst',
              'Hinrichs',
              'Hirsch',
              'Hirschberg',
              'Hirt',
              'Hodea',
              'Hoffman',
              'Hoffmann',
              'Hofmann',
              'Hohenberger',
              'Hohl',
              'Hohn',
              'Hohnheiser',
              'Hold',
              'Holdt',
              'Holinski',
              'Holl',
              'Holtfreter',
              'Holz',
              'Holzdeppe',
              'Holzner',
              'Hommel',
              'Honz',
              'Hooss',
              'Hoppe',
              'Horak',
              'Horn',
              'Horna',
              'Hornung',
              'Hort',
              'Howard',
              'Huber',
              'Huckestein',
              'Hudak',
              'Huebel',
              'Hugo',
              'Huhn',
              'Hujo',
              'Huke',
              'Huls',
              'Humbert',
              'Huneke',
              'Huth',
              'Häber',
              'Häfner',
              'Höcke',
              'Höft',
              'Höhne',
              'Hönig',
              'Hördt',
              'Hübenbecker',
              'Hübl',
              'Hübner',
              'Hügel',
              'Hüttcher',
              'Hütter',
              'Ibe',
              'Ihly',
              'Illing',
              'Isak',
              'Isekenmeier',
              'Itt',
              'Jacob',
              'Jacobs',
              'Jagusch',
              'Jahn',
              'Jahnke',
              'Jakobs',
              'Jakubczyk',
              'Jambor',
              'Jamrozy',
              'Jander',
              'Janich',
              'Janke',
              'Jansen',
              'Jarets',
              'Jaros',
              'Jasinski',
              'Jasper',
              'Jegorov',
              'Jellinghaus',
              'Jeorga',
              'Jerschabek',
              'Jess',
              'John',
              'Jonas',
              'Jossa',
              'Jucken',
              'Jung',
              'Jungbluth',
              'Jungton',
              'Just',
              'Jürgens',
              'Kaczmarek',
              'Kaesmacher',
              'Kahl',
              'Kahlert',
              'Kahles',
              'Kahlmeyer',
              'Kaiser',
              'Kalinowski',
              'Kallabis',
              'Kallensee',
              'Kampf',
              'Kampschulte',
              'Kappe',
              'Kappler',
              'Karhoff',
              'Karrass',
              'Karst',
              'Karsten',
              'Karus',
              'Kass',
              'Kasten',
              'Kastner',
              'Katzinski',
              'Kaufmann',
              'Kaul',
              'Kausemann',
              'Kawohl',
              'Kazmarek',
              'Kedzierski',
              'Keil',
              'Keiner',
              'Keller',
              'Kelm',
              'Kempe',
              'Kemper',
              'Kempter',
              'Kerl',
              'Kern',
              'Kesselring',
              'Kesselschläger',
              'Kette',
              'Kettenis',
              'Keutel',
              'Kick',
              'Kiessling',
              'Kinadeter',
              'Kinzel',
              'Kinzy',
              'Kirch',
              'Kirst',
              'Kisabaka',
              'Klaas',
              'Klabuhn',
              'Klapper',
              'Klauder',
              'Klaus',
              'Kleeberg',
              'Kleiber',
              'Klein',
              'Kleinert',
              'Kleininger',
              'Kleinmann',
              'Kleinsteuber',
              'Kleiss',
              'Klemme',
              'Klimczak',
              'Klinger',
              'Klink',
              'Klopsch',
              'Klose',
              'Kloss',
              'Kluge',
              'Kluwe',
              'Knabe',
              'Kneifel',
              'Knetsch',
              'Knies',
              'Knippel',
              'Knobel',
              'Knoblich',
              'Knoll',
              'Knorr',
              'Knorscheidt',
              'Knut',
              'Kobs',
              'Koch',
              'Kochan',
              'Kock',
              'Koczulla',
              'Koderisch',
              'Koehl',
              'Koehler',
              'Koenig',
              'Koester',
              'Kofferschlager',
              'Koha',
              'Kohle',
              'Kohlmann',
              'Kohnle',
              'Kohrt',
              'Koj',
              'Kolb',
              'Koleiski',
              'Kolokas',
              'Komoll',
              'Konieczny',
              'Konig',
              'Konow',
              'Konya',
              'Koob',
              'Kopf',
              'Kosenkow',
              'Koster',
              'Koszewski',
              'Koubaa',
              'Kovacs',
              'Kowalick',
              'Kowalinski',
              'Kozakiewicz',
              'Krabbe',
              'Kraft',
              'Kral',
              'Kramer',
              'Krauel',
              'Kraus',
              'Krause',
              'Krauspe',
              'Kreb',
              'Krebs',
              'Kreissig',
              'Kresse',
              'Kreutz',
              'Krieger',
              'Krippner',
              'Krodinger',
              'Krohn',
              'Krol',
              'Kron',
              'Krueger',
              'Krug',
              'Kruger',
              'Krull',
              'Kruschinski',
              'Krämer',
              'Kröckert',
              'Kröger',
              'Krüger',
              'Kubera',
              'Kufahl',
              'Kuhlee',
              'Kuhnen',
              'Kulimann',
              'Kulma',
              'Kumbernuss',
              'Kummle',
              'Kunz',
              'Kupfer',
              'Kupprion',
              'Kuprion',
              'Kurnicki',
              'Kurrat',
              'Kurschilgen',
              'Kuschewitz',
              'Kuschmann',
              'Kuske',
              'Kustermann',
              'Kutscherauer',
              'Kutzner',
              'Kwadwo',
              'Kähler',
              'Käther',
              'Köhler',
              'Köhrbrück',
              'Köhre',
              'Kölotzei',
              'König',
              'Köpernick',
              'Köseoglu',
              'Kúhn',
              'Kúhnert',
              'Kühn',
              'Kühnel',
              'Kühnemund',
              'Kühnert',
              'Kühnke',
              'Küsters',
              'Küter',
              'Laack',
              'Lack',
              'Ladewig',
              'Lakomy',
              'Lammert',
              'Lamos',
              'Landmann',
              'Lang',
              'Lange',
              'Langfeld',
              'Langhirt',
              'Lanig',
              'Lauckner',
              'Lauinger',
              'Laurén',
              'Lausecker',
              'Laux',
              'Laws',
              'Lax',
              'Leberer',
              'Lehmann',
              'Lehner',
              'Leibold',
              'Leide',
              'Leimbach',
              'Leipold',
              'Leist',
              'Leiter',
              'Leiteritz',
              'Leitheim',
              'Leiwesmeier',
              'Lenfers',
              'Lenk',
              'Lenz',
              'Lenzen',
              'Leo',
              'Lepthin',
              'Lesch',
              'Leschnik',
              'Letzelter',
              'Lewin',
              'Lewke',
              'Leyckes',
              'Lg',
              'Lichtenfeld',
              'Lichtenhagen',
              'Lichtl',
              'Liebach',
              'Liebe',
              'Liebich',
              'Liebold',
              'Lieder',
              'Lienshöft',
              'Linden',
              'Lindenberg',
              'Lindenmayer',
              'Lindner',
              'Linke',
              'Linnenbaum',
              'Lippe',
              'Lipske',
              'Lipus',
              'Lischka',
              'Lobinger',
              'Logsch',
              'Lohmann',
              'Lohre',
              'Lohse',
              'Lokar',
              'Loogen',
              'Lorenz',
              'Losch',
              'Loska',
              'Lott',
              'Loy',
              'Lubina',
              'Ludolf',
              'Lufft',
              'Lukoschek',
              'Lutje',
              'Lutz',
              'Löser',
              'Löwa',
              'Lübke',
              'Maak',
              'Maczey',
              'Madetzky',
              'Madubuko',
              'Mai',
              'Maier',
              'Maisch',
              'Malek',
              'Malkus',
              'Mallmann',
              'Malucha',
              'Manns',
              'Manz',
              'Marahrens',
              'Marchewski',
              'Margis',
              'Markowski',
              'Marl',
              'Marner',
              'Marquart',
              'Marschek',
              'Martel',
              'Marten',
              'Martin',
              'Marx',
              'Marxen',
              'Mathes',
              'Mathies',
              'Mathiszik',
              'Matschke',
              'Mattern',
              'Matthes',
              'Matula',
              'Mau',
              'Maurer',
              'Mauroff',
              'May',
              'Maybach',
              'Mayer',
              'Mebold',
              'Mehl',
              'Mehlhorn',
              'Mehlorn',
              'Meier',
              'Meisch',
              'Meissner',
              'Meloni',
              'Melzer',
              'Menga',
              'Menne',
              'Mensah',
              'Mensing',
              'Merkel',
              'Merseburg',
              'Mertens',
              'Mesloh',
              'Metzger',
              'Metzner',
              'Mewes',
              'Meyer',
              'Michallek',
              'Michel',
              'Mielke',
              'Mikitenko',
              'Milde',
              'Minah',
              'Mintzlaff',
              'Mockenhaupt',
              'Moede',
              'Moedl',
              'Moeller',
              'Moguenara',
              'Mohr',
              'Mohrhard',
              'Molitor',
              'Moll',
              'Moller',
              'Molzan',
              'Montag',
              'Moormann',
              'Mordhorst',
              'Morgenstern',
              'Morhelfer',
              'Moritz',
              'Moser',
              'Motchebon',
              'Motzenbbäcker',
              'Mrugalla',
              'Muckenthaler',
              'Mues',
              'Muller',
              'Mulrain',
              'Mächtig',
              'Mäder',
              'Möcks',
              'Mögenburg',
              'Möhsner',
              'Möldner',
              'Möllenbeck',
              'Möller',
              'Möllinger',
              'Mörsch',
              'Mühleis',
              'Müller',
              'Münch',
              'Nabein',
              'Nabow',
              'Nagel',
              'Nannen',
              'Nastvogel',
              'Nau',
              'Naubert',
              'Naumann',
              'Ne',
              'Neimke',
              'Nerius',
              'Neubauer',
              'Neubert',
              'Neuendorf',
              'Neumair',
              'Neumann',
              'Neupert',
              'Neurohr',
              'Neuschwander',
              'Newton',
              'Ney',
              'Nicolay',
              'Niedermeier',
              'Nieklauson',
              'Niklaus',
              'Nitzsche',
              'Noack',
              'Nodler',
              'Nolte',
              'Normann',
              'Norris',
              'Northoff',
              'Nowak',
              'Nussbeck',
              'Nwachukwu',
              'Nytra',
              'Nöh',
              'Oberem',
              'Obergföll',
              'Obermaier',
              'Ochs',
              'Oeser',
              'Olbrich',
              'Onnen',
              'Ophey',
              'Oppong',
              'Orth',
              'Orthmann',
              'Oschkenat',
              'Osei',
              'Osenberg',
              'Ostendarp',
              'Ostwald',
              'Otte',
              'Otto',
              'Paesler',
              'Pajonk',
              'Pallentin',
              'Panzig',
              'Paschke',
              'Patzwahl',
              'Paukner',
              'Peselman',
              'Peter',
              'Peters',
              'Petzold',
              'Pfeiffer',
              'Pfennig',
              'Pfersich',
              'Pfingsten',
              'Pflieger',
              'Pflügner',
              'Philipp',
              'Pichlmaier',
              'Piesker',
              'Pietsch',
              'Pingpank',
              'Pinnock',
              'Pippig',
              'Pitschugin',
              'Plank',
              'Plass',
              'Platzer',
              'Plauk',
              'Plautz',
              'Pletsch',
              'Plotzitzka',
              'Poehn',
              'Poeschl',
              'Pogorzelski',
              'Pohl',
              'Pohland',
              'Pohle',
              'Polifka',
              'Polizzi',
              'Pollmächer',
              'Pomp',
              'Ponitzsch',
              'Porsche',
              'Porth',
              'Poschmann',
              'Poser',
              'Pottel',
              'Prah',
              'Prange',
              'Prediger',
              'Pressler',
              'Preuk',
              'Preuss',
              'Prey',
              'Priemer',
              'Proske',
              'Pusch',
              'Pöche',
              'Pöge',
              'Raabe',
              'Rabenstein',
              'Rach',
              'Radtke',
              'Rahn',
              'Ranftl',
              'Rangen',
              'Ranz',
              'Rapp',
              'Rath',
              'Rau',
              'Raubuch',
              'Raukuc',
              'Rautenkranz',
              'Rehwagen',
              'Reiber',
              'Reichardt',
              'Reichel',
              'Reichling',
              'Reif',
              'Reifenrath',
              'Reimann',
              'Reinberg',
              'Reinelt',
              'Reinhardt',
              'Reinke',
              'Reitze',
              'Renk',
              'Rentz',
              'Renz',
              'Reppin',
              'Restle',
              'Restorff',
              'Retzke',
              'Reuber',
              'Reumann',
              'Reus',
              'Reuss',
              'Reusse',
              'Rheder',
              'Rhoden',
              'Richards',
              'Richter',
              'Riedel',
              'Riediger',
              'Rieger',
              'Riekmann',
              'Riepl',
              'Riermeier',
              'Riester',
              'Riethmüller',
              'Rietmüller',
              'Rietscher',
              'Ringel',
              'Ringer',
              'Rink',
              'Ripken',
              'Ritosek',
              'Ritschel',
              'Ritter',
              'Rittweg',
              'Ritz',
              'Roba',
              'Rockmeier',
              'Rodehau',
              'Rodowski',
              'Roecker',
              'Roggatz',
              'Rohländer',
              'Rohrer',
              'Rokossa',
              'Roleder',
              'Roloff',
              'Roos',
              'Rosbach',
              'Roschinsky',
              'Rose',
              'Rosenauer',
              'Rosenbauer',
              'Rosenthal',
              'Rosksch',
              'Rossberg',
              'Rossler',
              'Roth',
              'Rother',
              'Ruch',
              'Ruckdeschel',
              'Rumpf',
              'Rupprecht',
              'Ruth',
              'Ryjikh',
              'Ryzih',
              'Rädler',
              'Räntsch',
              'Rödiger',
              'Röse',
              'Röttger',
              'Rücker',
              'Rüdiger',
              'Rüter',
              'Sachse',
              'Sack',
              'Saflanis',
              'Sagafe',
              'Sagonas',
              'Sahner',
              'Saile',
              'Sailer',
              'Salow',
              'Salzer',
              'Salzmann',
              'Sammert',
              'Sander',
              'Sarvari',
              'Sattelmaier',
              'Sauer',
              'Sauerland',
              'Saumweber',
              'Savoia',
              'Scc',
              'Schacht',
              'Schaefer',
              'Schaffarzik',
              'Schahbasian',
              'Scharf',
              'Schedler',
              'Scheer',
              'Schelk',
              'Schellenbeck',
              'Schembera',
              'Schenk',
              'Scherbarth',
              'Scherer',
              'Schersing',
              'Scherz',
              'Scheurer',
              'Scheuring',
              'Scheytt',
              'Schielke',
              'Schieskow',
              'Schildhauer',
              'Schilling',
              'Schima',
              'Schimmer',
              'Schindzielorz',
              'Schirmer',
              'Schirrmeister',
              'Schlachter',
              'Schlangen',
              'Schlawitz',
              'Schlechtweg',
              'Schley',
              'Schlicht',
              'Schlitzer',
              'Schmalzle',
              'Schmid',
              'Schmidt',
              'Schmidtchen',
              'Schmitt',
              'Schmitz',
              'Schmuhl',
              'Schneider',
              'Schnelting',
              'Schnieder',
              'Schniedermeier',
              'Schnürer',
              'Schoberg',
              'Scholz',
              'Schonberg',
              'Schondelmaier',
              'Schorr',
              'Schott',
              'Schottmann',
              'Schouren',
              'Schrader',
              'Schramm',
              'Schreck',
              'Schreiber',
              'Schreiner',
              'Schreiter',
              'Schroder',
              'Schröder',
              'Schuermann',
              'Schuff',
              'Schuhaj',
              'Schuldt',
              'Schult',
              'Schulte',
              'Schultz',
              'Schultze',
              'Schulz',
              'Schulze',
              'Schumacher',
              'Schumann',
              'Schupp',
              'Schuri',
              'Schuster',
              'Schwab',
              'Schwalm',
              'Schwanbeck',
              'Schwandke',
              'Schwanitz',
              'Schwarthoff',
              'Schwartz',
              'Schwarz',
              'Schwarzer',
              'Schwarzkopf',
              'Schwarzmeier',
              'Schwatlo',
              'Schweisfurth',
              'Schwennen',
              'Schwerdtner',
              'Schwidde',
              'Schwirkschlies',
              'Schwuchow',
              'Schäfer',
              'Schäffel',
              'Schäffer',
              'Schäning',
              'Schöckel',
              'Schönball',
              'Schönbeck',
              'Schönberg',
              'Schönebeck',
              'Schönenberger',
              'Schönfeld',
              'Schönherr',
              'Schönlebe',
              'Schötz',
              'Schüler',
              'Schüppel',
              'Schütz',
              'Schütze',
              'Seeger',
              'Seelig',
              'Sehls',
              'Seibold',
              'Seidel',
              'Seiders',
              'Seigel',
              'Seiler',
              'Seitz',
              'Semisch',
              'Senkel',
              'Sewald',
              'Siebel',
              'Siebert',
              'Siegling',
              'Sielemann',
              'Siemon',
              'Siener',
              'Sievers',
              'Siewert',
              'Sihler',
              'Sillah',
              'Simon',
              'Sinnhuber',
              'Sischka',
              'Skibicki',
              'Sladek',
              'Slotta',
              'Smieja',
              'Soboll',
              'Sokolowski',
              'Soller',
              'Sollner',
              'Sommer',
              'Somssich',
              'Sonn',
              'Sonnabend',
              'Spahn',
              'Spank',
              'Spelmeyer',
              'Spiegelburg',
              'Spielvogel',
              'Spinner',
              'Spitzmüller',
              'Splinter',
              'Sporrer',
              'Sprenger',
              'Spöttel',
              'Stahl',
              'Stang',
              'Stanger',
              'Stauss',
              'Steding',
              'Steffen',
              'Steffny',
              'Steidl',
              'Steigauf',
              'Stein',
              'Steinecke',
              'Steinert',
              'Steinkamp',
              'Steinmetz',
              'Stelkens',
              'Stengel',
              'Stengl',
              'Stenzel',
              'Stepanov',
              'Stephan',
              'Stern',
              'Steuk',
              'Stief',
              'Stifel',
              'Stoll',
              'Stolle',
              'Stolz',
              'Storl',
              'Storp',
              'Stoutjesdijk',
              'Stratmann',
              'Straub',
              'Strausa',
              'Streck',
              'Streese',
              'Strege',
              'Streit',
              'Streller',
              'Strieder',
              'Striezel',
              'Strogies',
              'Strohschank',
              'Strunz',
              'Strutz',
              'Stube',
              'Stöckert',
              'Stöppler',
              'Stöwer',
              'Stürmer',
              'Suffa',
              'Sujew',
              'Sussmann',
              'Suthe',
              'Sutschet',
              'Swillims',
              'Szendrei',
              'Sören',
              'Sürth',
              'Tafelmeier',
              'Tang',
              'Tasche',
              'Taufratshofer',
              'Tegethof',
              'Teichmann',
              'Tepper',
              'Terheiden',
              'Terlecki',
              'Teufel',
              'Theele',
              'Thieke',
              'Thimm',
              'Thiomas',
              'Thomas',
              'Thriene',
              'Thränhardt',
              'Thust',
              'Thyssen',
              'Thöne',
              'Tidow',
              'Tiedtke',
              'Tietze',
              'Tilgner',
              'Tillack',
              'Timmermann',
              'Tischler',
              'Tischmann',
              'Tittman',
              'Tivontschik',
              'Tonat',
              'Tonn',
              'Trampeli',
              'Trauth',
              'Trautmann',
              'Travan',
              'Treff',
              'Tremmel',
              'Tress',
              'Tsamonikian',
              'Tschiers',
              'Tschirch',
              'Tuch',
              'Tucholke',
              'Tudow',
              'Tuschmo',
              'Tächl',
              'Többen',
              'Töpfer',
              'Uhlemann',
              'Uhlig',
              'Uhrig',
              'Uibel',
              'Uliczka',
              'Ullmann',
              'Ullrich',
              'Umbach',
              'Umlauft',
              'Umminger',
              'Unger',
              'Unterpaintner',
              'Urban',
              'Urbaniak',
              'Urbansky',
              'Urhig',
              'Vahlensieck',
              'Van',
              'Vangermain',
              'Vater',
              'Venghaus',
              'Verniest',
              'Verzi',
              'Vey',
              'Viellehner',
              'Vieweg',
              'Voelkel',
              'Vogel',
              'Vogelgsang',
              'Vogt',
              'Voigt',
              'Vokuhl',
              'Volk',
              'Volker',
              'Volkmann',
              'Von',
              'Vona',
              'Vontein',
              'Wachenbrunner',
              'Wachtel',
              'Wagner',
              'Waibel',
              'Wakan',
              'Waldmann',
              'Wallner',
              'Wallstab',
              'Walter',
              'Walther',
              'Walton',
              'Walz',
              'Wanner',
              'Wartenberg',
              'Waschbüsch',
              'Wassilew',
              'Wassiluk',
              'Weber',
              'Wehrsen',
              'Weidlich',
              'Weidner',
              'Weigel',
              'Weight',
              'Weiler',
              'Weimer',
              'Weis',
              'Weiss',
              'Weller',
              'Welsch',
              'Welz',
              'Welzel',
              'Weniger',
              'Wenk',
              'Werle',
              'Werner',
              'Werrmann',
              'Wessel',
              'Wessinghage',
              'Weyel',
              'Wezel',
              'Wichmann',
              'Wickert',
              'Wiebe',
              'Wiechmann',
              'Wiegelmann',
              'Wierig',
              'Wiese',
              'Wieser',
              'Wilhelm',
              'Wilky',
              'Will',
              'Willwacher',
              'Wilts',
              'Wimmer',
              'Winkelmann',
              'Winkler',
              'Winter',
              'Wischek',
              'Wischer',
              'Wissing',
              'Wittich',
              'Wittl',
              'Wolf',
              'Wolfarth',
              'Wolff',
              'Wollenberg',
              'Wollmann',
              'Woytkowska',
              'Wujak',
              'Wurm',
              'Wyludda',
              'Wölpert',
              'Wöschler',
              'Wühn',
              'Wünsche',
              'Zach',
              'Zaczkiewicz',
              'Zahn',
              'Zaituc',
              'Zandt',
              'Zanner',
              'Zapletal',
              'Zauber',
              'Zeidler',
              'Zekl',
              'Zender',
              'Zeuch',
              'Zeyen',
              'Zeyhle',
              'Ziegler',
              'Zimanyi',
              'Zimmer',
              'Zimmermann',
              'Zinser',
              'Zintl',
              'Zipp',
              'Zipse',
              'Zschunke',
              'Zuber',
              'Zwiener',
              'Zümsande',
              'Östringer',
              'Überacker'
            ],
            prefix: [
              'Hr.',
              'Fr.',
              'Dr.',
              'Prof. Dr.'
            ],
            nobility_title_prefix: [
              'zu',
              'von',
              'vom',
              'von der'
            ],
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{nobility_title_prefix} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '(0###) #########',
              '(0####) #######',
              '+49-###-#######',
              '+49-####-########'
            ]
          },
          cell_phone: {
            formats: [
              '+49-1##-#######',
              '+49-1###-########'
            ]
          }
        },
        adjust: {
          title: 'Benutzereinstellungen',
          title_admin: 'Administrator-Benutzereinstellungen',
          personal: 'Persönliche Daten',
          language: 'Sprache',
          spanish: 'Español',
          english: 'English',
          french: 'Français',
          italian: 'Italiano',
          portuguese: 'Português',
          german: 'Deutsch',
          password: {
            password_change: 'Passwort ändern',
            new_password_placeholder: 'Neues Passwort',
            new_password_repeat_placeholder: 'Neues Passwort wiederholen',
            old_password_placeholder: 'Aktuelles Passwort'
          },
          require: {
            name: 'Geben Sie Ihren Vornamen an',
            surname: 'Geben Sie Ihren Nachnamen an'
          },
          advanced_adjust: 'Erweiterte Einstellungen',
          advanced_adjust_text: 'Erweiterte Einstellungen anzeigen',
          type_temp: 'Temperatur',
          type_temp_text: 'Temperaturmodus',
          save: {
            title: 'Gespeicherte Einstellungen',
            body: 'Ihre Einstellungen wurden erfolgreich gespeichert.'
          },
          unsubscribe_confirm: 'Möchten Sie sich von der Airzone-Anwendung endgültig abmelden? Alle Ihre Daten werden gelöscht und können nicht wiederhergestellt werden',
          unsubscribe: {
            title: 'Endgültige Abmeldung bestätigt',
            body: 'Sie wurden endgültig von Airzone abgemeldet; alle Ihre persönlichen Daten wurden erfolgreich gelöscht.'
          },
          change_pass: 'Passwort ändern'
        },
        languages: {
        },
        modal_mode: {
          cold: 'Kälte',
          cold_text: 'Kälte modus',
          heat: 'Wärme',
          heat_text: 'Wärme modus',
          ventilate_cold: 'Kälte Lüftung',
          ventilate_cold_text: 'Lüftungsmodus im Kältemodus',
          heat_cold_auto: 'Auto',
          heat_cold_auto_text: 'Auto modus',
          dehumidify: 'Trocken',
          dehumidify_text: 'Trocken modus',
          cold_auto: 'Kälte Auto',
          cold_auto_text: 'Automatischer Kältemodus',
          heat_auto: 'Wärme Auto',
          heat_auto_text: 'Automatischer Wärmemodus',
          ventilate_heat: 'Wärme Lüftung',
          ventilate_heat_text: 'Lüftungsmodus im Wärmemodus'
        },
        modal_speed: {
          title: 'Verfügbare Luftgeschwindigkeitsmodi',
          speed_1: 'Für Ihr Gerät ist nur eine Geschwindigkeit verfügbar',
          speed_2: 'Wählen Sie eine der 2 Geschwindigkeiten. Je höher die Zahl, umso höher die Luftgeschwindigkeit.',
          speed_3: 'Wählen Sie eine der 3 Geschwindigkeiten. Je höher die Zahl, umso höher die Luftgeschwindigkeit.',
          speed_4: 'Wählen Sie eine der 4 Geschwindigkeiten. Je höher die Zahl, umso höher die Luftgeschwindigkeit.',
          speed_5: 'Wählen Sie eine der 5 Geschwindigkeiten. Je höher die Zahl, umso höher die Luftgeschwindigkeit.'
        },
        modal_vertical: {
          title: 'Positionen der vertikalen Lamellen',
          position_0: 'Neigung 0: Lamellen in 90º',
          position_1: 'Neigung 1: Lamellen in 72º',
          position_2: 'Neigung 2: Lamellen in 54º',
          position_3: 'Neigung 3: Lamellen in 36º',
          position_4: 'Neigung 4: Lamellen in 0º',
          position_swing: 'Swing: Wechselt alle Positionen der Lamellen ab'
        },
        modal_horizontal: {
          title: 'Positionen der horizontalen Lamellen',
          position_0: 'Neigung 0: Lamellen in 180º',
          position_1: 'Neigung 1: Lamellen in 135º',
          position_2: 'Neigung 2: Lamellen in 90º',
          position_3: 'Neigung 3: Lamellen in 45º',
          position_4: 'Neigung 4: Lamellen in 0º',
          position_swing: 'Swing: Wechselt alle Positionen der Lamellen ab'
        },
        modal_scenary: {
          vacant: 'Unbeschäftigt Szene',
          vacant_text: 'Die Anlage hält bei Nichtbelegung die Temperaturen weniger genau ein.',
          occupied: 'Beschäftigt Szene',
          occupied_text: 'Standardszene, wenn der Raum belegt ist.',
          sleep: 'Auto-off Szene',
          sleep_text: 'Schaltet das Gerät ab, wenn die in den Einstellungen festgelegte Zeit erreicht ist.'
        },
        advanced_adjust: {
        },
        adjust_zone: {
          'true': 'Sí',
          help: {
          }
        },
        installations: {
          'return': 'Zurück',
          exit: 'Verlassen',
          finish: 'Beenden',
          next: 'Weiter',
          edit: 'Bearbeiten',
          error: 'Bei der Verbindung mit dem DKN WServer',
          retry: 'Neuversuch',
          state1: {
            text: 'Pairen Sie Ihren WLAN-Webserver mit Ihrem Router mit den folgenden Schritten'
          },
          state2: {
            text: 'Prüfen Sie, dass das Gerät mit Strom versorgt wird und sich im Modus Zugriffspunkt WLAN-LED ohne Unterbrechung befindet.'
          },
          state3: {
            text: 'Geführte Installation',
            assisted: 'Assistiert',
            wps: 'WPS'
          },
          state4: {
            text: 'Sie können Ihr WLAN in den Einstellungen Ihres Geräts aktivieren, das mit  beginnt:',
            text4: 'Geben Sie den Netzwerkcode: 123456789'
          },
          state5: {
            text: 'Wählen Sie den Router, den Sie pairen möchten',
            loading_text: 'Das Gerät wird verbunden. Bitte warten...',
            loading_text2: '(enn der Vorgang länger als eine Minute dauert, prüfen Sie ob die Verbindung des Geräts richtig ist)\' no_routers: \'Es wurde kein WLAN in der Nähe des Webservers Airzone Cloud gefunden. Prüfen Sie ob Ihr Netz aktiviert ist und zur Verbindung angezeigt wird)',
            low_signal: {
              title: 'Empfang nicht ausreichend',
              text: 'Bringen Sie den Webserver in die Nähe des Routers oder installieren Sie einen WLAN-Verstärker, um den Empfang zu verbessern'
            }
          },
          state6: {
            text: 'Wählen Sie die Art der Sicherheit für Ihr WLAN und geben Sie Ihr Passwort ein',
            text2: 'Geben Sie die Daten Ihres WLAN ein',
            none: 'Ohne Sicherheit',
            wep: 'WEP',
            wpa: 'WPA/WPA2',
            pass: 'Passwort',
            name: 'Name'
          },
          state7: {
            text: 'Daten Ihrer Netzkonfiguration',
            ip: 'IP',
            port: 'Link-Port',
            masc: 'Netzmaske',
            manual: 'MANUELL',
            dhcp: 'DHCP',
            loading_text: 'DKNWServer wird konfiguriert. Bitte warten ...'
          },
          state8: {
            text: 'Nachdem der Webserver verbunden ist, blinkt die WLAN-LED weiter.'
          },
          state9: {
            text: 'Vorgang wurde erfolgreich durchgeführt'
          },
          state21: {
            text1: 'Auf die Taste für die WPS-Konfiguration des Routers drücken.',
            text2: 'Diese kann ebenfalls mit folgendem Symbol gekennzeichnet sein.'
          },
          state22: {
            text1: 'Halten Sie die Taste für die WPS-Konfiguration des Geräts gedrückt, bis der Status der LED Ap sich verändert.',
            text2: 'Nachdem der Webserver verbunden ist, blinkt die WLAN-LED weiter.'
          },
          state41: {
            title: 'Wählen Sie die Router-Pairing-Methode',
            auto_info: 'Automatisch. Sucht automatisch die WLANs in der Nähe Ihres DKN WServer.',
            manual_info: 'Manuell. Geben Sie die Daten des gewünschten WLAN manuell ein.',
            auto: 'Automatisch',
            manual: 'Manuell'
          }
        },
        buttons: {
          sign_in: 'Öffnen',
          cancel: 'Abbrechen',
          init: 'Starten',
          send: 'Senden',
          save: 'Speichern',
          save_installation: 'Anlage hinzufügen',
          accept: 'Akzeptieren',
          resend_confirmation: 'Bestätigung erneut senden',
          back: 'Zurück',
          icon: 'Symbol',
          unsubscribe: 'Endgültig abmelden',
          remove: 'Löschen',
          restore_factory: 'Werkseinstellung wiederherstellen',
          next: 'Weiter',
          prev: 'Vorherige',
          close: 'Schließen',
          recharge: 'Neu laden',
          hide: 'Ausblenden',
          'continue': 'Fortsetzen',
          exit: 'Verlassen',
          help: 'Hilfe',
          modify: 'Ändern',
          contact: 'Kontakt'
        },
        email: 'Email',
        name: 'Vornamen',
        surname: 'Nachnamen',
        password: 'Passwort',
        new_password: 'Neues Passwort',
        repeat_password: 'Passwort wiederholen',
        server: 'Server',
        state: 'Status',
        enabled: 'Aktiviert',
        sleeping: 'Versorgt',
        connected: 'Angeschlossen',
        activated: 'Aktiviert',
        components: 'Komponenten',
        historic: 'Historie',
        system: 'System',
        filters: 'Filter',
        mac: 'Mac',
        locality: 'Ort',
        all: 'Alle',
        pin: 'PIN',
        status: 'Status',
        support: 'Unterstützung',
        videos: 'Videos',
        documents: 'Unterlagen',
        devices: {
          warnings: {
            installer: 'Installateur',
            text: 'Fehlercode:'
          },
          alert_installer_modal: {
            name_placeholder: 'Geben Sie Ihren Vornamen an',
            phone_placeholder: 'Geben Sie Ihren Telefon an',
            send_button: 'Dem Installateur melden',
            user_params: 'Geben Sie Ihre Kontaktdaten an',
            installer_params: 'Den Installateur kontaktieren',
            success_title: 'Ihren Installateur benachrichtigen',
            success_message: 'Die E-Mail an Ihren Installateur wurde erfolgreich gesendet. Warten Sie ausreichend lange ab, bevor Sie erneut eine Benachrichtigung über Ihr Gerät senden.',
            error: {
              name: 'Bitte Ihren Namen angeben',
              phone: 'Bitte Ihren Telefon angeben'
            },
            no_email: 'Die Daten des Installateurs wurden eingegeben und somit kann keine Benachrichtigung gesendet werden. Falls Sie sie senden möchten, können Sie dies in den Installationseinstellungen tun.'
          },
          adjusts: {
            name: 'Name',
            mac: 'MAC',
            pin: 'PIN',
            installation: 'Anlage',
            device: 'Daten des Geräts',
            name_text: 'Name des Geräts',
            installation_text: 'Die Daten des Installateurs wurden eingegeben und somit kann keine Benachrichtigung gesendet werden. Falls Sie sie senden möchten, können Sie dies in den Installationseinstellungen tun',
            links: {
              adjust: 'Einstellungen',
              params: 'Parameter'
            },
            model_device: 'Modell des Geräts',
            sleep: 'Auto off',
            min_temp_unoccupied: 'Mindesttemperatur für unbewohnt',
            min_temp_unoccupied_text: 'Mindesttemperatur für unbewohnt modus',
            max_temp_unoccupied: 'Maximale temperatur für unbewohnt',
            max_temp_unoccupied_text: 'Maximale temperatur für unbewohnt modus',
            sleep_time: 'Auto off',
            sleep_time_text: 'Legt die Wartezeit fest, bevor die Anlage deaktiviert wird'
          },
          schedules: {
            init: 'Startzeit',
            days: 'Tage',
            monday: 'MO',
            tuesday: 'DI',
            wednesday: 'MI',
            thursday: 'DO',
            friday: 'FR',
            saturday: 'SA',
            sunday: 'SO',
            add_schedule: 'Programmierung Hinzufügen',
            schedules_types: 'Programmierarten',
            on_off: 'On/Off',
            mode: 'Modus',
            start_mode: 'Startmodus',
            close: 'Schließen',
            remove: 'Löschen',
            save: 'Speichern',
            hour: 'Stunde',
            temperature: 'Temperatur',
            new_prog: 'Neuer Programmierung',
            edit_prog: 'Bearbeiten Programmierung',
            schedules_name: 'Name',
            all_devices: 'Alle Geräte',
            waiting_title: 'Programmierung werden angelegt',
            waiting_text: 'Derzeit werden die Programmierungen angelegt. Dieser Vorgang kann einige Sekunden dauern, bis sie in allen Zonen angelegt sind.',
            days_error: 'Sie müssen einen Tag auswählen'
          }
        },
        devise: {
          mailer: {
            confirmation_instructions: {
              subject: 'Bestätigung der DKN-Mail.'
            },
            reset_password_instructions: {
              subject: 'Anleitung für Passwortwechsel'
            }
          }
        },
        error: {
          internal: {
            title: 'Interner Fehler',
            body: 'Ihre Aktion konnte nicht durchgeführt werden. Versuchen Sie es bitte später noch einmal.'
          }
        },
        errors_page: {
          page_404: {
            title: 'Seite nicht gefunden',
            text: 'Leider können wir die gesuchte Seite nicht finden',
            button: 'Zur Startseite wechseln'
          },
          page_403: {
            title: 'Zugriff nicht gestattet',
            text: 'Leider sind Sie nicht berechtigt, auf diesen Bereich zuzugreifen',
            button: 'Zur Startseite wechseln'
          }
        },
        home: {
          menu: {
            installations: 'Anlagen',
            adjusts: 'Benutzer',
            help: 'Hilfe',
            admin: 'Server',
            exit: 'Sitzung beenden',
            admin_users: 'Benutzer',
            admins: 'Administratoren',
            support: 'Unterstützung'
          },
          upload: {
            title: 'ine neue Version der DKN Cloud ist verfügbar',
            description: 'bitte App aktualisieren, um diese verwenden zu können.'
          },
          maintenance: {
            title: 'Diese Seite ist vorübergehend in Wartung',
            description: 'Diese Site wird momentan einer planmäßigen Wartung.',
            text: 'Unterzogen und steht bald wieder zur Verfügung.'
          }
        },
        list_installations: {
          edit: 'Bearbeiten',
          close: 'Schließen'
        },
        edit_installation: {
          installator: {
            name: 'Name',
            phone: 'Telefon',
            email: 'Email'
          }
        },
        installation: {
          temp: 'TEMPERATUR',
          months: {
            0: 'JAN',
            1: 'FEB',
            2: 'MÄR',
            3: 'APR',
            4: 'MAI',
            5: 'JUN',
            6: 'JUL',
            7: 'AUG',
            8: 'SEP',
            9: 'OKT',
            10: 'NOV',
            11: 'DEZ'
          },
          days: {
            0: 'Sonntag',
            1: 'Montag',
            2: 'Dienstag',
            3: 'Mittwoch',
            4: 'Donnerstag',
            5: 'Freitag',
            6: 'Samstag'
          },
          modes: {
            header: 'Betriebsmodi',
            cool: 'Kälte',
            heat: 'Wärme',
            ventilate: 'Lüften',
            'ventilate-cold': 'Kälte Lüften',
            'heat-cold-auto': 'Auto',
            dehumidify: 'Entfeuchtung',
            'cool-air': 'Kälte Auto',
            'heat-air': 'Wärme Auto',
            'ventilate-heat': 'Wärme Lüften'
          },
          velocity: {
            header: 'Luftgeschwindigkeit',
            'velocity-0': 'Auto',
            'velocity-1': 'Ultra-Niedrige',
            'velocity-2': 'Niedrige',
            'velocity-3': 'Mittlere',
            'velocity-4': 'Mittlere-Hohe',
            'velocity-5': 'Hohe'
          },
          vertical: {
            header: 'Positionen der vertikalen Lamellen',
            'vertical-0000': 'Neigung 1',
            'vertical-0001': 'Neigung 2',
            'vertical-0010': 'Neigung 3',
            'vertical-0011': 'Neigung 4',
            'vertical-0100': 'Neigung 5',
            'vertical-0111': 'Swing'
          },
          horizontal: {
            header: 'Positionen der horizontalen Lamellen',
            'horizontal-0000': 'Neigung 1',
            'horizontal-0001': 'Neigung 2',
            'horizontal-0010': 'Neigung 3',
            'horizontal-0011': 'Neigung 4',
            'horizontal-0100': 'Neigung 5',
            'horizontal-0111': 'Swing'
          },
          scenary: {
            header: 'Szene',
            occupied: 'Beschäftigt',
            'Unbeschäftigt': 'Desocupado',
            sleep30: 'Auto-off 30\'',
            sleep60: 'Auto-off 60\'',
            sleep90: 'Auto-off 90\'',
            sleep: 'Auto-off'
          },
          modal: {
            name: 'Name des anlage',
            location: 'Standort',
            icon: 'Symbol',
            users: 'Benutzer',
            installer: 'Daten des installateur',
            installer_name: 'Name',
            installer_phone: 'Telefon',
            installer_email: 'Email',
            add_user: 'Benutzer hinzufügen',
            save: 'Speichern',
            remove: 'Löschen',
            cancel: 'Abbrechen',
            unoccupied: 'Unbeschäftigt Temperatur',
            unoccupied_min_temp: 'Unbeschäftigt Temperatur Wärme',
            unoccupied_max_temp: 'Unbeschäftigt Temperatur Kälte',
            name_error: 'Bitte einen Namen für die Anlage eingeben',
            location_error: 'Bitte einen Standort für die Anlage eingeben',
            type: 'Installationsart',
            type_home: 'Wohnung',
            type_commercial: 'Gewerbliche Räume',
            type_business: 'Büro',
            type_others: 'Sonstige',
            postal_code: 'Postleitzahl',
            sleep_time: 'Auto-off',
            links: {
              adjust: 'Einstellungen',
              params: 'Parameter',
              users: 'Benutzer'
            },
            new_user: {
              title: 'Benutzer hinzufügen',
              name: 'Vorname',
              surname: 'Nachnamen',
              email: 'Email',
              avanced: 'Benutzer für Erweitert',
              name_blank: 'Bitte einen Namen für den Benutzer eingeben',
              surname_blank: 'Bitte einen Vornamen für den Benutzer eingeben',
              email_blank: 'Bitte einen eMail für den Benutzer eingeben'
            },
            help: {
              name: 'Name',
              name_text: 'Ermöglicht die Namensänderung der Anlage',
              location: 'Ort',
              location_text: 'Ermöglicht die Änderung des Anlagenstandorts',
              icon: 'Symbol',
              icon_text: 'Ermöglicht die Änderung des Anlagensymbols',
              users: 'Benutzer',
              users_text: 'Ermöglicht die Verwaltung der Benutzer, die die App verwenden können. Benutzer für Grundlegend: Steuerung der Grundfunktionen Ihrer Klimaanlagen. Benutzer für Erweitert: Außer auf die Grundfunktionen kann der Benutzer auf folgende Menüs zugreifen: Installationseinstellungen, Zeitprogrammierung und Benutzerverwaltung.',
              installer: 'installateur',
              installer_text: 'Daten des Installateurs zur Kontaktaufnahme mit dem Installateur bei einem Vorfall',
              postal_code: 'Postleitzahl',
              postal_code_text: 'Postleitzahl des Ortes, an dem sich die Anlage befindet',
              type: 'Installationsart',
              type_text: 'Legt die Installationsart fest',
              min_temp_unoccupied: 'Mindesttemperatur für unbewohnt',
              min_temp_unoccupied_text: 'Mindesttemperatur für unbewohnt modus',
              max_temp_unoccupied: 'Maximale temperatur für unbewohnt',
              max_temp_unoccupied_text: 'Maximale temperatur für unbewohnt modus',
              sleep_time: 'Zeitschaltuhr.',
              sleep_time_text: 'Legt die Wartezeit fest, bevor die Anlage deaktiviert wird'
            }
          }
        },
        login: {
          restore_password: 'Passwort merken',
          demo: 'Demo',
          router: 'Router pairen'
        },
        register: {
          sign_up: 'Konto anlegen'
        },
        complete_registration: {
          title: 'Registrierung abschließen'
        },
        mailers: {
          confirmation: {
            welcome: 'Willkommen bei DKN WServer,',
            text: 'Um Ihre Registrierung abzuschließen, müssen Sie Ihre E-Mail-Adresse über den folgenden Link bestätigen:',
            confirm: 'Registrierung bestätigen'
          },
          reset_password: {
            welcome: 'Hallo',
            text: 'Sie haben uns mitgeteilt, dass Sie Ihr Passwort vergessen haben. Keine Sorge! Das kann schon mal vorkommen. Drücken Sie auf den folgenden Link, um Ihr Passwort zu ändern.',
            change_password: 'Passwort ändern',
            subject: 'Sie wurden zu DKN WServer eingeladen'
          },
          complete_registration: {
            title: 'Schließen Sie Ihre Registrierung bei DKN WServer ab',
            text: 'Ein Benutzer hat Sie eingeladen, ein Gerät bei AirzoneCloud zu verwalten. Schließen Sie bitte Ihre Registrierung ab, damit Sie auf die Plattform zugreifen und das Gerät verwalten können.',
            link: 'Registrierung abschließen',
            subject: 'Einladung zur DKN-WServer-Plattform'
          },
          invitation: {
            title: 'Gehen Sie zu DKN WServer',
            text: 'Ein Benutzer hat Sie eingeladen, ein Gerät bei DKN WServer zu verwalten. Nehmen Sie bitte Zugriff auf die Plattform, damit Sie das Gerät sehen und verwalten können.',
            link: 'Zugriff auf DKN WServer',
            subject: 'Aufforderung zur Verwaltung einer Anlage im DKN WServer'
          },
          alert_installer: {
            subject: 'Meldung eines Problems in einem DKN WServer',
            text: 'Ein Benutzer hat ein Problem in seinem Gerät gemeldet',
            title: 'Problem in einem Gerät gemeldet',
            user_name: 'Name des Benutzers',
            user_phone: 'Telefon des Benutzers',
            error: 'Error'
          },
          import_devices: {
            title: 'Bericht Geräte-Imports:',
            subject: 'DKN - Import'
          }
        },
        messages: {
          errors: {
            name_blank: 'Das Feld Vorname muss ausgefüllt werden',
            surname_blank: 'Das Feld Nachname muss ausgefüllt werden',
            login: 'Leider ist die E-Mail oder das Passwort ungültig',
            email: 'Leider ist die E-Mail ungültig',
            email_blank: 'Das Feld E-Mail-Adresse muss ausgefüllt werden',
            email_taken: 'Die E-Mail-Adresse wird bereits verwendet',
            password_length: 'Das Passwort muss mindestens 8 Zeichen haben',
            password_blank: 'Das Feld Passwort muss ausgefüllt werden',
            password_confirmation_check: 'Leider müssen die Passwörter identisch sein',
            password_confirmation_blank: 'Sie müssen Ihr Passwort bestätigen',
            password_new_length: 'Das neue Passwort muss mindestens 8 Zeichen haben',
            password_new_blank: 'Das Feld Neues Passwort muss ausgefüllt werden',
            invalid_old_password: 'Das aktuell eingegebene Passwort ist falsch.',
            condition: 'Sie müssen die Nutzungsbedingungen akzeptieren',
            token_invalid: 'Der Aktivierungscode ist falsch. Fordern Sie erneut Passwort merken an.',
            email_not_exist: 'Leider ist kein Konto mit dieser E-Mail-Adresse verbunden',
            confirmation: 'Bei der Bestätigung ist ein Fehler aufgetreten. Füllen Sie bitte das Formular aus. Wir senden Ihnen eine neue Bestätigungsmail.',
            unconfirmed: 'E-Mail nicht bestätigt!',
            device_blank: 'Geben Sie einen Namen für den DKN WServer an',
            installation_blank: 'Bitte eine Anlage auswählen',
            mac_blank: 'Geben Sie die MAC-Adresse Ihres Servers an',
            mac_invalid: 'Die eingegebene MAC ist falsch. Prüfen Sie bitte, dass sie mit den Daten des Cloud-Webservers übereinstimmt',
            mac_format: 'Das MAC-Format ist falsch',
            mac_repeated: 'Es besteht bereits ein Server mit dieser MAC',
            pin_blank: 'Geben Sie den PIN-Code Ihres Servers an',
            pin_invalid: 'Die eingegebene PIN stimmt nicht mit der MAC überein',
            server_sleeping: 'Der angegebene Cloud-Webserver hat keine Internetverbindung. Prüfen Sie, dass er mit dem Router gepairt ist und der Router über Internetverbindung verfügt.',
            device_taken: 'Die angeforderte MAC ist bereits in der Cloud-Plattform angemeldet',
            location_blank: 'Geben Sie den Ort an, an dem sich Ihr Server befindet',
            icon_blank: 'Wählen Sie ein Symbol zur Darstellung Ihres Servers',
            file_error: 'Die Datei, die Sie importieren möchten, ist falsch. Die unterstützten Formate sind xls, xlsx und csv.',
            must_select_file: 'Sie müssen eine Datei auswählen',
            not_connected: 'Sie haben derzeit keine Internetverbindung und die durchgeführten Aktionen werden in Ihrem Airzone-System nicht wirksam. Wenn Sie über eine Internetverbindung verfügen, laden Sie die Seite erneut und versuchen Sie es noch einmal.',
            not_connected_title: 'Hinweis zu Ihrer Internetverbindung',
            not_connected_device: 'Ihr Airzone-Gerät ist derzeit nicht mit dem Internet verbunden. Deshalb werden die durchgeführten Aktionen nicht wirksam. Verbinden Sie Ihr Airzone-Gerät mit dem Internet, laden Sie die Seite erneut und versuchen Sie es noch einmal:',
            not_connected_devices: 'Ihre DKN WServer sind aktuell nicht mit dem Internet verbunden:',
            not_connected_device_title: 'Hinweis zur Verbindung Ihres Gerätes',
            error_device: 'In Ihrem Gerät ist ein Fehler aufgetreten. Falls diese Meldung weiter besteht, wenden Sie sich bitte an Ihren Installateur.',
            registration_already_completed: 'Die Registrierung wurde bereits früher abgeschlossen. Loggen Sie sich bitte mit Ihren Daten ein.',
            user_taken: 'Der Benutzer ist bereits mit dem Server verbunden',
            not_permission_title: 'Zugriff verweigert',
            not_permission: 'Ihr Benutzer hat keinen Zugriff auf diese Option.',
            not_permission_new_schedule: 'Die maximale Anzahl der verfügbaren Programmierungen (24) wurde erreicht; um eine neue Programmierung zu erstellen, bitte zunächst eine bestehende Programmierung löschen.',
            without_internet_title: 'Internetverbindung',
            without_internet_text: 'Diese Anwendung benötigt Internetverbindung zur Arbeit. Bitte verbinden Sie Ihr Gerät und versuchen Sie es erneut',
            mac_length_seek: 'Muss mindestens 4 Ziffern enthalten',
            email_length_seek: 'Muss mindestens 3 Zeichen enthalten',
            machine_error_11_title: 'Fehler bei Verbindung mit Gerät',
            machine_error_11_text: 'Prüfen Sie die Verbindung an den Ports P1 und P2 des Geräts.',
            backend_error: 'Ihre Anfrage konnte nicht bearbeitet werden. Versuchen Sie es bitte später noch einmal.'
          },
          success: {
            register: 'Registrierung erfolgreich!',
            send_reset_password: 'Wir haben Ihnen eine E-Mail mit der Anleitung gesendet, damit Sie Ihr Passwort ändern.',
            reset_password: 'Ihr Passwort wurde geändert',
            resend_confirmation: 'Es wurde eine neue Bestätigungsmail an Ihre E-Mail-Adresse gesendet.',
            user_device_added: 'Die Verbindung mit dem Server wurde erfolgreich hergestellt. Sie können über das Fenster für Server darauf zugreifen.',
            user_device_updated: 'Die Information des Servers wurde erfolgreich aktualisiert.',
            restore_factory: 'Server auf Werkseinstellung zurücksetzen.',
            remove_installation_confirmation: 'Sind Sie sicher, dass Sie die Anlage löschen möchten?',
            remove_device_confirmation: 'Sind Sie sicher, dass Sie die DKN löschen möchten?',
            remove_last_device_confirmation: 'Wenn Sie diesen Vorgang durchführen, wird Ihre Installation gelöscht. Möchten Sie diesen Vorgang durchführen?',
            remove_installation_without_devices: 'Der Anlage wurde kein DKN Webserver hinzugefügt; beim Verlassen verlieren Sie die Daten der Anlage. Fortsetzen?',
            remove_user_confirmation: 'Sind Sie sicher, dass Sie den Zugriff auf die Installation des Benutzers löschen möchten?',
            confirmed: 'Mail wurde erfolgreich bestätigt. Melden Sie sich an, um auf die Plattform zuzugreifen.'
          },
          info: {
            has_email: 'Sie haben eine E-Mail erhalten!',
            go_login: 'Zum Log-In gehen',
            reset_password: 'Gehen Sie zurück zum Log-In und geben Sie Ihre E-Mail-Adresse und Ihr neues Passwort ein, um sich anzumelden.',
            change_password: 'Schreiben Sie Ihr neues Passwort und wiederholen Sie es.',
            send_reset_password: 'Kein Problem, das kann schon mal vorkommen. Geben Sie lediglich Ihre E-Mail-Adresse an. Wir senden Ihnen dann eine E-Mail mit Anleitung zur Änderung Ihres Passworts.',
            register_success: 'Es wurde eine E-Mail an Ihr Konto gesendet, um Ihre Identität zu prüfen.',
            complete_registration_success: 'Die Registrierung wurde erfolgreich abgeschlossen. Sie können jetzt die Sitzung starten und auf die Verwaltung Ihres Airzone-Geräts zugreifenr.',
            resend_confirmation: 'Geben Sie Ihre E-Mail-Adresse ein. Wir senden Ihnen eine neue Bestätigungsmail.',
            unconfirmed: 'Sie müssen Ihre E-Mail-Adresse bestätigen, bevor Sie die Sitzung starten',
            remove_server_admin: {
              question: 'Möchten Sie diesen Server löschen?',
              info: 'Alle mit diesem Server verbundenen Daten werden gelöscht.'
            },
            restore_server_admin: {
              question: 'Möchten Sie diesen Server auf Werkseinstellung zurücksetzen?',
              info: 'Alle mit diesem Server verbundenen Daten werden zurückgesetzt.'
            },
            browsers: 'Leider wird der Browser, den Sie gerade verwenden, nicht durch unsere Anwendung unterstützt oder es handelt sich um eine sehr alte Version. Wenn Sie die Anwendung verwenden möchten, empfehlen wir, dass Sie einen der folgenden Browser installieren oder aktualisieren.',
            firmware_updated: 'Der Auftrag zur Aktualisierung der Firmware wurde erfolgreich gesendet',
            remove_schedule: 'Sind Sie sicher, dass Sie die Programmierung endgültig löschen möchten?',
            disable_permission_device: 'Der DKN Server muss mindestens einen Benutzer haben'
          },
          title: {
            reset_password: 'Ihr Passwort wurde geändert',
            change_password: 'Passwort ändern',
            resend_confirmation: 'Bestätigung erneut senden',
            user_device_added: 'Der Gërat wurde erfolgreich angelegt',
            user_device_updated: 'Der Gërat wurde erfolgreich aktualisiert',
            add_device: 'DKN WServer hinzufügen',
            server_data: 'DKN WServer bearbeiten',
            remove_server: 'Löschen',
            restore_factory: 'Server auf Werkseinstellung zurücksetzen',
            remove_installation_confirm: 'Löschen Anlage',
            remove_user_confirm: 'Löschen Benutzer',
            firmware_updated: 'Firmware aktualisiert',
            device_permissions: 'Zugriff DKN WServer',
            installation_permissions: 'Zugriff auf die Anlage'
          }
        },
        servers: {
          no_results: 'Es wurden keine Server gefunden',
          tags: {
            servers: 'Server',
            results: 'Ergebnisse',
            page: 'Seite',
            of: ' von ',
            update: 'aktualisieren'
          },
          'new': {
            add_servers: 'Server hinzufügen',
            'return': 'Zurück',
            from_file: 'Aus Datei',
            select_file: 'Wählen Sie eine Datei',
            select_file2: 'Wählen Sie eine Datei',
            from_form: 'Aus Formular',
            success_add2: 'Die Server wurden',
            success_add_f2: 'erfolgreich hinzugefügt',
            success_add1: 'Der Server wurde',
            success_add_f1: 'erfolgreich hinzugefügt',
            failure_add1: 'Der folgende Server konnte nicht hinzugefügt werden',
            failure_add2: 'Die folgenden Server konnten nicht',
            failure_add_f2: 'hinzugefügt werden',
            accept: 'Akzeptieren',
            success: {
              added: 'Der Server wurde erfolgreich hinzugefügt',
              added2: 'Der Server wurde auf der Plattform erfolgreich angemeldet'
            }
          },
          remove: {
            message: 'Server wurde gelöscht',
            confirmation_deleted: 'Der Server wurde erfolgreich gelöscht'
          }
        },
        terms: {
          accept: 'Ich akzeptiere die ',
          legal_terms: 'Nutzungsbedingungen',
          and: ' und die ',
          privacy: 'Datenschutzerklärung',
          publicity: 'Ich möchte Werbung erhalten'
        },
        installation_relation_list: {
          title: 'Anlagen',
          no_installations_title: 'Willkommen!',
          no_installations_info: 'Damit Sie mit der Steuerung Ihrer Anlage beginnen können, müssen Sie Ihrem Konto einen Server hinzufügen.',
          internal_error: 'Interner Fehler',
          internal_error_message: 'Ihre Aktion konnte nicht durchgeführt werden. Versuchen Sie es bitte später noch einmal',
          actions: {
            edit: 'Bearbeiten',
            close: 'Schließen',
            add_device: 'DKN WServer hinzufügen'
          }
        },
        add_device: {
          name_placeholder: 'Name (Küche, lounge, Schlafzimmer)',
          mac_placeholder: 'MAC (12:AB:34:CD:45:F0)',
          pin_placeholder: 'PIN',
          choose_installation: 'Installationsart auswählen',
          add_device: 'Gërat hinzufügen'
        },
        add_installation: {
          add_installation: 'Anlage hinzufügen',
          name_placeholder: 'Name (Haus, Büro, Bungalow)',
          location_placeholder: 'Standort des Servers',
          postal_code_placeholder: 'Postleitzahl',
          type: 'Installationsart'
        },
        add_user_to_device: {
        },
        users: {
          title: 'Benutzer',
          basic: 'Benutzer für Grundlegend',
          advanced: 'Benutzer für Erweitert'
        },
        admin_users: {
          title: 'Benutzer',
          email: 'Email',
          name: 'Name',
          results: 'Ergebnisse',
          no_results: 'Keine Ergebnisse',
          page: 'Seite',
          of: 'von',
          device_modal: {
            title: 'Zugängliche Einheiten durch den Benutzer',
            no_devices: 'Der Benutzer kann nicht auf eine AC-Einheit zugreifen',
            location: 'Ort'
          }
        }
      },
      'en-AU': {
        faker: {
          name: {
            first_name: [
              'William',
              'Jack',
              'Oliver',
              'Joshua',
              'Thomas',
              'Lachlan',
              'Cooper',
              'Noah',
              'Ethan',
              'Lucas',
              'James',
              'Samuel',
              'Jacob',
              'Liam',
              'Alexander',
              'Benjamin',
              'Max',
              'Isaac',
              'Daniel',
              'Riley',
              'Ryan',
              'Charlie',
              'Tyler',
              'Jake',
              'Matthew',
              'Xavier',
              'Harry',
              'Jayden',
              'Nicholas',
              'Harrison',
              'Levi',
              'Luke',
              'Adam',
              'Henry',
              'Aiden',
              'Dylan',
              'Oscar',
              'Michael',
              'Jackson',
              'Logan',
              'Joseph',
              'Blake',
              'Nathan',
              'Connor',
              'Elijah',
              'Nate',
              'Archie',
              'Bailey',
              'Marcus',
              'Cameron',
              'Jordan',
              'Zachary',
              'Caleb',
              'Hunter',
              'Ashton',
              'Toby',
              'Aidan',
              'Hayden',
              'Mason',
              'Hamish',
              'Edward',
              'Angus',
              'Eli',
              'Sebastian',
              'Christian',
              'Patrick',
              'Andrew',
              'Anthony',
              'Luca',
              'Kai',
              'Beau',
              'Alex',
              'George',
              'Callum',
              'Finn',
              'Zac',
              'Mitchell',
              'Jett',
              'Jesse',
              'Gabriel',
              'Leo',
              'Declan',
              'Charles',
              'Jasper',
              'Jonathan',
              'Aaron',
              'Hugo',
              'David',
              'Christopher',
              'Chase',
              'Owen',
              'Justin',
              'Ali',
              'Darcy',
              'Lincoln',
              'Cody',
              'Phoenix',
              'Sam',
              'John',
              'Joel',
              'Isabella',
              'Ruby',
              'Chloe',
              'Olivia',
              'Charlotte',
              'Mia',
              'Lily',
              'Emily',
              'Ella',
              'Sienna',
              'Sophie',
              'Amelia',
              'Grace',
              'Ava',
              'Zoe',
              'Emma',
              'Sophia',
              'Matilda',
              'Hannah',
              'Jessica',
              'Lucy',
              'Georgia',
              'Sarah',
              'Abigail',
              'Zara',
              'Eva',
              'Scarlett',
              'Jasmine',
              'Chelsea',
              'Lilly',
              'Ivy',
              'Isla',
              'Evie',
              'Isabelle',
              'Maddison',
              'Layla',
              'Summer',
              'Annabelle',
              'Alexis',
              'Elizabeth',
              'Bella',
              'Holly',
              'Lara',
              'Madison',
              'Alyssa',
              'Maya',
              'Tahlia',
              'Claire',
              'Hayley',
              'Imogen',
              'Jade',
              'Ellie',
              'Sofia',
              'Addison',
              'Molly',
              'Phoebe',
              'Alice',
              'Savannah',
              'Gabriella',
              'Kayla',
              'Mikayla',
              'Abbey',
              'Eliza',
              'Willow',
              'Alexandra',
              'Poppy',
              'Samantha',
              'Stella',
              'Amy',
              'Amelie',
              'Anna',
              'Piper',
              'Gemma',
              'Isabel',
              'Victoria',
              'Stephanie',
              'Caitlin',
              'Heidi',
              'Paige',
              'Rose',
              'Amber',
              'Audrey',
              'Claudia',
              'Taylor',
              'Madeline',
              'Angelina',
              'Natalie',
              'Charli',
              'Lauren',
              'Ashley',
              'Violet',
              'Mackenzie',
              'Abby',
              'Skye',
              'Lillian',
              'Alana',
              'Lola',
              'Leah',
              'Eve',
              'Kiara'
            ],
            last_name: [
              'Smith',
              'Jones',
              'Williams',
              'Brown',
              'Wilson',
              'Taylor',
              'Johnson',
              'White',
              'Martin',
              'Anderson',
              'Thompson',
              'Nguyen',
              'Thomas',
              'Walker',
              'Harris',
              'Lee',
              'Ryan',
              'Robinson',
              'Kelly',
              'King',
              'Davis',
              'Wright',
              'Evans',
              'Roberts',
              'Green',
              'Hall',
              'Wood',
              'Jackson',
              'Clarke',
              'Patel',
              'Khan',
              'Lewis',
              'James',
              'Phillips',
              'Mason',
              'Mitchell',
              'Rose',
              'Davies',
              'Rodriguez',
              'Cox',
              'Alexander',
              'Garden',
              'Campbell',
              'Johnston',
              'Moore',
              'Smyth',
              'O\'neill',
              'Doherty',
              'Stewart',
              'Quinn',
              'Murphy',
              'Graham',
              'Mclaughlin',
              'Hamilton',
              'Murray',
              'Hughes',
              'Robertson',
              'Thomson',
              'Scott',
              'Macdonald',
              'Reid',
              'Clark',
              'Ross',
              'Young',
              'Watson',
              'Paterson',
              'Morrison',
              'Morgan',
              'Griffiths',
              'Edwards',
              'Rees',
              'Jenkins',
              'Owen',
              'Price',
              'Moss',
              'Richards',
              'Abbott',
              'Adams',
              'Armstrong',
              'Bahringer',
              'Bailey',
              'Barrows',
              'Bartell',
              'Bartoletti',
              'Barton',
              'Bauch',
              'Baumbach',
              'Bayer',
              'Beahan',
              'Beatty',
              'Becker',
              'Beier',
              'Berge',
              'Bergstrom',
              'Bode',
              'Bogan',
              'Borer',
              'Bosco',
              'Botsford',
              'Boyer',
              'Boyle',
              'Braun',
              'Bruen',
              'Carroll',
              'Carter',
              'Cartwright',
              'Casper',
              'Cassin',
              'Champlin',
              'Christiansen',
              'Cole',
              'Collier',
              'Collins',
              'Connelly',
              'Conroy',
              'Corkery',
              'Cormier',
              'Corwin',
              'Cronin',
              'Crooks',
              'Cruickshank',
              'Cummings',
              'D\'amore',
              'Daniel',
              'Dare',
              'Daugherty',
              'Dickens',
              'Dickinson',
              'Dietrich',
              'Donnelly',
              'Dooley',
              'Douglas',
              'Doyle',
              'Durgan',
              'Ebert',
              'Emard',
              'Emmerich',
              'Erdman',
              'Ernser',
              'Fadel',
              'Fahey',
              'Farrell',
              'Fay',
              'Feeney',
              'Feil',
              'Ferry',
              'Fisher',
              'Flatley',
              'Gibson',
              'Gleason',
              'Glover',
              'Goldner',
              'Goodwin',
              'Grady',
              'Grant',
              'Greenfelder',
              'Greenholt',
              'Grimes',
              'Gutmann',
              'Hackett',
              'Hahn',
              'Haley',
              'Hammes',
              'Hand',
              'Hane',
              'Hansen',
              'Harber',
              'Hartmann',
              'Harvey',
              'Hayes',
              'Heaney',
              'Heathcote',
              'Heller',
              'Hermann',
              'Hermiston',
              'Hessel',
              'Hettinger',
              'Hickle',
              'Hill',
              'Hills',
              'Hoppe',
              'Howe',
              'Howell',
              'Hudson',
              'Huel',
              'Hyatt',
              'Jacobi',
              'Jacobs',
              'Jacobson',
              'Jerde',
              'Johns',
              'Keeling',
              'Kemmer',
              'Kessler',
              'Kiehn',
              'Kirlin',
              'Klein',
              'Koch',
              'Koelpin',
              'Kohler',
              'Koss',
              'Kovacek',
              'Kreiger',
              'Kris',
              'Kuhlman',
              'Kuhn',
              'Kulas',
              'Kunde',
              'Kutch',
              'Lakin',
              'Lang',
              'Langworth',
              'Larkin',
              'Larson',
              'Leannon',
              'Leffler',
              'Little',
              'Lockman',
              'Lowe',
              'Lynch',
              'Mann',
              'Marks',
              'Marvin',
              'Mayer',
              'Mccullough',
              'Mcdermott',
              'Mckenzie',
              'Miller',
              'Mills',
              'Monahan',
              'Morissette',
              'Mueller',
              'Muller',
              'Nader',
              'Nicolas',
              'Nolan',
              'O\'connell',
              'O\'conner',
              'O\'hara',
              'O\'keefe',
              'Olson',
              'O\'reilly',
              'Parisian',
              'Parker',
              'Quigley',
              'Reilly',
              'Reynolds',
              'Rice',
              'Ritchie',
              'Rohan',
              'Rolfson',
              'Rowe',
              'Russel',
              'Rutherford',
              'Sanford',
              'Sauer',
              'Schmidt',
              'Schmitt',
              'Schneider',
              'Schroeder',
              'Schultz',
              'Shields',
              'Smitham',
              'Spencer',
              'Stanton',
              'Stark',
              'Stokes',
              'Swift',
              'Tillman',
              'Towne',
              'Tremblay',
              'Tromp',
              'Turcotte',
              'Turner',
              'Walsh',
              'Walter',
              'Ward',
              'Waters',
              'Weber',
              'Welch',
              'West',
              'Wilderman',
              'Wilkinson',
              'Williamson',
              'Windler',
              'Wolf'
            ]
          },
          company: {
            suffix: [
              'Pty Ltd',
              'and Sons',
              'Corp',
              'Group',
              'Brothers',
              'Partners'
            ]
          },
          internet: {
            domain_suffix: [
              'com.au',
              'com',
              'net.au',
              'net',
              'org.au',
              'org'
            ]
          },
          address: {
            state_abbr: [
              'NSW',
              'QLD',
              'NT',
              'SA',
              'WA',
              'TAS',
              'ACT',
              'VIC'
            ],
            state: [
              'New South Wales',
              'Queensland',
              'Northern Territory',
              'South Australia',
              'Western Australia',
              'Tasmania',
              'Australian Capital Territory',
              'Victoria'
            ],
            postcode: [
              '0###',
              '2###',
              '3###',
              '4###',
              '5###',
              '6###',
              '7###'
            ],
            building_number: [
              '####',
              '###',
              '##'
            ],
            street_suffix: [
              'Avenue',
              'Boulevard',
              'Circle',
              'Circuit',
              'Court',
              'Crescent',
              'Crest',
              'Drive',
              'Estate Dr',
              'Grove',
              'Hill',
              'Island',
              'Junction',
              'Knoll',
              'Lane',
              'Loop',
              'Mall',
              'Manor',
              'Meadow',
              'Mews',
              'Parade',
              'Parkway',
              'Pass',
              'Place',
              'Plaza',
              'Ridge',
              'Road',
              'Run',
              'Square',
              'Station St',
              'Street',
              'Summit',
              'Terrace',
              'Track',
              'Trail',
              'View Rd',
              'Way'
            ],
            default_country: [
              'Australia'
            ]
          },
          phone_number: {
            formats: [
              '0# #### ####',
              '+61 # #### ####',
              '04## ### ###',
              '+61 4## ### ###'
            ]
          }
        }
      },
      'en-BORK': {
        faker: {
          lorem: {
            words: [
              'Boot',
              'I',
              'Nu',
              'Nur',
              'Tu',
              'Um',
              'a',
              'becoose-a',
              'boot',
              'bork',
              'burn',
              'chuuses',
              'cumplete-a',
              'cun',
              'cunseqooences',
              'curcoomstunces',
              'dee',
              'deeslikes',
              'denuoonceeng',
              'desures',
              'du',
              'eccuoont',
              'ectooel',
              'edfuntege-a',
              'efueeds',
              'egeeen',
              'ell',
              'ere-a',
              'feend',
              'foolt',
              'frum',
              'geefe-a',
              'gesh',
              'greet',
              'heem',
              'heppeeness',
              'hes',
              'hoo',
              'hoomun',
              'idea',
              'ifer',
              'in',
              'incuoonter',
              'injuy',
              'itselff',
              'ixcept',
              'ixemple-a',
              'ixerceese-a',
              'ixpleeen',
              'ixplurer',
              'ixpuoond',
              'ixtremely',
              'knoo',
              'lebureeuoos',
              'lufes',
              'meestekee',
              'mester-booeelder',
              'moost',
              'mun',
              'nu',
              'nut',
              'oobteeen',
              'oocceseeunelly',
              'ooccoor',
              'ooff',
              'oone-a',
              'oor',
              'peeen',
              'peeenffool',
              'physeecel',
              'pleesoore-a',
              'poorsooe-a',
              'poorsooes',
              'preeesing',
              'prucoore-a',
              'prudooces',
              'reeght',
              'reshunelly',
              'resooltunt',
              'sume-a',
              'teecheengs',
              'teke-a',
              'thees',
              'thet',
              'thuse-a',
              'treefiel',
              'troot',
              'tu',
              'tueel',
              'und',
              'undertekes',
              'unnuyeeng',
              'uny',
              'unyune-a',
              'us',
              'veell',
              'veet',
              'ves',
              'vheech',
              'vhu',
              'yuoo',
              'zee',
              'zeere-a'
            ]
          }
        }
      },
      'en-CA': {
        faker: {
          address: {
            postcode: [
              '?#? #?#',
              '?#?#?#'
            ],
            state: [
              'Alberta',
              'British Columbia',
              'Manitoba',
              'New Brunswick',
              'Newfoundland and Labrador',
              'Nova Scotia',
              'Northwest Territories',
              'Nunavut',
              'Ontario',
              'Prince Edward Island',
              'Quebec',
              'Saskatchewan',
              'Yukon'
            ],
            state_abbr: [
              'AB',
              'BC',
              'MB',
              'NB',
              'NL',
              'NS',
              'NU',
              'NT',
              'ON',
              'PE',
              'QC',
              'SK',
              'YK'
            ],
            default_country: [
              'Canada'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.ca',
              'hotmail.com'
            ],
            domain_suffix: [
              'ca',
              'com',
              'biz',
              'info',
              'name',
              'net',
              'org'
            ]
          },
          phone_number: {
            formats: [
              '###-###-####',
              '(###)###-####',
              '###.###.####',
              '1-###-###-####',
              '###-###-#### x###',
              '(###)###-#### x###',
              '1-###-###-#### x###',
              '###.###.#### x###',
              '###-###-#### x####',
              '(###)###-#### x####',
              '1-###-###-#### x####',
              '###.###.#### x####',
              '###-###-#### x#####',
              '(###)###-#### x#####',
              '1-###-###-#### x#####',
              '###.###.#### x#####'
            ]
          }
        }
      },
      'en-GB': {
        faker: {
          address: {
            postcode: '/[A-PR-UWYZ][A-HK-Y]?[0-9][ABEHMNPRVWXY0-9]? [0-9][ABD-HJLN-UW-Z]{2}/',
            county: [
              'Avon',
              'Bedfordshire',
              'Berkshire',
              'Borders',
              'Buckinghamshire',
              'Cambridgeshire',
              'Central',
              'Cheshire',
              'Cleveland',
              'Clwyd',
              'Cornwall',
              'County Antrim',
              'County Armagh',
              'County Down',
              'County Fermanagh',
              'County Londonderry',
              'County Tyrone',
              'Cumbria',
              'Derbyshire',
              'Devon',
              'Dorset',
              'Dumfries and Galloway',
              'Durham',
              'Dyfed',
              'East Sussex',
              'Essex',
              'Fife',
              'Gloucestershire',
              'Grampian',
              'Greater Manchester',
              'Gwent',
              'Gwynedd County',
              'Hampshire',
              'Herefordshire',
              'Hertfordshire',
              'Highlands and Islands',
              'Humberside',
              'Isle of Wight',
              'Kent',
              'Lancashire',
              'Leicestershire',
              'Lincolnshire',
              'Lothian',
              'Merseyside',
              'Mid Glamorgan',
              'Norfolk',
              'North Yorkshire',
              'Northamptonshire',
              'Northumberland',
              'Nottinghamshire',
              'Oxfordshire',
              'Powys',
              'Rutland',
              'Shropshire',
              'Somerset',
              'South Glamorgan',
              'South Yorkshire',
              'Staffordshire',
              'Strathclyde',
              'Suffolk',
              'Surrey',
              'Tayside',
              'Tyne and Wear',
              'Warwickshire',
              'West Glamorgan',
              'West Midlands',
              'West Sussex',
              'West Yorkshire',
              'Wiltshire',
              'Worcestershire'
            ],
            uk_country: [
              'England',
              'Scotland',
              'Wales',
              'Northern Ireland'
            ],
            default_country: [
              'England',
              'Scotland',
              'Wales',
              'Northern Ireland'
            ]
          },
          internet: {
            domain_suffix: [
              'co.uk',
              'com',
              'biz',
              'info',
              'name'
            ]
          },
          phone_number: {
            formats: [
              '01#### #####',
              '01### ######',
              '01#1 ### ####',
              '011# ### ####',
              '02# #### ####',
              '03## ### ####',
              '055 #### ####',
              '056 #### ####',
              '0800 ### ####',
              '08## ### ####',
              '09## ### ####',
              '016977 ####',
              '01### #####',
              '0500 ######',
              '0800 ######'
            ]
          },
          cell_phone: {
            formats: [
              '074## ######',
              '075## ######',
              '076## ######',
              '077## ######',
              '078## ######',
              '079## ######'
            ]
          }
        }
      },
      'en-IND': {
        faker: {
          name: {
            first_name: [
              'Aadrika',
              'Aanandinii',
              'Aaratrika',
              'Aarya',
              'Arya',
              'Aashritha',
              'Aatmaja',
              'Atmaja',
              'Abhaya',
              'Adwitiya',
              'Agrata',
              'Ahilya',
              'Ahalya',
              'Aishani',
              'Akshainie',
              'Akshata',
              'Akshita',
              'Akula',
              'Ambar',
              'Amodini',
              'Amrita',
              'Amritambu',
              'Anala',
              'Anamika',
              'Ananda',
              'Anandamayi',
              'Ananta',
              'Anila',
              'Anjali',
              'Anjushri',
              'Anjushree',
              'Annapurna',
              'Anshula',
              'Anuja',
              'Anusuya',
              'Anasuya',
              'Anasooya',
              'Anwesha',
              'Apsara',
              'Aruna',
              'Asha',
              'Aasa',
              'Aasha',
              'Aslesha',
              'Atreyi',
              'Atreyee',
              'Avani',
              'Abani',
              'Avantika',
              'Ayushmati',
              'Baidehi',
              'Vaidehi',
              'Bala',
              'Baala',
              'Balamani',
              'Basanti',
              'Vasanti',
              'Bela',
              'Bhadra',
              'Bhagirathi',
              'Bhagwanti',
              'Bhagwati',
              'Bhamini',
              'Bhanumati',
              'Bhaanumati',
              'Bhargavi',
              'Bhavani',
              'Bhilangana',
              'Bilwa',
              'Bilva',
              'Buddhana',
              'Chakrika',
              'Chanda',
              'Chandi',
              'Chandni',
              'Chandini',
              'Chandani',
              'Chandra',
              'Chandira',
              'Chandrabhaga',
              'Chandrakala',
              'Chandrakin',
              'Chandramani',
              'Chandrani',
              'Chandraprabha',
              'Chandraswaroopa',
              'Chandravati',
              'Chapala',
              'Charumati',
              'Charvi',
              'Chatura',
              'Chitrali',
              'Chitramala',
              'Chitrangada',
              'Daksha',
              'Dakshayani',
              'Damayanti',
              'Darshwana',
              'Deepali',
              'Dipali',
              'Deeptimoyee',
              'Deeptimayee',
              'Devangana',
              'Devani',
              'Devasree',
              'Devi',
              'Daevi',
              'Devika',
              'Daevika',
              'Dhaanyalakshmi',
              'Dhanalakshmi',
              'Dhana',
              'Dhanadeepa',
              'Dhara',
              'Dharani',
              'Dharitri',
              'Dhatri',
              'Diksha',
              'Deeksha',
              'Divya',
              'Draupadi',
              'Dulari',
              'Durga',
              'Durgeshwari',
              'Ekaparnika',
              'Elakshi',
              'Enakshi',
              'Esha',
              'Eshana',
              'Eshita',
              'Gautami',
              'Gayatri',
              'Geeta',
              'Geetanjali',
              'Gitanjali',
              'Gemine',
              'Gemini',
              'Girja',
              'Girija',
              'Gita',
              'Hamsini',
              'Harinakshi',
              'Harita',
              'Heema',
              'Himadri',
              'Himani',
              'Hiranya',
              'Indira',
              'Jaimini',
              'Jaya',
              'Jyoti',
              'Jyotsana',
              'Kali',
              'Kalinda',
              'Kalpana',
              'Kalyani',
              'Kama',
              'Kamala',
              'Kamla',
              'Kanchan',
              'Kanishka',
              'Kanti',
              'Kashyapi',
              'Kumari',
              'Kumuda',
              'Lakshmi',
              'Laxmi',
              'Lalita',
              'Lavanya',
              'Leela',
              'Lila',
              'Leela',
              'Madhuri',
              'Malti',
              'Malati',
              'Mandakini',
              'Mandaakin',
              'Mangala',
              'Mangalya',
              'Mani',
              'Manisha',
              'Manjusha',
              'Meena',
              'Mina',
              'Meenakshi',
              'Minakshi',
              'Menka',
              'Menaka',
              'Mohana',
              'Mohini',
              'Nalini',
              'Nikita',
              'Ojaswini',
              'Omana',
              'Oormila',
              'Urmila',
              'Opalina',
              'Opaline',
              'Padma',
              'Parvati',
              'Poornima',
              'Purnima',
              'Pramila',
              'Prasanna',
              'Preity',
              'Prema',
              'Priya',
              'Priyala',
              'Pushti',
              'Radha',
              'Rageswari',
              'Rageshwari',
              'Rajinder',
              'Ramaa',
              'Rati',
              'Rita',
              'Rohana',
              'Rukhmani',
              'Rukmin',
              'Rupinder',
              'Sanya',
              'Sarada',
              'Sharda',
              'Sarala',
              'Sarla',
              'Saraswati',
              'Sarisha',
              'Saroja',
              'Shakti',
              'Shakuntala',
              'Shanti',
              'Sharmila',
              'Shashi',
              'Shashikala',
              'Sheela',
              'Shivakari',
              'Shobhana',
              'Shresth',
              'Shresthi',
              'Shreya',
              'Shreyashi',
              'Shridevi',
              'Shrishti',
              'Shubha',
              'Shubhaprada',
              'Siddhi',
              'Sitara',
              'Sloka',
              'Smita',
              'Smriti',
              'Soma',
              'Subhashini',
              'Subhasini',
              'Sucheta',
              'Sudeva',
              'Sujata',
              'Sukanya',
              'Suma',
              'Suma',
              'Sumitra',
              'Sunita',
              'Suryakantam',
              'Sushma',
              'Swara',
              'Swarnalata',
              'Sweta',
              'Shwet',
              'Tanirika',
              'Tanushree',
              'Tanushri',
              'Tanushri',
              'Tanya',
              'Tara',
              'Trisha',
              'Uma',
              'Usha',
              'Vaijayanti',
              'Vaijayanthi',
              'Baijayanti',
              'Vaishvi',
              'Vaishnavi',
              'Vaishno',
              'Varalakshmi',
              'Vasudha',
              'Vasundhara',
              'Veda',
              'Vedanshi',
              'Vidya',
              'Vimala',
              'Vrinda',
              'Vrund',
              'Aadi',
              'Aadidev',
              'Aadinath',
              'Aaditya',
              'Aagam',
              'Aagney',
              'Aamod',
              'Aanandaswarup',
              'Anand Swarup',
              'Aanjaneya',
              'Anjaneya',
              'Aaryan',
              'Aryan',
              'Aatmaj',
              'Aatreya',
              'Aayushmaan',
              'Aayushman',
              'Abhaidev',
              'Abhaya',
              'Abhirath',
              'Abhisyanta',
              'Acaryatanaya',
              'Achalesvara',
              'Acharyanandana',
              'Acharyasuta',
              'Achintya',
              'Achyut',
              'Adheesh',
              'Adhiraj',
              'Adhrit',
              'Adikavi',
              'Adinath',
              'Aditeya',
              'Aditya',
              'Adityanandan',
              'Adityanandana',
              'Adripathi',
              'Advaya',
              'Agasti',
              'Agastya',
              'Agneya',
              'Aagneya',
              'Agnimitra',
              'Agniprava',
              'Agnivesh',
              'Agrata',
              'Ajit',
              'Ajeet',
              'Akroor',
              'Akshaj',
              'Akshat',
              'Akshayakeerti',
              'Alok',
              'Aalok',
              'Amaranaath',
              'Amarnath',
              'Amaresh',
              'Ambar',
              'Ameyatma',
              'Amish',
              'Amogh',
              'Amrit',
              'Anaadi',
              'Anagh',
              'Anal',
              'Anand',
              'Aanand',
              'Anang',
              'Anil',
              'Anilaabh',
              'Anilabh',
              'Anish',
              'Ankal',
              'Anunay',
              'Anurag',
              'Anuraag',
              'Archan',
              'Arindam',
              'Arjun',
              'Arnesh',
              'Arun',
              'Ashlesh',
              'Ashok',
              'Atmanand',
              'Atmananda',
              'Avadhesh',
              'Baalaaditya',
              'Baladitya',
              'Baalagopaal',
              'Balgopal',
              'Balagopal',
              'Bahula',
              'Bakula',
              'Bala',
              'Balaaditya',
              'Balachandra',
              'Balagovind',
              'Bandhu',
              'Bandhul',
              'Bankim',
              'Bankimchandra',
              'Bhadrak',
              'Bhadraksh',
              'Bhadran',
              'Bhagavaan',
              'Bhagvan',
              'Bharadwaj',
              'Bhardwaj',
              'Bharat',
              'Bhargava',
              'Bhasvan',
              'Bhaasvan',
              'Bhaswar',
              'Bhaaswar',
              'Bhaumik',
              'Bhaves',
              'Bheeshma',
              'Bhisham',
              'Bhishma',
              'Bhima',
              'Bhoj',
              'Bhramar',
              'Bhudev',
              'Bhudeva',
              'Bhupati',
              'Bhoopati',
              'Bhoopat',
              'Bhupen',
              'Bhushan',
              'Bhooshan',
              'Bhushit',
              'Bhooshit',
              'Bhuvanesh',
              'Bhuvaneshwar',
              'Bilva',
              'Bodhan',
              'Brahma',
              'Brahmabrata',
              'Brahmanandam',
              'Brahmaanand',
              'Brahmdev',
              'Brajendra',
              'Brajesh',
              'Brijesh',
              'Birjesh',
              'Budhil',
              'Chakor',
              'Chakradhar',
              'Chakravartee',
              'Chakravarti',
              'Chanakya',
              'Chaanakya',
              'Chandak',
              'Chandan',
              'Chandra',
              'Chandraayan',
              'Chandrabhan',
              'Chandradev',
              'Chandraketu',
              'Chandramauli',
              'Chandramohan',
              'Chandran',
              'Chandranath',
              'Chapal',
              'Charak',
              'Charuchandra',
              'Chaaruchandra',
              'Charuvrat',
              'Chatur',
              'Chaturaanan',
              'Chaturbhuj',
              'Chetan',
              'Chaten',
              'Chaitan',
              'Chetanaanand',
              'Chidaakaash',
              'Chidaatma',
              'Chidambar',
              'Chidambaram',
              'Chidananda',
              'Chinmayanand',
              'Chinmayananda',
              'Chiranjeev',
              'Chiranjeeve',
              'Chitraksh',
              'Daiwik',
              'Daksha',
              'Damodara',
              'Dandak',
              'Dandapaani',
              'Darshan',
              'Datta',
              'Dayaamay',
              'Dayamayee',
              'Dayaananda',
              'Dayaanidhi',
              'Kin',
              'Deenabandhu',
              'Deepan',
              'Deepankar',
              'Dipankar',
              'Deependra',
              'Dipendra',
              'Deepesh',
              'Dipesh',
              'Deeptanshu',
              'Deeptendu',
              'Diptendu',
              'Deeptiman',
              'Deeptimoy',
              'Deeptimay',
              'Dev',
              'Deb',
              'Devadatt',
              'Devagya',
              'Devajyoti',
              'Devak',
              'Devdan',
              'Deven',
              'Devesh',
              'Deveshwar',
              'Devi',
              'Devvrat',
              'Dhananjay',
              'Dhanapati',
              'Dhanpati',
              'Dhanesh',
              'Dhanu',
              'Dhanvin',
              'Dharmaketu',
              'Dhruv',
              'Dhyanesh',
              'Dhyaneshwar',
              'Digambar',
              'Digambara',
              'Dinakar',
              'Dinkar',
              'Dinesh',
              'Divaakar',
              'Divakar',
              'Deevakar',
              'Divjot',
              'Dron',
              'Drona',
              'Dwaipayan',
              'Dwaipayana',
              'Eekalabya',
              'Ekalavya',
              'Ekaksh',
              'Ekaaksh',
              'Ekaling',
              'Ekdant',
              'Ekadant',
              'Gajaadhar',
              'Gajadhar',
              'Gajbaahu',
              'Gajabahu',
              'Ganak',
              'Ganaka',
              'Ganapati',
              'Gandharv',
              'Gandharva',
              'Ganesh',
              'Gangesh',
              'Garud',
              'Garuda',
              'Gati',
              'Gatik',
              'Gaurang',
              'Gauraang',
              'Gauranga',
              'Gouranga',
              'Gautam',
              'Gautama',
              'Goutam',
              'Ghanaanand',
              'Ghanshyam',
              'Ghanashyam',
              'Giri',
              'Girik',
              'Girika',
              'Girindra',
              'Giriraaj',
              'Giriraj',
              'Girish',
              'Gopal',
              'Gopaal',
              'Gopi',
              'Gopee',
              'Gorakhnath',
              'Gorakhanatha',
              'Goswamee',
              'Goswami',
              'Gotum',
              'Gautam',
              'Govinda',
              'Gobinda',
              'Gudakesha',
              'Gudakesa',
              'Gurdev',
              'Guru',
              'Hari',
              'Harinarayan',
              'Harit',
              'Himadri',
              'Hiranmay',
              'Hiranmaya',
              'Hiranya',
              'Inder',
              'Indra',
              'Indra',
              'Jagadish',
              'Jagadisha',
              'Jagathi',
              'Jagdeep',
              'Jagdish',
              'Jagmeet',
              'Jahnu',
              'Jai',
              'Javas',
              'Jay',
              'Jitendra',
              'Jitender',
              'Jyotis',
              'Kailash',
              'Kama',
              'Kamalesh',
              'Kamlesh',
              'Kanak',
              'Kanaka',
              'Kannan',
              'Kannen',
              'Karan',
              'Karthik',
              'Kartik',
              'Karunanidhi',
              'Kashyap',
              'Kiran',
              'Kirti',
              'Keerti',
              'Krishna',
              'Krishnadas',
              'Krishnadasa',
              'Kumar',
              'Lai',
              'Lakshman',
              'Laxman',
              'Lakshmidhar',
              'Lakshminath',
              'Lal',
              'Laal',
              'Mahendra',
              'Mohinder',
              'Mahesh',
              'Maheswar',
              'Mani',
              'Manik',
              'Manikya',
              'Manoj',
              'Marut',
              'Mayoor',
              'Meghnad',
              'Meghnath',
              'Mohan',
              'Mukesh',
              'Mukul',
              'Nagabhushanam',
              'Nanda',
              'Narayan',
              'Narendra',
              'Narinder',
              'Naveen',
              'Navin',
              'Nawal',
              'Naval',
              'Nimit',
              'Niranjan',
              'Nirbhay',
              'Niro',
              'Param',
              'Paramartha',
              'Pran',
              'Pranay',
              'Prasad',
              'Prathamesh',
              'Prayag',
              'Prem',
              'Puneet',
              'Purushottam',
              'Rahul',
              'Raj',
              'Rajan',
              'Rajendra',
              'Rajinder',
              'Rajiv',
              'Rakesh',
              'Ramesh',
              'Rameshwar',
              'Ranjit',
              'Ranjeet',
              'Ravi',
              'Ritesh',
              'Rohan',
              'Rohit',
              'Rudra',
              'Sachin',
              'Sameer',
              'Samir',
              'Sanjay',
              'Sanka',
              'Sarvin',
              'Satish',
              'Satyen',
              'Shankar',
              'Shantanu',
              'Shashi',
              'Sher',
              'Shiv',
              'Siddarth',
              'Siddhran',
              'Som',
              'Somu',
              'Somnath',
              'Subhash',
              'Subodh',
              'Suman',
              'Suresh',
              'Surya',
              'Suryakant',
              'Suryakanta',
              'Sushil',
              'Susheel',
              'Swami',
              'Swapnil',
              'Tapan',
              'Tara',
              'Tarun',
              'Tej',
              'Tejas',
              'Trilochan',
              'Trilochana',
              'Trilok',
              'Trilokesh',
              'Triloki',
              'Triloki Nath',
              'Trilokanath',
              'Tushar',
              'Udai',
              'Udit',
              'Ujjawal',
              'Ujjwal',
              'Umang',
              'Upendra',
              'Uttam',
              'Vasudev',
              'Vasudeva',
              'Vedang',
              'Vedanga',
              'Vidhya',
              'Vidur',
              'Vidhur',
              'Vijay',
              'Vimal',
              'Vinay',
              'Vishnu',
              'Bishnu',
              'Vishwamitra',
              'Vyas',
              'Yogendra',
              'Yoginder',
              'Yogesh'
            ],
            last_name: [
              'Abbott',
              'Achari',
              'Acharya',
              'Adiga',
              'Agarwal',
              'Ahluwalia',
              'Ahuja',
              'Arora',
              'Asan',
              'Bandopadhyay',
              'Banerjee',
              'Bharadwaj',
              'Bhat',
              'Butt',
              'Bhattacharya',
              'Bhattathiri',
              'Chaturvedi',
              'Chattopadhyay',
              'Chopra',
              'Desai',
              'Deshpande',
              'Devar',
              'Dhawan',
              'Dubashi',
              'Dutta',
              'Dwivedi',
              'Embranthiri',
              'Ganaka',
              'Gandhi',
              'Gill',
              'Gowda',
              'Guha',
              'Guneta',
              'Gupta',
              'Iyer',
              'Iyengar',
              'Jain',
              'Jha',
              'Johar',
              'Joshi',
              'Kakkar',
              'Kaniyar',
              'Kapoor',
              'Kaul',
              'Kaur',
              'Khan',
              'Khanna',
              'Khatri',
              'Kocchar',
              'Mahajan',
              'Malik',
              'Marar',
              'Menon',
              'Mehra',
              'Mehrotra',
              'Mishra',
              'Mukhopadhyay',
              'Nayar',
              'Naik',
              'Nair',
              'Nambeesan',
              'Namboothiri',
              'Nehru',
              'Pandey',
              'Panicker',
              'Patel',
              'Patil',
              'Pilla',
              'Pillai',
              'Pothuvaal',
              'Prajapat',
              'Rana',
              'Reddy',
              'Saini',
              'Sethi',
              'Shah',
              'Sharma',
              'Shukla',
              'Singh',
              'Sinha',
              'Somayaji',
              'Tagore',
              'Talwar',
              'Tandon',
              'Trivedi',
              'Varrier',
              'Varma',
              'Varman',
              'Verma'
            ]
          },
          address: {
            postcode: [
              '?#? #?#'
            ],
            state: [
              'Andra Pradesh',
              'Arunachal Pradesh',
              'Assam',
              'Bihar',
              'Chhattisgarh',
              'Goa',
              'Gujarat',
              'Haryana',
              'Himachal Pradesh',
              'Jammu and Kashmir',
              'Jharkhand',
              'Karnataka',
              'Kerala',
              'Madya Pradesh',
              'Maharashtra',
              'Manipur',
              'Meghalaya',
              'Mizoram',
              'Nagaland',
              'Orissa',
              'Punjab',
              'Rajasthan',
              'Sikkim',
              'Tamil Nadu',
              'Tripura',
              'Uttaranchal',
              'Uttar Pradesh',
              'West Bengal',
              'Andaman and Nicobar Islands',
              'Chandigarh',
              'Dadar and Nagar Haveli',
              'Daman and Diu',
              'Delhi',
              'Lakshadweep',
              'Pondicherry'
            ],
            state_abbr: [
              'AP',
              'AR',
              'AS',
              'BR',
              'CG',
              'DL',
              'GA',
              'GJ',
              'HR',
              'HP',
              'JK',
              'JS',
              'KA',
              'KL',
              'MP',
              'MH',
              'MN',
              'ML',
              'MZ',
              'NL',
              'OR',
              'PB',
              'RJ',
              'SK',
              'TN',
              'TR',
              'UK',
              'UP',
              'WB',
              'AN',
              'CH',
              'DN',
              'DD',
              'LD',
              'PY'
            ],
            default_country: [
              'India',
              'Indian Republic',
              'Bharat',
              'Hindustan'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.co.in',
              'hotmail.com'
            ],
            domain_suffix: [
              'in',
              'com',
              'biz',
              'info',
              'name',
              'net',
              'org',
              'co.in'
            ]
          },
          company: {
            suffix: [
              'Pvt Ltd',
              'Limited',
              'Ltd',
              'and Sons',
              'Corp',
              'Group',
              'Brothers'
            ]
          },
          phone_number: {
            formats: [
              '+91###-###-####',
              '+91##########',
              '+91-###-#######'
            ]
          }
        }
      },
      nep: {
        faker: {
          name: {
            first_name: [
              'Aarav',
              'Ajita',
              'Amit',
              'Amita',
              'Amrit',
              'Arijit',
              'Ashmi',
              'Asmita',
              'Bibek',
              'Bijay',
              'Bikash',
              'Bina',
              'Bishal',
              'Bishnu',
              'Buddha',
              'Deepika',
              'Dipendra',
              'Gagan',
              'Ganesh',
              'Khem',
              'Krishna',
              'Laxmi',
              'Manisha',
              'Nabin',
              'Nikita',
              'Niraj',
              'Nischal',
              'Padam',
              'Pooja',
              'Prabin',
              'Prakash',
              'Prashant',
              'Prem',
              'Purna',
              'Rajendra',
              'Rajina',
              'Raju',
              'Rakesh',
              'Ranjan',
              'Ratna',
              'Sagar',
              'Sandeep',
              'Sanjay',
              'Santosh',
              'Sarita',
              'Shilpa',
              'Shirisha',
              'Shristi',
              'Siddhartha',
              'Subash',
              'Sumeet',
              'Sunita',
              'Suraj',
              'Susan',
              'Sushant'
            ],
            last_name: [
              'Adhikari',
              'Aryal',
              'Baral',
              'Basnet',
              'Bastola',
              'Basynat',
              'Bhandari',
              'Bhattarai',
              'Chettri',
              'Devkota',
              'Dhakal',
              'Dongol',
              'Ghale',
              'Gurung',
              'Gyawali',
              'Hamal',
              'Jung',
              'KC',
              'Kafle',
              'Karki',
              'Khadka',
              'Koirala',
              'Lama',
              'Limbu',
              'Magar',
              'Maharjan',
              'Niroula',
              'Pandey',
              'Pradhan',
              'Rana',
              'Raut',
              'Sai',
              'Shai',
              'Shakya',
              'Sherpa',
              'Shrestha',
              'Subedi',
              'Tamang',
              'Thapa'
            ]
          },
          address: {
            postcode: [
              0
            ],
            state: [
              'Baglung',
              'Banke',
              'Bara',
              'Bardiya',
              'Bhaktapur',
              'Bhojupu',
              'Chitwan',
              'Dailekh',
              'Dang',
              'Dhading',
              'Dhankuta',
              'Dhanusa',
              'Dolakha',
              'Dolpha',
              'Gorkha',
              'Gulmi',
              'Humla',
              'Ilam',
              'Jajarkot',
              'Jhapa',
              'Jumla',
              'Kabhrepalanchok',
              'Kalikot',
              'Kapilvastu',
              'Kaski',
              'Kathmandu',
              'Lalitpur',
              'Lamjung',
              'Manang',
              'Mohottari',
              'Morang',
              'Mugu',
              'Mustang',
              'Myagdi',
              'Nawalparasi',
              'Nuwakot',
              'Palpa',
              'Parbat',
              'Parsa',
              'Ramechhap',
              'Rauswa',
              'Rautahat',
              'Rolpa',
              'Rupandehi',
              'Sankhuwasabha',
              'Sarlahi',
              'Sindhuli',
              'Sindhupalchok',
              'Sunsari',
              'Surket',
              'Syangja',
              'Tanahu',
              'Terhathum'
            ],
            city: [
              'Bhaktapur',
              'Biratnagar',
              'Birendranagar',
              'Birgunj',
              'Butwal',
              'Damak',
              'Dharan',
              'Gaur',
              'Gorkha',
              'Hetauda',
              'Itahari',
              'Janakpur',
              'Kathmandu',
              'Lahan',
              'Nepalgunj',
              'Pokhara'
            ],
            default_country: [
              'Nepal'
            ]
          },
          internet: {
            free_email: [
              'worldlink.com.np',
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'np',
              'com',
              'info',
              'net',
              'org'
            ]
          },
          company: {
            suffix: [
              'Pvt Ltd',
              'Group',
              'Ltd',
              'Limited'
            ]
          },
          phone_number: {
            formats: [
              '##-#######',
              '+977-#-#######',
              '+977########'
            ]
          }
        }
      },
      'en-US': {
        faker: {
          internet: {
            domain_suffix: [
              'com',
              'us',
              'biz',
              'info',
              'name',
              'net',
              'org'
            ]
          },
          address: {
            default_country: [
              'United States',
              'United States of America',
              'USA'
            ],
            postcode_by_state: {
              AL: '350##',
              AK: '995##',
              AS: '967##',
              AZ: '850##',
              AR: '717##',
              CA: '900##',
              CO: '800##',
              CT: '061##',
              DC: '204##',
              DE: '198##',
              FL: '322##',
              GA: '301##',
              HI: '967##',
              ID: '832##',
              IL: '600##',
              IN: '463##',
              IA: '510##',
              KS: '666##',
              KY: '404##',
              LA: '701##',
              ME: '042##',
              MD: '210##',
              MA: '026##',
              MI: '480##',
              MN: '555##',
              MS: '387##',
              MO: '650##',
              MT: '590##',
              NE: '688##',
              NV: '898##',
              NH: '036##',
              NJ: '076##',
              NM: '880##',
              NY: '122##',
              NC: '288##',
              ND: '586##',
              OH: '444##',
              OK: '730##',
              OR: '979##',
              PA: '186##',
              RI: '029##',
              SC: '299##',
              SD: '577##',
              TN: '383##',
              TX: '798##',
              UT: '847##',
              VT: '050##',
              VA: '222##',
              WA: '990##',
              WV: '247##',
              WI: '549##',
              WY: '831##'
            }
          },
          phone_number: {
            area_code: [
              '201',
              '202',
              '203',
              '205',
              '206',
              '207',
              '208',
              '209',
              '210',
              '212',
              '213',
              '214',
              '215',
              '216',
              '217',
              '218',
              '219',
              '224',
              '225',
              '227',
              '228',
              '229',
              '231',
              '234',
              '239',
              '240',
              '248',
              '251',
              '252',
              '253',
              '254',
              '256',
              '260',
              '262',
              '267',
              '269',
              '270',
              '276',
              '281',
              '283',
              '301',
              '302',
              '303',
              '304',
              '305',
              '307',
              '308',
              '309',
              '310',
              '312',
              '313',
              '314',
              '315',
              '316',
              '317',
              '318',
              '319',
              '320',
              '321',
              '323',
              '330',
              '331',
              '334',
              '336',
              '337',
              '339',
              '347',
              '351',
              '352',
              '360',
              '361',
              '386',
              '401',
              '402',
              '404',
              '405',
              '406',
              '407',
              '408',
              '409',
              '410',
              '412',
              '413',
              '414',
              '415',
              '417',
              '419',
              '423',
              '424',
              '425',
              '434',
              '435',
              '440',
              '443',
              '445',
              '464',
              '469',
              '470',
              '475',
              '478',
              '479',
              '480',
              '484',
              '501',
              '502',
              '503',
              '504',
              '505',
              '507',
              '508',
              '509',
              '510',
              '512',
              '513',
              '515',
              '516',
              '517',
              '518',
              '520',
              '530',
              '540',
              '541',
              '551',
              '557',
              '559',
              '561',
              '562',
              '563',
              '564',
              '567',
              '570',
              '571',
              '573',
              '574',
              '580',
              '585',
              '586',
              '601',
              '602',
              '603',
              '605',
              '606',
              '607',
              '608',
              '609',
              '610',
              '612',
              '614',
              '615',
              '616',
              '617',
              '618',
              '619',
              '620',
              '623',
              '626',
              '630',
              '631',
              '636',
              '641',
              '646',
              '650',
              '651',
              '660',
              '661',
              '662',
              '667',
              '678',
              '682',
              '701',
              '702',
              '703',
              '704',
              '706',
              '707',
              '708',
              '712',
              '713',
              '714',
              '715',
              '716',
              '717',
              '718',
              '719',
              '720',
              '724',
              '727',
              '731',
              '732',
              '734',
              '737',
              '740',
              '754',
              '757',
              '760',
              '763',
              '765',
              '770',
              '772',
              '773',
              '774',
              '775',
              '781',
              '785',
              '786',
              '801',
              '802',
              '803',
              '804',
              '805',
              '806',
              '808',
              '810',
              '812',
              '813',
              '814',
              '815',
              '816',
              '817',
              '818',
              '828',
              '830',
              '831',
              '832',
              '835',
              '843',
              '845',
              '847',
              '848',
              '850',
              '856',
              '857',
              '858',
              '859',
              '860',
              '862',
              '863',
              '864',
              '865',
              '870',
              '872',
              '878',
              '901',
              '903',
              '904',
              '906',
              '907',
              '908',
              '909',
              '910',
              '912',
              '913',
              '914',
              '915',
              '916',
              '917',
              '918',
              '919',
              '920',
              '925',
              '928',
              '931',
              '936',
              '937',
              '940',
              '941',
              '947',
              '949',
              '952',
              '954',
              '956',
              '959',
              '970',
              '971',
              '972',
              '973',
              '975',
              '978',
              '979',
              '980',
              '984',
              '985',
              '989'
            ],
            exchange_code: [
              '201',
              '202',
              '203',
              '205',
              '206',
              '207',
              '208',
              '209',
              '210',
              '212',
              '213',
              '214',
              '215',
              '216',
              '217',
              '218',
              '219',
              '224',
              '225',
              '227',
              '228',
              '229',
              '231',
              '234',
              '239',
              '240',
              '248',
              '251',
              '252',
              '253',
              '254',
              '256',
              '260',
              '262',
              '267',
              '269',
              '270',
              '276',
              '281',
              '283',
              '301',
              '302',
              '303',
              '304',
              '305',
              '307',
              '308',
              '309',
              '310',
              '312',
              '313',
              '314',
              '315',
              '316',
              '317',
              '318',
              '319',
              '320',
              '321',
              '323',
              '330',
              '331',
              '334',
              '336',
              '337',
              '339',
              '347',
              '351',
              '352',
              '360',
              '361',
              '386',
              '401',
              '402',
              '404',
              '405',
              '406',
              '407',
              '408',
              '409',
              '410',
              '412',
              '413',
              '414',
              '415',
              '417',
              '419',
              '423',
              '424',
              '425',
              '434',
              '435',
              '440',
              '443',
              '445',
              '464',
              '469',
              '470',
              '475',
              '478',
              '479',
              '480',
              '484',
              '501',
              '502',
              '503',
              '504',
              '505',
              '507',
              '508',
              '509',
              '510',
              '512',
              '513',
              '515',
              '516',
              '517',
              '518',
              '520',
              '530',
              '540',
              '541',
              '551',
              '557',
              '559',
              '561',
              '562',
              '563',
              '564',
              '567',
              '570',
              '571',
              '573',
              '574',
              '580',
              '585',
              '586',
              '601',
              '602',
              '603',
              '605',
              '606',
              '607',
              '608',
              '609',
              '610',
              '612',
              '614',
              '615',
              '616',
              '617',
              '618',
              '619',
              '620',
              '623',
              '626',
              '630',
              '631',
              '636',
              '641',
              '646',
              '650',
              '651',
              '660',
              '661',
              '662',
              '667',
              '678',
              '682',
              '701',
              '702',
              '703',
              '704',
              '706',
              '707',
              '708',
              '712',
              '713',
              '714',
              '715',
              '716',
              '717',
              '718',
              '719',
              '720',
              '724',
              '727',
              '731',
              '732',
              '734',
              '737',
              '740',
              '754',
              '757',
              '760',
              '763',
              '765',
              '770',
              '772',
              '773',
              '774',
              '775',
              '781',
              '785',
              '786',
              '801',
              '802',
              '803',
              '804',
              '805',
              '806',
              '808',
              '810',
              '812',
              '813',
              '814',
              '815',
              '816',
              '817',
              '818',
              '828',
              '830',
              '831',
              '832',
              '835',
              '843',
              '845',
              '847',
              '848',
              '850',
              '856',
              '857',
              '858',
              '859',
              '860',
              '862',
              '863',
              '864',
              '865',
              '870',
              '872',
              '878',
              '901',
              '903',
              '904',
              '906',
              '907',
              '908',
              '909',
              '910',
              '912',
              '913',
              '914',
              '915',
              '916',
              '917',
              '918',
              '919',
              '920',
              '925',
              '928',
              '931',
              '936',
              '937',
              '940',
              '941',
              '947',
              '949',
              '952',
              '954',
              '956',
              '959',
              '970',
              '971',
              '972',
              '973',
              '975',
              '978',
              '979',
              '980',
              '984',
              '985',
              '989'
            ],
            formats: [
              '#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number}',
              '(#{PhoneNumber.area_code}) #{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number}',
              '1-#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number}',
              '#{PhoneNumber.area_code}.#{PhoneNumber.exchange_code}.#{PhoneNumber.subscriber_number}',
              '#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number}',
              '(#{PhoneNumber.area_code}) #{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number}',
              '1-#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number}',
              '#{PhoneNumber.area_code}.#{PhoneNumber.exchange_code}.#{PhoneNumber.subscriber_number}',
              '#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '(#{PhoneNumber.area_code}) #{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '1-#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '#{PhoneNumber.area_code}.#{PhoneNumber.exchange_code}.#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '(#{PhoneNumber.area_code}) #{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '1-#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '#{PhoneNumber.area_code}.#{PhoneNumber.exchange_code}.#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '(#{PhoneNumber.area_code}) #{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '1-#{PhoneNumber.area_code}-#{PhoneNumber.exchange_code}-#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}',
              '#{PhoneNumber.area_code}.#{PhoneNumber.exchange_code}.#{PhoneNumber.subscriber_number} x#{PhoneNumber.extension}'
            ]
          }
        }
      },
      'en-au-ocker': {
        faker: {
          name: {
            first_name: [
              'Charlotte',
              'Ava',
              'Chloe',
              'Emily',
              'Olivia',
              'Zoe',
              'Lily',
              'Sophie',
              'Amelia',
              'Sofia',
              'Ella',
              'Isabella',
              'Ruby',
              'Sienna',
              'Mia+3',
              'Grace',
              'Emma',
              'Ivy',
              'Layla',
              'Abigail',
              'Isla',
              'Hannah',
              'Zara',
              'Lucy',
              'Evie',
              'Annabelle',
              'Madison',
              'Alice',
              'Georgia',
              'Maya',
              'Madeline',
              'Audrey',
              'Scarlett',
              'Isabelle',
              'Chelsea',
              'Mila',
              'Holly',
              'Indiana',
              'Poppy',
              'Harper',
              'Sarah',
              'Alyssa',
              'Jasmine',
              'Imogen',
              'Hayley',
              'Pheobe',
              'Eva',
              'Evelyn',
              'Mackenzie',
              'Ayla',
              'Oliver',
              'Jack',
              'Jackson',
              'William',
              'Ethan',
              'Charlie',
              'Lucas',
              'Cooper',
              'Lachlan',
              'Noah',
              'Liam',
              'Alexander',
              'Max',
              'Isaac',
              'Thomas',
              'Xavier',
              'Oscar',
              'Benjamin',
              'Aiden',
              'Mason',
              'Samuel',
              'James',
              'Levi',
              'Riley',
              'Harrison',
              'Ryan',
              'Henry',
              'Jacob',
              'Joshua',
              'Leo',
              'Zach',
              'Harry',
              'Hunter',
              'Flynn',
              'Archie',
              'Tyler',
              'Elijah',
              'Hayden',
              'Jayden',
              'Blake',
              'Archer',
              'Ashton',
              'Sebastian',
              'Zachery',
              'Lincoln',
              'Mitchell',
              'Luca',
              'Nathan',
              'Kai',
              'Connor',
              'Tom',
              'Nigel',
              'Matt',
              'Sean'
            ],
            last_name: [
              'Smith',
              'Jones',
              'Williams',
              'Brown',
              'Wilson',
              'Taylor',
              'Morton',
              'White',
              'Martin',
              'Anderson',
              'Thompson',
              'Nguyen',
              'Thomas',
              'Walker',
              'Harris',
              'Lee',
              'Ryan',
              'Robinson',
              'Kelly',
              'King',
              'Rausch',
              'Ridge',
              'Connolly',
              'LeQuesne'
            ],
            ocker_first_name: [
              'Bazza',
              'Bluey',
              'Davo',
              'Johno',
              'Shano',
              'Shazza'
            ]
          },
          company: {
            suffix: [
              'Pty Ltd',
              'and Sons',
              'Corp',
              'Group',
              'Brothers',
              'Partners'
            ]
          },
          internet: {
            domain_suffix: [
              'com.au',
              'com',
              'net.au',
              'net',
              'org.au',
              'org'
            ]
          },
          address: {
            street_root: [
              'Ramsay Street',
              'Bonnie Doon',
              'Cavill Avenue',
              'Queen Street'
            ],
            street_name: [
              '#{street_root}'
            ],
            city_prefix: [
              'Bondi',
              'Burleigh Heads',
              'Carlton',
              'Fitzroy',
              'Fremantle',
              'Glenelg',
              'Manly',
              'Noosa',
              'Stones Corner',
              'St Kilda',
              'Surry Hills',
              'Yarra Valley'
            ],
            city: [
              '#{city_prefix}'
            ],
            state_abbr: [
              'NSW',
              'QLD',
              'NT',
              'SA',
              'WA',
              'TAS',
              'ACT',
              'VIC'
            ],
            region: [
              'South East Queensland',
              'Wide Bay Burnett',
              'Margaret River',
              'Port Pirie',
              'Gippsland',
              'Elizabeth',
              'Barossa'
            ],
            state: [
              'New South Wales',
              'Queensland',
              'Northern Territory',
              'South Australia',
              'Western Australia',
              'Tasmania',
              'Australian Capital Territory',
              'Victoria'
            ],
            postcode: [
              '0###',
              '2###',
              '3###',
              '4###',
              '5###',
              '6###',
              '7###'
            ],
            building_number: [
              '####',
              '###',
              '##'
            ],
            street_suffix: [
              'Avenue',
              'Boulevard',
              'Circle',
              'Circuit',
              'Court',
              'Crescent',
              'Crest',
              'Drive',
              'Estate Dr',
              'Grove',
              'Hill',
              'Island',
              'Junction',
              'Knoll',
              'Lane',
              'Loop',
              'Mall',
              'Manor',
              'Meadow',
              'Mews',
              'Parade',
              'Parkway',
              'Pass',
              'Place',
              'Plaza',
              'Ridge',
              'Road',
              'Run',
              'Square',
              'Station St',
              'Street',
              'Summit',
              'Terrace',
              'Track',
              'Trail',
              'View Rd',
              'Way'
            ],
            default_country: [
              'Australia'
            ]
          },
          phone_number: {
            formats: [
              '0# #### ####',
              '+61 # #### ####',
              '04## ### ###',
              '+61 4## ### ###'
            ]
          }
        }
      },
      es: {
        faker: {
          address: {
            city_prefix: [
              'Parla',
              'Telde',
              'Baracaldo',
              'San Fernando',
              'Torrevieja',
              'Lugo',
              'Santiago de Compostela',
              'Gerona',
              'Cáceres',
              'Lorca',
              'Coslada',
              'Talavera de la Reina',
              'El Puerto de Santa María',
              'Cornellá de Llobregat',
              'Avilés',
              'Palencia',
              'Gecho',
              'Orihuela',
              'Pontevedra',
              'Pozuelo de Alarcón',
              'Toledo',
              'El Ejido',
              'Guadalajara',
              'Gandía',
              'Ceuta',
              'Ferrol',
              'Chiclana de la Frontera',
              'Manresa',
              'Roquetas de Mar',
              'Ciudad Real',
              'Rubí',
              'Benidorm',
              'San Sebastían de los Reyes',
              'Ponferrada',
              'Zamora',
              'Alcalá de Guadaira',
              'Fuengirola',
              'Mijas',
              'Sanlúcar de Barrameda',
              'La Línea de la Concepción',
              'Majadahonda',
              'Sagunto',
              'El Prat de LLobregat',
              'Viladecans',
              'Linares',
              'Alcoy',
              'Irún',
              'Estepona',
              'Torremolinos',
              'Rivas-Vaciamadrid',
              'Molina de Segura',
              'Paterna',
              'Granollers',
              'Santa Lucía de Tirajana',
              'Motril',
              'Cerdañola del Vallés',
              'Arrecife',
              'Segovia',
              'Torrelavega',
              'Elda',
              'Mérida',
              'Ávila',
              'Valdemoro',
              'Cuenta',
              'Collado Villalba',
              'Benalmádena',
              'Mollet del Vallés',
              'Puertollano',
              'Madrid',
              'Barcelona',
              'Valencia',
              'Sevilla',
              'Zaragoza',
              'Málaga',
              'Murcia',
              'Palma de Mallorca',
              'Las Palmas de Gran Canaria',
              'Bilbao',
              'Córdoba',
              'Alicante',
              'Valladolid',
              'Vigo',
              'Gijón',
              'Hospitalet de LLobregat',
              'La Coruña',
              'Granada',
              'Vitoria',
              'Elche',
              'Santa Cruz de Tenerife',
              'Oviedo',
              'Badalona',
              'Cartagena',
              'Móstoles',
              'Jerez de la Frontera',
              'Tarrasa',
              'Sabadell',
              'Alcalá de Henares',
              'Pamplona',
              'Fuenlabrada',
              'Almería',
              'San Sebastián',
              'Leganés',
              'Santander',
              'Burgos',
              'Castellón de la Plana',
              'Alcorcón',
              'Albacete',
              'Getafe',
              'Salamanca',
              'Huelva',
              'Logroño',
              'Badajoz',
              'San Cristróbal de la Laguna',
              'León',
              'Tarragona',
              'Cádiz',
              'Lérida',
              'Marbella',
              'Mataró',
              'Dos Hermanas',
              'Santa Coloma de Gramanet',
              'Jaén',
              'Algeciras',
              'Torrejón de Ardoz',
              'Orense',
              'Alcobendas',
              'Reus',
              'Calahorra',
              'Inca'
            ],
            country: [
              'Afganistán',
              'Albania',
              'Argelia',
              'Andorra',
              'Angola',
              'Argentina',
              'Armenia',
              'Aruba',
              'Australia',
              'Austria',
              'Azerbayán',
              'Bahamas',
              'Barein',
              'Bangladesh',
              'Barbados',
              'Bielorusia',
              'Bélgica',
              'Belice',
              'Bermuda',
              'Bután',
              'Bolivia',
              'Bosnia Herzegovina',
              'Botswana',
              'Brasil',
              'Bulgaria',
              'Burkina Faso',
              'Burundi',
              'Camboya',
              'Camerún',
              'Canada',
              'Cabo Verde',
              'Islas Caimán',
              'Chad',
              'Chile',
              'China',
              'Isla de Navidad',
              'Colombia',
              'Comodos',
              'Congo',
              'Costa Rica',
              'Costa de Marfil',
              'Croacia',
              'Cuba',
              'Chipre',
              'República Checa',
              'Dinamarca',
              'Dominica',
              'República Dominicana',
              'Ecuador',
              'Egipto',
              'El Salvador',
              'Guinea Ecuatorial',
              'Eritrea',
              'Estonia',
              'Etiopía',
              'Islas Faro',
              'Fiji',
              'Finlandia',
              'Francia',
              'Gabón',
              'Gambia',
              'Georgia',
              'Alemania',
              'Ghana',
              'Grecia',
              'Groenlandia',
              'Granada',
              'Guadalupe',
              'Guam',
              'Guatemala',
              'Guinea',
              'Guinea-Bisau',
              'Guayana',
              'Haiti',
              'Honduras',
              'Hong Kong',
              'Hungria',
              'Islandia',
              'India',
              'Indonesia',
              'Iran',
              'Irak',
              'Irlanda',
              'Italia',
              'Jamaica',
              'Japón',
              'Jordania',
              'Kazajistan',
              'Kenia',
              'Kiribati',
              'Corea',
              'Kuwait',
              'Letonia',
              'Líbano',
              'Liberia',
              'Liechtenstein',
              'Lituania',
              'Luxemburgo',
              'Macao',
              'Macedonia',
              'Madagascar',
              'Malawi',
              'Malasia',
              'Maldivas',
              'Mali',
              'Malta',
              'Martinica',
              'Mauritania',
              'Méjico',
              'Micronesia',
              'Moldavia',
              'Mónaco',
              'Mongolia',
              'Montenegro',
              'Montserrat',
              'Marruecos',
              'Mozambique',
              'Namibia',
              'Nauru',
              'Nepal',
              'Holanda',
              'Nueva Zelanda',
              'Nicaragua',
              'Niger',
              'Nigeria',
              'Noruega',
              'Omán',
              'Pakistan',
              'Panamá',
              'Papúa Nueva Guinea',
              'Paraguay',
              'Perú',
              'Filipinas',
              'Poland',
              'Portugal',
              'Puerto Rico',
              'Rusia',
              'Ruanda',
              'Samoa',
              'San Marino',
              'Santo Tomé y Principe',
              'Arabia Saudí',
              'Senegal',
              'Serbia',
              'Seychelles',
              'Sierra Leona',
              'Singapur',
              'Eslovaquia',
              'Eslovenia',
              'Somalia',
              'España',
              'Sri Lanka',
              'Sudán',
              'Suriname',
              'Suecia',
              'Suiza',
              'Siria',
              'Taiwan',
              'Tajikistan',
              'Tanzania',
              'Tailandia',
              'Timor-Leste',
              'Togo',
              'Tonga',
              'Trinidad y Tobago',
              'Tunez',
              'Turquia',
              'Uganda',
              'Ucrania',
              'Emiratos Árabes Unidos',
              'Reino Unido',
              'Estados Unidos de América',
              'Uruguay',
              'Uzbekistan',
              'Vanuatu',
              'Venezuela',
              'Vietnam',
              'Yemen',
              'Zambia',
              'Zimbabwe'
            ],
            building_number: [
              ' s/n.',
              ', #',
              ', ##',
              ' #',
              ' ##'
            ],
            street_suffix: [
              'Aldea',
              'Apartamento',
              'Arrabal',
              'Arroyo',
              'Avenida',
              'Bajada',
              'Barranco',
              'Barrio',
              'Bloque',
              'Calle',
              'Calleja',
              'Camino',
              'Carretera',
              'Caserio',
              'Colegio',
              'Colonia',
              'Conjunto',
              'Cuesta',
              'Chalet',
              'Edificio',
              'Entrada',
              'Escalinata',
              'Explanada',
              'Extramuros',
              'Extrarradio',
              'Ferrocarril',
              'Glorieta',
              'Gran Subida',
              'Grupo',
              'Huerta',
              'Jardines',
              'Lado',
              'Lugar',
              'Manzana',
              'Masía',
              'Mercado',
              'Monte',
              'Muelle',
              'Municipio',
              'Parcela',
              'Parque',
              'Partida',
              'Pasaje',
              'Paseo',
              'Plaza',
              'Poblado',
              'Polígono',
              'Prolongación',
              'Puente',
              'Puerta',
              'Quinta',
              'Ramal',
              'Rambla',
              'Rampa',
              'Riera',
              'Rincón',
              'Ronda',
              'Rua',
              'Salida',
              'Sector',
              'Sección',
              'Senda',
              'Solar',
              'Subida',
              'Terrenos',
              'Torrente',
              'Travesía',
              'Urbanización',
              'Vía',
              'Vía Pública'
            ],
            secondary_address: [
              'Esc. ###',
              'Puerta ###'
            ],
            postcode: [
              '#####'
            ],
            province: [
              'Álava',
              'Albacete',
              'Alicante',
              'Almería',
              'Asturias',
              'Ávila',
              'Badajoz',
              'Barcelona',
              'Burgos',
              'Cantabria',
              'Castellón',
              'Ciudad Real',
              'Cuenca',
              'Cáceres',
              'Cádiz',
              'Córdoba',
              'Gerona',
              'Granada',
              'Guadalajara',
              'Guipúzcoa',
              'Huelva',
              'Huesca',
              'Islas Baleares',
              'Jaén',
              'La Coruña',
              'La Rioja',
              'Las Palmas',
              'León',
              'Lugo',
              'lérida',
              'Madrid',
              'Murcia',
              'Málaga',
              'Navarra',
              'Orense',
              'Palencia',
              'Pontevedra',
              'Salamanca',
              'Santa Cruz de Tenerife',
              'Segovia',
              'Sevilla',
              'Soria',
              'Tarragona',
              'Teruel',
              'Toledo',
              'Valencia',
              'Valladolid',
              'Vizcaya',
              'Zamora',
              'Zaragoza'
            ],
            state: [
              'Andalucía',
              'Aragón',
              'Principado de Asturias',
              'Baleares',
              'Canarias',
              'Cantabria',
              'Castilla-La Mancha',
              'Castilla y León',
              'Cataluña',
              'Comunidad Valenciana',
              'Extremadura',
              'Galicia',
              'La Rioja',
              'Comunidad de Madrid',
              'Navarra',
              'País Vasco',
              'Región de Murcia'
            ],
            state_abbr: [
              'And',
              'Ara',
              'Ast',
              'Bal',
              'Can',
              'Cbr',
              'Man',
              'Leo',
              'Cat',
              'Com',
              'Ext',
              'Gal',
              'Rio',
              'Mad',
              'Nav',
              'Vas',
              'Mur'
            ],
            time_zone: [
              'Pacífico/Midway',
              'Pacífico/Pago_Pago',
              'Pacífico/Honolulu',
              'America/Juneau',
              'America/Los_Angeles',
              'America/Tijuana',
              'America/Denver',
              'America/Phoenix',
              'America/Chihuahua',
              'America/Mazatlan',
              'America/Chicago',
              'America/Regina',
              'America/Mexico_City',
              'America/Mexico_City',
              'America/Monterrey',
              'America/Guatemala',
              'America/New_York',
              'America/Indiana/Indianapolis',
              'America/Bogota',
              'America/Lima',
              'America/Lima',
              'America/Halifax',
              'America/Caracas',
              'America/La_Paz',
              'America/Santiago',
              'America/St_Johns',
              'America/Sao_Paulo',
              'America/Argentina/Buenos_Aires',
              'America/Guyana',
              'America/Godthab',
              'Atlantic/South_Georgia',
              'Atlantic/Azores',
              'Atlantic/Cape_Verde',
              'Europa/Dublin',
              'Europa/London',
              'Europa/Lisbon',
              'Europa/London',
              'Africa/Casablanca',
              'Africa/Monrovia',
              'Etc/UTC',
              'Europa/Belgrade',
              'Europa/Bratislava',
              'Europa/Budapest',
              'Europa/Ljubljana',
              'Europa/Prague',
              'Europa/Sarajevo',
              'Europa/Skopje',
              'Europa/Warsaw',
              'Europa/Zagreb',
              'Europa/Brussels',
              'Europa/Copenhagen',
              'Europa/Madrid',
              'Europa/Paris',
              'Europa/Amsterdam',
              'Europa/Berlin',
              'Europa/Berlin',
              'Europa/Rome',
              'Europa/Stockholm',
              'Europa/Vienna',
              'Africa/Algiers',
              'Europa/Bucharest',
              'Africa/Cairo',
              'Europa/Helsinki',
              'Europa/Kiev',
              'Europa/Riga',
              'Europa/Sofia',
              'Europa/Tallinn',
              'Europa/Vilnius',
              'Europa/Athens',
              'Europa/Istanbul',
              'Europa/Minsk',
              'Asia/Jerusalen',
              'Africa/Harare',
              'Africa/Johannesburg',
              'Europa/Moscú',
              'Europa/Moscú',
              'Europa/Moscú',
              'Asia/Kuwait',
              'Asia/Riyadh',
              'Africa/Nairobi',
              'Asia/Baghdad',
              'Asia/Tehran',
              'Asia/Muscat',
              'Asia/Muscat',
              'Asia/Baku',
              'Asia/Tbilisi',
              'Asia/Yerevan',
              'Asia/Kabul',
              'Asia/Yekaterinburg',
              'Asia/Karachi',
              'Asia/Karachi',
              'Asia/Tashkent',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kathmandu',
              'Asia/Dhaka',
              'Asia/Dhaka',
              'Asia/Colombo',
              'Asia/Almaty',
              'Asia/Novosibirsk',
              'Asia/Rangoon',
              'Asia/Bangkok',
              'Asia/Bangkok',
              'Asia/Jakarta',
              'Asia/Krasnoyarsk',
              'Asia/Shanghai',
              'Asia/Chongqing',
              'Asia/Hong_Kong',
              'Asia/Urumqi',
              'Asia/Kuala_Lumpur',
              'Asia/Singapore',
              'Asia/Taipei',
              'Australia/Perth',
              'Asia/Irkutsk',
              'Asia/Ulaanbaatar',
              'Asia/Seoul',
              'Asia/Tokyo',
              'Asia/Tokyo',
              'Asia/Tokyo',
              'Asia/Yakutsk',
              'Australia/Darwin',
              'Australia/Adelaide',
              'Australia/Melbourne',
              'Australia/Melbourne',
              'Australia/Sydney',
              'Australia/Brisbane',
              'Australia/Hobart',
              'Asia/Vladivostok',
              'Pacífico/Guam',
              'Pacífico/Port_Moresby',
              'Asia/Magadan',
              'Asia/Magadan',
              'Pacífico/Noumea',
              'Pacífico/Fiji',
              'Asia/Kamchatka',
              'Pacífico/Majuro',
              'Pacífico/Auckland',
              'Pacífico/Auckland',
              'Pacífico/Tongatapu',
              'Pacífico/Fakaofo',
              'Pacífico/Apia'
            ],
            city: [
              '#{city_prefix}'
            ],
            street_name: [
              '#{street_suffix} #{Name.first_name}',
              '#{street_suffix} #{Name.first_name} #{Name.last_name}'
            ],
            street_address: [
              '#{street_name}#{building_number}',
              '#{street_name}#{building_number} #{secondary_address}'
            ],
            default_country: [
              'España'
            ]
          },
          company: {
            suffix: [
              'S.L.',
              'e Hijos',
              'S.A.',
              'Hermanos'
            ],
            buzzwords: [
              ['habilidad',
              'acceso',
              'adaptador',
              'algoritmo',
              'alianza',
              'analista',
              'aplicación',
              'enfoque',
              'arquitectura',
              'archivo',
              'inteligencia artificial',
              'array',
              'actitud',
              'medición',
              'gestión presupuestaria',
              'capacidad',
              'desafío',
              'circuito',
              'colaboración',
              'complejidad',
              'concepto',
              'conglomeración',
              'contingencia',
              'núcleo',
              'fidelidad',
              'base de datos',
              'data-warehouse',
              'definición',
              'emulación',
              'codificar',
              'encriptar',
              'extranet',
              'firmware',
              'flexibilidad',
              'focus group',
              'previsión',
              'base de trabajo',
              'función',
              'funcionalidad',
              'Interfaz Gráfica',
              'groupware',
              'Interfaz gráfico de usuario',
              'hardware',
              'Soporte',
              'jerarquía',
              'conjunto',
              'implementación',
              'infraestructura',
              'iniciativa',
              'instalación',
              'conjunto de instrucciones',
              'interfaz',
              'intranet',
              'base del conocimiento',
              'red de area local',
              'aprovechar',
              'matrices',
              'metodologías',
              'middleware',
              'migración',
              'modelo',
              'moderador',
              'monitorizar',
              'arquitectura abierta',
              'sistema abierto',
              'orquestar',
              'paradigma',
              'paralelismo',
              'política',
              'portal',
              'estructura de precios',
              'proceso de mejora',
              'producto',
              'productividad',
              'proyecto',
              'proyección',
              'protocolo',
              'línea segura',
              'software',
              'solución',
              'estandardización',
              'estrategia',
              'estructura',
              'éxito',
              'superestructura',
              'soporte',
              'sinergia',
              'mediante',
              'marco de tiempo',
              'caja de herramientas',
              'utilización',
              'website',
              'fuerza de trabajo'],
              [
                '24 horas',
                '24/7',
                '3rd generación',
                '4th generación',
                '5th generación',
                '6th generación',
                'analizada',
                'asimétrica',
                'asíncrona',
                'monitorizada por red',
                'bidireccional',
                'bifurcada',
                'generada por el cliente',
                'cliente servidor',
                'coherente',
                'cohesiva',
                'compuesto',
                'sensible al contexto',
                'basado en el contexto',
                'basado en contenido',
                'dedicada',
                'generado por la demanda',
                'didactica',
                'direccional',
                'discreta',
                'dinámica',
                'potenciada',
                'acompasada',
                'ejecutiva',
                'explícita',
                'tolerante a fallos',
                'innovadora',
                'amplio ábanico',
                'global',
                'heurística',
                'alto nivel',
                'holística',
                'homogénea',
                'hibrida',
                'incremental',
                'intangible',
                'interactiva',
                'intermedia',
                'local',
                'logística',
                'maximizada',
                'metódica',
                'misión crítica',
                'móbil',
                'modular',
                'motivadora',
                'multimedia',
                'multiestado',
                'multitarea',
                'nacional',
                'basado en necesidades',
                'neutral',
                'nueva generación',
                'no-volátil',
                'orientado a objetos',
                'óptima',
                'optimizada',
                'radical',
                'tiempo real',
                'recíproca',
                'regional',
                'escalable',
                'secundaria',
                'orientada a soluciones',
                'estable',
                'estatica',
                'sistemática',
                'sistémica',
                'tangible',
                'terciaria',
                'transicional',
                'uniforme',
                'valor añadido',
                'vía web',
                'defectos cero',
                'tolerancia cero'
              ],
              [
                'Adaptativo',
                'Avanzado',
                'Asimilado',
                'Automatizado',
                'Equilibrado',
                'Centrado en el negocio',
                'Centralizado',
                'Clonado',
                'Compatible',
                'Configurable',
                'Multi grupo',
                'Multi plataforma',
                'Centrado en el usuario',
                'Configurable',
                'Descentralizado',
                'Digitalizado',
                'Distribuido',
                'Diverso',
                'Reducido',
                'Mejorado',
                'Para toda la empresa',
                'Ergonomico',
                'Exclusivo',
                'Expandido',
                'Extendido',
                'Cara a cara',
                'Enfocado',
                'Totalmente configurable',
                'Fundamental',
                'Orígenes',
                'Horizontal',
                'Implementado',
                'Innovador',
                'Integrado',
                'Intuitivo',
                'Inverso',
                'Gestionado',
                'Obligatorio',
                'Monitorizado',
                'Multi canal',
                'Multi lateral',
                'Multi capa',
                'En red',
                'Orientado a objetos',
                'Open-source',
                'Operativo',
                'Optimizado',
                'Opcional',
                'Organico',
                'Organizado',
                'Perseverando',
                'Persistente',
                'en fases',
                'Polarizado',
                'Pre-emptivo',
                'Proactivo',
                'Enfocado a benficios',
                'Profundo',
                'Programable',
                'Progresivo',
                'Public-key',
                'Enfocado en la calidad',
                'Reactivo',
                'Realineado',
                'Re-contextualizado',
                'Re-implementado',
                'Reducido',
                'Ingenieria inversa',
                'Robusto',
                'Fácil',
                'Seguro',
                'Auto proporciona',
                'Compartible',
                'Intercambiable',
                'Sincronizado',
                'Orientado a equipos',
                'Total',
                'Universal',
                'Mejorado',
                'Actualizable',
                'Centrado en el usuario',
                'Amigable',
                'Versatil',
                'Virtual',
                'Visionario'
              ]
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name} y #{Name.last_name}',
              '#{Name.last_name} #{Name.last_name} #{suffix}',
              '#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'com',
              'es',
              'info',
              'com.es',
              'org'
            ]
          },
          name: {
            first_name: [
              'Adán',
              'Agustín',
              'Alberto',
              'Alejandro',
              'Alfonso',
              'Alfredo',
              'Andrés',
              'Antonio',
              'Armando',
              'Arturo',
              'Benito',
              'Benjamín',
              'Bernardo',
              'Carlos',
              'César',
              'Claudio',
              'Clemente',
              'Cristian',
              'Cristobal',
              'Daniel',
              'David',
              'Diego',
              'Eduardo',
              'Emilio',
              'Enrique',
              'Ernesto',
              'Esteban',
              'Federico',
              'Felipe',
              'Fernando',
              'Francisco',
              'Gabriel',
              'Gerardo',
              'Germán',
              'Gilberto',
              'Gonzalo',
              'Gregorio',
              'Guillermo',
              'Gustavo',
              'Hernán',
              'Homero',
              'Horacio',
              'Hugo',
              'Ignacio',
              'Jacobo',
              'Jaime',
              'Javier',
              'Jerónimo',
              'Jesús',
              'Joaquín',
              'Jorge',
              'Jorge Luis',
              'José',
              'José Eduardo',
              'José Emilio',
              'José Luis',
              'José María',
              'Juan',
              'Juan Carlos',
              'Julio',
              'Julio César',
              'Lorenzo',
              'Lucas',
              'Luis',
              'Luis Miguel',
              'Manuel',
              'Marco Antonio',
              'Marcos',
              'Mariano',
              'Mario',
              'Martín',
              'Mateo',
              'Miguel',
              'Miguel Ángel',
              'Nicolás',
              'Octavio',
              'Óscar',
              'Pablo',
              'Patricio',
              'Pedro',
              'Rafael',
              'Ramiro',
              'Ramón',
              'Raúl',
              'Ricardo',
              'Roberto',
              'Rodrigo',
              'Rubén',
              'Salvador',
              'Samuel',
              'Sancho',
              'Santiago',
              'Sergio',
              'Teodoro',
              'Timoteo',
              'Tomás',
              'Vicente',
              'Víctor',
              'Adela',
              'Adriana',
              'Alejandra',
              'Alicia',
              'Amalia',
              'Ana',
              'Ana Luisa',
              'Ana María',
              'Andrea',
              'Anita',
              'Ángela',
              'Antonia',
              'Ariadna',
              'Barbara',
              'Beatriz',
              'Berta',
              'Blanca',
              'Caridad',
              'Carla',
              'Carlota',
              'Carmen',
              'Carolina',
              'Catalina',
              'Cecilia',
              'Clara',
              'Claudia',
              'Concepción',
              'Conchita',
              'Cristina',
              'Daniela',
              'Débora',
              'Diana',
              'Dolores',
              'Lola',
              'Dorotea',
              'Elena',
              'Elisa',
              'Eloisa',
              'Elsa',
              'Elvira',
              'Emilia',
              'Esperanza',
              'Estela',
              'Ester',
              'Eva',
              'Florencia',
              'Francisca',
              'Gabriela',
              'Gloria',
              'Graciela',
              'Guadalupe',
              'Guillermina',
              'Inés',
              'Irene',
              'Isabel',
              'Isabela',
              'Josefina',
              'Juana',
              'Julia',
              'Laura',
              'Leonor',
              'Leticia',
              'Lilia',
              'Lorena',
              'Lourdes',
              'Lucia',
              'Luisa',
              'Luz',
              'Magdalena',
              'Manuela',
              'Marcela',
              'Margarita',
              'María',
              'María del Carmen',
              'María Cristina',
              'María Elena',
              'María Eugenia',
              'María José',
              'María Luisa',
              'María Soledad',
              'María Teresa',
              'Mariana',
              'Maricarmen',
              'Marilu',
              'Marisol',
              'Marta',
              'Mayte',
              'Mercedes',
              'Micaela',
              'Mónica',
              'Natalia',
              'Norma',
              'Olivia',
              'Patricia',
              'Pilar',
              'Ramona',
              'Raquel',
              'Rebeca',
              'Reina',
              'Rocio',
              'Rosa',
              'Rosalia',
              'Rosario',
              'Sara',
              'Silvia',
              'Sofia',
              'Soledad',
              'Sonia',
              'Susana',
              'Teresa',
              'Verónica',
              'Victoria',
              'Virginia',
              'Yolanda'
            ],
            last_name: [
              'Abeyta',
              'Abrego',
              'Abreu',
              'Acevedo',
              'Acosta',
              'Acuña',
              'Adame',
              'Adorno',
              'Agosto',
              'Aguayo',
              'Águilar',
              'Aguilera',
              'Aguirre',
              'Alanis',
              'Alaniz',
              'Alarcón',
              'Alba',
              'Alcala',
              'Alcántar',
              'Alcaraz',
              'Alejandro',
              'Alemán',
              'Alfaro',
              'Alicea',
              'Almanza',
              'Almaraz',
              'Almonte',
              'Alonso',
              'Alonzo',
              'Altamirano',
              'Alva',
              'Alvarado',
              'Alvarez',
              'Amador',
              'Amaya',
              'Anaya',
              'Anguiano',
              'Angulo',
              'Aparicio',
              'Apodaca',
              'Aponte',
              'Aragón',
              'Araña',
              'Aranda',
              'Arce',
              'Archuleta',
              'Arellano',
              'Arenas',
              'Arevalo',
              'Arguello',
              'Arias',
              'Armas',
              'Armendáriz',
              'Armenta',
              'Armijo',
              'Arredondo',
              'Arreola',
              'Arriaga',
              'Arroyo',
              'Arteaga',
              'Atencio',
              'Ávalos',
              'Ávila',
              'Avilés',
              'Ayala',
              'Baca',
              'Badillo',
              'Báez',
              'Baeza',
              'Bahena',
              'Balderas',
              'Ballesteros',
              'Banda',
              'Bañuelos',
              'Barajas',
              'Barela',
              'Barragán',
              'Barraza',
              'Barrera',
              'Barreto',
              'Barrientos',
              'Barrios',
              'Batista',
              'Becerra',
              'Beltrán',
              'Benavides',
              'Benavídez',
              'Benítez',
              'Bermúdez',
              'Bernal',
              'Berríos',
              'Bétancourt',
              'Blanco',
              'Bonilla',
              'Borrego',
              'Botello',
              'Bravo',
              'Briones',
              'Briseño',
              'Brito',
              'Bueno',
              'Burgos',
              'Bustamante',
              'Bustos',
              'Caballero',
              'Cabán',
              'Cabrera',
              'Cadena',
              'Caldera',
              'Calderón',
              'Calvillo',
              'Camacho',
              'Camarillo',
              'Campos',
              'Canales',
              'Candelaria',
              'Cano',
              'Cantú',
              'Caraballo',
              'Carbajal',
              'Cardenas',
              'Cardona',
              'Carmona',
              'Carranza',
              'Carrasco',
              'Carrasquillo',
              'Carreón',
              'Carrera',
              'Carrero',
              'Carrillo',
              'Carrion',
              'Carvajal',
              'Casanova',
              'Casares',
              'Casárez',
              'Casas',
              'Casillas',
              'Castañeda',
              'Castellanos',
              'Castillo',
              'Castro',
              'Cavazos',
              'Cazares',
              'Ceballos',
              'Cedillo',
              'Ceja',
              'Centeno',
              'Cepeda',
              'Cerda',
              'Cervantes',
              'Cervántez',
              'Chacón',
              'Chapa',
              'Chavarría',
              'Chávez',
              'Cintrón',
              'Cisneros',
              'Collado',
              'Collazo',
              'Colón',
              'Colunga',
              'Concepción',
              'Contreras',
              'Cordero',
              'Córdova',
              'Cornejo',
              'Corona',
              'Coronado',
              'Corral',
              'Corrales',
              'Correa',
              'Cortés',
              'Cortez',
              'Cotto',
              'Covarrubias',
              'Crespo',
              'Cruz',
              'Cuellar',
              'Curiel',
              'Dávila',
              'de Anda',
              'de Jesús',
              'Delacrúz',
              'Delafuente',
              'Delagarza',
              'Delao',
              'Delapaz',
              'Delarosa',
              'Delatorre',
              'Deleón',
              'Delgadillo',
              'Delgado',
              'Delrío',
              'Delvalle',
              'Díaz',
              'Domínguez',
              'Domínquez',
              'Duarte',
              'Dueñas',
              'Duran',
              'Echevarría',
              'Elizondo',
              'Enríquez',
              'Escalante',
              'Escamilla',
              'Escobar',
              'Escobedo',
              'Esparza',
              'Espinal',
              'Espino',
              'Espinosa',
              'Espinoza',
              'Esquibel',
              'Esquivel',
              'Estévez',
              'Estrada',
              'Fajardo',
              'Farías',
              'Feliciano',
              'Fernández',
              'Ferrer',
              'Fierro',
              'Figueroa',
              'Flores',
              'Flórez',
              'Fonseca',
              'Franco',
              'Frías',
              'Fuentes',
              'Gaitán',
              'Galarza',
              'Galindo',
              'Gallardo',
              'Gallegos',
              'Galván',
              'Gálvez',
              'Gamboa',
              'Gamez',
              'Gaona',
              'Garay',
              'García',
              'Garibay',
              'Garica',
              'Garrido',
              'Garza',
              'Gastélum',
              'Gaytán',
              'Gil',
              'Girón',
              'Godínez',
              'Godoy',
              'Gómez',
              'Gonzales',
              'González',
              'Gollum',
              'Gracia',
              'Granado',
              'Granados',
              'Griego',
              'Grijalva',
              'Guajardo',
              'Guardado',
              'Guerra',
              'Guerrero',
              'Guevara',
              'Guillen',
              'Gurule',
              'Gutiérrez',
              'Guzmán',
              'Haro',
              'Henríquez',
              'Heredia',
              'Hernádez',
              'Hernandes',
              'Hernández',
              'Herrera',
              'Hidalgo',
              'Hinojosa',
              'Holguín',
              'Huerta',
              'Hurtado',
              'Ibarra',
              'Iglesias',
              'Irizarry',
              'Jaime',
              'Jaimes',
              'Jáquez',
              'Jaramillo',
              'Jasso',
              'Jiménez',
              'Jimínez',
              'Juárez',
              'Jurado',
              'Laboy',
              'Lara',
              'Laureano',
              'Leal',
              'Lebrón',
              'Ledesma',
              'Leiva',
              'Lemus',
              'León',
              'Lerma',
              'Leyva',
              'Limón',
              'Linares',
              'Lira',
              'Llamas',
              'Loera',
              'Lomeli',
              'Longoria',
              'López',
              'Lovato',
              'Loya',
              'Lozada',
              'Lozano',
              'Lucero',
              'Lucio',
              'Luevano',
              'Lugo',
              'Luna',
              'Macías',
              'Madera',
              'Madrid',
              'Madrigal',
              'Maestas',
              'Magaña',
              'Malave',
              'Maldonado',
              'Manzanares',
              'Mares',
              'Marín',
              'Márquez',
              'Marrero',
              'Marroquín',
              'Martínez',
              'Mascareñas',
              'Mata',
              'Mateo',
              'Matías',
              'Matos',
              'Maya',
              'Mayorga',
              'Medina',
              'Medrano',
              'Mejía',
              'Meléndez',
              'Melgar',
              'Mena',
              'Menchaca',
              'Méndez',
              'Mendoza',
              'Menéndez',
              'Meraz',
              'Mercado',
              'Merino',
              'Mesa',
              'Meza',
              'Miramontes',
              'Miranda',
              'Mireles',
              'Mojica',
              'Molina',
              'Mondragón',
              'Monroy',
              'Montalvo',
              'Montañez',
              'Montaño',
              'Montemayor',
              'Montenegro',
              'Montero',
              'Montes',
              'Montez',
              'Montoya',
              'Mora',
              'Morales',
              'Moreno',
              'Mota',
              'Moya',
              'Munguía',
              'Muñiz',
              'Muñoz',
              'Murillo',
              'Muro',
              'Nájera',
              'Naranjo',
              'Narváez',
              'Nava',
              'Navarrete',
              'Navarro',
              'Nazario',
              'Negrete',
              'Negrón',
              'Nevárez',
              'Nieto',
              'Nieves',
              'Niño',
              'Noriega',
              'Núñez',
              'Ocampo',
              'Ocasio',
              'Ochoa',
              'Ojeda',
              'Olivares',
              'Olivárez',
              'Olivas',
              'Olivera',
              'Olivo',
              'Olmos',
              'Olvera',
              'Ontiveros',
              'Oquendo',
              'Ordóñez',
              'Orellana',
              'Ornelas',
              'Orosco',
              'Orozco',
              'Orta',
              'Ortega',
              'Ortiz',
              'Osorio',
              'Otero',
              'Ozuna',
              'Pabón',
              'Pacheco',
              'Padilla',
              'Padrón',
              'Páez',
              'Pagan',
              'Palacios',
              'Palomino',
              'Palomo',
              'Pantoja',
              'Paredes',
              'Parra',
              'Partida',
              'Patiño',
              'Paz',
              'Pedraza',
              'Pedroza',
              'Pelayo',
              'Peña',
              'Perales',
              'Peralta',
              'Perea',
              'Peres',
              'Pérez',
              'Pichardo',
              'Piña',
              'Pineda',
              'Pizarro',
              'Polanco',
              'Ponce',
              'Porras',
              'Portillo',
              'Posada',
              'Prado',
              'Preciado',
              'Prieto',
              'Puente',
              'Puga',
              'Pulido',
              'Quesada',
              'Quezada',
              'Quiñones',
              'Quiñónez',
              'Quintana',
              'Quintanilla',
              'Quintero',
              'Quiroz',
              'Rael',
              'Ramírez',
              'Ramón',
              'Ramos',
              'Rangel',
              'Rascón',
              'Raya',
              'Razo',
              'Regalado',
              'Rendón',
              'Rentería',
              'Reséndez',
              'Reyes',
              'Reyna',
              'Reynoso',
              'Rico',
              'Rincón',
              'Riojas',
              'Ríos',
              'Rivas',
              'Rivera',
              'Rivero',
              'Robledo',
              'Robles',
              'Rocha',
              'Rodarte',
              'Rodrígez',
              'Rodríguez',
              'Rodríquez',
              'Rojas',
              'Rojo',
              'Roldán',
              'Rolón',
              'Romero',
              'Romo',
              'Roque',
              'Rosado',
              'Rosales',
              'Rosario',
              'Rosas',
              'Roybal',
              'Rubio',
              'Ruelas',
              'Ruiz',
              'Saavedra',
              'Sáenz',
              'Saiz',
              'Salas',
              'Salazar',
              'Salcedo',
              'Salcido',
              'Saldaña',
              'Saldivar',
              'Salgado',
              'Salinas',
              'Samaniego',
              'Sanabria',
              'Sanches',
              'Sánchez',
              'Sandoval',
              'Santacruz',
              'Santana',
              'Santiago',
              'Santillán',
              'Sarabia',
              'Sauceda',
              'Saucedo',
              'Sedillo',
              'Segovia',
              'Segura',
              'Sepúlveda',
              'Serna',
              'Serrano',
              'Serrato',
              'Sevilla',
              'Sierra',
              'Sisneros',
              'Solano',
              'Solís',
              'Soliz',
              'Solorio',
              'Solorzano',
              'Soria',
              'Sosa',
              'Sotelo',
              'Soto',
              'Suárez',
              'Tafoya',
              'Tamayo',
              'Tamez',
              'Tapia',
              'Tejada',
              'Tejeda',
              'Téllez',
              'Tello',
              'Terán',
              'Terrazas',
              'Tijerina',
              'Tirado',
              'Toledo',
              'Toro',
              'Torres',
              'Tórrez',
              'Tovar',
              'Trejo',
              'Treviño',
              'Trujillo',
              'Ulibarri',
              'Ulloa',
              'Urbina',
              'Ureña',
              'Urías',
              'Uribe',
              'Urrutia',
              'Vaca',
              'Valadez',
              'Valdés',
              'Valdez',
              'Valdivia',
              'Valencia',
              'Valentín',
              'Valenzuela',
              'Valladares',
              'Valle',
              'Vallejo',
              'Valles',
              'Valverde',
              'Vanegas',
              'Varela',
              'Vargas',
              'Vásquez',
              'Vázquez',
              'Vega',
              'Vela',
              'Velasco',
              'Velásquez',
              'Velázquez',
              'Vélez',
              'Véliz',
              'Venegas',
              'Vera',
              'Verdugo',
              'Verduzco',
              'Vergara',
              'Viera',
              'Vigil',
              'Villa',
              'Villagómez',
              'Villalobos',
              'Villalpando',
              'Villanueva',
              'Villareal',
              'Villarreal',
              'Villaseñor',
              'Villegas',
              'Yáñez',
              'Ybarra',
              'Zambrano',
              'Zamora',
              'Zamudio',
              'Zapata',
              'Zaragoza',
              'Zarate',
              'Zavala',
              'Zayas',
              'Zelaya',
              'Zepeda',
              'Zúñiga'
            ],
            prefix: [
              'Sr.',
              'Sra.',
              'Sta.'
            ],
            suffix: [
              'Jr.',
              'Sr.',
              'I',
              'II',
              'III',
              'IV',
              'V',
              'MD',
              'DDS',
              'PhD',
              'DVM'
            ],
            title: {
              descriptor: [
                'Jefe',
                'Senior',
                'Directo',
                'Corporativo',
                'Dinánmico',
                'Futuro',
                'Producto',
                'Nacional',
                'Regional',
                'Distrito',
                'Central',
                'Global',
                'Cliente',
                'Inversor',
                'International',
                'Heredado',
                'Adelante',
                'Interno',
                'Humano',
                'Gerente',
                'Director'
              ],
              level: [
                'Soluciones',
                'Programa',
                'Marca',
                'Seguridada',
                'Investigación',
                'Marketing',
                'Normas',
                'Implementación',
                'Integración',
                'Funcionalidad',
                'Respuesta',
                'Paradigma',
                'Tácticas',
                'Identidad',
                'Mercados',
                'Grupo',
                'División',
                'Aplicaciones',
                'Optimización',
                'Operaciones',
                'Infraestructura',
                'Intranet',
                'Comunicaciones',
                'Web',
                'Calidad',
                'Seguro',
                'Mobilidad',
                'Cuentas',
                'Datos',
                'Creativo',
                'Configuración',
                'Contabilidad',
                'Interacciones',
                'Factores',
                'Usabilidad',
                'Métricas'
              ],
              job: [
                'Supervisor',
                'Asociado',
                'Ejecutivo',
                'Relacciones',
                'Oficial',
                'Gerente',
                'Ingeniero',
                'Especialista',
                'Director',
                'Coordinador',
                'Administrador',
                'Arquitecto',
                'Analista',
                'Diseñador',
                'Planificador',
                'Técnico',
                'Funcionario',
                'Desarrollador',
                'Productor',
                'Consultor',
                'Asistente',
                'Facilitador',
                'Agente',
                'Representante',
                'Estratega'
              ]
            },
            name: [
              '#{prefix} #{first_name} #{last_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '9##-###-###',
              '9##.###.###',
              '9## ### ###',
              '9########'
            ]
          },
          cell_phone: {
            formats: [
              '6##-###-###',
              '6##.###.###',
              '6## ### ###',
              '6########'
            ]
          }
        },
        adjust: {
          title: 'Ajustes de usuario',
          title_admin: 'Ajustes de usuario administrador',
          personal: 'Datos personales',
          language: 'Idioma',
          spanish: 'Español',
          english: 'English',
          french: 'Français',
          italian: 'Italiano',
          portuguese: 'Português',
          german: 'Deutsch',
          password: {
            password_change: 'Cambiar contraseña',
            new_password_placeholder: 'Nueva contraseña',
            new_password_repeat_placeholder: 'Repita nueva contraseña',
            old_password_placeholder: 'Contraseña actual'
          },
          require: {
            name: 'Indique su nombre',
            surname: 'Indique su apellido'
          },
          advanced_adjust: 'Ajustes avanzados',
          advanced_adjust_text: 'Mostrar ajustes avanzados',
          type_temp: 'Temperatura',
          type_temp_text: 'Modo de temperatura',
          save: {
            title: 'Ajustes guardados',
            body: 'Sus ajustes se han guardado correctamente.'
          },
          unsubscribe_confirm: '¿Desea darse de baja de la aplicación?  Todos sus datos serán borrados y no podrán recuperarse',
          unsubscribe: {
            title: 'Baja Confirmada',
            body: 'Ha sido dado de baja, todos sus datos personales se han borrado correctamente.'
          },
          change_pass: 'Cambiar contraseña'
        },
        languages: {
        },
        modal_mode: {
          cold: 'Frío',
          cold_text: 'Modo frío',
          heat: 'Calor',
          heat_text: 'Modo calor',
          ventilate_cold: 'Ventilación frío',
          ventilate_cold_text: 'Modo ventilación en modo frío',
          heat_cold_auto: 'Auto',
          heat_cold_auto_text: 'Modo Auto',
          dehumidify: 'Deshumectación',
          dehumidify_text: 'Modo de dehumectación',
          cold_auto: 'Automático frío',
          cold_auto_text: 'Modo de frío automático',
          heat_auto: 'Automático calor',
          heat_auto_text: 'Modo automático de calor',
          ventilate_heat: 'Ventilación calor',
          ventilate_heat_text: 'Modo ventilación en modo calor'
        },
        modal_speed: {
          title: 'Modos de velocidad del aire disponibles',
          speed_1: 'Su dispositivo sólo tiene una velocidad disponible',
          speed_2: 'Seleccione entre una de las 2 velocidades. A mayor número, mayor será la velocidad de aire.',
          speed_3: 'Seleccione entre una de las 3 velocidades. A mayor número, mayor será la velocidad de aire.',
          speed_4: 'Seleccione entre una de las 4 velocidades. A mayor número, mayor será la velocidad de aire.',
          speed_5: 'Seleccione entre una de las 5 velocidades. A mayor número, mayor será la velocidad de aire.'
        },
        modal_vertical: {
          title: 'Posiciones de las lamas verticales',
          position_0: 'Inclinación 0: lamas en 90º',
          position_1: 'Inclinación 1: lamas en 72º',
          position_2: 'Inclinación 2: lamas en 54º',
          position_3: 'Inclinación 3: lamas en 36º',
          position_4: 'Inclinación 4: lamas en 0º',
          position_swing: 'Swing: alterna todas las posiciones de las lamas'
        },
        modal_horizontal: {
          title: 'Posiciones de las lamas horizontales',
          position_0: 'Inclinación 0: lamas en 180º',
          position_1: 'Inclinación 1: lamas en 135º',
          position_2: 'Inclinación 2: lamas en 90º',
          position_3: 'Inclinación 3: lamas en 45º',
          position_4: 'Inclinación 4: lamas en 0º',
          position_swing: 'Swing: alterna todas las posiciones de las lamas'
        },
        modal_scenary: {
          vacant: 'Modo desocupado',
          vacant_text: 'Este modo encenderá y apagará su máquina para mantener la temperatura en los límites establecidos en ajustes de instalación.',
          occupied: 'Modo ocupado',
          occupied_text: 'Es el modo normal de funcionamiento de su máquina.',
          sleep: 'Modo Autoapagado',
          sleep_text: 'La máquina se apagará transcurrido el tiempo definido en sus ajustes.'
        },
        advanced_adjust: {
        },
        adjust_zone: {
          'true': 'Sí',
          help: {
          }
        },
        installations: {
          'return': 'Volver',
          exit: 'Salir',
          finish: 'Finalizar',
          next: 'Siguiente',
          edit: 'Editar',
          error: 'Se ha producido un error al conectar con el webserver',
          retry: 'Reintentar',
          state1: {
            text: 'Siga los siguientes pasos para asociar su webserver a su router'
          },
          state2: {
            text: 'Compruebe que el dispositivo está alimentado y en modo punto de acceso. LED Ap fijo.'
          },
          state3: {
            text: 'Seleccione el proceso de asociación',
            assisted: 'Asistida',
            wps: 'WPS'
          },
          state4: {
            text: 'Cambie su red wifi en los ajustes de su dispositivo por una que comienza por:',
            text4: 'La clave de la red es: 123456789'
          },
          state5: {
            text: 'Seleccione el router que desea asociar:',
            loading_text: 'Conectando con el dispositivo. Por favor espere...',
            loading_text2: '(Si la operación se demora más de un minuto comprobar que la conexión del dispositivo es la correcta)',
            low_signal: {
              title: 'Cobertura insuficiente',
              text: 'Aproxime el Webserver al router o instale un repetidor Wifi para mejorar la cobertura'
            }
          },
          state6: {
            text: 'Seleccione el tipo de seguridad de su red wifi e introduzca su contraseña',
            text2: 'Introduzca los datos de su red wifi',
            none: 'Sin seguridad',
            wep: 'WEP',
            wpa: 'WPA/WPA2',
            pass: 'Contraseña',
            name: 'Nombre'
          },
          state7: {
            text: 'Datos de su configuración de red',
            ip: 'IP',
            port: 'Puerta de enlace',
            masc: 'Máscara de red',
            manual: 'MANUAL',
            dhcp: 'DHCP',
            loading_text: 'Configurando el DKN WServer. Por favor espere...'
          },
          state8: {
            text: 'Una vez asociado, el LED Ap permanecerá parpadeando en modo lento.'
          },
          state9: {
            text: 'Proceso realizado correctamente'
          },
          state21: {
            text1: 'Pulse el botón de configuración WPS del router.',
            text2: 'Puede estar también identificado con el siguiente símbolo.'
          },
          state22: {
            text1: 'Mantenga pulsado el botón de configuración WPS del dispositivo hasta que el LED Ap cambie de estado.',
            text2: 'Una vez asociado, el LED Ap permanecerá parpadeando en modo lento.'
          },
          state41: {
            title: 'Seleccione el método de asociación a router',
            auto_info: 'Automático. Busca de forma automática las redes Wifi próximas a su Webserver.',
            manual_info: 'Manual. Introduzca los datos de la red WiFi deseada de forma manual.',
            auto: 'Automático',
            manual: 'Manual'
          }
        },
        buttons: {
          sign_in: 'Entrar',
          cancel: 'Cancelar',
          init: 'Comenzar',
          send: 'Enviar',
          save: 'Guardar',
          save_installation: 'Añadir instalación',
          accept: 'Aceptar',
          resend_confirmation: 'Reenviar confirmación',
          back: 'Volver',
          icon: 'Icono',
          unsubscribe: 'Darse de baja',
          remove: 'Eliminar',
          restore_factory: 'Restaurar de fábrica',
          next: 'Siguiente',
          prev: 'Anterior',
          close: 'Cerrar',
          recharge: 'Recargar',
          hide: 'Ocultar',
          'continue': 'Continuar',
          exit: 'Salir',
          help: 'Ayuda',
          modify: 'Modificar',
          contact: 'Contacto'
        },
        devices: {
          warnings: {
            installer: 'Instalador',
            text: 'Código error:'
          },
          alert_installer_modal: {
            name_placeholder: 'Indique su nombre',
            phone_placeholder: 'Indique su teléfono',
            send_button: 'Notificar al instalador',
            user_params: 'Indique sus datos de contacto:',
            installer_params: 'Contactar con el instalador',
            success_title: 'Aviso a su instalador',
            success_message: 'Se ha enviado un email a su instalador correctamente. Espere un tiempo prudencial antes de volver a enviar un aviso sobre su dispositivo.',
            error: {
              name: 'Debe indicar su nombre',
              phone: 'Debe especificar su teléfono'
            },
            no_email: 'No se han especificado los datos del instalador por lo que no puede enviar un aviso. Si quiere enviarlo, puede especificarlo en ajustes de instalación.'
          },
          adjusts: {
            name: 'Nombre',
            mac: 'MAC',
            pin: 'PIN',
            installation: 'Instalación',
            device: 'Datos del equipo',
            name_text: 'Nombre del dispositivo',
            installation_text: 'Instalación a la que el dispositivo se asociará. Puede cambiar la instalación del dispositivo siempre que tenga permisos sobre dicha instalación',
            links: {
              adjust: 'Ajustes',
              params: 'Parámetros'
            },
            model_device: 'Modelo del equipo',
            sleep: 'Auto apagado',
            min_temp_unoccupied: 'Temperatura mínima de desocupado',
            min_temp_unoccupied_text: 'Define la temperatura mínima cuando el sistema tenga activado el modo desocupado',
            max_temp_unoccupied: 'Temperatura máxima de desocupado',
            max_temp_unoccupied_text: 'Define la temperatura máxima cuando el sistema tenga activado el modo desocupado',
            sleep_time: 'Auto apagado',
            sleep_time_text: 'Define el tiempo de espera antes de pasar a desactivar la instalación'
          },
          schedules: {
            init: 'Inicio',
            days: 'Días',
            monday: 'L',
            tuesday: 'M',
            wednesday: 'X',
            thursday: 'J',
            friday: 'V',
            saturday: 'S',
            sunday: 'D',
            add_schedule: 'Añadir Programación',
            schedules_types: 'Tipos de programación',
            on_off: 'On/Off',
            mode: 'Modo',
            start_mode: 'Modo Inicio',
            close: 'Cerrar',
            remove: 'Eliminar',
            save: 'Guardar',
            hour: 'Hora',
            temperature: 'Temperatura',
            new_prog: 'Nueva Programación',
            edit_prog: 'Editar Programación',
            schedules_name: 'Nombre',
            all_devices: 'Todos los equipos',
            waiting_title: 'Creando programaciones',
            waiting_text: 'En este momento se están creando las programaciones. Este proceso puede tardar algunos segundos hasta que se creen en todas las zonas.',
            days_error: 'Debe seleccionar un día'
          }
        },
        devise: {
          mailer: {
            confirmation_instructions: {
              subject: 'Confirmación del correo de DKN.'
            },
            reset_password_instructions: {
              subject: 'Instrucciones para cambio de contraseña'
            }
          }
        },
        error: {
          internal: {
            title: 'Error Interno',
            body: 'Su acción no ha podido realizarse. Por favor, inténtelo de nuevo más tarde.'
          }
        },
        errors_page: {
          page_404: {
            title: 'Página no encontrada',
            text: 'Lo sentimos, no podemos encontrar la página que estás buscando.',
            button: 'Ir a la página de inicio'
          },
          page_403: {
            title: 'Acceso prohibido',
            text: 'Lo sentimos, no tienes permiso para acceder a esta zona.',
            button: 'Ir a la página de inicio'
          }
        },
        email: 'Email',
        name: 'Nombre',
        surname: 'Apellidos',
        password: 'Contraseña',
        new_password: 'Nueva contraseña',
        repeat_password: 'Repetir contraseña',
        server: 'Servidor',
        state: 'Estado',
        enabled: 'Habilitado',
        sleeping: 'Aprovisionado',
        connected: 'Conectado',
        activated: 'Activado',
        components: 'Componentes',
        historic: 'Histórico',
        system: 'Sistema',
        filters: 'Filtros',
        mac: 'Mac',
        locality: 'Localidad',
        all: 'Todos',
        pin: 'PIN',
        status: 'Estado',
        support: 'Soporte',
        videos: 'Vídeos',
        documents: 'Documentos',
        home: {
          menu: {
            installations: 'Instalaciones',
            adjusts: 'Usuario',
            help: 'Ayuda',
            admin: 'Servidores',
            exit: 'Cerrar sesión',
            admin_users: 'Usuarios',
            admins: 'Administradores',
            support: 'Soporte'
          },
          upload: {
            title: 'Hay una nueva versión de DKN Cloud',
            description: 'Por favor, actualiza la aplicación para poder usarla.'
          },
          maintenance: {
            title: 'Este sitio está temporalmente en mantenimiento',
            description: 'Este sitio se encuentra bajo mantenimiento programado.',
            text: 'Volverá a estar disponible pronto.'
          }
        },
        list_installations: {
          edit: 'Editar',
          close: 'Cerrar'
        },
        edit_installation: {
          installator: {
            name: 'Nombre',
            phone: 'Teléfono',
            email: 'Email'
          }
        },
        installation: {
          temp: 'TEMPERATURA',
          months: {
            0: 'ENE',
            1: 'FEB',
            2: 'MAR',
            3: 'ABR',
            4: 'MAY',
            5: 'JUN',
            6: 'JUL',
            7: 'AGO',
            8: 'SEP',
            9: 'OCT',
            10: 'NOV',
            11: 'DIC'
          },
          days: {
            0: 'Domingo',
            1: 'Lunes',
            2: 'Martes',
            3: 'Miércoles',
            4: 'Jueves',
            5: 'Viernes',
            6: 'Sábado'
          },
          modes: {
            header: 'Modos de funcionamiento',
            cool: 'Frío',
            heat: 'Calor',
            ventilate: 'Ventilación',
            'ventilate-cold': 'Ventilación frío',
            'heat-cold-auto': 'Automático',
            dehumidify: 'Seco',
            'cool-air': 'Automático frío',
            'heat-air': 'Automático calor',
            'ventilate-heat': 'Ventilación calor'
          },
          velocity: {
            header: 'Velocidad del aire',
            'velocity-0': 'Auto',
            'velocity-1': 'Ultra-Baja',
            'velocity-2': 'Baja',
            'velocity-3': 'Media',
            'velocity-4': 'Media-alta',
            'velocity-5': 'Alta'
          },
          vertical: {
            header: 'Inclinación vertical',
            'vertical-0000': 'Inclinación 1',
            'vertical-0001': 'Inclinación 2',
            'vertical-0010': 'Inclinación 3',
            'vertical-0011': 'Inclinación 4',
            'vertical-0100': 'Inclinación 5',
            'vertical-0111': 'Swing'
          },
          horizontal: {
            header: 'Inclinación horizontal',
            'horizontal-0000': 'Inclinación 1',
            'horizontal-0001': 'Inclinación 2',
            'horizontal-0010': 'Inclinación 3',
            'horizontal-0011': 'Inclinación 4',
            'horizontal-0100': 'Inclinación 5',
            'horizontal-0111': 'Swing'
          },
          scenary: {
            header: 'Escena',
            occupied: 'Ocupado',
            vacant: 'Desocupado',
            sleep30: 'Autoapagado 30\'',
            sleep60: 'Autoapagado 60\'',
            sleep90: 'Autoapagado 90\'',
            sleep: 'Autoapagado'
          },
          modal: {
            name: 'Nombre de la instalación',
            location: 'Localización',
            icon: 'Icono',
            users: 'Usuarios',
            installer: 'Datos del instalador',
            installer_name: 'Nombre',
            installer_phone: 'Teléfono',
            installer_email: 'Email',
            add_user: 'Añadir usuario',
            save: 'Guardar cambios',
            remove: 'Eliminar instalación',
            cancel: 'Cancelar',
            unoccupied: 'Temperaturas desocupado',
            unoccupied_min_temp: 'Temp. desocupado Calor',
            unoccupied_max_temp: 'Temp. desocupado Frío',
            name_error: 'Debe especificar un nombre para la instalación',
            location_error: 'Debe especificar una localización para la instalación',
            type: 'Tipo de instalación',
            type_home: 'Residencial',
            type_commercial: 'Comercial',
            type_business: 'Oficina',
            type_others: 'Otros',
            postal_code: 'Código Postal',
            sleep_time: 'Auto apagado',
            links: {
              adjust: 'Ajustes',
              params: 'Parámetros',
              users: 'Usuarios'
            },
            new_user: {
              title: 'Añadir usuario a instalación',
              name: 'Nombre',
              surname: 'Apellidos',
              email: 'Email',
              avanced: 'Usuario avanzado',
              name_blank: 'Debe especificar un nombre para el usuario',
              surname_blank: 'Debe especificar un apellido para el usuario',
              email_blank: 'Debe especificar un email para el usuario'
            },
            help: {
              name: 'Nombre',
              name_text: 'Permite modificar el nombre de la instalación',
              location: 'Localización',
              location_text: 'Permite cambiar la localización de la instalación',
              icon: 'Icono',
              icon_text: 'Permite cambiar el icono de la instalación',
              users: 'Usuarios',
              users_text: 'Permite gestionar los usuarios que pueden utilizar la aplicación. Usuario básico: Control de las funciones básicas de climatización. Usuario avanzado: Además de las funciones básicas, el usuario puede acceder a los siguientes menús: ajustes de la instalación, programaciones horarias y gestión de usuarios.',
              installer: 'Instalador',
              installer_text: 'Datos del instalador que permitirán contactar con el instalador en caso de incidencia',
              postal_code: 'Código Postal',
              postal_code_text: 'Código postal del lugar donde se encuentra la instalación',
              type: 'Tipo de instalación',
              type_text: 'Define el tipo de instalación',
              min_temp_unoccupied: 'Temperatura mínima de desocupado',
              min_temp_unoccupied_text: 'Define la temperatura mínima cuando el sistema tenga activado el modo desocupado',
              max_temp_unoccupied: 'Temperatura máxima de desocupado',
              max_temp_unoccupied_text: 'Define la temperatura máxima cuando el sistema tenga activado el modo desocupado',
              sleep_time: 'Temporizador',
              sleep_time_text: 'Define el tiempo de espera antes de pasar a desactivar la instalación'
            }
          }
        },
        login: {
          restore_password: 'Recordar contraseña',
          demo: 'Demo',
          router: 'Asociar router'
        },
        register: {
          sign_up: 'Crear cuenta'
        },
        complete_registration: {
          title: 'Complete su registro'
        },
        mailers: {
          confirmation: {
            welcome: 'Bienvenido a DKN WServer,',
            text: 'Para completar tu registro deberás confirmar tu dirección de email a través del siguiente enlace:',
            confirm: 'Confirmar registro'
          },
          reset_password: {
            welcome: 'Hola',
            text: 'nos han dicho que has olvidado tu contraseña, no te preocupes, eso le pasa a todo el mundo. Para modificar tu contraseña pulsa en el siguiente enlace.',
            change_password: 'Cambiar contraseña',
            subject: 'Ha sido invitado a DKN WServer'
          },
          complete_registration: {
            title: 'Complete su registro en DKN WServer',
            text: 'Un usuario le ha invitado a gestionar una instalación en DKN WServer. Por favor complete su registro para poder acceder a la plataforma y poder gestionarla.',
            link: 'Completar registro',
            subject: 'Invitación a la plataforma DKN WServer'
          },
          invitation: {
            title: 'Acceda a DKN WServer',
            text: 'Un usuario le ha invitado a gestionar una instalación en DKN WServer. Por favor acceda a la plataforma para poder ver la instalación y gestionarla.',
            link: 'Acceder a DKN WServer',
            subject: 'Invitación para gestionar una instalación en DKN WServer'
          },
          alert_installer: {
            subject: 'Aviso sobre un problema en un dispositivo DKN WServer',
            text: 'Un usuario ha reportado un problema con su dispositivo.',
            title: 'Problema reportado con un dispositivo',
            user_name: 'Nombre del usuario',
            user_phone: 'Teléfono del usuario',
            error: 'Error'
          },
          import_devices: {
            title: 'Reporte de importación de dispositivos:',
            subject: 'DKN - Importación'
          }
        },
        messages: {
          errors: {
            name_blank: 'El nombre no puede estar en blanco',
            surname_blank: 'El apellido no puede estar en blanco',
            login: 'Lo sentimos, el email o la contraseña no son válidos',
            email: 'Lo sentimos, el email no es válido',
            email_blank: 'El email no puede estar en blanco',
            email_taken: 'La dirección de correo ya está en uso',
            password_length: 'La contraseña debe tener al menos 8 caracteres',
            password_blank: 'La contraseña no puede estar en blanco',
            password_confirmation_check: 'Lo sentimos, las contraseñas deben ser iguales',
            password_confirmation_blank: 'Debe confirmar su contraseña',
            password_new_length: 'La nueva contraseña debe tener al menos 8 caracteres',
            password_new_blank: 'La nueva contraseña no puede estar en blanco',
            invalid_old_password: 'La contraseña actual introducida no es correcta.',
            condition: 'Debe aceptar las condiciones de uso',
            token_invalid: 'El código de activación es erróneo. Vuelve a solicitar Recordar Contraseña.',
            email_not_exist: 'Lo sentimos pero no existe ninguna cuenta asociada a esa dirección de email',
            confirmation: 'Ha ocurrido un error en la confirmación. Por favor, rellene el formulario y le enviaremos un nuevo email de confirmación.',
            unconfirmed: '¡Correo no confirmado!',
            device_blank: 'Indique un nombre para el equipo',
            installation_blank: 'Debes seleccionar una instalación',
            mac_blank: 'Indique la dirección MAC de su equipo',
            mac_invalid: 'Compruebe que la MAC que se ha introducido es correcta',
            mac_format: 'El formato de la MAC es incorrecto',
            mac_repeated: 'Ya existe un equipo con esta MAC',
            pin_blank: 'Indique el código PIN de su equipo',
            pin_invalid: 'El PIN introducido no se corresponde con la MAC',
            server_sleeping: 'Compruebe que su dispositivo está conectado al router y este tiene conexión a internet',
            device_taken: 'La MAC solicitada ya se encuentra dada de alta en la plataforma Cloud',
            location_blank: 'Indique la localidad donde se encuentra su instalación',
            icon_blank: 'Debes seleccionar un icono para su instalación',
            file_error: 'El fichero que intentas importar es erróneo. Los formatos soportados son xls, xlsx y csv.',
            must_select_file: 'Debe seleccionar un archivo',
            not_connected: 'Actualmente no tiene conexión a internet y las acciones realizadas no tendrán efecto en su DKN WServer. Cuando disponga de conexión recargue la página y vuelva a intentarlo.',
            not_connected_title: 'Aviso sobre su conexión a internet',
            not_connected_device: 'Su DKN WServer no se encuentra actualmente conectado a internet:',
            not_connected_devices: 'Sus DKN WServers no se encuentran actualmente conectados a internet:',
            not_connected_device_title: 'Aviso sobre la conexión de su dispositivo',
            error_device: 'Se ha producido un error en su dispositivo. Si este mensaje persiste por favor pongase en contacto con su instalador.',
            registration_already_completed: 'Ya se ha completado el registro anteriormente. Por favor inicie sesión con sus datos.',
            user_taken: 'El usuario ya está asociado con el servidor',
            not_permission_title: 'Permiso denegado',
            not_permission: 'Su usuario no tiene permisos para acceder a esta opción.',
            not_permission_new_schedule: 'Se han alcanzado el número máximo de programaciones disponibles (24), por favor, borre una programación existente para crear una nueva.',
            without_internet_title: 'Conexión a Internet',
            without_internet_text: 'Esta aplicación necesita conexión a Internet para funcionar. Por favor, conecte su dispositivo y vuelva a intentarlo',
            mac_length_seek: 'Debe tener mínimo 4 dígitos',
            email_length_seek: 'Debe tener mínimo 3 caracteres',
            machine_error_11_title: 'Error de conexión con la unidad',
            machine_error_11_text: 'Compruebe la conexión en los puertos P1 y P2 de la unidad.',
            backend_error: 'Su petición no se ha podido procesar, por favor, vuelva a intentarlo más tarde.'
          },
          success: {
            register: '¡Registro correcto!',
            send_reset_password: 'Acabamos de enviarte un email con las instrucciones para que modifiques tu contraseña.',
            reset_password: 'Tu contraseña ha sido modificada',
            resend_confirmation: 'Se ha enviado un nuevo email de confirmación a tu correo.',
            user_device_added: 'La conexión con el equipo se ha realizado correctamente. Podrá acceder desde la ventana de instalaciones.',
            user_device_updated: 'La información del servidor ha sido actualizada correctamente.',
            restore_factory: 'El servidor ha sido restaurado a su configuración inicial.',
            remove_installation_confirmation: '¿Está seguro de que desea eliminar la instalación?',
            remove_device_confirmation: '¿Está seguro de que desea eliminar el DKN Webserver?',
            remove_last_device_confirmation: 'Si realiza esta acción su instalación se borrará. ¿Quiere realizar esta acción?',
            remove_installation_without_devices: 'No se ha asociado ningún DKN Webserver a la instalación, si sale perderá los datos de la misma. ¿Desea continuar?',
            remove_user_confirmation: '¿Está seguro de que desea quitar el acceso a la instalación al usuario?',
            confirmed: 'Correo confirmado correctamente. Inicie sesión para acceder a la plataforma.'
          },
          info: {
            has_email: '¡Tienes un email!',
            go_login: 'Ir a login',
            reset_password: 'Vuelve al login he introduce tu email y tu nueva contraseña para entrar.',
            change_password: 'Escribe y repite tu nueva contraseña.',
            send_reset_password: 'Hey, le pasa a todo el mundo. Solo indicanos tu dirección de email y te enviaremos un email con las instrucciones para que modifiques tu contraseña.',
            register_success: 'Se ha enviado un email a tu cuenta para verificar su identidad.',
            complete_registration_success: 'El registro se ha completado correctamente. Ya puede iniciar sesión y acceder a la gestión de su DKN WServer.',
            resend_confirmation: 'Escribe tu email y te enviaremos un nuevo email de confirmación.',
            unconfirmed: 'Debe confirmar su correo antes de iniciar sessión',
            remove_server_admin: {
              question: '¿Desea eliminar este servidor?',
              info: 'Todos los datos asociados a este servidor serán eliminados.'
            },
            restore_server_admin: {
              question: '¿Desea restaurar este servidor a la configuración de fábrica?',
              info: 'Todos los datos asociados a este servidor serán reseteados.'
            },
            browsers: 'Lo sentimos, pero el navegador que estás utilizando no es soportado por nuestra aplicación o es una versión muy antigua. Si deseas poder usar la aplicación te recomendamos que instales o actualices uno de los siguientes navegadores.',
            firmware_updated: 'Se ha enviado correctamente la orden de actualización del firmware',
            remove_schedule: '¿Está seguro que desea eliminar la programación de forma permanente?',
            disable_permission_device: 'El DKN WServer debe tener al menos un usuario'
          },
          title: {
            reset_password: 'Recordar Contraseña',
            change_password: 'Modificar Contraseña',
            resend_confirmation: 'Reenviar confirmación',
            user_device_added: 'Equipo creado correctamente',
            user_device_updated: 'Instalación actualizada correctamente',
            add_device: 'Añadir DKN WServer',
            server_data: 'Datos del servidor',
            remove_server: 'Eliminar servidor',
            restore_factory: 'Restaurar servidor de fábrica',
            remove_installation_confirm: 'Eliminar instalación',
            remove_user_confirm: 'Eliminar usuario de la instalación',
            firmware_updated: 'Firmware actualizado',
            device_permissions: 'Permisos DKN WServer',
            installation_permissions: 'Permisos de la instalación'
          }
        },
        errors: {
          template: {
            header: {
              one: 'Revise el siguiente campo',
              other: 'Revise los siguientes campos'
            },
            body: ''
          }
        },
        activerecord: {
          errors: {
            template: {
              header: {
                one: 'Revise el siguiente campo',
                other: 'Revise los siguientes campos'
              },
              body: ''
            }
          }
        },
        mongoid: {
          models: {
            user: 'Usuario',
            device: 'Equipo',
            device_imports: 'Importación de servidores',
            email: 'Email',
            installation_relation: 'Relación de instalation',
            installation: 'Instalación'
          },
          attributes: {
            device: {
              mac: 'MAC',
              pin: 'Pin',
              name: 'Nombre',
              power: 'Encendido',
              status: 'Estado',
              sleeping_date: 'Fecha de dormido',
              connection_date: 'Fecha de conexión',
              activation_date: 'Fecha de activación',
              update_date: 'Fecha de actualización',
              mode: 'Modo',
              cold_speed: 'Vel_frio',
              heat_speed: 'Vel_calor',
              units: 'Unidades',
              availables_speeds: 'Vel_disponibles',
              cold_consign: 'Consigna_frio',
              heat_consign: 'Consigna_calor',
              cold_slats: 'Lamas_frio',
              heat_slats: 'Lamas_calor',
              state_slats: 'Lamas_estado',
              position_slats: 'Lamas_posiciones',
              max_limit_cold: 'Límite_máximo_frío',
              min_limit_cold: 'Límite_mínimo_frío',
              max_limit_heat: 'Límite_máximo_calor',
              min_limit_heat: 'Límite_mínimo_calor',
              machine_errors: 'Errores de máquina',
              local_temp: 'Temperatura local',
              hor_cold_slats: 'Lamas_hor_frío',
              hor_heat_slats: 'Lamas_hor_calor',
              hor_state_slats: 'Lamas_hor_estado',
              hor_position_slats: 'Lamas_hor_posiciones',
              eco: 'ECO',
              auto_clean: 'Autolimpieza',
              consumption: 'Consumo'
            },
            email: {
              to: 'Destinatario',
              cc: 'Copia',
              bcc: 'Copia oculta',
              from: 'Remitente',
              message: 'Mensaje',
              subject: 'Asunto',
              type: 'Tipo',
              resource_type: 'Tipo de relación'
            },
            installation_relation: null,
            installation: {
              name: 'Nombre',
              icon: 'Icono',
              spot_name: 'Nombre del lugar',
              installation_relations: 'Relaciones de las instalaciones',
              devices: 'Equipos',
              spot: 'Lugar'
            },
            air_email: {
              from: 'Origen',
              to: 'Destinatario',
              cc: 'Copia',
              bcc: 'Copia oculta',
              message: 'Mensaje',
              subject: 'Asunto',
              type: 'Tipo de correo',
              user_name: 'Nombre del usuario',
              user_phone: 'Número de teléfono del usuario',
              installer_params: 'Parámetros del instalador'
            }
          },
          errors: {
            template: {
              header: {
                one: 'Revise el siguiente campo',
                other: 'Revise los siguientes campos'
              },
              body: ''
            },
            messages: {
              invalid: 'es inválido',
              blank: 'es obligatorio',
              confirmation: 'no coincide con la confirmación',
              taken: 'ya está en uso',
              inclusion: 'no se encuentra entre los valores permitidos',
              too_long: 'es demasiado largo',
              not_a_number: 'tiene que ser un número',
              invalid_value: {
                message: 'Hay un valor de la clase %{value_class} en un campo',
                summary: 'Que debe ser de tipo: %{field_class}',
                resolution: 'Revisa que los valores del campo sean del mismo tipo y esté permitido.'
              },
              validations: {
                message: 'Hay un error de validación en %{document}',
                summary: 'Errores:\n    %{errors}',
                resolution: 'Revisa las instancias de este modelo y busca campos perdidos o valores erróneos.'
              },
              unknown_attribute: {
                message: 'Intenta setear un valor para \'%{name}\' que no está permitido en el modelo %{klass}',
                summary: 'Sin incluir Mongoid::Attributes::Dynamic en tu modelo y el atributo no existe entre los attributos del hash, intentar llamar a %{klass}#%{name}= no está permitido.',
                resolution: 'Puedes incluir Mongoid::Attributes::Dynamic si quieres que se puedan almacenar campos dinámicamente en tu modelo'
              }
            },
            models: {
              device_imports: {
                invalid_mac: 'Formato de la MAC no valido',
                invalid_pin: 'Necesita una contraseña',
                invalid_model: 'Ya existe un servidor con esta MAC',
                success: 'Importado correctamente'
              },
              device: {
                attributes: {
                  mac: 'Mac es inválida'
                }
              },
              air_email: {
                attributes: {
                  installer_params: 'Necesita especificar los parámetros del instalador'
                }
              }
            }
          }
        },
        servers: {
          no_results: 'No se han encontrado servidores',
          tags: {
            servers: 'servidores',
            results: 'resultados',
            page: 'Página ',
            of: ' de ',
            update: 'Actualizar'
          },
          'new': {
            add_servers: 'Añadir servidores',
            'return': 'Volver',
            from_file: 'Desde archivo',
            select_file: 'Seleccione un fichero',
            select_file2: 'Seleccione un archivo',
            from_form: 'Desde formulario',
            success_add2: 'Se han añadido',
            success_add_f2: 'servidores correctamente',
            success_add1: 'Se ha añadido',
            success_add_f1: 'servidor correctamente',
            failure_add1: 'No se ha podido añadir el siguiente servidor',
            failure_add2: 'No se han podido añadir los siguientes',
            failure_add_f2: 'servidores',
            accept: 'Aceptar',
            success: {
              added: 'Servidor añadido correctamente',
              added2: 'El servidor ha sido correctamente dado de alta en la plataforma'
            }
          },
          remove: {
            message: 'Servidor eliminado',
            confirmation_deleted: 'El servidor se ha eliminado con éxito'
          }
        },
        terms: {
          accept: 'Acepto las ',
          legal_terms: 'Condiciones de uso',
          and: ' y la ',
          privacy: 'Política de privacidad',
          publicity: 'Deseo recibir comunicaciones comerciales'
        },
        installation_relation_list: {
          title: 'Instalaciones',
          no_installations_title: '¡Bienvenido!',
          no_installations_info: 'Para poder empezar a controlar su instalación, debe añadir un servidor a su cuenta.',
          internal_error: 'Error interno',
          internal_error_message: 'Su acción no ha podido realizarse, por favor, inténtelo de nuevo más tarde',
          actions: {
            edit: 'Editar',
            close: 'Cerrar',
            add_device: 'Añadir DKN WServer'
          }
        },
        add_device: {
          name_placeholder: 'Nombre (cocina, salón, dormitorio)',
          mac_placeholder: 'MAC (12:AB:34:CD:45:F0)',
          pin_placeholder: 'PIN',
          choose_installation: 'Elija una Instalación',
          add_device: 'Indique los datos del equipo'
        },
        add_installation: {
          add_installation: 'Añadir Instalación',
          name_placeholder: 'Nombre (casa, oficina, chalet)',
          location_placeholder: 'Localidad de la instalación',
          postal_code_placeholder: 'Código Postal',
          type: 'Tipo de instalación'
        },
        add_user_to_device: {
        },
        users: {
          title: 'Usuarios',
          basic: 'Básico',
          advanced: 'Avanzado'
        },
        admin_users: {
          title: 'USUARIOS',
          email: 'Email',
          name: 'Nombre',
          results: 'Resultados',
          no_results: 'No hay resultados',
          page: 'Página',
          of: 'de',
          device_modal: {
            title: 'Equipos accesibles por el usuario',
            no_devices: 'El usuario no tiene acceso a ningún equipo',
            location: 'Localización'
          }
        }
      },
      fa: {
        faker: {
          name: {
            first_name: [
              'آبان دخت',
              'آبتین',
              'آتوسا',
              'آفر',
              'آفره دخت',
              'آذرنوش‌',
              'آذین',
              'آراه',
              'آرزو',
              'آرش',
              'آرتین',
              'آرتام',
              'آرتمن',
              'آرشام',
              'آرمان',
              'آرمین',
              'آرمیتا',
              'آریا فر',
              'آریا',
              'آریا مهر',
              'آرین',
              'آزاده',
              'آزرم',
              'آزرمدخت',
              'آزیتا',
              'آناهیتا',
              'آونگ',
              'آهو',
              'آیدا',
              'اتسز',
              'اختر',
              'ارد',
              'ارد شیر',
              'اردوان',
              'ارژن',
              'ارژنگ',
              'ارسلان',
              'ارغوان',
              'ارمغان',
              'ارنواز',
              'اروانه',
              'استر',
              'اسفندیار',
              'اشکان',
              'اشکبوس',
              'افسانه',
              'افسون',
              'افشین',
              'امید',
              'انوش (‌ آنوشا )',
              'انوشروان',
              'اورنگ',
              'اوژن',
              'اوستا',
              'اهورا',
              'ایاز',
              'ایران',
              'ایراندخت',
              'ایرج',
              'ایزدیار',
              'بابک',
              'باپوک',
              'باربد',
              'بارمان',
              'بامداد',
              'بامشاد',
              'بانو',
              'بختیار',
              'برانوش',
              'بردیا',
              'برزو',
              'برزویه',
              'برزین',
              'برمک',
              'بزرگمهر',
              'بنفشه',
              'بوژان',
              'بویان',
              'بهار',
              'بهارک',
              'بهاره',
              'بهتاش',
              'بهداد',
              'بهرام',
              'بهدیس',
              'بهرخ',
              'بهرنگ',
              'بهروز',
              'بهزاد',
              'بهشاد',
              'بهمن',
              'بهناز',
              'بهنام',
              'بهنود',
              'بهنوش',
              'بیتا',
              'بیژن',
              'پارسا',
              'پاکان',
              'پاکتن',
              'پاکدخت',
              'پانته آ',
              'پدرام',
              'پرتو',
              'پرشنگ',
              'پرتو',
              'پرستو',
              'پرویز',
              'پردیس',
              'پرهام',
              'پژمان',
              'پژوا',
              'پرنیا',
              'پشنگ',
              'پروانه',
              'پروین',
              'پری',
              'پریچهر',
              'پریدخت',
              'پریسا',
              'پرناز',
              'پریوش',
              'پریا',
              'پوپک',
              'پوران',
              'پوراندخت',
              'پوریا',
              'پولاد',
              'پویا',
              'پونه',
              'پیام',
              'پیروز',
              'پیمان',
              'تابان',
              'تاباندخت',
              'تاجی',
              'تارا',
              'تاویار',
              'ترانه',
              'تناز',
              'توران',
              'توراندخت',
              'تورج',
              'تورتک',
              'توفان',
              'توژال',
              'تیر داد',
              'تینا',
              'تینو',
              'جابان',
              'جامین',
              'جاوید',
              'جریره',
              'جمشید',
              'جوان',
              'جویا',
              'جهان',
              'جهانبخت',
              'جهانبخش',
              'جهاندار',
              'جهانگیر',
              'جهان بانو',
              'جهاندخت',
              'جهان ناز',
              'جیران',
              'چابک',
              'چالاک',
              'چاوش',
              'چترا',
              'چوبین',
              'چهرزاد',
              'خاوردخت',
              'خداداد',
              'خدایار',
              'خرم',
              'خرمدخت',
              'خسرو',
              'خشایار',
              'خورشید',
              'دادمهر',
              'دارا',
              'داراب',
              'داریا',
              'داریوش',
              'دانوش',
              'داور‌',
              'دایان',
              'دریا',
              'دل آرا',
              'دل آویز',
              'دلارام',
              'دل انگیز',
              'دلبر',
              'دلبند',
              'دلربا',
              'دلشاد',
              'دلکش',
              'دلناز',
              'دلنواز',
              'دورشاسب',
              'دنیا',
              'دیااکو',
              'دیانوش',
              'دیبا',
              'دیبا دخت',
              'رابو',
              'رابین',
              'رادبانو',
              'رادمان',
              'رازبان',
              'راژانه',
              'راسا',
              'رامتین',
              'رامش',
              'رامشگر',
              'رامونا',
              'رامیار',
              'رامیلا',
              'رامین',
              'راویار',
              'رژینا',
              'رخپاک',
              'رخسار',
              'رخشانه',
              'رخشنده',
              'رزمیار',
              'رستم',
              'رکسانا',
              'روبینا',
              'رودابه',
              'روزبه',
              'روشنک',
              'روناک',
              'رهام',
              'رهی',
              'ریبار',
              'راسپینا',
              'زادبخت',
              'زاد به',
              'زاد چهر',
              'زاد فر',
              'زال',
              'زادماسب',
              'زاوا',
              'زردشت',
              'زرنگار',
              'زری',
              'زرین',
              'زرینه',
              'زمانه',
              'زونا',
              'زیبا',
              'زیبار',
              'زیما',
              'زینو',
              'ژاله',
              'ژالان',
              'ژیار',
              'ژینا',
              'ژیوار',
              'سارا',
              'سارک',
              'سارنگ',
              'ساره',
              'ساسان',
              'ساغر',
              'سام',
              'سامان',
              'سانا',
              'ساناز',
              'سانیار',
              'ساویز',
              'ساهی',
              'ساینا',
              'سایه',
              'سپنتا',
              'سپند',
              'سپهر',
              'سپهرداد',
              'سپیدار',
              'سپید بانو',
              'سپیده',
              'ستاره',
              'ستی',
              'سرافراز',
              'سرور',
              'سروش',
              'سرور',
              'سوبا',
              'سوبار',
              'سنبله',
              'سودابه',
              'سوری',
              'سورن',
              'سورنا',
              'سوزان',
              'سوزه',
              'سوسن',
              'سومار',
              'سولان',
              'سولماز',
              'سوگند',
              'سهراب',
              'سهره',
              'سهند',
              'سیامک',
              'سیاوش',
              'سیبوبه ‌',
              'سیما',
              'سیمدخت',
              'سینا',
              'سیمین',
              'سیمین دخت',
              'شاپرک',
              'شادی',
              'شادمهر',
              'شاران',
              'شاهپور',
              'شاهدخت',
              'شاهرخ',
              'شاهین',
              'شاهیندخت',
              'شایسته',
              'شباهنگ',
              'شب بو',
              'شبدیز',
              'شبنم',
              'شراره',
              'شرمین',
              'شروین',
              'شکوفه',
              'شکفته',
              'شمشاد',
              'شمین',
              'شوان',
              'شمیلا',
              'شورانگیز',
              'شوری',
              'شهاب',
              'شهبار',
              'شهباز',
              'شهبال',
              'شهپر',
              'شهداد',
              'شهرآرا',
              'شهرام',
              'شهربانو',
              'شهرزاد',
              'شهرناز',
              'شهرنوش',
              'شهره',
              'شهریار',
              'شهرزاد',
              'شهلا',
              'شهنواز',
              'شهین',
              'شیبا',
              'شیدا',
              'شیده',
              'شیردل',
              'شیرزاد',
              'شیرنگ',
              'شیرو',
              'شیرین دخت',
              'شیما',
              'شینا',
              'شیرین',
              'شیوا',
              'طوس',
              'طوطی',
              'طهماسب',
              'طهمورث',
              'غوغا',
              'غنچه',
              'فتانه',
              'فدا',
              'فراز',
              'فرامرز',
              'فرانک',
              'فراهان',
              'فربد',
              'فربغ',
              'فرجاد',
              'فرخ',
              'فرخ پی',
              'فرخ داد',
              'فرخ رو',
              'فرخ زاد',
              'فرخ لقا',
              'فرخ مهر',
              'فرداد',
              'فردیس',
              'فرین',
              'فرزاد',
              'فرزام',
              'فرزان',
              'فرزانه',
              'فرزین',
              'فرشاد',
              'فرشته',
              'فرشید',
              'فرمان',
              'فرناز',
              'فرنگیس',
              'فرنود',
              'فرنوش',
              'فرنیا',
              'فروتن',
              'فرود',
              'فروز',
              'فروزان',
              'فروزش',
              'فروزنده',
              'فروغ',
              'فرهاد',
              'فرهنگ',
              'فرهود',
              'فربار',
              'فریبا',
              'فرید',
              'فریدخت',
              'فریدون',
              'فریمان',
              'فریناز',
              'فرینوش',
              'فریوش',
              'فیروز',
              'فیروزه',
              'قابوس',
              'قباد',
              'قدسی',
              'کابان',
              'کابوک',
              'کارا',
              'کارو',
              'کاراکو',
              'کامبخت',
              'کامبخش',
              'کامبیز',
              'کامجو',
              'کامدین',
              'کامران',
              'کامراوا',
              'کامک',
              'کامنوش',
              'کامیار',
              'کانیار',
              'کاووس',
              'کاوه',
              'کتایون',
              'کرشمه',
              'کسری',
              'کلاله',
              'کمبوجیه',
              'کوشا',
              'کهبد',
              'کهرام',
              'کهزاد',
              'کیارش',
              'کیان',
              'کیانا',
              'کیانچهر',
              'کیاندخت',
              'کیانوش',
              'کیاوش',
              'کیخسرو',
              'کیقباد',
              'کیکاووس',
              'کیوان',
              'کیوان دخت',
              'کیومرث',
              'کیهان',
              'کیاندخت',
              'کیهانه',
              'گرد آفرید',
              'گردان',
              'گرشا',
              'گرشاسب',
              'گرشین',
              'گرگین',
              'گزل',
              'گشتاسب',
              'گشسب',
              'گشسب بانو',
              'گل',
              'گل آذین',
              'گل آرا‌',
              'گلاره',
              'گل افروز',
              'گلاله',
              'گل اندام',
              'گلاویز',
              'گلباد',
              'گلبار',
              'گلبام',
              'گلبان',
              'گلبانو',
              'گلبرگ',
              'گلبو',
              'گلبهار',
              'گلبیز',
              'گلپاره',
              'گلپر',
              'گلپری',
              'گلپوش',
              'گل پونه',
              'گلچین',
              'گلدخت',
              'گلدیس',
              'گلربا',
              'گلرخ',
              'گلرنگ',
              'گلرو',
              'گلشن',
              'گلریز',
              'گلزاد',
              'گلزار',
              'گلسا',
              'گلشید',
              'گلنار',
              'گلناز',
              'گلنسا',
              'گلنواز',
              'گلنوش',
              'گلی',
              'گودرز',
              'گوماتو',
              'گهر چهر',
              'گوهر ناز',
              'گیتی',
              'گیسو',
              'گیلدا',
              'گیو',
              'لادن',
              'لاله',
              'لاله رخ',
              'لاله دخت',
              'لبخند',
              'لقاء',
              'لومانا',
              'لهراسب',
              'مارال',
              'ماری',
              'مازیار',
              'ماکان',
              'مامک',
              'مانا',
              'ماندانا',
              'مانوش',
              'مانی',
              'مانیا',
              'ماهان',
              'ماهاندخت',
              'ماه برزین',
              'ماه جهان',
              'ماهچهر',
              'ماهدخت',
              'ماهور',
              'ماهرخ',
              'ماهزاد',
              'مردآویز',
              'مرداس',
              'مرزبان',
              'مرمر',
              'مزدک',
              'مژده',
              'مژگان',
              'مستان',
              'مستانه',
              'مشکاندخت',
              'مشکناز',
              'مشکین دخت',
              'منیژه',
              'منوچهر',
              'مهبانو',
              'مهبد',
              'مه داد',
              'مهتاب',
              'مهدیس',
              'مه جبین',
              'مه دخت',
              'مهر آذر',
              'مهر آرا',
              'مهر آسا',
              'مهر آفاق',
              'مهر افرین',
              'مهرآب',
              'مهرداد',
              'مهر افزون',
              'مهرام',
              'مهران',
              'مهراندخت',
              'مهراندیش',
              'مهرانفر',
              'مهرانگیز',
              'مهرداد',
              'مهر دخت',
              'مهرزاده ‌',
              'مهرناز',
              'مهرنوش',
              'مهرنکار',
              'مهرنیا',
              'مهروز',
              'مهری',
              'مهریار',
              'مهسا',
              'مهستی',
              'مه سیما',
              'مهشاد',
              'مهشید',
              'مهنام',
              'مهناز',
              'مهنوش',
              'مهوش',
              'مهیار',
              'مهین',
              'مهین دخت',
              'میترا',
              'میخک',
              'مینا',
              'مینا دخت',
              'مینو',
              'مینودخت',
              'مینو فر',
              'نادر',
              'ناز آفرین',
              'نازبانو',
              'نازپرور',
              'نازچهر',
              'نازفر',
              'نازلی',
              'نازی',
              'نازیدخت',
              'نامور',
              'ناهید',
              'ندا',
              'نرسی',
              'نرگس',
              'نرمک',
              'نرمین',
              'نریمان',
              'نسترن',
              'نسرین',
              'نسرین دخت',
              'نسرین نوش',
              'نکیسا',
              'نگار',
              'نگاره',
              'نگارین',
              'نگین',
              'نوا',
              'نوش',
              'نوش آذر',
              'نوش آور',
              'نوشا',
              'نوش آفرین',
              'نوشدخت',
              'نوشروان',
              'نوشفر',
              'نوشناز',
              'نوشین',
              'نوید',
              'نوین',
              'نوین دخت',
              'نیش ا',
              'نیک بین',
              'نیک پی',
              'نیک چهر',
              'نیک خواه',
              'نیکداد',
              'نیکدخت',
              'نیکدل',
              'نیکزاد',
              'نیلوفر',
              'نیما',
              'وامق',
              'ورجاوند',
              'وریا',
              'وشمگیر',
              'وهرز',
              'وهسودان',
              'ویدا',
              'ویس',
              'ویشتاسب',
              'ویگن',
              'هژیر',
              'هخامنش',
              'هربد( هیربد )',
              'هرمز',
              'همایون',
              'هما',
              'همادخت',
              'همدم',
              'همراز',
              'همراه',
              'هنگامه',
              'هوتن',
              'هور',
              'هورتاش',
              'هورچهر',
              'هورداد',
              'هوردخت',
              'هورزاد',
              'هورمند',
              'هوروش',
              'هوشنگ',
              'هوشیار',
              'هومان',
              'هومن',
              'هونام',
              'هویدا',
              'هیتاسب',
              'هیرمند',
              'هیما',
              'هیوا',
              'یادگار',
              'یاسمن ( یاسمین )',
              'یاشار',
              'یاور',
              'یزدان',
              'یگانه',
              'یوشیتا'
            ],
            last_name: [
              'عارف',
              'عاشوری',
              'عالی',
              'عبادی',
              'عبدالکریمی',
              'عبدالملکی',
              'عراقی',
              'عزیزی',
              'عصار',
              'عقیلی',
              'علم',
              'علم‌الهدی',
              'علی عسگری',
              'علی‌آبادی',
              'علیا',
              'علی‌پور',
              'علی‌زمانی',
              'عنایت',
              'غضنفری',
              'غنی',
              'فارسی',
              'فاطمی',
              'فانی',
              'فتاحی',
              'فرامرزی',
              'فرج',
              'فرشیدورد',
              'فرمانفرمائیان',
              'فروتن',
              'فرهنگ',
              'فریاد',
              'فنایی',
              'فنی‌زاده',
              'فولادوند',
              'فهمیده',
              'قاضی',
              'قانعی',
              'قانونی',
              'قمیشی',
              'قنبری',
              'قهرمان',
              'قهرمانی',
              'قهرمانیان',
              'قهستانی',
              'کاشی',
              'کاکاوند',
              'کامکار',
              'کاملی',
              'کاویانی',
              'کدیور',
              'کردبچه',
              'کرمانی',
              'کریمی',
              'کلباسی',
              'کمالی',
              'کوشکی',
              'کهنمویی',
              'کیان',
              'کیانی (نام خانوادگی)',
              'کیمیایی',
              'گل محمدی',
              'گلپایگانی',
              'گنجی',
              'لاجوردی',
              'لاچینی',
              'لاهوتی',
              'لنکرانی',
              'لوکس',
              'مجاهد',
              'مجتبایی',
              'مجتبوی',
              'مجتهد شبستری',
              'مجتهدی',
              'مجرد',
              'محجوب',
              'محجوبی',
              'محدثی',
              'محمدرضایی',
              'محمدی',
              'مددی',
              'مرادخانی',
              'مرتضوی',
              'مستوفی',
              'مشا',
              'مصاحب',
              'مصباح',
              'مصباح‌زاده',
              'مطهری',
              'مظفر',
              'معارف',
              'معروف',
              'معین',
              'مفتاح',
              'مفتح',
              'مقدم',
              'ملایری',
              'ملک',
              'ملکیان',
              'منوچهری',
              'موحد',
              'موسوی',
              'موسویان',
              'مهاجرانی',
              'مهدی‌پور',
              'میرباقری',
              'میردامادی',
              'میرزاده',
              'میرسپاسی',
              'میزبانی',
              'ناظری',
              'نامور',
              'نجفی',
              'ندوشن',
              'نراقی',
              'نعمت‌زاده',
              'نقدی',
              'نقیب‌زاده',
              'نواب',
              'نوبخت',
              'نوبختی',
              'نهاوندی',
              'نیشابوری',
              'نیلوفری',
              'واثقی',
              'واعظ',
              'واعظ‌زاده',
              'واعظی',
              'وکیلی',
              'هاشمی',
              'هاشمی رفسنجانی',
              'هاشمیان',
              'هامون',
              'هدایت',
              'هراتی',
              'هروی',
              'همایون',
              'همت',
              'همدانی',
              'هوشیار',
              'هومن',
              'یاحقی',
              'یادگار',
              'یثربی',
              'یلدا'
            ],
            prefix: [
              'آقای',
              'خانم',
              'دکتر'
            ]
          }
        }
      },
      fr: {
        faker: {
          address: {
            building_number: [
              '####',
              '###',
              '##',
              '#'
            ],
            street_prefix: [
              'Allée, Voie',
              'Rue',
              'Avenue',
              'Boulevard',
              'Quai',
              'Passage',
              'Impasse',
              'Place'
            ],
            secondary_address: [
              'Apt. ###',
              '# étage'
            ],
            postcode: [
              '#####'
            ],
            state: [
              'Alsace',
              'Aquitaine',
              'Auvergne',
              'Basse-Normandie',
              'Bourgogne',
              'Bretagne',
              'Centre',
              'Champagne-Ardenne',
              'Corse',
              'Franche-Comté',
              'Haute-Normandie',
              'Île-de-France',
              'Languedoc-Roussillon',
              'Limousin',
              'Lorraine',
              'Midi-Pyrénées',
              'Nord-Pas-de-Calais',
              'Pays de la Loire',
              'Picardie',
              'Poitou-Charentes',
              'Provence-Alpes-Côte d\'Azur',
              'Rhône-Alpes'
            ],
            city_name: [
              'Paris',
              'Marseille',
              'Lyon',
              'Toulouse',
              'Nice',
              'Nantes',
              'Strasbourg',
              'Montpellier',
              'Bordeaux',
              'Lille13',
              'Rennes',
              'Reims',
              'Le Havre',
              'Saint-Étienne',
              'Toulon',
              'Grenoble',
              'Dijon',
              'Angers',
              'Saint-Denis',
              'Villeurbanne',
              'Le Mans',
              'Aix-en-Provence',
              'Brest',
              'Nîmes',
              'Limoges',
              'Clermont-Ferrand',
              'Tours',
              'Amiens',
              'Metz',
              'Perpignan',
              'Besançon',
              'Orléans',
              'Boulogne-Billancourt',
              'Mulhouse',
              'Rouen',
              'Caen',
              'Nancy',
              'Saint-Denis',
              'Saint-Paul',
              'Montreuil',
              'Argenteuil',
              'Roubaix',
              'Dunkerque14',
              'Tourcoing',
              'Nanterre',
              'Avignon',
              'Créteil',
              'Poitiers',
              'Fort-de-France',
              'Courbevoie',
              'Versailles',
              'Vitry-sur-Seine',
              'Colombes',
              'Pau',
              'Aulnay-sous-Bois',
              'Asnières-sur-Seine',
              'Rueil-Malmaison',
              'Saint-Pierre',
              'Antibes',
              'Saint-Maur-des-Fossés',
              'Champigny-sur-Marne',
              'La Rochelle',
              'Aubervilliers',
              'Calais',
              'Cannes',
              'Le Tampon',
              'Béziers',
              'Colmar',
              'Bourges',
              'Drancy',
              'Mérignac',
              'Saint-Nazaire',
              'Valence',
              'Ajaccio',
              'Issy-les-Moulineaux',
              'Villeneuve-d\'Ascq',
              'Levallois-Perret',
              'Noisy-le-Grand',
              'Quimper',
              'La Seyne-sur-Mer',
              'Antony',
              'Troyes',
              'Neuilly-sur-Seine',
              'Sarcelles',
              'Les Abymes',
              'Vénissieux',
              'Clichy',
              'Lorient',
              'Pessac',
              'Ivry-sur-Seine',
              'Cergy',
              'Cayenne',
              'Niort',
              'Chambéry',
              'Montauban',
              'Saint-Quentin',
              'Villejuif',
              'Hyères',
              'Beauvais',
              'Cholet'
            ],
            city: [
              '#{city_name}'
            ],
            street_suffix: [
              'de l\'Abbaye',
              'Adolphe Mille',
              'd\'Alésia',
              'd\'Argenteuil',
              'd\'Assas',
              'du Bac',
              'de Paris',
              'La Boétie',
              'Bonaparte',
              'de la Bûcherie',
              'de Caumartin',
              'Charlemagne',
              'du Chat-qui-Pêche',
              'de la Chaussée-d\'Antin',
              'du Dahomey',
              'Dauphine',
              'Delesseux',
              'du Faubourg Saint-Honoré',
              'du Faubourg-Saint-Denis',
              'de la Ferronnerie',
              'des Francs-Bourgeois',
              'des Grands Augustins',
              'de la Harpe',
              'du Havre',
              'de la Huchette',
              'Joubert',
              'Laffitte',
              'Lepic',
              'des Lombards',
              'Marcadet',
              'Molière',
              'Monsieur-le-Prince',
              'de Montmorency',
              'Montorgueil',
              'Mouffetard',
              'de Nesle',
              'Oberkampf',
              'de l\'Odéon',
              'd\'Orsel',
              'de la Paix',
              'des Panoramas',
              'Pastourelle',
              'Pierre Charron',
              'de la Pompe',
              'de Presbourg',
              'de Provence',
              'de Richelieu',
              'de Rivoli',
              'des Rosiers',
              'Royale',
              'd\'Abbeville',
              'Saint-Honoré',
              'Saint-Bernard',
              'Saint-Denis',
              'Saint-Dominique',
              'Saint-Jacques',
              'Saint-Séverin',
              'des Saussaies',
              'de Seine',
              'de Solférino',
              'Du Sommerard',
              'de Tilsitt',
              'Vaneau',
              'de Vaugirard',
              'de la Victoire',
              'Zadkine'
            ],
            street_name: [
              '#{street_prefix} #{street_suffix}'
            ],
            street_address: [
              '#{building_number} #{street_name}'
            ],
            default_country: [
              'France'
            ]
          },
          company: {
            suffix: [
              'SARL',
              'SA',
              'EURL',
              'SAS',
              'SEM',
              'SCOP',
              'GIE',
              'EI'
            ],
            buzzwords: [
              ['Adaptive',
              'Advanced',
              'Ameliorated',
              'Assimilated',
              'Automated',
              'Balanced',
              'Business-focused',
              'Centralized',
              'Cloned',
              'Compatible',
              'Configurable',
              'Cross-group',
              'Cross-platform',
              'Customer-focused',
              'Customizable',
              'Decentralized',
              'De-engineered',
              'Devolved',
              'Digitized',
              'Distributed',
              'Diverse',
              'Down-sized',
              'Enhanced',
              'Enterprise-wide',
              'Ergonomic',
              'Exclusive',
              'Expanded',
              'Extended',
              'Face to face',
              'Focused',
              'Front-line',
              'Fully-configurable',
              'Function-based',
              'Fundamental',
              'Future-proofed',
              'Grass-roots',
              'Horizontal',
              'Implemented',
              'Innovative',
              'Integrated',
              'Intuitive',
              'Inverse',
              'Managed',
              'Mandatory',
              'Monitored',
              'Multi-channelled',
              'Multi-lateral',
              'Multi-layered',
              'Multi-tiered',
              'Networked',
              'Object-based',
              'Open-architected',
              'Open-source',
              'Operative',
              'Optimized',
              'Optional',
              'Organic',
              'Organized',
              'Persevering',
              'Persistent',
              'Phased',
              'Polarised',
              'Pre-emptive',
              'Proactive',
              'Profit-focused',
              'Profound',
              'Programmable',
              'Progressive',
              'Public-key',
              'Quality-focused',
              'Reactive',
              'Realigned',
              'Re-contextualized',
              'Re-engineered',
              'Reduced',
              'Reverse-engineered',
              'Right-sized',
              'Robust',
              'Seamless',
              'Secured',
              'Self-enabling',
              'Sharable',
              'Stand-alone',
              'Streamlined',
              'Switchable',
              'Synchronised',
              'Synergistic',
              'Synergized',
              'Team-oriented',
              'Total',
              'Triple-buffered',
              'Universal',
              'Up-sized',
              'Upgradable',
              'User-centric',
              'User-friendly',
              'Versatile',
              'Virtual',
              'Visionary',
              'Vision-oriented'],
              [
                '24 hour',
                '24/7',
                '3rd generation',
                '4th generation',
                '5th generation',
                '6th generation',
                'actuating',
                'analyzing',
                'asymmetric',
                'asynchronous',
                'attitude-oriented',
                'background',
                'bandwidth-monitored',
                'bi-directional',
                'bifurcated',
                'bottom-line',
                'clear-thinking',
                'client-driven',
                'client-server',
                'coherent',
                'cohesive',
                'composite',
                'context-sensitive',
                'contextually-based',
                'content-based',
                'dedicated',
                'demand-driven',
                'didactic',
                'directional',
                'discrete',
                'disintermediate',
                'dynamic',
                'eco-centric',
                'empowering',
                'encompassing',
                'even-keeled',
                'executive',
                'explicit',
                'exuding',
                'fault-tolerant',
                'foreground',
                'fresh-thinking',
                'full-range',
                'global',
                'grid-enabled',
                'heuristic',
                'high-level',
                'holistic',
                'homogeneous',
                'human-resource',
                'hybrid',
                'impactful',
                'incremental',
                'intangible',
                'interactive',
                'intermediate',
                'leading edge',
                'local',
                'logistical',
                'maximized',
                'methodical',
                'mission-critical',
                'mobile',
                'modular',
                'motivating',
                'multimedia',
                'multi-state',
                'multi-tasking',
                'national',
                'needs-based',
                'neutral',
                'next generation',
                'non-volatile',
                'object-oriented',
                'optimal',
                'optimizing',
                'radical',
                'real-time',
                'reciprocal',
                'regional',
                'responsive',
                'scalable',
                'secondary',
                'solution-oriented',
                'stable',
                'static',
                'systematic',
                'systemic',
                'system-worthy',
                'tangible',
                'tertiary',
                'transitional',
                'uniform',
                'upward-trending',
                'user-facing',
                'value-added',
                'web-enabled',
                'well-modulated',
                'zero administration',
                'zero defect',
                'zero tolerance'
              ],
              [
                'ability',
                'access',
                'adapter',
                'algorithm',
                'alliance',
                'analyzer',
                'application',
                'approach',
                'architecture',
                'archive',
                'artificial intelligence',
                'array',
                'attitude',
                'benchmark',
                'budgetary management',
                'capability',
                'capacity',
                'challenge',
                'circuit',
                'collaboration',
                'complexity',
                'concept',
                'conglomeration',
                'contingency',
                'core',
                'customer loyalty',
                'database',
                'data-warehouse',
                'definition',
                'emulation',
                'encoding',
                'encryption',
                'extranet',
                'firmware',
                'flexibility',
                'focus group',
                'forecast',
                'frame',
                'framework',
                'function',
                'functionalities',
                'Graphic Interface',
                'groupware',
                'Graphical User Interface',
                'hardware',
                'help-desk',
                'hierarchy',
                'hub',
                'implementation',
                'info-mediaries',
                'infrastructure',
                'initiative',
                'installation',
                'instruction set',
                'interface',
                'internet solution',
                'intranet',
                'knowledge user',
                'knowledge base',
                'local area network',
                'leverage',
                'matrices',
                'matrix',
                'methodology',
                'middleware',
                'migration',
                'model',
                'moderator',
                'monitoring',
                'moratorium',
                'neural-net',
                'open architecture',
                'open system',
                'orchestration',
                'paradigm',
                'parallelism',
                'policy',
                'portal',
                'pricing structure',
                'process improvement',
                'product',
                'productivity',
                'project',
                'projection',
                'protocol',
                'secured line',
                'service-desk',
                'software',
                'solution',
                'standardization',
                'strategy',
                'structure',
                'success',
                'superstructure',
                'support',
                'synergy',
                'system engine',
                'task-force',
                'throughput',
                'time-frame',
                'toolset',
                'utilisation',
                'website',
                'workforce'
              ]
            ],
            bs: [
              ['implement',
              'utilize',
              'integrate',
              'streamline',
              'optimize',
              'evolve',
              'transform',
              'embrace',
              'enable',
              'orchestrate',
              'leverage',
              'reinvent',
              'aggregate',
              'architect',
              'enhance',
              'incentivize',
              'morph',
              'empower',
              'envisioneer',
              'monetize',
              'harness',
              'facilitate',
              'seize',
              'disintermediate',
              'synergize',
              'strategize',
              'deploy',
              'brand',
              'grow',
              'target',
              'syndicate',
              'synthesize',
              'deliver',
              'mesh',
              'incubate',
              'engage',
              'maximize',
              'benchmark',
              'expedite',
              'reintermediate',
              'whiteboard',
              'visualize',
              'repurpose',
              'innovate',
              'scale',
              'unleash',
              'drive',
              'extend',
              'engineer',
              'revolutionize',
              'generate',
              'exploit',
              'transition',
              'e-enable',
              'iterate',
              'cultivate',
              'matrix',
              'productize',
              'redefine',
              'recontextualize'],
              [
                'clicks-and-mortar',
                'value-added',
                'vertical',
                'proactive',
                'robust',
                'revolutionary',
                'scalable',
                'leading-edge',
                'innovative',
                'intuitive',
                'strategic',
                'e-business',
                'mission-critical',
                'sticky',
                'one-to-one',
                '24/7',
                'end-to-end',
                'global',
                'B2B',
                'B2C',
                'granular',
                'frictionless',
                'virtual',
                'viral',
                'dynamic',
                '24/365',
                'best-of-breed',
                'killer',
                'magnetic',
                'bleeding-edge',
                'web-enabled',
                'interactive',
                'dot-com',
                'sexy',
                'back-end',
                'real-time',
                'efficient',
                'front-end',
                'distributed',
                'seamless',
                'extensible',
                'turn-key',
                'world-class',
                'open-source',
                'cross-platform',
                'cross-media',
                'synergistic',
                'bricks-and-clicks',
                'out-of-the-box',
                'enterprise',
                'integrated',
                'impactful',
                'wireless',
                'transparent',
                'next-generation',
                'cutting-edge',
                'user-centric',
                'visionary',
                'customized',
                'ubiquitous',
                'plug-and-play',
                'collaborative',
                'compelling',
                'holistic',
                'rich'
              ],
              [
                'synergies',
                'web-readiness',
                'paradigms',
                'markets',
                'partnerships',
                'infrastructures',
                'platforms',
                'initiatives',
                'channels',
                'eyeballs',
                'communities',
                'ROI',
                'solutions',
                'e-tailers',
                'e-services',
                'action-items',
                'portals',
                'niches',
                'technologies',
                'content',
                'vortals',
                'supply-chains',
                'convergence',
                'relationships',
                'architectures',
                'interfaces',
                'e-markets',
                'e-commerce',
                'systems',
                'bandwidth',
                'infomediaries',
                'models',
                'mindshare',
                'deliverables',
                'users',
                'schemas',
                'networks',
                'applications',
                'metrics',
                'e-business',
                'functionalities',
                'experiences',
                'web services',
                'methodologies'
              ]
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name} et #{Name.last_name}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.fr',
              'hotmail.fr'
            ],
            domain_suffix: [
              'com',
              'fr',
              'eu',
              'info',
              'name',
              'net',
              'org'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ],
            supplemental: [
              'abbas',
              'abduco',
              'abeo',
              'abscido',
              'absconditus',
              'absens',
              'absorbeo',
              'absque',
              'abstergo',
              'absum',
              'abundans',
              'abutor',
              'accedo',
              'accendo',
              'acceptus',
              'accipio',
              'accommodo',
              'accusator',
              'acer',
              'acerbitas',
              'acervus',
              'acidus',
              'acies',
              'acquiro',
              'acsi',
              'adamo',
              'adaugeo',
              'addo',
              'adduco',
              'ademptio',
              'adeo',
              'adeptio',
              'adfectus',
              'adfero',
              'adficio',
              'adflicto',
              'adhaero',
              'adhuc',
              'adicio',
              'adimpleo',
              'adinventitias',
              'adipiscor',
              'adiuvo',
              'administratio',
              'admiratio',
              'admitto',
              'admoneo',
              'admoveo',
              'adnuo',
              'adopto',
              'adsidue',
              'adstringo',
              'adsuesco',
              'adsum',
              'adulatio',
              'adulescens',
              'adultus',
              'aduro',
              'advenio',
              'adversus',
              'advoco',
              'aedificium',
              'aeger',
              'aegre',
              'aegrotatio',
              'aegrus',
              'aeneus',
              'aequitas',
              'aequus',
              'aer',
              'aestas',
              'aestivus',
              'aestus',
              'aetas',
              'aeternus',
              'ager',
              'aggero',
              'aggredior',
              'agnitio',
              'agnosco',
              'ago',
              'ait',
              'aiunt',
              'alienus',
              'alii',
              'alioqui',
              'aliqua',
              'alius',
              'allatus',
              'alo',
              'alter',
              'altus',
              'alveus',
              'amaritudo',
              'ambitus',
              'ambulo',
              'amicitia',
              'amiculum',
              'amissio',
              'amita',
              'amitto',
              'amo',
              'amor',
              'amoveo',
              'amplexus',
              'amplitudo',
              'amplus',
              'ancilla',
              'angelus',
              'angulus',
              'angustus',
              'animadverto',
              'animi',
              'animus',
              'annus',
              'anser',
              'ante',
              'antea',
              'antepono',
              'antiquus',
              'aperio',
              'aperte',
              'apostolus',
              'apparatus',
              'appello',
              'appono',
              'appositus',
              'approbo',
              'apto',
              'aptus',
              'apud',
              'aqua',
              'ara',
              'aranea',
              'arbitro',
              'arbor',
              'arbustum',
              'arca',
              'arceo',
              'arcesso',
              'arcus',
              'argentum',
              'argumentum',
              'arguo',
              'arma',
              'armarium',
              'armo',
              'aro',
              'ars',
              'articulus',
              'artificiose',
              'arto',
              'arx',
              'ascisco',
              'ascit',
              'asper',
              'aspicio',
              'asporto',
              'assentator',
              'astrum',
              'atavus',
              'ater',
              'atqui',
              'atrocitas',
              'atrox',
              'attero',
              'attollo',
              'attonbitus',
              'auctor',
              'auctus',
              'audacia',
              'audax',
              'audentia',
              'audeo',
              'audio',
              'auditor',
              'aufero',
              'aureus',
              'auris',
              'aurum',
              'aut',
              'autem',
              'autus',
              'auxilium',
              'avaritia',
              'avarus',
              'aveho',
              'averto',
              'avoco',
              'baiulus',
              'balbus',
              'barba',
              'bardus',
              'basium',
              'beatus',
              'bellicus',
              'bellum',
              'bene',
              'beneficium',
              'benevolentia',
              'benigne',
              'bestia',
              'bibo',
              'bis',
              'blandior',
              'bonus',
              'bos',
              'brevis',
              'cado',
              'caecus',
              'caelestis',
              'caelum',
              'calamitas',
              'calcar',
              'calco',
              'calculus',
              'callide',
              'campana',
              'candidus',
              'canis',
              'canonicus',
              'canto',
              'capillus',
              'capio',
              'capitulus',
              'capto',
              'caput',
              'carbo',
              'carcer',
              'careo',
              'caries',
              'cariosus',
              'caritas',
              'carmen',
              'carpo',
              'carus',
              'casso',
              'caste',
              'casus',
              'catena',
              'caterva',
              'cattus',
              'cauda',
              'causa',
              'caute',
              'caveo',
              'cavus',
              'cedo',
              'celebrer',
              'celer',
              'celo',
              'cena',
              'cenaculum',
              'ceno',
              'censura',
              'centum',
              'cerno',
              'cernuus',
              'certe',
              'certo',
              'certus',
              'cervus',
              'cetera',
              'charisma',
              'chirographum',
              'cibo',
              'cibus',
              'cicuta',
              'cilicium',
              'cimentarius',
              'ciminatio',
              'cinis',
              'circumvenio',
              'cito',
              'civis',
              'civitas',
              'clam',
              'clamo',
              'claro',
              'clarus',
              'claudeo',
              'claustrum',
              'clementia',
              'clibanus',
              'coadunatio',
              'coaegresco',
              'coepi',
              'coerceo',
              'cogito',
              'cognatus',
              'cognomen',
              'cogo',
              'cohaero',
              'cohibeo',
              'cohors',
              'colligo',
              'colloco',
              'collum',
              'colo',
              'color',
              'coma',
              'combibo',
              'comburo',
              'comedo',
              'comes',
              'cometes',
              'comis',
              'comitatus',
              'commemoro',
              'comminor',
              'commodo',
              'communis',
              'comparo',
              'compello',
              'complectus',
              'compono',
              'comprehendo',
              'comptus',
              'conatus',
              'concedo',
              'concido',
              'conculco',
              'condico',
              'conduco',
              'confero',
              'confido',
              'conforto',
              'confugo',
              'congregatio',
              'conicio',
              'coniecto',
              'conitor',
              'coniuratio',
              'conor',
              'conqueror',
              'conscendo',
              'conservo',
              'considero',
              'conspergo',
              'constans',
              'consuasor',
              'contabesco',
              'contego',
              'contigo',
              'contra',
              'conturbo',
              'conventus',
              'convoco',
              'copia',
              'copiose',
              'cornu',
              'corona',
              'corpus',
              'correptius',
              'corrigo',
              'corroboro',
              'corrumpo',
              'coruscus',
              'cotidie',
              'crapula',
              'cras',
              'crastinus',
              'creator',
              'creber',
              'crebro',
              'credo',
              'creo',
              'creptio',
              'crepusculum',
              'cresco',
              'creta',
              'cribro',
              'crinis',
              'cruciamentum',
              'crudelis',
              'cruentus',
              'crur',
              'crustulum',
              'crux',
              'cubicularis',
              'cubitum',
              'cubo',
              'cui',
              'cuius',
              'culpa',
              'culpo',
              'cultellus',
              'cultura',
              'cum',
              'cunabula',
              'cunae',
              'cunctatio',
              'cupiditas',
              'cupio',
              'cuppedia',
              'cupressus',
              'cur',
              'cura',
              'curatio',
              'curia',
              'curiositas',
              'curis',
              'curo',
              'curriculum',
              'currus',
              'cursim',
              'curso',
              'cursus',
              'curto',
              'curtus',
              'curvo',
              'curvus',
              'custodia',
              'damnatio',
              'damno',
              'dapifer',
              'debeo',
              'debilito',
              'decens',
              'decerno',
              'decet',
              'decimus',
              'decipio',
              'decor',
              'decretum',
              'decumbo',
              'dedecor',
              'dedico',
              'deduco',
              'defaeco',
              'defendo',
              'defero',
              'defessus',
              'defetiscor',
              'deficio',
              'defigo',
              'defleo',
              'defluo',
              'defungo',
              'degenero',
              'degero',
              'degusto',
              'deinde',
              'delectatio',
              'delego',
              'deleo',
              'delibero',
              'delicate',
              'delinquo',
              'deludo',
              'demens',
              'demergo',
              'demitto',
              'demo',
              'demonstro',
              'demoror',
              'demulceo',
              'demum',
              'denego',
              'denique',
              'dens',
              'denuncio',
              'denuo',
              'deorsum',
              'depereo',
              'depono',
              'depopulo',
              'deporto',
              'depraedor',
              'deprecator',
              'deprimo',
              'depromo',
              'depulso',
              'deputo',
              'derelinquo',
              'derideo',
              'deripio',
              'desidero',
              'desino',
              'desipio',
              'desolo',
              'desparatus',
              'despecto',
              'despirmatio',
              'infit',
              'inflammatio',
              'paens',
              'patior',
              'patria',
              'patrocinor',
              'patruus',
              'pauci',
              'paulatim',
              'pauper',
              'pax',
              'peccatus',
              'pecco',
              'pecto',
              'pectus',
              'pecunia',
              'pecus',
              'peior',
              'pel',
              'ocer',
              'socius',
              'sodalitas',
              'sol',
              'soleo',
              'solio',
              'solitudo',
              'solium',
              'sollers',
              'sollicito',
              'solum',
              'solus',
              'solutio',
              'solvo',
              'somniculosus',
              'somnus',
              'sonitus',
              'sono',
              'sophismata',
              'sopor',
              'sordeo',
              'sortitus',
              'spargo',
              'speciosus',
              'spectaculum',
              'speculum',
              'sperno',
              'spero',
              'spes',
              'spiculum',
              'spiritus',
              'spoliatio',
              'sponte',
              'stabilis',
              'statim',
              'statua',
              'stella',
              'stillicidium',
              'stipes',
              'stips',
              'sto',
              'strenuus',
              'strues',
              'studio',
              'stultus',
              'suadeo',
              'suasoria',
              'sub',
              'subito',
              'subiungo',
              'sublime',
              'subnecto',
              'subseco',
              'substantia',
              'subvenio',
              'succedo',
              'succurro',
              'sufficio',
              'suffoco',
              'suffragium',
              'suggero',
              'sui',
              'sulum',
              'sum',
              'summa',
              'summisse',
              'summopere',
              'sumo',
              'sumptus',
              'supellex',
              'super',
              'suppellex',
              'supplanto',
              'suppono',
              'supra',
              'surculus',
              'surgo',
              'sursum',
              'suscipio',
              'suspendo',
              'sustineo',
              'suus',
              'synagoga',
              'tabella',
              'tabernus',
              'tabesco',
              'tabgo',
              'tabula',
              'taceo',
              'tactus',
              'taedium',
              'talio',
              'talis',
              'talus',
              'tam',
              'tamdiu',
              'tamen',
              'tametsi',
              'tamisium',
              'tamquam',
              'tandem',
              'tantillus',
              'tantum',
              'tardus',
              'tego',
              'temeritas',
              'temperantia',
              'templum',
              'temptatio',
              'tempus',
              'tenax',
              'tendo',
              'teneo',
              'tener',
              'tenuis',
              'tenus',
              'tepesco',
              'tepidus',
              'ter',
              'terebro',
              'teres',
              'terga',
              'tergeo',
              'tergiversatio',
              'tergo',
              'tergum',
              'termes',
              'terminatio',
              'tero',
              'terra',
              'terreo',
              'territo',
              'terror',
              'tersus',
              'tertius',
              'testimonium',
              'texo',
              'textilis',
              'textor',
              'textus',
              'thalassinus',
              'theatrum',
              'theca',
              'thema',
              'theologus',
              'thermae',
              'thesaurus',
              'thesis',
              'thorax',
              'thymbra',
              'thymum',
              'tibi',
              'timidus',
              'timor',
              'titulus',
              'tolero',
              'tollo',
              'tondeo',
              'tonsor',
              'torqueo',
              'torrens',
              'tot',
              'totidem',
              'toties',
              'totus',
              'tracto',
              'trado',
              'traho',
              'trans',
              'tredecim',
              'tremo',
              'trepide',
              'tres',
              'tribuo',
              'tricesimus',
              'triduana',
              'triginta',
              'tripudio',
              'tristis',
              'triumphus',
              'trucido',
              'truculenter',
              'tubineus',
              'tui',
              'tum',
              'tumultus',
              'tunc',
              'turba',
              'turbo',
              'turpe',
              'turpis',
              'tutamen',
              'tutis',
              'tyrannus',
              'uberrime',
              'ubi',
              'ulciscor',
              'ullus',
              'ulterius',
              'ultio',
              'ultra',
              'umbra',
              'umerus',
              'umquam',
              'una',
              'unde',
              'undique',
              'universe',
              'unus',
              'urbanus',
              'urbs',
              'uredo',
              'usitas',
              'usque',
              'ustilo',
              'ustulo',
              'usus',
              'uter',
              'uterque',
              'utilis',
              'utique',
              'utor',
              'utpote',
              'utrimque',
              'utroque',
              'utrum',
              'uxor',
              'vaco',
              'vacuus',
              'vado',
              'vae',
              'valde',
              'valens',
              'valeo',
              'valetudo',
              'validus',
              'vallum',
              'vapulus',
              'varietas',
              'varius',
              'vehemens',
              'vel',
              'velociter',
              'velum',
              'velut',
              'venia',
              'venio',
              'ventito',
              'ventosus',
              'ventus',
              'venustas',
              'ver',
              'verbera',
              'verbum',
              'vere',
              'verecundia',
              'vereor',
              'vergo',
              'veritas',
              'vero',
              'versus',
              'verto',
              'verumtamen',
              'verus',
              'vesco',
              'vesica',
              'vesper',
              'vespillo',
              'vester',
              'vestigium',
              'vestrum',
              'vetus',
              'via',
              'vicinus',
              'vicissitudo',
              'victoria',
              'victus',
              'videlicet',
              'video',
              'viduata',
              'viduo',
              'vigilo',
              'vigor',
              'vilicus',
              'vilis',
              'vilitas',
              'villa',
              'vinco',
              'vinculum',
              'vindico',
              'vinitor',
              'vinum',
              'vir',
              'virga',
              'virgo',
              'viridis',
              'viriliter',
              'virtus',
              'vis',
              'viscus',
              'vita',
              'vitiosus',
              'vitium',
              'vito',
              'vivo',
              'vix',
              'vobis',
              'vociferor',
              'voco',
              'volaticus',
              'volo',
              'volubilis',
              'voluntarius',
              'volup',
              'volutabrum',
              'volva',
              'vomer',
              'vomica',
              'vomito',
              'vorago',
              'vorax',
              'voro',
              'vos',
              'votum',
              'voveo',
              'vox',
              'vulariter',
              'vulgaris',
              'vulgivagus',
              'vulgo',
              'vulgus',
              'vulnero',
              'vulnus',
              'vulpes',
              'vulticulus',
              'vultuosus',
              'xiphias'
            ]
          },
          name: {
            first_name: [
              'Enzo',
              'Lucas',
              'Mathis',
              'Nathan',
              'Thomas',
              'Hugo',
              'Théo',
              'Tom',
              'Louis',
              'Raphaël',
              'Clément',
              'Léo',
              'Mathéo',
              'Maxime',
              'Alexandre',
              'Antoine',
              'Yanis',
              'Paul',
              'Baptiste',
              'Alexis',
              'Gabriel',
              'Arthur',
              'Jules',
              'Ethan',
              'Noah',
              'Quentin',
              'Axel',
              'Evan',
              'Mattéo',
              'Romain',
              'Valentin',
              'Maxence',
              'Noa',
              'Adam',
              'Nicolas',
              'Julien',
              'Mael',
              'Pierre',
              'Rayan',
              'Victor',
              'Mohamed',
              'Adrien',
              'Kylian',
              'Sacha',
              'Benjamin',
              'Léa',
              'Clara',
              'Manon',
              'Chloé',
              'Camille',
              'Ines',
              'Sarah',
              'Jade',
              'Lola',
              'Anaïs',
              'Lucie',
              'Océane',
              'Lilou',
              'Marie',
              'Eva',
              'Romane',
              'Lisa',
              'Zoe',
              'Julie',
              'Mathilde',
              'Louise',
              'Juliette',
              'Clémence',
              'Célia',
              'Laura',
              'Lena',
              'Maëlys',
              'Charlotte',
              'Ambre',
              'Maeva',
              'Pauline',
              'Lina',
              'Jeanne',
              'Lou',
              'Noémie',
              'Justine',
              'Louna',
              'Elisa',
              'Alice',
              'Emilie',
              'Carla',
              'Maëlle',
              'Alicia',
              'Mélissa'
            ],
            last_name: [
              'Martin',
              'Bernard',
              'Dubois',
              'Thomas',
              'Robert',
              'Richard',
              'Petit',
              'Durand',
              'Leroy',
              'Moreau',
              'Simon',
              'Laurent',
              'Lefebvre',
              'Michel',
              'Garcia',
              'David',
              'Bertrand',
              'Roux',
              'Vincent',
              'Fournier',
              'Morel',
              'Girard',
              'Andre',
              'Lefevre',
              'Mercier',
              'Dupont',
              'Lambert',
              'Bonnet',
              'Francois',
              'Martinez',
              'Legrand',
              'Garnier',
              'Faure',
              'Rousseau',
              'Blanc',
              'Guerin',
              'Muller',
              'Henry',
              'Roussel',
              'Nicolas',
              'Perrin',
              'Morin',
              'Mathieu',
              'Clement',
              'Gauthier',
              'Dumont',
              'Lopez',
              'Fontaine',
              'Chevalier',
              'Robin',
              'Masson',
              'Sanchez',
              'Gerard',
              'Nguyen',
              'Boyer',
              'Denis',
              'Lemaire',
              'Duval',
              'Joly',
              'Gautier',
              'Roger',
              'Roche',
              'Roy',
              'Noel',
              'Meyer',
              'Lucas',
              'Meunier',
              'Jean',
              'Perez',
              'Marchand',
              'Dufour',
              'Blanchard',
              'Marie',
              'Barbier',
              'Brun',
              'Dumas',
              'Brunet',
              'Schmitt',
              'Leroux',
              'Colin',
              'Fernandez',
              'Pierre',
              'Renard',
              'Arnaud',
              'Rolland',
              'Caron',
              'Aubert',
              'Giraud',
              'Leclerc',
              'Vidal',
              'Bourgeois',
              'Renaud',
              'Lemoine',
              'Picard',
              'Gaillard',
              'Philippe',
              'Leclercq',
              'Lacroix',
              'Fabre',
              'Dupuis',
              'Olivier',
              'Rodriguez',
              'Da silva',
              'Hubert',
              'Louis',
              'Charles',
              'Guillot',
              'Riviere',
              'Le gall',
              'Guillaume',
              'Adam',
              'Rey',
              'Moulin',
              'Gonzalez',
              'Berger',
              'Lecomte',
              'Menard',
              'Fleury',
              'Deschamps',
              'Carpentier',
              'Julien',
              'Benoit',
              'Paris',
              'Maillard',
              'Marchal',
              'Aubry',
              'Vasseur',
              'Le roux',
              'Renault',
              'Jacquet',
              'Collet',
              'Prevost',
              'Poirier',
              'Charpentier',
              'Royer',
              'Huet',
              'Baron',
              'Dupuy',
              'Pons',
              'Paul',
              'Laine',
              'Carre',
              'Breton',
              'Remy',
              'Schneider',
              'Perrot',
              'Guyot',
              'Barre',
              'Marty',
              'Cousin'
            ],
            prefix: [
              'M',
              'Mme',
              'Mlle',
              'Dr',
              'Prof'
            ],
            title: {
              job: [
                'Superviseur',
                'Executif',
                'Manager',
                'Ingenieur',
                'Specialiste',
                'Directeur',
                'Coordinateur',
                'Administrateur',
                'Architecte',
                'Analyste',
                'Designer',
                'Technicien',
                'Developpeur',
                'Producteur',
                'Consultant',
                'Assistant',
                'Agent',
                'Stagiaire'
              ]
            },
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{last_name} #{first_name}'
            ]
          },
          phone_number: {
            formats: [
              '01########',
              '02########',
              '03########',
              '04########',
              '05########',
              '06########',
              '07########',
              '+33 1########',
              '+33 2########',
              '+33 3########',
              '+33 4########',
              '+33 5########',
              '+33 6########',
              '+33 7########'
            ]
          }
        },
        adjust: {
          title: 'Paramètres d\'utilisateur',
          title_admin: 'Paramètres d\'utilisateur administrateur',
          personal: 'Données personnelles',
          language: 'Langue',
          spanish: 'Español',
          english: 'English',
          french: 'Français',
          italian: 'Italiano',
          portuguese: 'Português',
          german: 'Deutsch',
          password: {
            password_change: 'Modifier mot de passe',
            new_password_placeholder: 'Nouveau mot de passe',
            new_password_repeat_placeholder: 'Répetez nouveau mot de passe',
            old_password_placeholder: 'Mot de passe actuel'
          },
          require: {
            name: 'Indiquez votre prénom',
            surname: 'Indiquez votre nom'
          },
          advanced_adjust: 'Paramètres avancés',
          advanced_adjust_text: 'Afficher paramètres avancés',
          type_temp: 'Température',
          type_temp_text: 'Mode de température',
          save: {
            title: 'Paramètres enregistrés',
            body: 'Vos réglages ont été enregistrés correctement.'
          },
          unsubscribe_confirm: 'Voulez-vous vous désinscrire de l\'application ?  Toutes vos données seront effacées et aucun retour arrière ne sera possible',
          unsubscribe: {
            title: 'Désinscription confirmée',
            body: 'Vous vous êtes correctement désinscrit. Toutes vos données personnelles ont été effacées complètement.'
          },
          change_pass: 'Modifier mot de passe'
        },
        languages: {
        },
        modal_mode: {
          cold: 'Refroidissement',
          cold_text: 'Mode refroidissement',
          heat: 'Chauffage',
          heat_text: 'Mode chauffage',
          ventilate_cold: 'Ventilaction refroidissement',
          ventilate_cold_text: 'Mode ventilation en mode refroidissement',
          heat_cold_auto: 'Automatique',
          heat_cold_auto_text: 'Mode automatique',
          dehumidify: 'Deshumidification',
          dehumidify_text: 'Mode de deshumidification',
          cold_auto: 'Automatique refroidissement',
          cold_auto_text: 'Mode de refroidissement automatique',
          heat_auto: 'Automatique chauffage',
          heat_auto_text: 'Mode automatique de chauffage',
          ventilate_heat: 'Ventilation chauffage',
          ventilate_heat_text: 'Mode ventilation en mode chauffage'
        },
        modal_speed: {
          title: 'Modes de vitesse de l\'air disponibles',
          speed_1: 'Votre dispositif n\'a qu\'une vitesse disponible',
          speed_2: 'Choisissez parmi une des 2 vitesses.  Un numéro plus élevé indique plus de vitesse d\'air.',
          speed_3: 'Choisissez parmi une des 3 vitesses.  Un numéro plus élevé indique plus de vitesse d\'air.',
          speed_4: 'Choisissez parmi une des 4 vitesses.  Un numéro plus élevé indique plus de vitesse d\'air.',
          speed_5: 'Choisissez parmi une des 5 vitesses.  Un numéro plus élevé indique plus de vitesse d\'air.'
        },
        modal_vertical: {
          title: 'Positions des lames verticales',
          position_0: 'Inclination 0 : lames à 90º',
          position_1: 'Inclination 1 : lames à 72º',
          position_2: 'Inclination 2 : lames à 54º',
          position_3: 'Inclination 3 : lames à 36º',
          position_4: 'Inclination 4 : lames à 0º',
          position_swing: 'Swing: alterne toutes les positions des lames'
        },
        modal_horizontal: {
          title: 'Positions des lames horizontales',
          position_0: 'Inclination 0 : lames à 180º',
          position_1: 'Inclination 1 : lames à 135º',
          position_2: 'Inclination 2 : lames à 90º',
          position_3: 'Inclination 3 : lames à 45º',
          position_4: 'Inclination 4 : lames à 0º',
          position_swing: 'Swing: alterne toutes les positions des lames'
        },
        modal_scenary: {
          vacant: 'Mode inoccupé',
          vacant_text: 'Ce mode permet le marche/arrêt de l\'unité afin de maintenir la température dans les limites établies sur les paramètres d\'installation.',
          occupied: 'Mode occupé',
          occupied_text: 'C\'est le mode normal de fonctionnement de l\'unité.',
          sleep: 'Mode Veille',
          sleep_text: 'L\'unité  s\'éteindra après la période définit sur ses paramètres.'
        },
        advanced_adjust: {
        },
        adjust_zone: {
          'true': 'Oui',
          help: {
          }
        },
        installations: {
          'return': 'Retourner',
          exit: 'Sortir',
          finish: 'Finir',
          next: 'Suivant',
          edit: 'éditer',
          error: 'Une erreur s\'est produite lors de la connexion avec le serveur Web',
          retry: 'Réessayer',
          state1: {
            text: 'Suivez ces étapes pour associer votre serveur Web au router'
          },
          state2: {
            text: 'Verifiez si le dispositif est connecté et en mode point d\'accès. LED Ap fixe.'
          },
          state3: {
            text: 'Choisissez le processus d\'association',
            assisted: 'Assisté',
            wps: 'WPS'
          },
          state4: {
            text: 'Modifiez votre réseau WiFi sur les paramètres de votre dispositif par le réseau qui commence par :',
            text4: 'Le mot de passe du réseau est : 123456789',
            loading_text: 'Mise à jour du réseau en cours. Veuillez patienter, s\'il vous plaît...'
          },
          state5: {
            text: 'Choisissez le router à associer :',
            loading_text: 'Connexion au dispositif en cours. Veuillez patienter s\'il vous plaît....',
            loading_text2: '(Si l\'opération prend plus d\'une minute, vérifiez que la connexion du dispositif est la correcte)',
            low_signal: {
              title: 'Réseau insuffisant',
              text: 'Approchez le WebServer au routeur ou installez un amplificateur Wifi pour améliorer le signal'
            }
          },
          state6: {
            text: 'Choisissez le type de sécurité de votre réseau WiFi et saisissez votre mot de passe',
            text2: 'Introduisez les données de votre réseau Wi-Fi',
            none: 'Sans sécurité',
            wep: 'WEP',
            wpa: 'WPA/WPA2',
            pass: 'Mot de passe',
            name: 'Nom'
          },
          state7: {
            text: 'Données de votre configuration de réseau',
            ip: 'IP',
            port: 'Passerelle',
            masc: 'Masque de réseau',
            manual: 'MANUEL',
            dhcp: 'DHCP',
            loading_text: 'Configuration du DKN WServer en cours. Veuillez patienter, s\'il vous plaît...'
          },
          state8: {
            text: 'Une fois associé, la LED Ap continuera à clignoter lentement.'
          },
          state9: {
            text: 'Processus exécuté correctement'
          },
          state21: {
            text1: 'Appuyez sur la touche de configuraton WPS du router.',
            text2: 'Peut être identifié avec le symbole suivant.'
          },
          state22: {
            text1: 'Appuyez sur la touche de configuraton WPS du dispositif jusce qu\'à ce que la LED Ap change.',
            text2: 'Le LED Ap clignotera lentement une fois que sera associé.'
          },
          state41: {
            title: 'Sectionnez la méthode d\'appairage du routeur',
            auto_info: 'Automatique. Il cherche automatiquement les réseaux Wifi qui sont proches de votre Serveur Web.',
            manual_info: 'Manuel. Il introduit les données du réseau Wifi que vous souhaitez manuellement.',
            auto: 'Automatique',
            manual: 'Manuel'
          }
        },
        buttons: {
          sign_in: 'Connexion',
          cancel: 'Annuler',
          init: 'Commencer',
          send: 'Envoyer',
          save: 'Enregistrer',
          save_installation: 'Ajouter installation',
          accept: 'Accepter',
          resend_confirmation: 'Renvoyer confirmation',
          back: 'Retourner',
          icon: 'Icône',
          unsubscribe: 'Se désinscrire',
          remove: 'Supprimer',
          restore_factory: 'Réinitialiser',
          next: 'Suivant',
          prev: 'Précedant',
          close: 'Fermer',
          recharge: 'Actualiser',
          hide: 'Cacher',
          'continue': 'Continuer',
          exit: 'Sortir',
          help: 'Aide',
          modify: 'Modifier',
          contact: 'Contact'
        },
        devices: {
          warnings: {
            installer: 'Installateur',
            text: 'Code erreur :'
          },
          alert_installer_modal: {
            name_placeholder: 'Indiquez votre prénom',
            phone_placeholder: 'Indiquez votre téléphone',
            send_button: 'Notifier à l\'installateur',
            user_params: 'Indiquez vos données de contact :',
            installer_params: 'Contacter avec l\'installateur',
            success_title: 'Avertissement pour votre installateur',
            success_message: 'Un email a été envoyé à votre installateur correctement. Veuillez attendre un délai raisonnable avant de renvoyer un avertissement sur son dispositif.',
            error: {
              name: 'Vous devez indiquer votre nom',
              phone: 'Vous devez indiquer votre téléphone'
            },
            no_email: 'Les données de l\'installateur ne sont pas précisées, et nous ne pouvons pas envoyer un avertissement. Si vous voulez l\'envoyer, vous devez le préciser sur les paramètres de l\'installation.'
          },
          adjusts: {
            name: 'Nom',
            mac: 'MAC',
            pin: 'PIN',
            installation: 'Installation',
            device: 'Données de l\'unité',
            name_text: 'Nom du dispositif',
            installation_text: 'Installation associée au dispositif. Vous pouvez modifier l\'installation du dispositif lorsque vous avez permis sur cette installation.',
            links: {
              adjust: 'Réglages',
              params: 'Paramètres'
            },
            model_device: 'Modèle de l\'unité',
            sleep: 'Temporisateur de veille',
            min_temp_unoccupied: 'Température minimale d\'inoccupé',
            min_temp_unoccupied_text: 'Définit la température minimale lorsque le système a le mode inoccupé activé',
            max_temp_unoccupied: 'Température maximale d\'inoccupé',
            max_temp_unoccupied_text: 'Définit la température maximale lorsque le système a le mode inoccupé activé',
            sleep_time: 'Temporisateur de veille',
            sleep_time_text: 'Définit la période d\'attente avant de désactiver l\'installation'
          },
          schedules: {
            init: 'Début',
            days: 'Jours',
            monday: 'L',
            tuesday: 'M',
            wednesday: 'M',
            thursday: 'J',
            friday: 'V',
            saturday: 'S',
            sunday: 'D',
            add_schedule: 'Ajouter Programmation',
            schedules_types: 'Types de programmation',
            on_off: 'On / Off',
            mode: 'Mode',
            start_mode: 'Mode Début',
            close: 'Fermer',
            remove: 'Supprimer',
            save: 'Enregistrer',
            hour: 'Heure',
            new_prog: 'Nouvelle programmation',
            edit_prog: 'Éditer programmation',
            schedules_name: 'Nom',
            all_devices: 'Tous les équipéments',
            waiting_title: 'Création de programmations en cours',
            waiting_text: 'En ce moment, les programmations sont en train d\'être créées. Ce processus peut prendre queleques secondes jusqu\'à la création dans tous les DKN WServer.',
            days_error: 'Vous devez choisir un jour'
          }
        },
        devise: {
          confirmations: {
            confirmed: 'Votre adresse email a été confirmée avec succès.',
            send_instructions: 'Vous recevrez un mail avec les instructions pour confirmer votre adresse email dans quelques minutes.',
            send_paranoid_instructions: 'Si votre adresse email se trouve dans notre base de données, vous recevrez un mail avec les instructions pour confirmer votre adresse email dans quelques minutes.'
          },
          failure: {
            already_authenticated: 'Vous êtes déjà inscrit.',
            inactive: 'Votre compte n\'est pas encore activé.',
            invalid: 'L\'adresse email ou le mot de passe ne sont pas valables.',
            locked: 'Votre compte est bloqué.',
            last_attempt: 'Vous ne disposez que d\'un dernier essai avant que votre compte ne soit bloqué.',
            not_found_in_database: 'L\'adresse email ou le mot de passe ne sont pas valables.',
            timeout: 'Votre session a expirée. Veuillez vous connecter à nouveau pour continuer.',
            unauthenticated: 'Il est nécessaire que vous soyez inscrit afin de pouvoir continuer.',
            unconfirmed: 'Il est nécessaire que vous confirmiez votre email pour continuer.'
          },
          mailer: {
            confirmation_instructions: {
              subject: 'Instructions de confirmation.'
            },
            reset_password_instructions: {
              subject: 'Instructions pour récupérer le mot de passe'
            },
            unlock_instructions: {
              subject: 'Instructions pour débloquer votre compte'
            }
          },
          omniauth_callbacks: {
            failure: 'Impossible de vous identifier sur %{kind} à cause de "%{reason}".',
            success: 'Vous avez été identifié avec succès, du compte %{kind}.'
          },
          passwords: {
            no_token: 'Vous ne pouvez pas accéder à ce site que par le mail de récupération votre mot de passe. Dans l\'affirmative, assurez-vous que l\'URL soit correcte.',
            send_instructions: 'Vous recevrez un lien avec les instructions pour récupérer votre mot de passse dans quelques minutes.',
            send_paranoid_instructions: 'Si votre adresse email existe déjà sur notre base de données, vous recevrez un lien pour récupérer votre mot de passe dans quelques minutes.',
            updated: 'Votre mot de passe a été modifié avec succès. Vous êtes déjà connecté.',
            updated_not_active: 'Votre mot de passe a été modifié avec succès.'
          },
          registrations: {
            destroyed: 'Votre compte a été supprimé avec succès. Nous espérons vous revoir très tôt. À bientôt !',
            signed_up: 'Bienvenue ! Votre inscription a été complétée avec succès.',
            signed_up_but_inactive: 'Votre inscription a été complétée avec succès. Cependant, vous ne pouvez pas vous inscrire puisque votre compte n\'est pas encore activé.',
            signed_up_but_locked: 'Votre inscription a été complétée avec succès. Cependant, vous ne pouvez pas vous inscrire puisque votre compte est bloqué.',
            signed_up_but_unconfirmed: 'Un message avec un lien de confirmation vous sera envoyé à votre adresse email. Veuillez cliquer sur ce lien pour activer votre compte.',
            update_needs_confirmation: 'Votre compte a été mis à jour avec succès, mais il est nécessaire que nous vérifions votre adresse email. S\'il vous plaît, vérifiez votre email et cliquez sur le lien de confirmation pour confirmer votre adresse email.',
            updated: 'Votre compte a été mis à jour avec succès.'
          },
          sessions: {
            signed_in: 'Vous êtes connecté avec succès.',
            signed_out: 'Vous avez fermé votre session avec succès.',
            already_signed_out: 'Vous avez fermé votre session avec succès.'
          },
          unlocks: {
            send_instructions: 'Vous recevrez un mail avec les instructions pour débloquer votre compte dans quelques minutes.',
            send_paranoid_instructions: 'Si votre adresse de courrier électronique se trouve déjà sur notre base de données, vous recevrez un mail avec les instructions pour débloquer votre compte dans quelques minutes.',
            unlocked: 'Votre compte a été débloqué avec succès. Veuillez vous connecter pour continuer.'
          }
        },
        errors: {
          messages: {
            already_confirmed: 'Mail confirmé précédemment. Essayez de vous connecter.',
            confirmation_period_expired: 'Il est nécessaire de confirmer le mail dans %{period}, veuillez demander une nouvelle confirmation.',
            expired: 'La confirmation a expiré ;  veuillez demander une nouvelle confirmation.',
            not_found: 'Nous sommes désolés, mais il n\'existe pas de compte lié à cette adresse email',
            not_locked: 'Le mail n\'est pas bloqué',
            not_saved: {
              one: '1 erreur a empêché que %{resource} soit sauvegardé correctement:',
              other: '%{count} erreurs ont empêché que %{resource} soit sauvegardé correctement:'
            }
          }
        },
        error: {
          internal: {
            title: 'Erreur interne',
            body: 'Votre action n\'a pas pu être terminée. Veuillez essayer à nouveau plus tard.'
          }
        },
        errors_page: {
          page_404: {
            title: 'Page non trouvée',
            text: 'Nous sommes désolés, nous ne pouvons pas trouver la page que vous cherchez.',
            button: 'Retourner sur la page d\'accueil'
          },
          page_403: {
            title: 'Accès interdit',
            text: 'Nous sommes désolés, vous n\'êtes pas autorisé pour accéder à cette zone.',
            button: 'Retourner sur la page d\'accueil'
          }
        },
        email: 'Email',
        name: 'Prénom',
        surname: 'Nom',
        password: 'Mot de passe',
        new_password: 'Nouveau mot de passe',
        repeat_password: 'Répéter mot de passe',
        server: 'Serveur',
        state: 'Statut',
        enabled: 'Habilité',
        sleeping: 'Disponible',
        connected: 'Connecté',
        activated: 'Activé',
        components: 'Composants',
        historic: 'Historique',
        system: 'Système',
        filters: 'Filtres',
        mac: 'Mac',
        locality: 'Localité',
        all: 'Tous',
        pin: 'PIN',
        status: 'Statut',
        support: 'Soutien',
        videos: 'Vidéos',
        documents: 'Documents',
        home: {
          menu: {
            installations: 'Installations',
            adjusts: 'Utilisateur',
            help: 'Aide',
            admin: 'Serveurs',
            exit: 'Déconnexion',
            admin_users: 'Utilisateurs',
            support: 'Support'
          },
          upload: {
            title: 'Une nouvelle version de DKN Cloud est disponible',
            description: 'S\'il vous plait mettez à jour l\'application afin de pouvoir l\'utiliser.'
          },
          maintenance: {
            title: 'Ce site est temporairement en maintenance',
            description: 'Ce site est actuellement en cours de maintenance.',
            text: 'l sera bientôt disponible.'
          }
        },
        list_installations: {
          edit: 'Éditer',
          close: 'Fermer'
        },
        edit_installation: {
          installator: {
            title: 'Données de l\'installateur',
            name: 'Nom',
            phone: 'Téléphone',
            email: 'Email'
          }
        },
        installation: {
          temp: 'TEMPÉRATURE',
          months: {
            0: 'JAN',
            1: 'FÉV',
            2: 'MAR',
            3: 'AVR',
            4: 'MAI',
            5: 'JUN',
            6: 'JUL',
            7: 'AOÛ',
            8: 'SEP',
            9: 'OCT',
            10: 'NOV',
            11: 'DÉC'
          },
          days: {
            0: 'Dimanche',
            1: 'Lundi',
            2: 'Mardi',
            3: 'Mercredi',
            4: 'Jeudi',
            5: 'Vendredi',
            6: 'Samedi'
          },
          modes: {
            header: 'Modes de fonctionnement',
            cool: 'Refroidissement',
            heat: 'Chauffage',
            ventilate: 'Ventilation',
            'ventilate-cold': 'Ventilation refroidissement',
            'heat-cold-auto': 'Automatique',
            dehumidify: 'Deshumidification',
            'cool-air': 'Refroidissement automatique',
            'heat-air': 'Chauffage automatique',
            'ventilate-heat': 'Ventilation chauffage'
          },
          velocity: {
            header: 'Vitesse de l\'air',
            'velocity-0': 'Auto',
            'velocity-1': 'Très faible',
            'velocity-2': 'Faible',
            'velocity-3': 'Moyenne',
            'velocity-4': 'Moyenne-forte',
            'velocity-5': 'Forte'
          },
          vertical: {
            header: 'Inclination verticale',
            'vertical-0000': 'Inclination 1',
            'vertical-0001': 'Inclination 2',
            'vertical-0010': 'Inclination 3',
            'vertical-0011': 'Inclination 4',
            'vertical-0100': 'Inclination 5',
            'vertical-0111': 'Swing'
          },
          horizontal: {
            header: 'Inclination horizontale',
            'horizontal-0000': 'Inclination 1',
            'horizontal-0001': 'Inclination 2',
            'horizontal-0010': 'Inclination 3',
            'horizontal-0011': 'Inclination 4',
            'horizontal-0100': 'Inclination 5',
            'horizontal-0111': 'Swing'
          },
          scenary: {
            header: 'Scéne',
            occupied: 'Occupé',
            vacant: 'Inoccupé',
            sleep30: 'Arrêt automatique 30\'',
            sleep60: 'Arrêt automatique 60\'',
            sleep90: 'Arrêt automatique 90\'',
            sleep: 'Arrêt automatique'
          },
          modal: {
            name: 'Nom de l\'installation',
            location: 'Localisation',
            icon: 'Icône',
            users: 'Utilisateurs',
            installer: 'Données de l\'installateur',
            installer_name: 'Nom',
            installer_phone: 'Téléphone',
            installer_email: 'Email',
            add_user: 'Ajouter utilisateur',
            save: 'Sauvegarder les modifications',
            remove: 'Supprimer installation',
            cancel: 'Annuler',
            unoccupied: 'Température inoccupé',
            unoccupied_min_temp: 'Temp. inoccupé chauffage',
            unoccupied_max_temp: 'Temp. inoccupé refroidissement',
            name_error: 'Vous devez préciser un nom pour l\'installation',
            location_error: 'Vous devez préciser une localisation pour l\'installation',
            type: 'Type d\'installation',
            type_home: 'Résidentielle',
            type_commercial: 'Commerciale',
            type_business: 'Bureau',
            type_others: 'Autres',
            postal_code: 'Code Postal',
            sleep_time: 'Temporisateur Veille',
            links: {
              adjust: 'Réglages',
              params: 'Paramètres',
              users: 'Utilisateurs'
            },
            new_user: {
              title: 'Ajouter utilisateur à l\'installation',
              name: 'Prénom',
              surname: 'Nom',
              email: 'Email',
              avanced: 'Utilisateur avancé',
              name_blank: 'Vous devez préciser un prénom pour l\'utilisateur',
              surname_blank: 'Vous devez préciser un nom pour l\'utilisateur',
              email_blank: 'Vous devez préciser un email pour l\'utilisateur',
              email_invalid: 'Le email n\'est pas valable'
            },
            help: {
              name: 'Nom',
              name_text: 'Permet de modifier le nom de l\'installation',
              location: 'Localisation',
              location_text: 'Permet de modifier la localisation de l\'installation',
              icon: 'Icône',
              icon_text: 'Permet de modifier l\'icône de l\'installation',
              users: 'Utlisateurs',
              users_text: 'Permet de gérer les utilisateurs qui peuvent employer l\'application',
              installer: 'Installateur',
              installer_text: 'Données de l\'installateur qui permettront de connecter avec l\'installateur en cas d\'incidence',
              postal_code: 'Code Postal',
              postal_code_text: 'Code postal du lieu où se trouve l\'installation',
              type: 'Type d\'installation',
              type_text: 'Définit le type d\'installation',
              min_temp_unoccupied: 'Température minimale d\'inoccupé',
              min_temp_unoccupied_text: 'Définit la température minimale lorsque le système a le mode inoccupé activé',
              max_temp_unoccupied: 'Température maximale de inoccupé',
              max_temp_unoccupied_text: 'Définit la température maximale lorsque le système a le mode inoccupé activé',
              sleep_time: 'Temporisateur',
              sleep_time_text: 'Définit la période d\'attente avant de désactiver l\'installation'
            }
          }
        },
        login: {
          restore_password: 'Rappeler mot de passe',
          demo: 'Démo',
          router: 'Associer router'
        },
        register: {
          sign_up: 'Créer un compte'
        },
        complete_registration: {
          title: 'Complétez votre inscription'
        },
        mailers: {
          confirmation: {
            welcome: 'Bienvenue à DZK WServer,',
            text: 'Pour compléter votre inscription, vous devez confirmer votre adresse email en cliquant sur le lien :',
            confirm: 'Confirmer inscription sur DZK WServer :'
          },
          reset_password: {
            welcome: 'Salut',
            text: 'Si vous avez oublié votre mot de passe, pas de souci, cela peut arriver à tout le monde. Pour modifier votre mot de passe, cliquez sur ce lien.',
            change_password: 'modifier mot de passe',
            subject: 'Vous avez été invité à rejoindre DZK WServer'
          },
          complete_registration: {
            title: 'Completez votre inscription sur DZK WServer',
            text: 'Un utilsateur vous a invité à gérer une installation sur DZK WServer. Veuillez compléter votre inscription pour accéder à la plate-forme et la gérer.',
            link: 'Compléter inscription',
            subject: 'Invitation à la plate-forme DZK WServer'
          },
          invitation: {
            title: 'Accédez à DZK WServer',
            text: 'Un utilisateur vous a invité à gérer une installation sur DZK WServer. Veuillez compléter votre inscription pour accéder à la plate-forme et la gérer.',
            link: 'Accédez à DZK WServer',
            subject: 'Invitation pour gérer une installation sur DZK WServer'
          },
          alert_installer: {
            subject: 'Alerte d\'un problème sur un dispositif DZK WServer',
            text: 'Un utlisateur a signalé un problème sur votre dispositif.',
            title: 'Problème signalé avec un dispositif',
            user_name: 'Nom de l\'utilisateur',
            user_phone: 'Téléphone de l\'utilisateur',
            error: 'Erreur'
          }
        },
        messages: {
          errors: {
            name_blank: 'Le champ prénom ne peut pas rester vide',
            surname_blank: 'Le champ nom ne peut pas rester vide',
            login: 'Désolé, l\'adresse email ou le mot de passe est incorrect',
            email: 'Désolé, l\'adresse email indiquée est incorrecte',
            email_blank: 'Le champ adresse email ne peut pas rester vide',
            email_taken: 'L\'adresse email existe déjà',
            password_length: 'Le mot de passe doit contenir au moins 8 caractères',
            password_blank: 'Le champ mot de passe ne peut pas rester vide',
            password_confirmation_check: 'Désolé, les mots de passe doivent correspondre',
            password_confirmation_blank: 'Veuillez valider votre mot de passe',
            password_new_length: 'Le nouvel mot de passe doit contenir au moins 8 caractères',
            password_new_blank: 'le nouvel mot de passe ne peut pas rester vide',
            invalid_old_password: 'Le mot de passe actuel introduit n\'est pas correct.',
            condition: 'Veuillez accepter les conditions d\'utilisation',
            token_invalid: 'Le code d\'activation est erroné. Veuillez demander un nouveau code en cliquant sur Rappeler mot de passe.',
            email_not_exist: 'Désolé, il n\'existe aucun compte associé à cette adresse email',
            confirmation: 'Une erreur s\'est produite lors de la confirmation. Veuillez remplir le formulaire et un nouveau email de confirmation vous sera envoyé.',
            unconfirmed: 'Adresse email non confirmée !',
            device_blank: 'Indiquez un nom pour votre unité',
            installation_blank: 'Indiquez un nom pour votre installation',
            mac_blank: 'Indiquez l\'adresse MAC de votre unité',
            mac_invalid: 'Vérifiez que la MAC a été introduite correctement. ',
            mac_format: 'Le format de l\'adresse MAC est incorrect',
            mac_repeated: 'L\'adresse MAC est déjà active sur une autre unité',
            pin_blank: 'Saisissez le code PIN de votre unité',
            pin_invalid: 'Le code PIN saisi n\'est pas correct.',
            server_sleeping: 'Vérifiez que votre dispositif soit connecté au router, et que ce dernier ait connexion sur internet.',
            device_taken: 'La MAC demandée a été déjà enregistrée sur le Cloud.',
            location_blank: 'Indiquez la localité où se trouve votre installation',
            icon_blank: 'Choisissez une icône pour répresenter votre installation',
            file_error: 'Le fichier que vous tentez d\'importer est incorrect. Les formats supportés sont xls, xlsx et csv.',
            must_select_file: 'Selectionez un fichier',
            not_connected: 'Actuellement vous n\'avez pas de connexion Internet. Les actions réalisées n\'auront aucun effet sur votreDKN WServer. Lorsque la connexion est disponible, actualisez le site et réessayez.',
            not_connected_title: 'Alerte sur votre connexion Internet',
            not_connected_device: 'Votre DKN WServer n\'est pas connecté au réseau actuellement:',
            not_connected_devices: 'Vos DKN WServers ne sont pas connecté au réseau actuellement:',
            not_connected_device_title: 'Alerte sur la connexion de votre dispositif',
            error_device: 'Une erreur s\'est produite sur votre dispositif. Si ce message persiste, veuillez contacter votre installateur.',
            registration_already_completed: 'Vous êtes déjà inscrit. Veuillez ouvrir la session en utilisant votre nom d\'utilisateur et votre mot de passe.',
            user_taken: 'Le nom d\'utilisateur est déjà associé au serveur',
            not_permission_title: 'Permission refusée',
            not_permission: 'Votre nom d\'utilisateur n\'a pas de permission pour accéder à cette option.',
            not_permission_new_schedule: 'Le nombre maximal de programmations disponibles a été atteint (24), s\'il vous plait, supprimez une programmation existante de manière à en créer une nouvelle.',
            without_internet_title: 'Connexion Internet',
            without_internet_text: 'Cette application nécessite une connexion Internet pour fonctionner S\'il vous plaît connecter votre appareil et essayez à nouveau.',
            mac_length_seek: 'Minimum 4 chiffres requis',
            email_length_seek: 'Minimum 3 caractères requis',
            machine_error_11_title: 'Erreur de connexion avec l\'unité',
            machine_error_11_text: 'Vérifiez la connexion sur les ports P1 et P2 de l\'unité.',
            backend_error: 'Votre demande n\'a pas pu être traitée, veuillez réessayer plus tard.'
          },
          success: {
            register: 'Votre inscription a été enregistrée correctement !',
            send_reset_password: 'Vous recevrez un email avec les instructions pour redéfinir votre mot de passe.',
            reset_password: 'Votre mot de passe a bien été modifié.',
            resend_confirmation: 'Nous avons envoyé un nouveau email de confirmation sur votre adresse email.',
            user_device_added: 'La connexion avec l\'unité a bien été établie. Vous pourrez accéder à travers la fenêtre des installations.',
            user_device_updated: 'Les informations du l\'untité ont bien été actualisées.',
            restore_factory: 'Le serveur a été réinitialisé.',
            remove_installation_confirmation: 'Êtes-vous sûr que vous désirez supprimer l\'installation?',
            remove_device_confirmation: 'Êtes-vous sûr que vous désirez supprimer le DKN Webserver?',
            remove_last_device_confirmation: 'Si vous effectuez cette action, votre installation sera supprimée. Voulez-vous réaliser cette action ?',
            remove_installation_without_devices: 'Il n’y a aucun Webserver DKN associé à l’installation. Si vous sortez vous perdrez les données de l’installation. Vous voulez continuer?',
            remove_user_confirmation: '¿Êtes-vous sûr que vous désirez supprimer l\'accès de l\'installation à l\'utilisateur ?',
            confirmed: 'Email confirmé. Vous devez vous connecter pour accéder à la plateforme'
          },
          info: {
            has_email: '¡Vous avez un mail !!',
            go_login: 'S\'adresser à l\'écran Login',
            reset_password: 'Revenez sur l\'écran Login et saisissez votre email et votre nouveau mot de passe pour vous connecter.',
            change_password: 'Tapez et répétez votre nouveau mot de passe.',
            send_reset_password: 'Hey, ça arrive à tout le monde. Juste indiquez-nous votre adresse email et nous vous enverrons un email avec les instructions pour modifier votre mot de passe.',
            register_success: 'Nous avons envoyé un email à votre adresse pour vérifier votre identité.',
            complete_registration_success: 'Inscription a bien été faite. Vous pouvez vous connecter et accéder à la gestion de votre DKN WServer.',
            resend_confirmation: 'Saisissez votre adresse email et nous vous enverrons un nouveau email de confirmation.',
            unconfirmed: 'Vous devez confirmer votre email avant de vous connecter',
            remove_server_admin: {
              question: 'Voulez-vous supprimer ce serveur ?',
              info: 'Toutes les données associées à ce serveur seront supprimées.'
            },
            restore_server_admin: {
              question: 'Voulez-vous restaurer les valeurs d\'usine de ce serveur ?',
              info: 'Toutes les données associées à ce serveur seront réinitialisées.'
            },
            browsers: 'Désolé, le navigateur que vous utilisez n\'est pas compatible avec notre application ou est désuet. Si vous voulez utiliser l\'application, veuillez installer ou mettre à jour un des navigateurs suivants.',
            firmware_updated: 'La requête d’actualisation du firmware a été correctement envoyée',
            remove_schedule: 'Êtes-vous sûr de vouloir supprimer la programmation définitivement ?',
            disable_permission_device: 'Le DKN WServer nécessite au moins un utilisateur'
          },
          title: {
            reset_password: 'Rappeler mot de passe',
            change_password: 'Modifier mot de passe',
            resend_confirmation: 'Renvoyer confirmation',
            user_device_added: 'Unité créée correctement',
            user_device_updated: 'Unité mise à jour correctement',
            add_device: 'Ajouter DKN WServer',
            server_data: 'Données du serveur',
            remove_server: 'Supprimer serveur',
            restore_factory: 'Restaurer serveur d\'usine',
            remove_installation_confirm: 'Supprimer installation',
            remove_user_confirm: 'Supprimer utilisateur de l\'installation',
            firmware_updated: 'Firmware actualisé',
            device_permissions: 'Des permissions DKN WServer',
            installation_permissions: 'Des permissions de l\'installation'
          }
        },
        servers: {
          no_results: 'Aucun serveur trouvé',
          tags: {
            servers: 'serveurs',
            results: 'résultats',
            page: 'Page',
            of: ' de ',
            update: 'Mettre à jour'
          },
          'new': {
            add_servers: 'Ajouter serveurs',
            'return': 'Retourner',
            from_file: 'Du fichier',
            select_file: 'Selectionnez un fichier',
            select_file2: 'Sélectionnez un fichier',
            from_form: 'Du formulaire',
            success_add2: 'Ils ont été ajouté correctement',
            success_add_f2: 'serveurs',
            success_add1: 'Il a été ajouté correctement',
            success_add_f1: 'serveur',
            failure_add1: 'Impossible d\'ajouter le serveur suivant',
            failure_add2: 'Impossible d\'ajouter les serveurs',
            failure_add_f2: 'suivants',
            accept: 'Accepter',
            success: {
              added: 'Serveur ajouté correctement',
              added2: 'Le serveur a bien été enregistré sur la plate-forme'
            }
          },
          remove: {
            message: 'Serveur supprimé',
            confirmation_deleted: 'Serveur supprimé avec succès'
          }
        },
        terms: {
          accept: 'J\'accepte les ',
          legal_terms: 'Conditions d\'utilisation',
          and: ' et la ',
          privacy: 'Politique de confidentialité',
          publicity: 'Je désire pas recevoir de communications'
        },
        installation_relation_list: {
          title: 'Installations',
          no_installations_title: 'Bienvenue !',
          no_installations_info: 'Pour commencer à contrôler votre installation, veuillez ajouter un serveur à votre compte.',
          internal_error: 'Erreur interne',
          internal_error_message: 'Votre action n\'a pas pu être terminée. Veuillez essayer à nouveau plus tard.',
          actions: {
            edit: 'Éditer',
            close: 'Près',
            add_device: 'Ajouter équipe'
          }
        },
        add_device: {
          name_placeholder: 'Nom (cuisine, salon, chambre)',
          mac_placeholder: 'MAC (12:AB:34:CD:45:F0)',
          pin_placeholder: 'PIN',
          choose_installation: 'Choisissez une installation',
          add_device: 'Indiquez l\'équipe'
        },
        add_installation: {
          add_installation: 'Ajouter installation',
          name_placeholder: 'Nom (maison, bureau, etc.)',
          location_placeholder: 'Localité d\'emplacement de l\'installation',
          postal_code_placeholder: 'Code postal',
          type: 'Type d\'installation'
        },
        users: {
          title: 'Utilisateurs',
          basic: 'de base',
          advanced: 'avancé'
        },
        admin_users: {
          title: 'UTILISATEURS',
          email: 'Email',
          name: 'Nom',
          results: 'Résultats',
          no_results: 'Aucun résultat trouvé',
          page: 'Page',
          of: 'de',
          device_modal: {
            title: 'Unités accesibles pour l\'utilisateur',
            no_devices: 'L\'utilisateur n\'a accès à aucun équipe',
            location: 'Localisation'
          }
        }
      },
      it: {
        faker: {
          address: {
            city_prefix: [
              'San',
              'Borgo',
              'Sesto',
              'Quarto',
              'Settimo'
            ],
            city_suffix: [
              'a mare',
              'lido',
              'ligure',
              'del friuli',
              'salentino',
              'calabro',
              'veneto',
              'nell\'emilia',
              'umbro',
              'laziale',
              'terme',
              'sardo'
            ],
            country: [
              'Afghanistan',
              'Albania',
              'Algeria',
              'American Samoa',
              'Andorra',
              'Angola',
              'Anguilla',
              'Antartide (territori a sud del 60° parallelo)',
              'Antigua e Barbuda',
              'Argentina',
              'Armenia',
              'Aruba',
              'Australia',
              'Austria',
              'Azerbaijan',
              'Bahamas',
              'Bahrain',
              'Bangladesh',
              'Barbados',
              'Bielorussia',
              'Belgio',
              'Belize',
              'Benin',
              'Bermuda',
              'Bhutan',
              'Bolivia',
              'Bosnia e Herzegovina',
              'Botswana',
              'Bouvet Island (Bouvetoya)',
              'Brasile',
              'Territorio dell\'arcipelago indiano',
              'Isole Vergini Britanniche',
              'Brunei Darussalam',
              'Bulgaria',
              'Burkina Faso',
              'Burundi',
              'Cambogia',
              'Cameroon',
              'Canada',
              'Capo Verde',
              'Isole Cayman',
              'Repubblica Centrale Africana',
              'Chad',
              'Cile',
              'Cina',
              'Isola di Pasqua',
              'Isola di Cocos (Keeling)',
              'Colombia',
              'Comoros',
              'Congo',
              'Isole Cook',
              'Costa Rica',
              'Costa d\'Avorio',
              'Croazia',
              'Cuba',
              'Cipro',
              'Repubblica Ceca',
              'Danimarca',
              'Gibuti',
              'Repubblica Dominicana',
              'Equador',
              'Egitto',
              'El Salvador',
              'Guinea Equatoriale',
              'Eritrea',
              'Estonia',
              'Etiopia',
              'Isole Faroe',
              'Isole Falkland (Malvinas)',
              'Fiji',
              'Finlandia',
              'Francia',
              'Guyana Francese',
              'Polinesia Francese',
              'Territori Francesi del sud',
              'Gabon',
              'Gambia',
              'Georgia',
              'Germania',
              'Ghana',
              'Gibilterra',
              'Grecia',
              'Groenlandia',
              'Grenada',
              'Guadalupa',
              'Guam',
              'Guatemala',
              'Guernsey',
              'Guinea',
              'Guinea-Bissau',
              'Guyana',
              'Haiti',
              'Heard Island and McDonald Islands',
              'Città del Vaticano',
              'Honduras',
              'Hong Kong',
              'Ungheria',
              'Islanda',
              'India',
              'Indonesia',
              'Iran',
              'Iraq',
              'Irlanda',
              'Isola di Man',
              'Israele',
              'Italia',
              'Giamaica',
              'Giappone',
              'Jersey',
              'Giordania',
              'Kazakhstan',
              'Kenya',
              'Kiribati',
              'Korea',
              'Kuwait',
              'Republicca Kirgiza',
              'Repubblica del Laos',
              'Latvia',
              'Libano',
              'Lesotho',
              'Liberia',
              'Libyan Arab Jamahiriya',
              'Liechtenstein',
              'Lituania',
              'Lussemburgo',
              'Macao',
              'Macedonia',
              'Madagascar',
              'Malawi',
              'Malesia',
              'Maldive',
              'Mali',
              'Malta',
              'Isole Marshall',
              'Martinica',
              'Mauritania',
              'Mauritius',
              'Mayotte',
              'Messico',
              'Micronesia',
              'Moldova',
              'Principato di Monaco',
              'Mongolia',
              'Montenegro',
              'Montserrat',
              'Marocco',
              'Mozambico',
              'Myanmar',
              'Namibia',
              'Nauru',
              'Nepal',
              'Antille Olandesi',
              'Olanda',
              'Nuova Caledonia',
              'Nuova Zelanda',
              'Nicaragua',
              'Niger',
              'Nigeria',
              'Niue',
              'Isole Norfolk',
              'Northern Mariana Islands',
              'Norvegia',
              'Oman',
              'Pakistan',
              'Palau',
              'Palestina',
              'Panama',
              'Papua Nuova Guinea',
              'Paraguay',
              'Peru',
              'Filippine',
              'Pitcairn Islands',
              'Polonia',
              'Portogallo',
              'Porto Rico',
              'Qatar',
              'Reunion',
              'Romania',
              'Russia',
              'Rwanda',
              'San Bartolomeo',
              'Sant\'Elena',
              'Saint Kitts and Nevis',
              'Saint Lucia',
              'Saint Martin',
              'Saint Pierre and Miquelon',
              'Saint Vincent and the Grenadines',
              'Samoa',
              'San Marino',
              'Sao Tome and Principe',
              'Arabia Saudita',
              'Senegal',
              'Serbia',
              'Seychelles',
              'Sierra Leone',
              'Singapore',
              'Slovenia',
              'Isole Solomon',
              'Somalia',
              'Sud Africa',
              'Georgia del sud e South Sandwich Islands',
              'Spagna',
              'Sri Lanka',
              'Sudan',
              'Suriname',
              'Svalbard & Jan Mayen Islands',
              'Swaziland',
              'Svezia',
              'Svizzera',
              'Siria',
              'Taiwan',
              'Tajikistan',
              'Tanzania',
              'Tailandia',
              'Timor-Leste',
              'Togo',
              'Tokelau',
              'Tonga',
              'Trinidad e Tobago',
              'Tunisia',
              'Turchia',
              'Turkmenistan',
              'Isole di Turks and Caicos',
              'Tuvalu',
              'Uganda',
              'Ucraina',
              'Emirati Arabi Uniti',
              'Regno Unito',
              'Stati Uniti d\'America',
              'United States Minor Outlying Islands',
              'Isole Vergini Statunitensi',
              'Uruguay',
              'Uzbekistan',
              'Vanuatu',
              'Venezuela',
              'Vietnam',
              'Wallis and Futuna',
              'Western Sahara',
              'Yemen',
              'Zambia',
              'Zimbabwe'
            ],
            building_number: [
              '###',
              '##',
              '#'
            ],
            street_suffix: [
              'Piazza',
              'Strada',
              'Via',
              'Borgo',
              'Contrada',
              'Rotonda',
              'Incrocio'
            ],
            secondary_address: [
              'Appartamento ##',
              'Piano #'
            ],
            postcode: [
              '#####'
            ],
            state: [
              'Agrigento',
              'Alessandria',
              'Ancona',
              'Aosta',
              'Arezzo',
              'Ascoli Piceno',
              'Asti',
              'Avellino',
              'Bari',
              'Barletta-Andria-Trani',
              'Belluno',
              'Benevento',
              'Bergamo',
              'Biella',
              'Bologna',
              'Bolzano',
              'Brescia',
              'Brindisi',
              'Cagliari',
              'Caltanissetta',
              'Campobasso',
              'Carbonia-Iglesias',
              'Caserta',
              'Catania',
              'Catanzaro',
              'Chieti',
              'Como',
              'Cosenza',
              'Cremona',
              'Crotone',
              'Cuneo',
              'Enna',
              'Fermo',
              'Ferrara',
              'Firenze',
              'Foggia',
              'Forlì-Cesena',
              'Frosinone',
              'Genova',
              'Gorizia',
              'Grosseto',
              'Imperia',
              'Isernia',
              'La Spezia',
              'L\'Aquila',
              'Latina',
              'Lecce',
              'Lecco',
              'Livorno',
              'Lodi',
              'Lucca',
              'Macerata',
              'Mantova',
              'Massa-Carrara',
              'Matera',
              'Messina',
              'Milano',
              'Modena',
              'Monza e della Brianza',
              'Napoli',
              'Novara',
              'Nuoro',
              'Olbia-Tempio',
              'Oristano',
              'Padova',
              'Palermo',
              'Parma',
              'Pavia',
              'Perugia',
              'Pesaro e Urbino',
              'Pescara',
              'Piacenza',
              'Pisa',
              'Pistoia',
              'Pordenone',
              'Potenza',
              'Prato',
              'Ragusa',
              'Ravenna',
              'Reggio Calabria',
              'Reggio Emilia',
              'Rieti',
              'Rimini',
              'Roma',
              'Rovigo',
              'Salerno',
              'Medio Campidano',
              'Sassari',
              'Savona',
              'Siena',
              'Siracusa',
              'Sondrio',
              'Taranto',
              'Teramo',
              'Terni',
              'Torino',
              'Ogliastra',
              'Trapani',
              'Trento',
              'Treviso',
              'Trieste',
              'Udine',
              'Varese',
              'Venezia',
              'Verbano-Cusio-Ossola',
              'Vercelli',
              'Verona',
              'Vibo Valentia',
              'Vicenza',
              'Viterbo'
            ],
            state_abbr: [
              'AG',
              'AL',
              'AN',
              'AO',
              'AR',
              'AP',
              'AT',
              'AV',
              'BA',
              'BT',
              'BL',
              'BN',
              'BG',
              'BI',
              'BO',
              'BZ',
              'BS',
              'BR',
              'CA',
              'CL',
              'CB',
              'CI',
              'CE',
              'CT',
              'CZ',
              'CH',
              'CO',
              'CS',
              'CR',
              'KR',
              'CN',
              'EN',
              'FM',
              'FE',
              'FI',
              'FG',
              'FC',
              'FR',
              'GE',
              'GO',
              'GR',
              'IM',
              'IS',
              'SP',
              'AQ',
              'LT',
              'LE',
              'LC',
              'LI',
              'LO',
              'LU',
              'MC',
              'MN',
              'MS',
              'MT',
              'ME',
              'MI',
              'MO',
              'MB',
              'NA',
              !1,
              'NU',
              'OT',
              'OR',
              'PD',
              'PA',
              'PR',
              'PV',
              'PG',
              'PU',
              'PE',
              'PC',
              'PI',
              'PT',
              'PN',
              'PZ',
              'PO',
              'RG',
              'RA',
              'RC',
              'RE',
              'RI',
              'RN',
              'RM',
              'RO',
              'SA',
              'VS',
              'SS',
              'SV',
              'SI',
              'SR',
              'SO',
              'TA',
              'TE',
              'TR',
              'TO',
              'OG',
              'TP',
              'TN',
              'TV',
              'TS',
              'UD',
              'VA',
              'VE',
              'VB',
              'VC',
              'VR',
              'VV',
              'VI',
              'VT'
            ],
            city: [
              '#{city_prefix} #{Name.first_name} #{city_suffix}',
              '#{city_prefix} #{Name.first_name}',
              '#{Name.first_name} #{city_suffix}',
              '#{Name.last_name} #{city_suffix}'
            ],
            street_name: [
              '#{street_suffix} #{Name.first_name}',
              '#{street_suffix} #{Name.last_name}'
            ],
            street_address: [
              '#{street_name} #{building_number}',
              '#{street_name} #{building_number}, #{secondary_address}'
            ],
            default_country: [
              'Italia'
            ]
          },
          company: {
            suffix: [
              'SPA',
              'e figli',
              'Group',
              's.r.l.'
            ],
            buzzwords: [
              ['Abilità',
              'Access',
              'Adattatore',
              'Algoritmo',
              'Alleanza',
              'Analizzatore',
              'Applicazione',
              'Approccio',
              'Architettura',
              'Archivio',
              'Intelligenza artificiale',
              'Array',
              'Attitudine',
              'Benchmark',
              'Capacità',
              'Sfida',
              'Circuito',
              'Collaborazione',
              'Complessità',
              'Concetto',
              'Conglomerato',
              'Contingenza',
              'Core',
              'Database',
              'Data-warehouse',
              'Definizione',
              'Emulazione',
              'Codifica',
              'Criptazione',
              'Firmware',
              'Flessibilità',
              'Previsione',
              'Frame',
              'framework',
              'Funzione',
              'Funzionalità',
              'Interfaccia grafica',
              'Hardware',
              'Help-desk',
              'Gerarchia',
              'Hub',
              'Implementazione',
              'Infrastruttura',
              'Iniziativa',
              'Installazione',
              'Set di istruzioni',
              'Interfaccia',
              'Soluzione internet',
              'Intranet',
              'Conoscenza base',
              'Matrici',
              'Matrice',
              'Metodologia',
              'Middleware',
              'Migrazione',
              'Modello',
              'Moderazione',
              'Monitoraggio',
              'Moratoria',
              'Rete',
              'Architettura aperta',
              'Sistema aperto',
              'Orchestrazione',
              'Paradigma',
              'Parallelismo',
              'Policy',
              'Portale',
              'Struttura di prezzo',
              'Prodotto',
              'Produttività',
              'Progetto',
              'Proiezione',
              'Protocollo',
              'Servizio clienti',
              'Software',
              'Soluzione',
              'Standardizzazione',
              'Strategia',
              'Struttura',
              'Successo',
              'Sovrastruttura',
              'Supporto',
              'Sinergia',
              'Task-force',
              'Finestra temporale',
              'Strumenti',
              'Utilizzazione',
              'Sito web',
              'Forza lavoro'],
              [
                'adattiva',
                'avanzata',
                'migliorata',
                'assimilata',
                'automatizzata',
                'bilanciata',
                'centralizzata',
                'compatibile',
                'configurabile',
                'cross-platform',
                'decentralizzata',
                'digitalizzata',
                'distribuita',
                'piccola',
                'ergonomica',
                'esclusiva',
                'espansa',
                'estesa',
                'configurabile',
                'fondamentale',
                'orizzontale',
                'implementata',
                'innovativa',
                'integrata',
                'intuitiva',
                'inversa',
                'gestita',
                'obbligatoria',
                'monitorata',
                'multi-canale',
                'multi-laterale',
                'open-source',
                'operativa',
                'ottimizzata',
                'organica',
                'persistente',
                'polarizzata',
                'proattiva',
                'programmabile',
                'progressiva',
                'reattiva',
                'riallineata',
                'ricontestualizzata',
                'ridotta',
                'robusta',
                'sicura',
                'condivisibile',
                'stand-alone',
                'switchabile',
                'sincronizzata',
                'sinergica',
                'totale',
                'universale',
                'user-friendly',
                'versatile',
                'virtuale',
                'visionaria'
              ],
              [
                '24 ore',
                '24/7',
                'terza generazione',
                'quarta generazione',
                'quinta generazione',
                'sesta generazione',
                'asimmetrica',
                'asincrona',
                'background',
                'bi-direzionale',
                'biforcata',
                'bottom-line',
                'coerente',
                'coesiva',
                'composita',
                'sensibile al contesto',
                'basta sul contesto',
                'basata sul contenuto',
                'dedicata',
                'didattica',
                'direzionale',
                'discreta',
                'dinamica',
                'eco-centrica',
                'esecutiva',
                'esplicita',
                'full-range',
                'globale',
                'euristica',
                'alto livello',
                'olistica',
                'omogenea',
                'ibrida',
                'impattante',
                'incrementale',
                'intangibile',
                'interattiva',
                'intermediaria',
                'locale',
                'logistica',
                'massimizzata',
                'metodica',
                'mission-critical',
                'mobile',
                'modulare',
                'motivazionale',
                'multimedia',
                'multi-tasking',
                'nazionale',
                'neutrale',
                'nextgeneration',
                'non-volatile',
                'object-oriented',
                'ottima',
                'ottimizzante',
                'radicale',
                'real-time',
                'reciproca',
                'regionale',
                'responsiva',
                'scalabile',
                'secondaria',
                'stabile',
                'statica',
                'sistematica',
                'sistemica',
                'tangibile',
                'terziaria',
                'uniforme',
                'valore aggiunto'
              ]
            ],
            bs: [
              ['partnerships',
              'comunità',
              'ROI',
              'soluzioni',
              'e-services',
              'nicchie',
              'tecnologie',
              'contenuti',
              'supply-chains',
              'convergenze',
              'relazioni',
              'architetture',
              'interfacce',
              'mercati',
              'e-commerce',
              'sistemi',
              'modelli',
              'schemi',
              'reti',
              'applicazioni',
              'metriche',
              'e-business',
              'funzionalità',
              'esperienze',
              'webservices',
              'metodologie'],
              [
                'implementate',
                'utilizzo',
                'integrate',
                'ottimali',
                'evolutive',
                'abilitate',
                'reinventate',
                'aggregate',
                'migliorate',
                'incentivate',
                'monetizzate',
                'sinergizzate',
                'strategiche',
                'deploy',
                'marchi',
                'accrescitive',
                'target',
                'sintetizzate',
                'spedizioni',
                'massimizzate',
                'innovazione',
                'guida',
                'estensioni',
                'generate',
                'exploit',
                'transizionali',
                'matrici',
                'ricontestualizzate'
              ],
              [
                'valore aggiunto',
                'verticalizzate',
                'proattive',
                'forti',
                'rivoluzionari',
                'scalabili',
                'innovativi',
                'intuitivi',
                'strategici',
                'e-business',
                'mission-critical',
                '24/7',
                'globali',
                'B2B',
                'B2C',
                'granulari',
                'virtuali',
                'virali',
                'dinamiche',
                'magnetiche',
                'web',
                'interattive',
                'sexy',
                'back-end',
                'real-time',
                'efficienti',
                'front-end',
                'distributivi',
                'estensibili',
                'mondiali',
                'open-source',
                'cross-platform',
                'sinergiche',
                'out-of-the-box',
                'enterprise',
                'integrate',
                'di impatto',
                'wireless',
                'trasparenti',
                'next-generation',
                'cutting-edge',
                'visionari',
                'plug-and-play',
                'collaborative',
                'olistiche',
                'ricche'
              ]
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name} #{suffix}',
              '#{Name.last_name}, #{Name.last_name} e #{Name.last_name} #{suffix}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com',
              'email.it',
              'libero.it',
              'yahoo.it'
            ],
            domain_suffix: [
              'com',
              'com',
              'com',
              'net',
              'org',
              'it',
              'it',
              'it'
            ]
          },
          name: {
            first_name: [
              'Aaron',
              'Akira',
              'Alberto',
              'Alessandro',
              'Alighieri',
              'Amedeo',
              'Amos',
              'Anselmo',
              'Antonino',
              'Arcibaldo',
              'Armando',
              'Artes',
              'Audenico',
              'Ausonio',
              'Bacchisio',
              'Battista',
              'Bernardo',
              'Boris',
              'Caio',
              'Carlo',
              'Cecco',
              'Cirino',
              'Cleros',
              'Costantino',
              'Damiano',
              'Danny',
              'Davide',
              'Demian',
              'Dimitri',
              'Domingo',
              'Dylan',
              'Edilio',
              'Egidio',
              'Elio',
              'Emanuel',
              'Enrico',
              'Ercole',
              'Ermes',
              'Ethan',
              'Eusebio',
              'Evangelista',
              'Fabiano',
              'Ferdinando',
              'Fiorentino',
              'Flavio',
              'Fulvio',
              'Gabriele',
              'Gastone',
              'Germano',
              'Giacinto',
              'Gianantonio',
              'Gianleonardo',
              'Gianmarco',
              'Gianriccardo',
              'Gioacchino',
              'Giordano',
              'Giuliano',
              'Graziano',
              'Guido',
              'Harry',
              'Iacopo',
              'Ilario',
              'Ione',
              'Italo',
              'Jack',
              'Jari',
              'Joey',
              'Joseph',
              'Kai',
              'Kociss',
              'Laerte',
              'Lauro',
              'Leonardo',
              'Liborio',
              'Lorenzo',
              'Ludovico',
              'Maggiore',
              'Manuele',
              'Mariano',
              'Marvin',
              'Matteo',
              'Mauro',
              'Michael',
              'Mirco',
              'Modesto',
              'Muzio',
              'Nabil',
              'Nathan',
              'Nick',
              'Noah',
              'Odino',
              'Olo',
              'Oreste',
              'Osea',
              'Pablo',
              'Patrizio',
              'Piererminio',
              'Pierfrancesco',
              'Piersilvio',
              'Priamo',
              'Quarto',
              'Quirino',
              'Radames',
              'Raniero',
              'Renato',
              'Rocco',
              'Romeo',
              'Rosalino',
              'Rudy',
              'Sabatino',
              'Samuel',
              'Santo',
              'Sebastian',
              'Serse',
              'Silvano',
              'Sirio',
              'Tancredi',
              'Terzo',
              'Timoteo',
              'Tolomeo',
              'Trevis',
              'Ubaldo',
              'Ulrico',
              'Valdo',
              'Neri',
              'Vinicio',
              'Walter',
              'Xavier',
              'Yago',
              'Zaccaria',
              'Abramo',
              'Adriano',
              'Alan',
              'Albino',
              'Alessio',
              'Alighiero',
              'Amerigo',
              'Anastasio',
              'Antimo',
              'Antonio',
              'Arduino',
              'Aroldo',
              'Arturo',
              'Augusto',
              'Avide',
              'Baldassarre',
              'Bettino',
              'Bortolo',
              'Caligola',
              'Carmelo',
              'Celeste',
              'Ciro',
              'Costanzo',
              'Dante',
              'Danthon',
              'Davis',
              'Demis',
              'Dindo',
              'Domiziano',
              'Edipo',
              'Egisto',
              'Eliziario',
              'Emidio',
              'Enzo',
              'Eriberto',
              'Erminio',
              'Ettore',
              'Eustachio',
              'Fabio',
              'Fernando',
              'Fiorenzo',
              'Folco',
              'Furio',
              'Gaetano',
              'Gavino',
              'Gerlando',
              'Giacobbe',
              'Giancarlo',
              'Gianmaria',
              'Giobbe',
              'Giorgio',
              'Giulio',
              'Gregorio',
              'Hector',
              'Ian',
              'Ippolito',
              'Ivano',
              'Jacopo',
              'Jarno',
              'Joannes',
              'Joshua',
              'Karim',
              'Kris',
              'Lamberto',
              'Lazzaro',
              'Leone',
              'Lino',
              'Loris',
              'Luigi',
              'Manfredi',
              'Marco',
              'Marino',
              'Marzio',
              'Mattia',
              'Max',
              'Michele',
              'Mirko',
              'Moreno',
              'Nadir',
              'Nazzareno',
              'Nestore',
              'Nico',
              'Noel',
              'Odone',
              'Omar',
              'Orfeo',
              'Osvaldo',
              'Pacifico',
              'Pericle',
              'Pietro',
              'Primo',
              'Quasimodo',
              'Radio',
              'Raoul',
              'Renzo',
              'Rodolfo',
              'Romolo',
              'Rosolino',
              'Rufo',
              'Sabino',
              'Sandro',
              'Sasha',
              'Secondo',
              'Sesto',
              'Silverio',
              'Siro',
              'Tazio',
              'Teseo',
              'Timothy',
              'Tommaso',
              'Tristano',
              'Umberto',
              'Ariel',
              'Artemide',
              'Assia',
              'Azue',
              'Benedetta',
              'Bibiana',
              'Brigitta',
              'Carmela',
              'Cassiopea',
              'Cesidia',
              'Cira',
              'Clea',
              'Cleopatra',
              'Clodovea',
              'Concetta',
              'Cosetta',
              'Cristyn',
              'Damiana',
              'Danuta',
              'Deborah',
              'Demi',
              'Diamante',
              'Diana',
              'Donatella',
              'Doriana',
              'Edvige',
              'Elda',
              'Elga',
              'Elsa',
              'Emilia',
              'Enrica',
              'Erminia',
              'Eufemia',
              'Evita',
              'Fatima',
              'Felicia',
              'Filomena',
              'Flaviana',
              'Fortunata',
              'Gelsomina',
              'Genziana',
              'Giacinta',
              'Gilda',
              'Giovanna',
              'Giulietta',
              'Grazia',
              'Guendalina',
              'Helga',
              'Ileana',
              'Ingrid',
              'Irene',
              'Isabel',
              'Isira',
              'Ivonne',
              'Jelena',
              'Jole',
              'Claudia',
              'Kayla',
              'Kristel',
              'Laura',
              'Lucia',
              'Lia',
              'Lidia',
              'Lisa',
              'Loredana',
              'Loretta',
              'Luce',
              'Lucrezia',
              'Luna',
              'Maika',
              'Marcella',
              'Maria',
              'Mariagiulia',
              'Marianita',
              'Mariapia',
              'Marieva',
              'Marina',
              'Maristella',
              'Maruska',
              'Matilde',
              'Mecren',
              'Mercedes',
              'Mietta',
              'Miriana',
              'Miriam',
              'Monia',
              'Morgana',
              'Naomi',
              'Nayade',
              'Nicoletta',
              'Ninfa',
              'Noemi',
              'Nunzia',
              'Olimpia',
              'Oretta',
              'Ortensia',
              'Penelope',
              'Piccarda',
              'Prisca',
              'Rebecca',
              'Rita',
              'Rosalba',
              'Rosaria',
              'Rosita',
              'Ruth',
              'Samira',
              'Sarita',
              'Selvaggia',
              'Shaira',
              'Sibilla',
              'Soriana',
              'Thea',
              'Tosca',
              'Ursula',
              'Vania',
              'Vera',
              'Vienna',
              'Violante',
              'Vitalba',
              'Zelida'
            ],
            last_name: [
              'Amato',
              'Barbieri',
              'Barone',
              'Basile',
              'Battaglia',
              'Bellini',
              'Benedetti',
              'Bernardi',
              'Bianc',
              'Bianchi',
              'Bruno',
              'Caputo',
              'Carbon',
              'Caruso',
              'Cattaneo',
              'Colombo',
              'Cont',
              'Conte',
              'Coppola',
              'Costa',
              'Costantin',
              'D\'amico',
              'D\'angelo',
              'Damico',
              'De Angelis',
              'De luca',
              'De rosa',
              'De Santis',
              'Donati',
              'Esposito',
              'Fabbri',
              'Farin',
              'Ferrara',
              'Ferrari',
              'Ferraro',
              'Ferretti',
              'Ferri',
              'Fior',
              'Fontana',
              'Galli',
              'Gallo',
              'Gatti',
              'Gentile',
              'Giordano',
              'Giuliani',
              'Grassi',
              'Grasso',
              'Greco',
              'Guerra',
              'Leone',
              'Lombardi',
              'Lombardo',
              'Longo',
              'Mancini',
              'Marchetti',
              'Marian',
              'Marini',
              'Marino',
              'Martinelli',
              'Martini',
              'Martino',
              'Mazza',
              'Messina',
              'Milani',
              'Montanari',
              'Monti',
              'Morelli',
              'Moretti',
              'Negri',
              'Neri',
              'Orlando',
              'Pagano',
              'Palmieri',
              'Palumbo',
              'Parisi',
              'Pellegrini',
              'Pellegrino',
              'Piras',
              'Ricci',
              'Rinaldi',
              'Riva',
              'Rizzi',
              'Rizzo',
              'Romano',
              'Ross',
              'Rossetti',
              'Ruggiero',
              'Russo',
              'Sala',
              'Sanna',
              'Santoro',
              'Sartori',
              'Serr',
              'Silvestri',
              'Sorrentino',
              'Testa',
              'Valentini',
              'Villa',
              'Vitale',
              'Vitali'
            ],
            prefix: [
              'Sig.',
              'Dott.',
              'Dr.',
              'Ing.'
            ],
            suffix: [
            ],
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '+## ### ## ## ####',
              '+## ## #######',
              '+## ## ########',
              '+## ### #######',
              '+## ### ########',
              '+## #### #######',
              '+## #### ########',
              '0## ### ####',
              '+39 0## ### ###',
              '3## ### ###',
              '+39 3## ### ###'
            ]
          }
        },
        adjust: {
          title: 'Impostazioni utente',
          title_admin: 'Impostazioni utente master',
          personal: 'Dati personali',
          language: 'Lingua',
          spanish: 'Español',
          english: 'English',
          french: 'Français',
          italian: 'Italiano',
          portuguese: 'Português',
          german: 'Deutsch',
          password: {
            password_change: 'Modifica password',
            new_password_placeholder: 'Nuova password',
            new_password_repeat_placeholder: 'Ripetere nuova password',
            old_password_placeholder: 'Password attuale'
          },
          require: {
            name: 'Nome',
            surname: 'Cognome'
          },
          advanced_adjust: 'Impostazioni avanzate',
          advanced_adjust_text: 'Visualizza impostazioni avanzate',
          type_temp: 'Temperatura',
          type_temp_text: 'Modo di temperatura',
          save: {
            title: 'Impostazioni salvate',
            body: 'Le sue impostazioni sono state salvate.'
          },
          unsubscribe_confirm: 'Desidera cancellarsi dall\'applicazione Airzone? Tutti i suoi dati saranno eliminati e non potranno essere recuperati',
          unsubscribe: {
            title: 'Cancellazione confermata',
            body: 'È stato cancellato da Airzone, tutti i suoi dati sono stati eliminati.'
          },
          change_pass: 'Cambiare password'
        },
        languages: {
        },
        modal_mode: {
          cold: 'Freddo',
          cold_text: 'Modo freddo',
          heat: 'Caldo',
          heat_text: 'Modo caldo',
          ventilate_cold: 'Ventilazione freddo',
          ventilate_cold_text: 'Modo ventilazione fredda',
          heat_cold_auto: 'Auto',
          heat_cold_auto_text: 'Modo Auto',
          dehumidify: 'Deumidificazione',
          dehumidify_text: 'Modo deumidificazione',
          cold_auto: 'Automatico freddo',
          cold_auto_text: 'Modo automatico freddo',
          heat_auto: 'Automatico Caldo',
          heat_auto_text: 'Modo automatico caldo',
          ventilate_heat: 'Ventilazione caldo',
          ventilate_heat_text: 'Modo ventilazione caldo'
        },
        modal_speed: {
          title: 'Modo di velocità di aria disponibili',
          speed_1: 'Il suo dispositivo ha soltanto una velocità disponibile',
          speed_2: 'Selezioni la velocità tra le due disponibili. A maggior numero, maggiore sarà la velocità dell\'aria.',
          speed_3: 'Selezioni la velocità tra le tre disponibili. A maggior numero, maggiore sarà la velocità dell\'aria.',
          speed_4: 'Selezioni la velocità tra le quattro disponibili. A maggior numero, maggiore sarà la velocità dell\'aria.',
          speed_5: 'Selezioni la velocità tra le cinque disponibili. A maggior numero, maggiore sarà la velocità dell\'aria.'
        },
        modal_vertical: {
          title: 'Posizioni delle lame verticali',
          position_0: 'Inclinazione 0: 90º',
          position_1: 'Inclinazione 1: 72º',
          position_2: 'Inclinazione 2: 54º',
          position_3: 'Inclinazione 3: 36º',
          position_4: 'Inclinazione 4: 0º',
          position_swing: 'Swing: varia tra tutte le posizioni delle lame'
        },
        modal_horizontal: {
          title: 'Posizioni delle lame orizzontali',
          position_0: 'Inclinazione 0: 180º',
          position_1: 'Inclinazione 1: 135º',
          position_2: 'Inclinazione 2: 90º',
          position_3: 'Inclinazione 3: 5º',
          position_4: 'Inclinazione 4: 0º',
          position_swing: 'Swing: varia tra tutte le posizioni delle lame'
        },
        modal_scenary: {
          vacant: 'Modo non occupato',
          vacant_text: 'Questa modalità accenderà ed spegnerà il suo climatizzatore per mantenere la temperatura tra i limiti stabiliti su impostazioni.',
          occupied: 'Modo occupato',
          occupied_text: 'Modo di funzionamento normale della sua macchina.',
          sleep: 'Modo Autospegnimento',
          sleep_text: 'Una volta attivato il modo sleep, il climatizzatore si spegnerà tra il tempo impostato sugli impostazioni.'
        },
        advanced_adjust: {
        },
        adjust_zone: {
          'true': 'Sì',
          help: {
          }
        },
        installations: {
          'return': 'Indietro',
          exit: 'Esci',
          finish: 'Finire',
          next: 'Seguente',
          edit: 'Modifica',
          error: 'È successo un errore con la connessione con il Webserver',
          retry: 'Riprova',
          state1: {
            text: 'Seguire i seguenti passi per associare il suo Webserver al router.'
          },
          state2: {
            text: 'Verifichi che il dispositivo è connesso alla alimentazione ed in modo punto d\'accesso. Led AP fisso.'
          },
          state3: {
            text: 'Selezioni il processo di associazione',
            assisted: 'Assistita',
            wps: 'WPS'
          },
          state4: {
            text: 'Cambi la sua rete wifi su impostazioni sul dispositivo che comincia per:',
            text4: 'La password della rete è: 123456789'
          },
          state5: {
            text: 'Selezioni il router ad associare:',
            loading_text: 'Collegando con il dispositivo. Attenda per favore...',
            loading_text2: '(Se la connessione si ritarda più di un minuto verifichi che la connessione del dispositivo sia corretta)',
            low_signal: {
              title: 'Copertura insufficiente',
              text: 'Avvicina il Webserver al router o installa un amplificatore Wifi per migliorare la copertura'
            }
          },
          state6: {
            text: 'Selezioni il tipo di sicurezza della sua rete wifi ed inserisca la password',
            text2: 'Inserisca i dati della sua rete Wifi',
            none: 'Senza sicurezza',
            wep: 'WEP',
            wpa: 'WPA/WPA2',
            pass: 'Password',
            name: 'Nome'
          },
          state7: {
            text: 'Dati della sua configurazione di rete',
            ip: 'IP',
            port: 'Gateway',
            masc: 'Maschera di sotto rete',
            manual: 'MANUAL',
            dhcp: 'DHCP',
            loading_text: 'Configurando il DKN WServer. Attenda per favore...'
          },
          state8: {
            text: 'Una volta associato, il LED Ap rimarrà lampeggiando lentamente.'
          },
          state9: {
            text: 'Processo realizzato correttamente'
          },
          state21: {
            text1: 'Premere sull\'icona di configurazione WPS del router.',
            text2: 'Può essere identificato con la seguente icona.'
          },
          state22: {
            text1: 'Prema a lungo sull\'icona di configurazione WPS del dispositivo fino a che il LED Ap cambi di stato.',
            text2: 'Una volta associate, il LED Ap lampeggerà lentamente.'
          },
          state41: {
            title: 'Scegli il metodo di associazione al router',
            auto_info: 'Automatico. Cerca automaticamente le reti wireless nelle vicinanze al Webserver.',
            manual_info: 'Manuale. Inserisci manualmente i dati della rete wireless.',
            auto: 'Automatico',
            manual: 'Manuale'
          }
        },
        buttons: {
          sign_in: 'Entra nel Cloud',
          cancel: 'Annulla',
          init: 'Avvio',
          send: 'Invio',
          save: 'Salva',
          save_installation: 'Inviare nuovamente la conferma?',
          accept: 'Accetta',
          resend_confirmation: 'Avviare conferma',
          back: 'Indietro',
          icon: 'Icona',
          unsubscribe: 'Annulla',
          remove: 'Rimuovi',
          restore_factory: 'Ripristinare le impostazioni di fabbrica',
          next: 'Avanti',
          prev: 'Indietro',
          close: 'Chiudi',
          recharge: 'Aggiorna',
          hide: 'Nascondi',
          'continue': 'Continua',
          exit: 'Esci',
          help: 'Aiuto',
          modify: 'Modifica',
          contact: 'Contatto'
        },
        devices: {
          warnings: {
            installer: 'Installatore',
            text: 'Codice errore:'
          },
          alert_installer_modal: {
            name_placeholder: 'Inserisci il suo nome',
            phone_placeholder: 'Inserisci il suo telefono',
            send_button: 'Notificare all\'installatore',
            user_params: 'Inserisci i suoi dati di contatto:',
            installer_params: 'Contattare con l\'installatore',
            success_title: 'Avviso al suo installatore',
            success_message: 'Si ha inviato una mail al suo installatore correttamente. Attenda un tempo prima di inviare un nuovo avviso sul suo dispositivo.',
            error: {
              name: 'Deve inserire il suo nome',
              phone: 'Deve inserire il suo telefono'
            },
            no_email: 'Non si hanno specificato i dati dell\'installatore quindi non si può inviare un avviso. Si vuole inviarlo, può speficarlo su impostazioni.'
          },
          adjusts: {
            name: 'Nome',
            mac: 'MAC',
            pin: 'PIN',
            installation: 'Installazione',
            device: 'Data del dispositivo',
            name_text: 'Nome del dispositivo',
            installation_text: 'Installazione alla quale si assocerà il dispositivo. Può cambiare l\'installazione del dispositivo se ha i permessi sull\'installazione.',
            links: {
              adjust: 'Impostazioni',
              params: 'Parametri'
            },
            model_device: 'Modello del dispositivo',
            sleep: 'Autospegnimento',
            min_temp_unoccupied: 'Temperatura minima di non occupato',
            min_temp_unoccupied_text: 'Inserisci la temperatura minima quando il sistema ha il modo non occupato attivato',
            max_temp_unoccupied: 'Temperatura massima di non occupato',
            max_temp_unoccupied_text: 'Inserisci la temperatura massima quando il sistema ha il modo non occupato attivato',
            sleep_time: 'Autospegnimento',
            sleep_time_text: 'Inserisci il tempo di attesa prima di disattivare l\'installazione'
          },
          schedules: {
            init: 'Inizio',
            days: 'Giorni',
            monday: 'L',
            tuesday: 'M',
            wednesday: 'm',
            thursday: 'G',
            friday: 'V',
            saturday: 'S',
            sunday: 'D',
            add_schedule: 'Aggiungere programmazione',
            schedules_types: 'Tipi di programmazioni',
            on_off: 'On/Off',
            mode: 'Modo',
            start_mode: 'Modo Inizio',
            close: 'Chiudere',
            remove: 'Cancellare',
            save: 'Salvare',
            hour: 'Ora',
            temperature: 'Temperatura',
            new_prog: 'Nuova Programmazione',
            edit_prog: 'Editare Programmazione',
            schedules_name: 'Nome',
            all_devices: 'Tutti i dispositivi',
            waiting_title: 'Creando programmazioni',
            waiting_text: 'Si stanno creando le programmazioni. Questo processo può prendere qualche secondi fino a creare la programmazione in tutti i DKN WServer.',
            days_error: 'Deve selezionare un giorno'
          }
        },
        devise: {
          confirmations: {
            confirmed: 'La sua E-mail è stata confermata.',
            send_instructions: 'Tra pochi minuti riceverà una mail con le istruzioni per confermare l\'indirizzo.',
            send_paranoid_instructions: 'Se il suo indirizzo mail esiste sul nostro sistema, tra pochi minuti riceverà una mail con le istruzioni per confermarlo.'
          },
          failure: {
            already_authenticated: 'L\'utente è già stato registrato.',
            inactive: 'Il suo account non è ancora attivo.',
            invalid: 'Indirizzo mail o password errati.',
            locked: 'Account bloccato.',
            last_attempt: 'Ultimo tentativo prima del blocco del suo account.',
            not_found_in_database: 'E-mail o password errati.',
            timeout: 'Sessione scaduta. Effettuare nuovamente l\'acceso.',
            unauthenticated: 'Per continuare è necessario autenticarsi.',
            unconfirmed: 'Confermare l\'account prima di continuare.'
          },
          mailer: {
            confirmation_instructions: {
              subject: 'Conferma della email inviata.'
            },
            reset_password_instructions: {
              subject: 'Istruzioni per cambiare la password.'
            },
            unlock_instructions: {
              subject: 'Istruzioni per lo sblocco.'
            }
          },
          omniauth_callbacks: {
            failure: 'Could not authenticate you from %{kind} because \\"%{reason}\\.',
            success: 'Successfully authenticated from %{kind} account.'
          },
          passwords: {
            no_token: 'Non si può accedere a questa pagina se non attraverso una mail di reset della password. Se si è effettuato l\'accesso tramite la mail di reset, controllare che l\'indirizzo URL sia completo.',
            send_instructions: 'Tra pochi minuti riceverà una mail con le istruzioni per resettare la sua password.',
            send_paranoid_instructions: 'Se la sua email è già registrata, tra poco riceverà un link URL per resettare la sua password.',
            updated: 'La sua password è stata modificata correttamente.',
            updated_not_active: 'La sua password è stata modificata correttamente.'
          },
          registrations: {
            destroyed: 'Il suo account è stato cancellato. Grazie per aver utilizzato DKN WServer e a presto!!',
            signed_up: 'Benvenuto! registrazione effettuata correttamente.',
            signed_up_but_inactive: 'Registrazione eseguita correttamente. Per accedere attendere la attivazione dell\'account.',
            signed_up_but_locked: 'Impossibile effettuare l\'accesso perchè il suo account risulta bloccato.',
            signed_up_but_unconfirmed: 'Le abbiamo inviato una mail di conferma al suo indirizzo email. La preghiamo di seguire le istruzioni sulla mail per attivare il suo account.',
            update_needs_confirmation: 'Account aggiornato correttamente. Le abbiamo inviato una mail per la attivazione finale del suo nuovo account.',
            updated: 'Account aggiornato correttamente.'
          },
          sessions: {
            signed_in: 'Accesso eseguito in modo corretto.',
            signed_out: 'Uscita eseguita in modo corretto.',
            already_signed_out: 'Uscita confermata.'
          }
        },
        unlocks: {
          send_instructions: 'Tra pochi minuti riceverà una mail con le istruzioni per sbloccare il suo account.',
          send_paranoid_instructions: 'Se l\'account esiste, tra pochi minuti riceverà una mail con le istruzioni per sbloccarlo.',
          unlocked: 'Account sbloccato correttamente. Accedere nuovamente per continuare.'
        },
        errors: {
          messages: {
            already_confirmed: 'Account email confermato precedentemente. Provi ad iniziare una sessione.',
            confirmation_period_expired: 'Il suo account email deve essere confermato entro %{period}, per favore, ripeta la procedura di conferma.',
            expired: 'La conferma è scaduta, per favore ripeta la procedura di conferma.',
            not_found: 'Non esiste account associato a questo indirizzo mail.',
            not_locked: 'La sua email non è bloccata',
            not_saved: {
              one: 'Un errore ha interrotto questo %{resource} prima del salvataggio:',
              other: '%{count} errori hanno interrotto questo %{resource} prima del salvataggio:'
            }
          }
        },
        error: {
          internal: {
            title: 'Errore Interno',
            body: 'Non è stato possibile realizzare l\'operazione richiesta. Preghiamo provare nuovamente più tardi.'
          }
        },
        errors_page: {
          page_404: {
            title: 'Pagina non trovata',
            text: 'Scusa, non possiamo trovare la pagina che sta cercando.',
            button: 'Aprire la pagina di inizio.'
          },
          page_403: {
            title: 'Accesso vietato',
            text: 'Scusa, non ha permesso per accedere a questa zona.',
            button: 'Aprire la pagina di inizio.'
          }
        },
        home: {
          menu: {
            installations: 'Installazioni',
            adjusts: 'Impostazioni',
            help: 'Aiuto',
            admin: 'Utente',
            exit: 'Uscire',
            admin_users: 'Utenti',
            support: 'Support'
          },
          upload: {
            title: 'È disponibile una nuova versione di DKN Cloud',
            description: 'Si prega di aggiornare l\'applicazione per poterla utilizzare.'
          },
          maintenance: {
            title: 'Questo sito è temporaneamente in manutenzione',
            description: 'Questo sito è attualmente in fase di manutenzione.',
            text: 'E sarà presto disponibile.'
          }
        },
        list_installations: {
          edit: 'Modifica',
          close: 'Chiudi'
        },
        edit_installation: {
          installator: {
            name: 'Nome',
            phone: 'Telefono',
            email: 'E-mail'
          }
        },
        installation: {
          temp: 'TEMPERATURA',
          months: {
            0: 'GEN',
            1: 'FEB',
            2: 'MAR',
            3: 'APR',
            4: 'MAG',
            5: 'GIU',
            6: 'LUG',
            7: 'AGO',
            8: 'SET',
            9: 'OTT',
            10: 'NOV',
            11: 'DIC'
          },
          days: {
            0: 'Domenica',
            1: 'Lunedì',
            2: 'Martedì',
            3: 'Mercoledì',
            4: 'Giovedì',
            5: 'Venerdì',
            6: 'Sabato'
          },
          modes: {
            header: 'Modo di funzionamento',
            cool: 'Freddo',
            heat: 'Caldo',
            ventilate: 'Ventilazione',
            'ventilate-cold': 'Ventilazione freddo',
            'heat-cold-auto': 'Automatico',
            dehumidify: 'Deumidificazione',
            'cool-air': 'Automatico freddo',
            'heat-air': 'Automatico caldo',
            'ventilate-heat': 'Ventilazione caldo'
          },
          velocity: {
            header: 'Velocità dell\'aria',
            'velocity-0': 'Auto',
            'velocity-1': 'Ultra-bassa',
            'velocity-2': 'Bassa',
            'velocity-3': 'Media',
            'velocity-4': 'Media-alta',
            'velocity-5': 'Alta'
          },
          vertical: {
            header: 'Inclinazione verticale',
            'vertical-0000': 'Inclinazione 1',
            'vertical-0001': 'Inclinazione 2',
            'vertical-0010': 'Inclinazione 3',
            'vertical-0011': 'Inclinazione 4',
            'vertical-0100': 'Inclinazione 5',
            'vertical-0111': 'Swing'
          },
          horizontal: {
            header: 'Inclinazione orizzontale',
            'horizontal-0000': 'Inclinazione 1',
            'horizontal-0001': 'Inclinazione 2',
            'horizontal-0010': 'Inclinazione 3',
            'horizontal-0011': 'Inclinazione 4',
            'horizontal-0100': 'Inclinazione 5',
            'horizontal-0111': 'Swing'
          },
          scenary: {
            header: 'Scena',
            occupied: 'Occupato',
            vacant: 'Non occupato',
            sleep30: 'Autospegnimento 30\'',
            sleep60: 'Autospegnimento 60\'',
            sleep90: 'Autospegnimento 90\'',
            sleep: 'Autospegnimento'
          },
          modal: {
            name: 'Nome dell\'installazione',
            location: 'Ubicazione',
            icon: 'Icona',
            users: 'Utenti',
            installer: 'Dati dell\'installatore',
            installer_name: 'Nome',
            installer_phone: 'Telefono',
            installer_email: 'E-mail',
            add_user: 'Aggiungi utente',
            save: 'Salva cambiamenti',
            remove: 'Rimuovi installazione',
            cancel: 'Cancella',
            unoccupied: 'Temperatura non occupato',
            unoccupied_min_temp: 'Temp. non occupato caldo',
            unoccupied_max_temp: 'Temp. non occupato freddo',
            name_error: 'Deve inserire un nome dell\'installazione',
            location_error: 'Deve inserire una ubicazione per l\'installazione',
            type: 'Tipo di installazione',
            type_home: 'Residenziale',
            type_commercial: 'Commerciale',
            type_business: 'Ufficio',
            type_others: 'Altri',
            postal_code: 'Codice Postale',
            sleep_time: 'Autospegnimento',
            links: {
              adjust: 'Impostazioni',
              params: 'Parametri',
              users: 'Utenti'
            },
            new_user: {
              title: 'Aggiungere utente all\'installazione',
              name: 'Nome',
              surname: 'Cognome',
              email: 'E-mail',
              avanced: 'Utente avanzato',
              name_blank: 'Deve inserire un nome per l\'utente',
              surname_blank: 'Deve inserire un cognome per l\'utente',
              email_blank: 'Deve inserire un email per l\'utente'
            },
            help: {
              name: 'Nome',
              name_text: 'Consente di modificare il nome dell\'installazione',
              location: 'Ubicazione',
              location_text: 'Consente di modificare l\'ubicazione dell\'installazione',
              icon: 'Icona',
              icon_text: 'Consente di modificare l\'icona dell\'installazione',
              users: 'Utenti',
              users_text: 'Consente di gestire gli utenti che possono utilizzare l\'app',
              installer: 'Installatore',
              installer_text: 'Dati dell\'installatore che consentono di contattare con l\'installatore in caso di incidenza',
              postal_code: 'Codice Postale',
              postal_code_text: 'Codice postale dell\'installazione',
              type: 'Tipo di installazione',
              type_text: 'Inserire il tipo di installazione',
              min_temp_unoccupied: 'Temperatura minima di non occupato',
              min_temp_unoccupied_text: 'Definire la temperatura minima quando il sistema ha attivo il modo non occupato',
              max_temp_unoccupied: 'Temperatura massima di non occupato',
              max_temp_unoccupied_text: 'Definire la temperatura massima quando il modo non occupato è attivo',
              sleep_time: 'Temporizzatore',
              sleep_time_text: 'Definire il tempo di attesa prima di disattivare l\'installazione'
            }
          }
        },
        email: 'Email',
        name: 'Nome',
        surname: 'Cognome',
        password: 'Password',
        new_password: 'Nuova password',
        repeat_password: 'Reinserire password',
        server: 'Server',
        state: 'Stato',
        enabled: 'Abilitato',
        sleeping: 'Attesa',
        connected: 'Collegato',
        activated: 'Attivato',
        components: 'Componenti',
        historic: 'Cronologia',
        system: 'Sistema',
        filters: 'Filtri',
        mac: 'MAC',
        locality: 'Località',
        all: 'Tutti',
        pin: 'PIN',
        status: 'Stato',
        support: 'Supporto',
        videos: 'Video',
        documents: 'Documenti',
        login: {
          restore_password: 'Recupero password',
          demo: 'Demo',
          router: 'Associare router'
        },
        register: {
          sign_up: 'Creare account'
        },
        complete_registration: {
          title: 'Registrazione completa.'
        },
        mailers: {
          confirmation: {
            welcome: 'Benvenuto in DKN WServer',
            text: 'Per completare la registrazione, confermi la sua email sul seguente sito:',
            confirm: 'Confermare la registrazione su Airzone Cloud:'
          },
          reset_password: {
            welcome: 'Benvenuto!',
            text: 'A quanto pare ha dimenticato la sua password. Non si preoccupi, queste cose accadono. Per ripristinare la sua password, clicchi sul seguente link.',
            change_password: 'Modifica password',
            subject: 'Hai ricevuto un invito su DKN WServer'
          },
          complete_registration: {
            title: 'Completi la sua registrazione su DKN WServer',
            text: 'Un utente ti ha invitato a gestire una installazione con DKN WServer. Per favore, completa la tua registrazione per accedere alla piattaforma e gestirlo.',
            link: 'Completare la registrazione',
            subject: 'Invito sulla piattaforma DKN WServer'
          },
          invitation: {
            title: 'Accedi su DKN WServer',
            text: 'Un utente ti ha invitato a gestire una installazione con DKN WServer. Per favore, accedi alla piattaforma per utilizzare il dispositivo e gestirlo.',
            link: 'Accedi su DKN WServer',
            subject: 'Invito per gestire una installazione con DKN WServer'
          },
          alert_installer: {
            subject: 'Avviso di problema su dispositivo DKN WServer',
            text: 'Un\'utente ha riportato un problema su il tuo dispositivo.',
            title: 'Problema riportato su dispositivo',
            user_name: 'Nome dell\'utente',
            user_phone: 'Telefono dell\'utente',
            error: 'Errore'
          }
        },
        messages: {
          errors: {
            name_blank: 'Inserire nome',
            surname_blank: 'Inserire cognome',
            login: 'Attenzione, la sua email o la sua password non sono corrette',
            email: 'Attenzione, la sua email non è corretta',
            email_blank: 'Attenzione, inserire un indirizzo email',
            email_taken: 'Indirizzo email già esistente',
            password_length: 'La password deve essere di almeno 8 caratteri',
            password_blank: 'Attenzione, inserire una password',
            password_confirmation_check: 'Attenzione, le password devono corrispondere',
            password_confirmation_blank: 'Confermi la sua password',
            password_new_length: 'La nuova password deve essere di almeno 8 caratteri',
            password_new_blank: 'Inserire password',
            invalid_old_password: 'La password inserita non è corretta.',
            condition: 'Attenzione, deve accettare i termini di servizio',
            token_invalid: 'Il codice di attivazione non è corretto. Ripetere il processo di recupero della password.',
            email_not_exist: 'Non esiste nessun account associato a questo indirizzo email.',
            confirmation: 'Si è verificato un errore durante le operazioni di conferma. La preghiamo di compilare nuovamente il modulo e le invieremo una nuova email di conferma.',
            unconfirmed: 'Indirizzo email non confermato',
            device_blank: 'Inserire un nome per il server',
            installation_blank: 'Deve selezionare un\'installazione',
            mac_blank: 'Inserire l\'indirizzo MAC del suo server',
            mac_invalid: 'Controlli che la MAC inserita sia corretta',
            mac_format: 'Il formato dell\'indirizzo MAC non è corretto',
            mac_repeated: 'Esiste già un server con questo indirizzo MAC',
            pin_blank: 'Inserisca il codice PIN del suo server',
            pin_invalid: 'Il codice PIN inserito non è corretto.',
            server_sleeping: 'Controlli che il suo apparecchio è connesso al router e la connessione del router a Internet',
            device_taken: 'La MAC richiesta è già registrata sul Cloud',
            location_blank: 'Inserisca la località dove si trova il suo server',
            icon_blank: 'Selezioni una icona per rappresentare il suo server',
            file_error: 'Il formato del file è errato. I formati supportati sono xls, xlsx e csv.',
            must_select_file: 'Devi scegliere un file',
            not_connected: 'Attualmente non sei collegato a Internet quindi i comandi inviati non avranno effetto nel suo DKN WServer. Ripristina la connessione a Internet e riprova.',
            not_connected_title: 'Avviso sulla connessione Internet',
            not_connected_device: 'Il suo DKN WServer non è collegato a Internet:',
            not_connected_devices: 'Le sue DKN WServer non sono collegate a Internet:',
            not_connected_device_title: 'Avviso sulla connessione del suo dispositivo',
            error_device: 'Si è verificato un errore. Se questo messaggio persiste per favore contatti il centro assistenza. Contatti con il suo installatore.',
            registration_already_completed: 'Registrazione già realizzata. Prego, accedere con i dati corretti.',
            user_taken: 'Utente già associato con il server',
            not_permission_title: 'Accesso non permesso',
            not_permission: 'L\'utente non ha permesso per accedere a questa opzione.',
            not_permission_new_schedule: 'Il numero massimo di programmazioni disponibili (24) è stato raggiunto, si prega di cancellare una programmazione esistente per crearne una nuova.',
            without_internet_title: 'Connessione Internet',
            without_internet_text: 'Questa applicazione richiede una connessione a Internet per funzionare Collegare il dispositivo e riprovare.',
            mac_length_seek: 'Sono richieste 4 cifre minime',
            email_length_seek: 'Sono richiesti almeno 3 caratteri',
            machine_error_11_title: 'Errore di collegamento con l\'unità',
            machine_error_11_text: 'Verificare il collegamento alla porta P1 e P2 dell\'unità interna.',
            backend_error: 'La vostra richiesta non ha potuto essere gestitta, riprovare più tardi.'
          },
          success: {
            register: 'Registrazione eseguita correttamente!',
            send_reset_password: 'Le abbiamo appena inviato una email con le istruzioni per ottenere una nuova password.',
            reset_password: 'Password modificata',
            resend_confirmation: 'Abbiamo inviato una email di conferma al suo indirizzo.',
            user_device_added: 'La connessione con il server è stata stabilita correttamente. Può accedere dal menu dei server.',
            user_device_updated: 'Informazione del server correttamente aggiornate.',
            restore_factory: 'Il server ha ripristinato le impostazioni iniziali.',
            remove_installation_confirmation: 'Desidera rimuovere l\'installazione?',
            remove_device_confirmation: 'Desidera rimuovere el DKN Webserver?',
            remove_last_device_confirmation: 'In caso che quest\'azione sia eseguita, l\'installazione serà cancellata. Desidera effettuare quest\'azione?',
            remove_installation_without_devices: 'Non è stato associato nessun DKN Webserver sull’impianto, quindi si perderanno i dati dello stesso. Desideri continuare?',
            remove_user_confirmation: 'Desidera rimuovere l\'accesso dell\'installazione all\'utente?',
            confirmed: 'Email correttamente verificato. Fare il login per accedere alla piattaforma'
          },
          info: {
            has_email: 'Nuova email!',
            go_login: 'Andare alla pagina di Login',
            reset_password: 'Recupero password',
            change_password: 'Cambiare password',
            send_reset_password: 'Ha dimenticato la password? Non si preouccupi! Indichi il suo indirizzo email e le invieremo le istruzioni per modificarla.',
            register_success: 'Abbiamo inviato una email al suo indirizzo per verificare la sua identità.',
            complete_registration_success: 'Registrazione completata correttamente. Adesso può registrarsi e accedere a DKN WServer.',
            resend_confirmation: 'Rinviare conferma',
            unconfirmed: 'Prego, prima di registrarsi, confermi la sua email',
            remove_server_admin: {
              question: 'Desidera cancellare questo server?',
              info: 'Tutti i dati associati a questo server saranno cancellati.'
            },
            restore_server_admin: {
              question: 'Desidera ripristinare le impostazioni di fabbrica del server?',
              info: 'Tutti i dati associati a questo server saranno cancellati.'
            },
            browsers: 'Attenzione, il browser non è compatibile con la applicazione oppure è una versione molto vecchia. Se desidera utilizzare l\'applicazione, le raccomandiamo di installare o aggiornare uno dei seguenti browser.',
            firmware_updated: 'Firmware aggiornato',
            remove_schedule: 'Desidera eliminare la programmazione ?',
            disable_permission_device: 'DKN WServer richiede almeno un utente:',
            user_device_added: 'Server aggiunto correttamente',
            user_device_updated: 'Server aggiornato correttamente',
            add_device: 'Aggiungere DKN Wserver',
            server_data: 'Dati del server',
            remove_server: 'Rimuovere server',
            restore_factory: 'Ripristinare impostazioni di fabbrica',
            remove_installation_confirm: 'Rimuovere installazione',
            remove_user_confirm: 'Rimuovere utente dell\'installazione',
            device_permissions: 'Permissi DKN WServer',
            installation_permissions: 'Permissi dell\'installazione'
          }
        },
        servers: {
          no_results: 'Non ci sono server',
          tags: {
            servers: 'Server',
            results: 'Risultati',
            page: 'Pagina',
            of: ' di ',
            update: 'Aggiornare'
          },
          'new': {
            add_servers: 'Aggiungere server',
            'return': 'Indietro',
            from_file: 'Da file',
            select_file: 'Selezionare un file',
            select_file2: 'Selezionare un file',
            from_form: 'Da modulo',
            success_add2: 'Sono stati aggiunti',
            success_add_f2: 'servers correttamente',
            success_add1: 'E\' stato aggiunto',
            success_add_f1: 'server correttamente',
            failure_add1: 'No si può aggiungere questo server',
            failure_add2: 'No si possono aggiungere questi server',
            failure_add_f2: 'server',
            accept: 'Accettare',
            success: {
              added: 'Server aggiunto correttamente',
              added2: 'Server correttamente incorporato sulla piattaforma'
            }
          },
          remove: {
            message: 'Server cancellato',
            confirmation_deleted: 'Server cancellato correttamente'
          }
        },
        terms: {
          accept: 'Accetto le ',
          legal_terms: 'Condizioni di utilizzo',
          and: ' e l\'',
          privacy: 'Informativa sulla privacy',
          publicity: 'Desidero ricevere comunicazioni commerciali'
        },
        installation_relation_list: {
          title: 'Installazioni',
          no_installations_title: 'Benvenuto!',
          no_installations_info: 'Per cominciare a controllare la sua installazione, deve aggiungere un server al suo account.',
          internal_error: 'Errore interno',
          internal_error_message: 'Quanto richiesto non può essere eseguito. Per favore, riprovare più tardi',
          actions: {
            edit: 'Modifica',
            close: 'Chiudi',
            add_device: 'Aggiungere server'
          }
        },
        add_device: {
          name_placeholder: 'Nome (cucina, soggiorno, camera)',
          mac_placeholder: 'MAC (12:AB:34:CD:45:F0)',
          pin_placeholder: 'PIN',
          choose_installation: 'Scegliere installazione',
          add_device: 'Indicare il server'
        },
        add_installation: {
          add_installation: 'Aggiungere installazione',
          name_placeholder: 'Nome (casa, ufficio, ecc.)',
          location_placeholder: 'Ubicazione dell\'installazione',
          postal_code_placeholder: 'Codice Postale',
          type: 'Tipo d\'installazione'
        },
        add_user_to_device: {
        },
        users: {
          title: 'Utenti',
          basic: 'Basico',
          advanced: 'Master'
        },
        admin_users: {
          title: 'UTENTI',
          email: 'Email',
          name: 'Nome',
          results: 'Risultati',
          no_results: 'Non ci sono risultati',
          page: 'Pagina',
          of: 'di',
          device_modal: {
            title: 'Server accessibile per l\'utente',
            no_devices: 'L\'utente non ha accesso a nessun server',
            location: 'Ubicazione'
          }
        }
      },
      ja: {
        faker: {
          address: {
            postcode: [
              '###-####'
            ],
            state: [
              '北海道',
              '青森県',
              '岩手県',
              '宮城県',
              '秋田県',
              '山形県',
              '福島県',
              '茨城県',
              '栃木県',
              '群馬県',
              '埼玉県',
              '千葉県',
              '東京都',
              '神奈川県',
              '新潟県',
              '富山県',
              '石川県',
              '福井県',
              '山梨県',
              '長野県',
              '岐阜県',
              '静岡県',
              '愛知県',
              '三重県',
              '滋賀県',
              '京都府',
              '大阪府',
              '兵庫県',
              '奈良県',
              '和歌山県',
              '鳥取県',
              '島根県',
              '岡山県',
              '広島県',
              '山口県',
              '徳島県',
              '香川県',
              '愛媛県',
              '高知県',
              '福岡県',
              '佐賀県',
              '長崎県',
              '熊本県',
              '大分県',
              '宮崎県',
              '鹿児島県',
              '沖縄県'
            ],
            state_abbr: [
              '1',
              '2',
              '3',
              '4',
              '5',
              '6',
              '7',
              '8',
              '9',
              '10',
              '11',
              '12',
              '13',
              '14',
              '15',
              '16',
              '17',
              '18',
              '19',
              '20',
              '21',
              '22',
              '23',
              '24',
              '25',
              '26',
              '27',
              '28',
              '29',
              '30',
              '31',
              '32',
              '33',
              '34',
              '35',
              '36',
              '37',
              '38',
              '39',
              '40',
              '41',
              '42',
              '43',
              '44',
              '45',
              '46',
              '47'
            ],
            city_prefix: [
              '北',
              '東',
              '西',
              '南',
              '新',
              '湖',
              '港'
            ],
            city_suffix: [
              '市',
              '区',
              '町',
              '村'
            ],
            city: [
              '#{city_prefix}#{Name.first_name}#{city_suffix}',
              '#{Name.first_name}#{city_suffix}',
              '#{city_prefix}#{Name.last_name}#{city_suffix}',
              '#{Name.last_name}#{city_suffix}'
            ],
            street_name: [
              '#{Name.first_name}#{street_suffix}',
              '#{Name.last_name}#{street_suffix}'
            ]
          },
          phone_number: {
            formats: [
              '0####-#-####',
              '0###-##-####',
              '0##-###-####',
              '0#-####-####'
            ]
          },
          cell_phone: {
            formats: [
              '090-####-####',
              '080-####-####',
              '070-####-####'
            ]
          },
          name: {
            last_name: [
              '佐藤',
              '鈴木',
              '高橋',
              '田中',
              '渡辺',
              '伊藤',
              '山本',
              '中村',
              '小林',
              '加藤',
              '吉田',
              '山田',
              '佐々木',
              '山口',
              '斎藤',
              '松本',
              '井上',
              '木村',
              '林',
              '清水'
            ],
            first_name: [
              '大翔',
              '蓮',
              '颯太',
              '樹',
              '大和',
              '陽翔',
              '陸斗',
              '太一',
              '海翔',
              '蒼空',
              '翼',
              '陽菜',
              '結愛',
              '結衣',
              '杏',
              '莉子',
              '美羽',
              '結菜',
              '心愛',
              '愛菜',
              '美咲'
            ],
            name: [
              '#{last_name} #{first_name}'
            ]
          }
        }
      },
      ko: {
        faker: {
          address: {
            postcode: [
              '###-###'
            ],
            state: [
              '강원',
              '경기',
              '경남',
              '경북',
              '광주',
              '대구',
              '대전',
              '부산',
              '서울',
              '울산',
              '인천',
              '전남',
              '전북',
              '제주',
              '충남',
              '충북',
              '세종'
            ],
            state_abbr: [
              '강원',
              '경기',
              '경남',
              '경북',
              '광주',
              '대구',
              '대전',
              '부산',
              '서울',
              '울산',
              '인천',
              '전남',
              '전북',
              '제주',
              '충남',
              '충북',
              '세종'
            ],
            city_suffix: [
              '구',
              '시',
              '군'
            ],
            city_name: [
              '강릉',
              '양양',
              '인제',
              '광주',
              '구리',
              '부천',
              '밀양',
              '통영',
              '창원',
              '거창',
              '고성',
              '양산',
              '김천',
              '구미',
              '영주',
              '광산',
              '남',
              '북',
              '고창',
              '군산',
              '남원',
              '동작',
              '마포',
              '송파',
              '용산',
              '부평',
              '강화',
              '수성'
            ],
            city: [
              '#{city_name}#{city_suffix}'
            ],
            street_root: [
              '상계',
              '화곡',
              '신정',
              '목',
              '잠실',
              '면목',
              '주안',
              '안양',
              '중',
              '정왕',
              '구로',
              '신월',
              '연산',
              '부평',
              '창',
              '만수',
              '중계',
              '검단',
              '시흥',
              '상도',
              '방배',
              '장유',
              '상',
              '광명',
              '신길',
              '행신',
              '대명',
              '동탄'
            ],
            street_suffix: [
              '읍',
              '면',
              '동'
            ],
            street_name: [
              '#{street_root}#{street_suffix}'
            ]
          },
          phone_number: {
            formats: [
              '0#-#####-####',
              '0##-###-####',
              '0##-####-####'
            ]
          },
          company: {
            suffix: [
              '연구소',
              '게임즈',
              '그룹',
              '전자',
              '물산',
              '코리아'
            ],
            prefix: [
              '주식회사',
              '한국'
            ],
            name: [
              '#{prefix} #{Name.first_name}',
              '#{Name.first_name} #{suffix}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.co.kr',
              'hanmail.net',
              'naver.com'
            ],
            domain_suffix: [
              'co.kr',
              'com',
              'biz',
              'info',
              'ne.kr',
              'net',
              'or.kr',
              'org'
            ]
          },
          lorem: {
            words: [
              '국가는',
              '법률이',
              '정하는',
              '바에',
              '의하여',
              '재외국민을',
              '보호할',
              '의무를',
              '진다.',
              '모든',
              '국민은',
              '신체의',
              '자유를',
              '가진다.',
              '국가는',
              '전통문화의',
              '계승·발전과',
              '민족문화의',
              '창달에',
              '노력하여야',
              '한다.',
              '통신·방송의',
              '시설기준과',
              '신문의',
              '기능을',
              '보장하기',
              '위하여',
              '필요한',
              '사항은',
              '법률로',
              '정한다.',
              '헌법에',
              '의하여',
              '체결·공포된',
              '조약과',
              '일반적으로',
              '승인된',
              '국제법규는',
              '국내법과',
              '같은',
              '효력을',
              '가진다.',
              '다만,',
              '현행범인인',
              '경우와',
              '장기',
              '3년',
              '이상의',
              '형에',
              '해당하는',
              '죄를',
              '범하고',
              '도피',
              '또는',
              '증거인멸의',
              '염려가',
              '있을',
              '때에는',
              '사후에',
              '영장을',
              '청구할',
              '수',
              '있다.',
              '저작자·발명가·과학기술자와',
              '예술가의',
              '권리는',
              '법률로써',
              '보호한다.',
              '형사피고인은',
              '유죄의',
              '판결이',
              '확정될',
              '때까지는',
              '무죄로',
              '추정된다.',
              '모든',
              '국민은',
              '행위시의',
              '법률에',
              '의하여',
              '범죄를',
              '구성하지',
              '아니하는',
              '행위로',
              '소추되지',
              '아니하며,',
              '동일한',
              '범죄에',
              '대하여',
              '거듭',
              '처벌받지',
              '아니한다.',
              '국가는',
              '평생교육을',
              '진흥하여야',
              '한다.',
              '모든',
              '국민은',
              '사생활의',
              '비밀과',
              '자유를',
              '침해받지',
              '아니한다.',
              '의무교육은',
              '무상으로',
              '한다.',
              '저작자·발명가·과학기술자와',
              '예술가의',
              '권리는',
              '법률로써',
              '보호한다.',
              '국가는',
              '모성의',
              '보호를',
              '위하여',
              '노력하여야',
              '한다.',
              '헌법에',
              '의하여',
              '체결·공포된',
              '조약과',
              '일반적으로',
              '승인된',
              '국제법규는',
              '국내법과',
              '같은',
              '효력을',
              '가진다.'
            ]
          },
          name: {
            last_name: [
              '김',
              '이',
              '박',
              '최',
              '정',
              '강',
              '조',
              '윤',
              '장',
              '임',
              '오',
              '한',
              '신',
              '서',
              '권',
              '황',
              '안',
              '송',
              '류',
              '홍'
            ],
            first_name: [
              '서연',
              '민서',
              '서현',
              '지우',
              '서윤',
              '지민',
              '수빈',
              '하은',
              '예은',
              '윤서',
              '민준',
              '지후',
              '지훈',
              '준서',
              '현우',
              '예준',
              '건우',
              '현준',
              '민재',
              '우진',
              '은주'
            ],
            name: [
              '#{last_name} #{first_name}'
            ]
          }
        }
      },
      'nb-NO': {
        faker: {
          address: {
            city_root: [
              'Fet',
              'Gjes',
              'Høy',
              'Inn',
              'Fager',
              'Lille',
              'Lo',
              'Mal',
              'Nord',
              'Nær',
              'Sand',
              'Sme',
              'Stav',
              'Stor',
              'Tand',
              'Ut',
              'Vest'
            ],
            city_suffix: [
              'berg',
              'borg',
              'by',
              'bø',
              'dal',
              'eid',
              'fjell',
              'fjord',
              'foss',
              'grunn',
              'hamn',
              'havn',
              'helle',
              'mark',
              'nes',
              'odden',
              'sand',
              'sjøen',
              'stad',
              'strand',
              'strøm',
              'sund',
              'vik',
              'vær',
              'våg',
              'ø',
              'øy',
              'ås'
            ],
            street_prefix: [
              'Øvre',
              'Nedre',
              'Søndre',
              'Gamle',
              'Østre',
              'Vestre'
            ],
            street_root: [
              'Eike',
              'Bjørke',
              'Gran',
              'Vass',
              'Furu',
              'Litj',
              'Lille',
              'Høy',
              'Fosse',
              'Elve',
              'Ku',
              'Konvall',
              'Soldugg',
              'Hestemyr',
              'Granitt',
              'Hegge',
              'Rogne',
              'Fiol',
              'Sol',
              'Ting',
              'Malm',
              'Klokker',
              'Preste',
              'Dam',
              'Geiterygg',
              'Bekke',
              'Berg',
              'Kirke',
              'Kors',
              'Bru',
              'Blåveis',
              'Torg',
              'Sjø'
            ],
            street_suffix: [
              'alléen',
              'bakken',
              'berget',
              'bråten',
              'eggen',
              'engen',
              'ekra',
              'faret',
              'flata',
              'gata',
              'gjerdet',
              'grenda',
              'gropa',
              'hagen',
              'haugen',
              'havna',
              'holtet',
              'høgda',
              'jordet',
              'kollen',
              'kroken',
              'lia',
              'lunden',
              'lyngen',
              'løkka',
              'marka',
              'moen',
              'myra',
              'plassen',
              'ringen',
              'roa',
              'røa',
              'skogen',
              'skrenten',
              'spranget',
              'stien',
              'stranda',
              'stubben',
              'stykket',
              'svingen',
              'tjernet',
              'toppen',
              'tunet',
              'vollen',
              'vika',
              'åsen'
            ],
            common_street_suffix: [
              'sgate',
              'svei',
              's Gate',
              's Vei',
              'gata',
              'veien'
            ],
            building_number: [
              '#',
              '##'
            ],
            secondary_address: [
              'Leil. ###',
              'Oppgang A',
              'Oppgang B'
            ],
            postcode: [
              '####',
              '####',
              '####',
              '0###'
            ],
            state: [
              ''
            ],
            city: [
              '#{city_root}#{city_suffix}'
            ],
            street_name: [
              '#{street_root}#{street_suffix}',
              '#{street_prefix} #{street_root}#{street_suffix}',
              '#{Name.first_name}#{common_street_suffix}',
              '#{Name.last_name}#{common_street_suffix}'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            default_country: [
              'Norge'
            ]
          },
          company: {
            suffix: [
              'Gruppen',
              'AS',
              'ASA',
              'BA',
              'RFH',
              'og Sønner'
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} og #{Name.last_name}'
            ]
          },
          internet: {
            domain_suffix: [
              'no',
              'com',
              'net',
              'org'
            ]
          },
          name: {
            first_name: [
              'Emma',
              'Sara',
              'Thea',
              'Ida',
              'Julie',
              'Nora',
              'Emilie',
              'Ingrid',
              'Hanna',
              'Maria',
              'Sofie',
              'Anna',
              'Malin',
              'Amalie',
              'Vilde',
              'Frida',
              'Andrea',
              'Tuva',
              'Victoria',
              'Mia',
              'Karoline',
              'Mathilde',
              'Martine',
              'Linnea',
              'Marte',
              'Hedda',
              'Marie',
              'Helene',
              'Silje',
              'Leah',
              'Maja',
              'Elise',
              'Oda',
              'Kristine',
              'Aurora',
              'Kaja',
              'Camilla',
              'Mari',
              'Maren',
              'Mina',
              'Selma',
              'Jenny',
              'Celine',
              'Eline',
              'Sunniva',
              'Natalie',
              'Tiril',
              'Synne',
              'Sandra',
              'Madeleine',
              'Markus',
              'Mathias',
              'Kristian',
              'Jonas',
              'Andreas',
              'Alexander',
              'Martin',
              'Sander',
              'Daniel',
              'Magnus',
              'Henrik',
              'Tobias',
              'Kristoffer',
              'Emil',
              'Adrian',
              'Sebastian',
              'Marius',
              'Elias',
              'Fredrik',
              'Thomas',
              'Sondre',
              'Benjamin',
              'Jakob',
              'Oliver',
              'Lucas',
              'Oskar',
              'Nikolai',
              'Filip',
              'Mats',
              'William',
              'Erik',
              'Simen',
              'Ole',
              'Eirik',
              'Isak',
              'Kasper',
              'Noah',
              'Lars',
              'Joakim',
              'Johannes',
              'Håkon',
              'Sindre',
              'Jørgen',
              'Herman',
              'Anders',
              'Jonathan',
              'Even',
              'Theodor',
              'Mikkel',
              'Aksel'
            ],
            feminine_name: [
              'Emma',
              'Sara',
              'Thea',
              'Ida',
              'Julie',
              'Nora',
              'Emilie',
              'Ingrid',
              'Hanna',
              'Maria',
              'Sofie',
              'Anna',
              'Malin',
              'Amalie',
              'Vilde',
              'Frida',
              'Andrea',
              'Tuva',
              'Victoria',
              'Mia',
              'Karoline',
              'Mathilde',
              'Martine',
              'Linnea',
              'Marte',
              'Hedda',
              'Marie',
              'Helene',
              'Silje',
              'Leah',
              'Maja',
              'Elise',
              'Oda',
              'Kristine',
              'Aurora',
              'Kaja',
              'Camilla',
              'Mari',
              'Maren',
              'Mina',
              'Selma',
              'Jenny',
              'Celine',
              'Eline',
              'Sunniva',
              'Natalie',
              'Tiril',
              'Synne',
              'Sandra',
              'Madeleine'
            ],
            masculine_name: [
              'Markus',
              'Mathias',
              'Kristian',
              'Jonas',
              'Andreas',
              'Alexander',
              'Martin',
              'Sander',
              'Daniel',
              'Magnus',
              'Henrik',
              'Tobias',
              'Kristoffer',
              'Emil',
              'Adrian',
              'Sebastian',
              'Marius',
              'Elias',
              'Fredrik',
              'Thomas',
              'Sondre',
              'Benjamin',
              'Jakob',
              'Oliver',
              'Lucas',
              'Oskar',
              'Nikolai',
              'Filip',
              'Mats',
              'William',
              'Erik',
              'Simen',
              'Ole',
              'Eirik',
              'Isak',
              'Kasper',
              'Noah',
              'Lars',
              'Joakim',
              'Johannes',
              'Håkon',
              'Sindre',
              'Jørgen',
              'Herman',
              'Anders',
              'Jonathan',
              'Even',
              'Theodor',
              'Mikkel',
              'Aksel'
            ],
            last_name: [
              'Johansen',
              'Hansen',
              'Andersen',
              'Kristiansen',
              'Larsen',
              'Olsen',
              'Solberg',
              'Andresen',
              'Pedersen',
              'Nilsen',
              'Berg',
              'Halvorsen',
              'Karlsen',
              'Svendsen',
              'Jensen',
              'Haugen',
              'Martinsen',
              'Eriksen',
              'Sørensen',
              'Johnsen',
              'Myhrer',
              'Johannessen',
              'Nielsen',
              'Hagen',
              'Pettersen',
              'Bakke',
              'Skuterud',
              'Løken',
              'Gundersen',
              'Strand',
              'Jørgensen',
              'Kvarme',
              'Røed',
              'Sæther',
              'Stensrud',
              'Moe',
              'Kristoffersen',
              'Jakobsen',
              'Holm',
              'Aas',
              'Lie',
              'Moen',
              'Andreassen',
              'Vedvik',
              'Nguyen',
              'Jacobsen',
              'Torgersen',
              'Ruud',
              'Krogh',
              'Christiansen',
              'Bjerke',
              'Aalerud',
              'Borge',
              'Sørlie',
              'Berge',
              'Østli',
              'Ødegård',
              'Torp',
              'Henriksen',
              'Haukelidsæter',
              'Fjeld',
              'Danielsen',
              'Aasen',
              'Fredriksen',
              'Dahl',
              'Berntsen',
              'Arnesen',
              'Wold',
              'Thoresen',
              'Solheim',
              'Skoglund',
              'Bakken',
              'Amundsen',
              'Solli',
              'Smogeli',
              'Kristensen',
              'Glosli',
              'Fossum',
              'Evensen',
              'Eide',
              'Carlsen',
              'Østby',
              'Vegge',
              'Tangen',
              'Smedsrud',
              'Olstad',
              'Lunde',
              'Kleven',
              'Huseby',
              'Bjørnstad',
              'Ryan',
              'Rasmussen',
              'Nygård',
              'Nordskaug',
              'Nordby',
              'Mathisen',
              'Hopland',
              'Gran',
              'Finstad',
              'Edvardsen'
            ],
            prefix: [
              'Dr.',
              'Prof.'
            ],
            suffix: [
              'Jr.',
              'Sr.',
              'I',
              'II',
              'III',
              'IV',
              'V'
            ],
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{last_name} #{suffix}',
              '#{feminine_name} #{feminine_name} #{last_name}',
              '#{masculine_name} #{masculine_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name}',
              '#{first_name} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '########',
              '## ## ## ##',
              '### ## ###',
              '+47 ## ## ## ##'
            ]
          }
        }
      },
      nl: {
        faker: {
          address: {
            city_prefix: [
              'Noord',
              'Oost',
              'West',
              'Zuid',
              'Nieuw',
              'Oud'
            ],
            city_suffix: [
              'dam',
              'berg',
              ' aan de Rijn',
              ' aan de IJssel',
              'swaerd',
              'endrecht',
              'recht',
              'ambacht',
              'enmaes',
              'wijk',
              'sland',
              'stroom',
              'sluus',
              'dijk',
              'dorp',
              'burg',
              'veld',
              'sluis',
              'koop',
              'lek',
              'hout',
              'geest',
              'kerk',
              'woude',
              'hoven',
              'hoten',
              'ingen',
              'plas',
              'meer'
            ],
            city: [
              '#{Name.first_name}#{city_suffix}',
              '#{Name.last_name}#{city_suffix}',
              '#{city_prefix} #{Name.first_name}#{city_suffix}',
              '#{city_prefix} #{Name.last_name}#{city_suffix}'
            ],
            country: [
              'Afghanistan',
              'Akrotiri',
              'Albanië',
              'Algerije',
              'Amerikaanse Maagdeneilanden',
              'Amerikaans-Samoa',
              'Andorra',
              'Angola',
              'Anguilla',
              'Antarctica',
              'Antigua en Barbuda',
              'Arctic Ocean',
              'Argentinië',
              'Armenië',
              'Aruba',
              'Ashmore and Cartier Islands',
              'Atlantic Ocean',
              'Australië',
              'Azerbeidzjan',
              'Bahama\'s',
              'Bahrein',
              'Bangladesh',
              'Barbados',
              'Belarus',
              'België',
              'Belize',
              'Benin',
              'Bermuda',
              'Bhutan',
              'Bolivië',
              'Bosnië-Herzegovina',
              'Botswana',
              'Bouvet Island',
              'Brazilië',
              'British Indian Ocean Territory',
              'Britse Maagdeneilanden',
              'Brunei',
              'Bulgarije',
              'Burkina Faso',
              'Burundi',
              'Cambodja',
              'Canada',
              'Caymaneilanden',
              'Centraal-Afrikaanse Republiek',
              'Chili',
              'China',
              'Christmas Island',
              'Clipperton Island',
              'Cocos (Keeling) Islands',
              'Colombia',
              'Comoren (Unie)',
              'Congo (Democratische Republiek)',
              'Congo (Volksrepubliek)',
              'Cook',
              'Coral Sea Islands',
              'Costa Rica',
              'Cuba',
              'Cyprus',
              'Denemarken',
              'Dhekelia',
              'Djibouti',
              'Dominica',
              'Dominicaanse Republiek',
              'Duitsland',
              'Ecuador',
              'Egypte',
              'El Salvador',
              'Equatoriaal-Guinea',
              'Eritrea',
              'Estland',
              'Ethiopië',
              'European Union',
              'Falkland',
              'Faroe Islands',
              'Fiji',
              'Filipijnen',
              'Finland',
              'Frankrijk',
              'Frans-Polynesië',
              'French Southern and Antarctic Lands',
              'Gabon',
              'Gambia',
              'Gaza Strip',
              'Georgië',
              'Ghana',
              'Gibraltar',
              'Grenada',
              'Griekenland',
              'Groenland',
              'Guam',
              'Guatemala',
              'Guernsey',
              'Guinea',
              'Guinee-Bissau',
              'Guyana',
              'Haïti',
              'Heard Island and McDonald Islands',
              'Heilige Stoel',
              'Honduras',
              'Hongarije',
              'Hongkong',
              'Ierland',
              'IJsland',
              'India',
              'Indian Ocean',
              'Indonesië',
              'Irak',
              'Iran',
              'Isle of Man',
              'Israël',
              'Italië',
              'Ivoorkust',
              'Jamaica',
              'Jan Mayen',
              'Japan',
              'Jemen',
              'Jersey',
              'Jordanië',
              'Kaapverdië',
              'Kameroen',
              'Kazachstan',
              'Kenia',
              'Kirgizstan',
              'Kiribati',
              'Koeweit',
              'Kroatië',
              'Laos',
              'Lesotho',
              'Letland',
              'Libanon',
              'Liberia',
              'Libië',
              'Liechtenstein',
              'Litouwen',
              'Luxemburg',
              'Macao',
              'Macedonië',
              'Madagaskar',
              'Malawi',
              'Maldiven',
              'Maleisië',
              'Mali',
              'Malta',
              'Marokko',
              'Marshall Islands',
              'Mauritanië',
              'Mauritius',
              'Mayotte',
              'Mexico',
              'Micronesia, Federated States of',
              'Moldavië',
              'Monaco',
              'Mongolië',
              'Montenegro',
              'Montserrat',
              'Mozambique',
              'Myanmar',
              'Namibië',
              'Nauru',
              'Navassa Island',
              'Nederland',
              'Nederlandse Antillen',
              'Nepal',
              'Ngwane',
              'Nicaragua',
              'Nieuw-Caledonië',
              'Nieuw-Zeeland',
              'Niger',
              'Nigeria',
              'Niue',
              'Noordelijke Marianen',
              'Noord-Korea',
              'Noorwegen',
              'Norfolk Island',
              'Oekraïne',
              'Oezbekistan',
              'Oman',
              'Oostenrijk',
              'Pacific Ocean',
              'Pakistan',
              'Palau',
              'Panama',
              'Papoea-Nieuw-Guinea',
              'Paracel Islands',
              'Paraguay',
              'Peru',
              'Pitcairn',
              'Polen',
              'Portugal',
              'Puerto Rico',
              'Qatar',
              'Roemenië',
              'Rusland',
              'Rwanda',
              'Saint Helena',
              'Saint Lucia',
              'Saint Vincent en de Grenadines',
              'Saint-Pierre en Miquelon',
              'Salomon',
              'Samoa',
              'San Marino',
              'São Tomé en Principe',
              'Saudi-Arabië',
              'Senegal',
              'Servië',
              'Seychellen',
              'Sierra Leone',
              'Singapore',
              'Sint-Kitts en Nevis',
              'Slovenië',
              'Slowakije',
              'Soedan',
              'Somalië',
              'South Georgia and the South Sandwich Islands',
              'Southern Ocean',
              'Spanje',
              'Spratly Islands',
              'Sri Lanka',
              'Suriname',
              'Svalbard',
              'Syrië',
              'Tadzjikistan',
              'Taiwan',
              'Tanzania',
              'Thailand',
              'Timor Leste',
              'Togo',
              'Tokelau',
              'Tonga',
              'Trinidad en Tobago',
              'Tsjaad',
              'Tsjechië',
              'Tunesië',
              'Turkije',
              'Turkmenistan',
              'Turks-en Caicoseilanden',
              'Tuvalu',
              'Uganda',
              'Uruguay',
              'Vanuatu',
              'Venezuela',
              'Verenigd Koninkrijk',
              'Verenigde Arabische Emiraten',
              'Verenigde Staten van Amerika',
              'Vietnam',
              'Wake Island',
              'Wallis en Futuna',
              'Wereld',
              'West Bank',
              'Westelijke Sahara',
              'Zambia',
              'Zimbabwe',
              'Zuid-Afrika',
              'Zuid-Korea',
              'Zweden',
              'Zwitserland'
            ],
            building_number: [
              '#',
              '##',
              '###',
              '###a',
              '###b',
              '###c',
              '### I',
              '### II',
              '### III'
            ],
            street_suffix: [
              'straat',
              'laan',
              'weg',
              'plantsoen',
              'park'
            ],
            secondary_address: [
              '1 hoog',
              '2 hoog',
              '3 hoog'
            ],
            street_name: [
              '#{Name.first_name}#{street_suffix}',
              '#{Name.last_name}#{street_suffix}'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            postcode: [
              '#### ??'
            ],
            state: [
              'Noord-Holland',
              'Zuid-Holland',
              'Utrecht',
              'Zeeland',
              'Overijssel',
              'Gelderland',
              'Drenthe',
              'Friesland',
              'Groningen',
              'Noord-Braband',
              'Limburg'
            ],
            default_country: [
              'Nederland'
            ]
          },
          company: {
            suffix: [
              'BV',
              'V.O.F.',
              'Group',
              'en Zonen'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'nl',
              'com',
              'net',
              'org'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ],
            supplemental: [
              'abbas',
              'abduco',
              'abeo',
              'abscido',
              'absconditus',
              'absens',
              'absorbeo',
              'absque',
              'abstergo',
              'absum',
              'abundans',
              'abutor',
              'accedo',
              'accendo',
              'acceptus',
              'accipio',
              'accommodo',
              'accusator',
              'acer',
              'acerbitas',
              'acervus',
              'acidus',
              'acies',
              'acquiro',
              'acsi',
              'adamo',
              'adaugeo',
              'addo',
              'adduco',
              'ademptio',
              'adeo',
              'adeptio',
              'adfectus',
              'adfero',
              'adficio',
              'adflicto',
              'adhaero',
              'adhuc',
              'adicio',
              'adimpleo',
              'adinventitias',
              'adipiscor',
              'adiuvo',
              'administratio',
              'admiratio',
              'admitto',
              'admoneo',
              'admoveo',
              'adnuo',
              'adopto',
              'adsidue',
              'adstringo',
              'adsuesco',
              'adsum',
              'adulatio',
              'adulescens',
              'adultus',
              'aduro',
              'advenio',
              'adversus',
              'advoco',
              'aedificium',
              'aeger',
              'aegre',
              'aegrotatio',
              'aegrus',
              'aeneus',
              'aequitas',
              'aequus',
              'aer',
              'aestas',
              'aestivus',
              'aestus',
              'aetas',
              'aeternus',
              'ager',
              'aggero',
              'aggredior',
              'agnitio',
              'agnosco',
              'ago',
              'ait',
              'aiunt',
              'alienus',
              'alii',
              'alioqui',
              'aliqua',
              'alius',
              'allatus',
              'alo',
              'alter',
              'altus',
              'alveus',
              'amaritudo',
              'ambitus',
              'ambulo',
              'amicitia',
              'amiculum',
              'amissio',
              'amita',
              'amitto',
              'amo',
              'amor',
              'amoveo',
              'amplexus',
              'amplitudo',
              'amplus',
              'ancilla',
              'angelus',
              'angulus',
              'angustus',
              'animadverto',
              'animi',
              'animus',
              'annus',
              'anser',
              'ante',
              'antea',
              'antepono',
              'antiquus',
              'aperio',
              'aperte',
              'apostolus',
              'apparatus',
              'appello',
              'appono',
              'appositus',
              'approbo',
              'apto',
              'aptus',
              'apud',
              'aqua',
              'ara',
              'aranea',
              'arbitro',
              'arbor',
              'arbustum',
              'arca',
              'arceo',
              'arcesso',
              'arcus',
              'argentum',
              'argumentum',
              'arguo',
              'arma',
              'armarium',
              'armo',
              'aro',
              'ars',
              'articulus',
              'artificiose',
              'arto',
              'arx',
              'ascisco',
              'ascit',
              'asper',
              'aspicio',
              'asporto',
              'assentator',
              'astrum',
              'atavus',
              'ater',
              'atqui',
              'atrocitas',
              'atrox',
              'attero',
              'attollo',
              'attonbitus',
              'auctor',
              'auctus',
              'audacia',
              'audax',
              'audentia',
              'audeo',
              'audio',
              'auditor',
              'aufero',
              'aureus',
              'auris',
              'aurum',
              'aut',
              'autem',
              'autus',
              'auxilium',
              'avaritia',
              'avarus',
              'aveho',
              'averto',
              'avoco',
              'baiulus',
              'balbus',
              'barba',
              'bardus',
              'basium',
              'beatus',
              'bellicus',
              'bellum',
              'bene',
              'beneficium',
              'benevolentia',
              'benigne',
              'bestia',
              'bibo',
              'bis',
              'blandior',
              'bonus',
              'bos',
              'brevis',
              'cado',
              'caecus',
              'caelestis',
              'caelum',
              'calamitas',
              'calcar',
              'calco',
              'calculus',
              'callide',
              'campana',
              'candidus',
              'canis',
              'canonicus',
              'canto',
              'capillus',
              'capio',
              'capitulus',
              'capto',
              'caput',
              'carbo',
              'carcer',
              'careo',
              'caries',
              'cariosus',
              'caritas',
              'carmen',
              'carpo',
              'carus',
              'casso',
              'caste',
              'casus',
              'catena',
              'caterva',
              'cattus',
              'cauda',
              'causa',
              'caute',
              'caveo',
              'cavus',
              'cedo',
              'celebrer',
              'celer',
              'celo',
              'cena',
              'cenaculum',
              'ceno',
              'censura',
              'centum',
              'cerno',
              'cernuus',
              'certe',
              'certo',
              'certus',
              'cervus',
              'cetera',
              'charisma',
              'chirographum',
              'cibo',
              'cibus',
              'cicuta',
              'cilicium',
              'cimentarius',
              'ciminatio',
              'cinis',
              'circumvenio',
              'cito',
              'civis',
              'civitas',
              'clam',
              'clamo',
              'claro',
              'clarus',
              'claudeo',
              'claustrum',
              'clementia',
              'clibanus',
              'coadunatio',
              'coaegresco',
              'coepi',
              'coerceo',
              'cogito',
              'cognatus',
              'cognomen',
              'cogo',
              'cohaero',
              'cohibeo',
              'cohors',
              'colligo',
              'colloco',
              'collum',
              'colo',
              'color',
              'coma',
              'combibo',
              'comburo',
              'comedo',
              'comes',
              'cometes',
              'comis',
              'comitatus',
              'commemoro',
              'comminor',
              'commodo',
              'communis',
              'comparo',
              'compello',
              'complectus',
              'compono',
              'comprehendo',
              'comptus',
              'conatus',
              'concedo',
              'concido',
              'conculco',
              'condico',
              'conduco',
              'confero',
              'confido',
              'conforto',
              'confugo',
              'congregatio',
              'conicio',
              'coniecto',
              'conitor',
              'coniuratio',
              'conor',
              'conqueror',
              'conscendo',
              'conservo',
              'considero',
              'conspergo',
              'constans',
              'consuasor',
              'contabesco',
              'contego',
              'contigo',
              'contra',
              'conturbo',
              'conventus',
              'convoco',
              'copia',
              'copiose',
              'cornu',
              'corona',
              'corpus',
              'correptius',
              'corrigo',
              'corroboro',
              'corrumpo',
              'coruscus',
              'cotidie',
              'crapula',
              'cras',
              'crastinus',
              'creator',
              'creber',
              'crebro',
              'credo',
              'creo',
              'creptio',
              'crepusculum',
              'cresco',
              'creta',
              'cribro',
              'crinis',
              'cruciamentum',
              'crudelis',
              'cruentus',
              'crur',
              'crustulum',
              'crux',
              'cubicularis',
              'cubitum',
              'cubo',
              'cui',
              'cuius',
              'culpa',
              'culpo',
              'cultellus',
              'cultura',
              'cum',
              'cunabula',
              'cunae',
              'cunctatio',
              'cupiditas',
              'cupio',
              'cuppedia',
              'cupressus',
              'cur',
              'cura',
              'curatio',
              'curia',
              'curiositas',
              'curis',
              'curo',
              'curriculum',
              'currus',
              'cursim',
              'curso',
              'cursus',
              'curto',
              'curtus',
              'curvo',
              'curvus',
              'custodia',
              'damnatio',
              'damno',
              'dapifer',
              'debeo',
              'debilito',
              'decens',
              'decerno',
              'decet',
              'decimus',
              'decipio',
              'decor',
              'decretum',
              'decumbo',
              'dedecor',
              'dedico',
              'deduco',
              'defaeco',
              'defendo',
              'defero',
              'defessus',
              'defetiscor',
              'deficio',
              'defigo',
              'defleo',
              'defluo',
              'defungo',
              'degenero',
              'degero',
              'degusto',
              'deinde',
              'delectatio',
              'delego',
              'deleo',
              'delibero',
              'delicate',
              'delinquo',
              'deludo',
              'demens',
              'demergo',
              'demitto',
              'demo',
              'demonstro',
              'demoror',
              'demulceo',
              'demum',
              'denego',
              'denique',
              'dens',
              'denuncio',
              'denuo',
              'deorsum',
              'depereo',
              'depono',
              'depopulo',
              'deporto',
              'depraedor',
              'deprecator',
              'deprimo',
              'depromo',
              'depulso',
              'deputo',
              'derelinquo',
              'derideo',
              'deripio',
              'desidero',
              'desino',
              'desipio',
              'desolo',
              'desparatus',
              'despecto',
              'despirmatio',
              'infit',
              'inflammatio',
              'paens',
              'patior',
              'patria',
              'patrocinor',
              'patruus',
              'pauci',
              'paulatim',
              'pauper',
              'pax',
              'peccatus',
              'pecco',
              'pecto',
              'pectus',
              'pecunia',
              'pecus',
              'peior',
              'pel',
              'ocer',
              'socius',
              'sodalitas',
              'sol',
              'soleo',
              'solio',
              'solitudo',
              'solium',
              'sollers',
              'sollicito',
              'solum',
              'solus',
              'solutio',
              'solvo',
              'somniculosus',
              'somnus',
              'sonitus',
              'sono',
              'sophismata',
              'sopor',
              'sordeo',
              'sortitus',
              'spargo',
              'speciosus',
              'spectaculum',
              'speculum',
              'sperno',
              'spero',
              'spes',
              'spiculum',
              'spiritus',
              'spoliatio',
              'sponte',
              'stabilis',
              'statim',
              'statua',
              'stella',
              'stillicidium',
              'stipes',
              'stips',
              'sto',
              'strenuus',
              'strues',
              'studio',
              'stultus',
              'suadeo',
              'suasoria',
              'sub',
              'subito',
              'subiungo',
              'sublime',
              'subnecto',
              'subseco',
              'substantia',
              'subvenio',
              'succedo',
              'succurro',
              'sufficio',
              'suffoco',
              'suffragium',
              'suggero',
              'sui',
              'sulum',
              'sum',
              'summa',
              'summisse',
              'summopere',
              'sumo',
              'sumptus',
              'supellex',
              'super',
              'suppellex',
              'supplanto',
              'suppono',
              'supra',
              'surculus',
              'surgo',
              'sursum',
              'suscipio',
              'suspendo',
              'sustineo',
              'suus',
              'synagoga',
              'tabella',
              'tabernus',
              'tabesco',
              'tabgo',
              'tabula',
              'taceo',
              'tactus',
              'taedium',
              'talio',
              'talis',
              'talus',
              'tam',
              'tamdiu',
              'tamen',
              'tametsi',
              'tamisium',
              'tamquam',
              'tandem',
              'tantillus',
              'tantum',
              'tardus',
              'tego',
              'temeritas',
              'temperantia',
              'templum',
              'temptatio',
              'tempus',
              'tenax',
              'tendo',
              'teneo',
              'tener',
              'tenuis',
              'tenus',
              'tepesco',
              'tepidus',
              'ter',
              'terebro',
              'teres',
              'terga',
              'tergeo',
              'tergiversatio',
              'tergo',
              'tergum',
              'termes',
              'terminatio',
              'tero',
              'terra',
              'terreo',
              'territo',
              'terror',
              'tersus',
              'tertius',
              'testimonium',
              'texo',
              'textilis',
              'textor',
              'textus',
              'thalassinus',
              'theatrum',
              'theca',
              'thema',
              'theologus',
              'thermae',
              'thesaurus',
              'thesis',
              'thorax',
              'thymbra',
              'thymum',
              'tibi',
              'timidus',
              'timor',
              'titulus',
              'tolero',
              'tollo',
              'tondeo',
              'tonsor',
              'torqueo',
              'torrens',
              'tot',
              'totidem',
              'toties',
              'totus',
              'tracto',
              'trado',
              'traho',
              'trans',
              'tredecim',
              'tremo',
              'trepide',
              'tres',
              'tribuo',
              'tricesimus',
              'triduana',
              'triginta',
              'tripudio',
              'tristis',
              'triumphus',
              'trucido',
              'truculenter',
              'tubineus',
              'tui',
              'tum',
              'tumultus',
              'tunc',
              'turba',
              'turbo',
              'turpe',
              'turpis',
              'tutamen',
              'tutis',
              'tyrannus',
              'uberrime',
              'ubi',
              'ulciscor',
              'ullus',
              'ulterius',
              'ultio',
              'ultra',
              'umbra',
              'umerus',
              'umquam',
              'una',
              'unde',
              'undique',
              'universe',
              'unus',
              'urbanus',
              'urbs',
              'uredo',
              'usitas',
              'usque',
              'ustilo',
              'ustulo',
              'usus',
              'uter',
              'uterque',
              'utilis',
              'utique',
              'utor',
              'utpote',
              'utrimque',
              'utroque',
              'utrum',
              'uxor',
              'vaco',
              'vacuus',
              'vado',
              'vae',
              'valde',
              'valens',
              'valeo',
              'valetudo',
              'validus',
              'vallum',
              'vapulus',
              'varietas',
              'varius',
              'vehemens',
              'vel',
              'velociter',
              'velum',
              'velut',
              'venia',
              'venio',
              'ventito',
              'ventosus',
              'ventus',
              'venustas',
              'ver',
              'verbera',
              'verbum',
              'vere',
              'verecundia',
              'vereor',
              'vergo',
              'veritas',
              'vero',
              'versus',
              'verto',
              'verumtamen',
              'verus',
              'vesco',
              'vesica',
              'vesper',
              'vespillo',
              'vester',
              'vestigium',
              'vestrum',
              'vetus',
              'via',
              'vicinus',
              'vicissitudo',
              'victoria',
              'victus',
              'videlicet',
              'video',
              'viduata',
              'viduo',
              'vigilo',
              'vigor',
              'vilicus',
              'vilis',
              'vilitas',
              'villa',
              'vinco',
              'vinculum',
              'vindico',
              'vinitor',
              'vinum',
              'vir',
              'virga',
              'virgo',
              'viridis',
              'viriliter',
              'virtus',
              'vis',
              'viscus',
              'vita',
              'vitiosus',
              'vitium',
              'vito',
              'vivo',
              'vix',
              'vobis',
              'vociferor',
              'voco',
              'volaticus',
              'volo',
              'volubilis',
              'voluntarius',
              'volup',
              'volutabrum',
              'volva',
              'vomer',
              'vomica',
              'vomito',
              'vorago',
              'vorax',
              'voro',
              'vos',
              'votum',
              'voveo',
              'vox',
              'vulariter',
              'vulgaris',
              'vulgivagus',
              'vulgo',
              'vulgus',
              'vulnero',
              'vulnus',
              'vulpes',
              'vulticulus',
              'vultuosus',
              'xiphias'
            ]
          },
          name: {
            first_name: [
              'Amber',
              'Anna',
              'Anne',
              'Anouk',
              'Bas',
              'Bram',
              'Britt',
              'Daan',
              'Emma',
              'Eva',
              'Femke',
              'Finn',
              'Fleur',
              'Iris',
              'Isa',
              'Jan',
              'Jasper',
              'Jayden',
              'Jesse',
              'Johannes',
              'Julia',
              'Julian',
              'Kevin',
              'Lars',
              'Lieke',
              'Lisa',
              'Lotte',
              'Lucas',
              'Luuk',
              'Maud',
              'Max',
              'Mike',
              'Milan',
              'Nick',
              'Niels',
              'Noa',
              'Rick',
              'Roos',
              'Ruben',
              'Sander',
              'Sanne',
              'Sem',
              'Sophie',
              'Stijn',
              'Sven',
              'Thijs',
              'Thijs',
              'Thomas',
              'Tim',
              'Tom'
            ],
            tussenvoegsel: [
              'van',
              'van de',
              'van den',
              'van \'t',
              'van het',
              'de',
              'den'
            ],
            last_name: [
              'Bakker',
              'Beek',
              'Berg',
              'Boer',
              'Bos',
              'Bosch',
              'Brink',
              'Broek',
              'Brouwer',
              'Bruin',
              'Dam',
              'Dekker',
              'Dijk',
              'Dijkstra',
              'Graaf',
              'Groot',
              'Haan',
              'Hendriks',
              'Heuvel',
              'Hoek',
              'Jacobs',
              'Jansen',
              'Janssen',
              'Jong',
              'Klein',
              'Kok',
              'Koning',
              'Koster',
              'Leeuwen',
              'Linden',
              'Maas',
              'Meer',
              'Meijer',
              'Mulder',
              'Peters',
              'Ruiter',
              'Schouten',
              'Smit',
              'Smits',
              'Stichting',
              'Veen',
              'Ven',
              'Vermeulen',
              'Visser',
              'Vliet',
              'Vos',
              'Vries',
              'Wal',
              'Willems',
              'Wit'
            ],
            prefix: [
              'Dhr.',
              'Mevr. Dr.',
              'Bsc',
              'Msc',
              'Prof.'
            ],
            suffix: [
              'Jr.',
              'Sr.',
              'I',
              'II',
              'III',
              'IV',
              'V'
            ],
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{last_name} #{suffix}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{tussenvoegsel} #{last_name}',
              '#{first_name} #{tussenvoegsel} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '(####) ######',
              '##########',
              '06########',
              '06 #### ####'
            ]
          }
        }
      },
      pl: {
        faker: {
          name: {
            first_name: [
              'Aaron',
              'Abraham',
              'Adam',
              'Adrian',
              'Atanazy',
              'Agaton',
              'Alan',
              'Albert',
              'Aleksander',
              'Aleksy',
              'Alfred',
              'Alwar',
              'Ambroży',
              'Anatol',
              'Andrzej',
              'Antoni',
              'Apollinary',
              'Apollo',
              'Arkady',
              'Arkadiusz',
              'Archibald',
              'Arystarch',
              'Arnold',
              'Arseniusz',
              'Artur',
              'August',
              'Baldwin',
              'Bazyli',
              'Benedykt',
              'Beniamin',
              'Bernard',
              'Bertrand',
              'Bertram',
              'Borys',
              'Brajan',
              'Bruno',
              'Cezary',
              'Cecyliusz',
              'Karol',
              'Krystian',
              'Krzysztof',
              'Klarencjusz',
              'Klaudiusz',
              'Klemens',
              'Konrad',
              'Konstanty',
              'Konstantyn',
              'Kornel',
              'Korneliusz',
              'Korneli',
              'Cyryl',
              'Cyrus',
              'Damian',
              'Daniel',
              'Dariusz',
              'Dawid',
              'Dionizy',
              'Demetriusz',
              'Dominik',
              'Donald',
              'Dorian',
              'Edgar',
              'Edmund',
              'Edward',
              'Edwin',
              'Efrem',
              'Efraim',
              'Eliasz',
              'Eleazar',
              'Emil',
              'Emanuel',
              'Erast',
              'Ernest',
              'Eugeniusz',
              'Eustracjusz',
              'Fabian',
              'Feliks',
              'Florian',
              'Franciszek',
              'Fryderyk',
              'Gabriel',
              'Gedeon',
              'Galfryd',
              'Jerzy',
              'Gerald',
              'Gerazym',
              'Gilbert',
              'Gonsalwy',
              'Grzegorz',
              'Gwido',
              'Harald',
              'Henryk',
              'Herbert',
              'Herman',
              'Hilary',
              'Horacy',
              'Hubert',
              'Hugo',
              'Ignacy',
              'Igor',
              'Hilarion',
              'Innocenty',
              'Hipolit',
              'Ireneusz',
              'Erwin',
              'Izaak',
              'Izajasz',
              'Izydor',
              'Jakub',
              'Jeremi',
              'Jeremiasz',
              'Hieronim',
              'Gerald',
              'Joachim',
              'Jan',
              'Janusz',
              'Jonatan',
              'Józef',
              'Jozue',
              'Julian',
              'Juliusz',
              'Justyn',
              'Kalistrat',
              'Kazimierz',
              'Wawrzyniec',
              'Laurenty',
              'Laurencjusz',
              'Łazarz',
              'Leon',
              'Leonard',
              'Leonid',
              'Leon',
              'Ludwik',
              'Łukasz',
              'Lucjan',
              'Magnus',
              'Makary',
              'Marceli',
              'Marek',
              'Marcin',
              'Mateusz',
              'Maurycy',
              'Maksym',
              'Maksymilian',
              'Michał',
              'Miron',
              'Modest',
              'Mojżesz',
              'Natan',
              'Natanael',
              'Nazariusz',
              'Nazary',
              'Nestor',
              'Mikołaj',
              'Nikodem',
              'Olaf',
              'Oleg',
              'Oliwier',
              'Onufry',
              'Orestes',
              'Oskar',
              'Ansgary',
              'Osmund',
              'Pankracy',
              'Pantaleon',
              'Patryk',
              'Patrycjusz',
              'Patrycy',
              'Paweł',
              'Piotr',
              'Filemon',
              'Filip',
              'Platon',
              'Polikarp',
              'Porfiry',
              'Porfiriusz',
              'Prokles',
              'Prokul',
              'Prokop',
              'Kwintyn',
              'Randolf',
              'Rafał',
              'Rajmund',
              'Reginald',
              'Rajnold',
              'Ryszard',
              'Robert',
              'Roderyk',
              'Roger',
              'Roland',
              'Roman',
              'Romeo',
              'Reginald',
              'Rudolf',
              'Samson',
              'Samuel',
              'Salwator',
              'Sebastian',
              'Serafin',
              'Sergiusz',
              'Seweryn',
              'Zygmunt',
              'Sylwester',
              'Szymon',
              'Salomon',
              'Spirydion',
              'Stanisław',
              'Szczepan',
              'Stefan',
              'Terencjusz',
              'Teodor',
              'Tomasz',
              'Tymoteusz',
              'Tobiasz',
              'Walenty',
              'Walentyn',
              'Walerian',
              'Walery',
              'Wiktor',
              'Wincenty',
              'Witalis',
              'Włodzimierz',
              'Władysław',
              'Błażej',
              'Walter',
              'Walgierz',
              'Wacław',
              'Wilfryd',
              'Wilhelm',
              'Ksawery',
              'Ksenofont',
              'Jerzy',
              'Zachariasz',
              'Zachary',
              'Ada',
              'Adelajda',
              'Agata',
              'Agnieszka',
              'Agrypina',
              'Aida',
              'Aleksandra',
              'Alicja',
              'Alina',
              'Amanda',
              'Anastazja',
              'Angela',
              'Andżelika',
              'Angelina',
              'Anna',
              'Hanna',
              '—',
              'Antonina',
              'Ariadna',
              'Aurora',
              'Barbara',
              'Beatrycze',
              'Berta',
              'Brygida',
              'Kamila',
              'Karolina',
              'Karolina',
              'Kornelia',
              'Katarzyna',
              'Cecylia',
              'Karolina',
              'Chloe',
              'Krystyna',
              'Klara',
              'Klaudia',
              'Klementyna',
              'Konstancja',
              'Koralia',
              'Daria',
              'Diana',
              'Dina',
              'Dorota',
              'Edyta',
              'Eleonora',
              'Eliza',
              'Elżbieta',
              'Izabela',
              'Elwira',
              'Emilia',
              'Estera',
              'Eudoksja',
              'Eudokia',
              'Eugenia',
              'Ewa',
              'Ewelina',
              'Ferdynanda',
              'Florencja',
              'Franciszka',
              'Gabriela',
              'Gertruda',
              'Gloria',
              'Gracja',
              'Jadwiga',
              'Helena',
              'Henryka',
              'Nadzieja',
              'Ida',
              'Ilona',
              'Helena',
              'Irena',
              'Irma',
              'Izabela',
              'Izolda',
              'Jakubina',
              'Joanna',
              'Janina',
              'Żaneta',
              'Joanna',
              'Ginewra',
              'Józefina',
              'Judyta',
              'Julia',
              'Julia',
              'Julita',
              'Justyna',
              'Kira',
              'Cyra',
              'Kleopatra',
              'Larysa',
              'Laura',
              'Laurencja',
              'Laurentyna',
              'Lea',
              'Leila',
              'Eleonora',
              'Liliana',
              'Lilianna',
              'Lilia',
              'Lilla',
              'Liza',
              'Eliza',
              'Laura',
              'Ludwika',
              'Luiza',
              'Łucja',
              'Lucja',
              'Lidia',
              'Amabela',
              'Magdalena',
              'Malwina',
              'Małgorzata',
              'Greta',
              'Marianna',
              'Maryna',
              'Marta',
              'Martyna',
              'Maria',
              'Matylda',
              'Maja',
              'Maja',
              'Melania',
              'Michalina',
              'Monika',
              'Nadzieja',
              'Noemi',
              'Natalia',
              'Nikola',
              'Nina',
              'Olga',
              'Olimpia',
              'Oliwia',
              'Ofelia',
              'Patrycja',
              'Paula',
              'Pelagia',
              'Penelopa',
              'Filipa',
              'Paulina',
              'Rachela',
              'Rebeka',
              'Regina',
              'Renata',
              'Rozalia',
              'Róża',
              'Roksana',
              'Rufina',
              'Ruta',
              'Sabina',
              'Sara',
              'Serafina',
              'Sybilla',
              'Sylwia',
              'Zofia',
              'Stella',
              'Stefania',
              'Zuzanna',
              'Tamara',
              'Tacjana',
              'Tekla',
              'Teodora',
              'Teresa',
              'Walentyna',
              'Waleria',
              'Wanesa',
              'Wiara',
              'Weronika',
              'Wiktoria',
              'Wirginia',
              'Bibiana',
              'Bibianna',
              'Wanda',
              'Wilhelmina',
              'Ksawera',
              'Ksenia',
              'Zoe'
            ],
            last_name: [
              'Adamczak',
              'Adamczyk',
              'Adamek',
              'Adamiak',
              'Adamiec',
              'Adamowicz',
              'Adamski',
              'Adamus',
              'Aleksandrowicz',
              'Andrzejczak',
              'Andrzejewski',
              'Antczak',
              'Augustyn',
              'Augustyniak',
              'Bagiński',
              'Balcerzak',
              'Banach',
              'Banasiak',
              'Banasik',
              'Banaś',
              'Baran',
              'Baranowski',
              'Barański',
              'Bartczak',
              'Bartkowiak',
              'Bartnik',
              'Bartosik',
              'Bednarczyk',
              'Bednarek',
              'Bednarski',
              'Bednarz',
              'Białas',
              'Białek',
              'Białkowski',
              'Bielak',
              'Bielawski',
              'Bielecki',
              'Bielski',
              'Bieniek',
              'Biernacki',
              'Biernat',
              'Bieńkowski',
              'Bilski',
              'Bober',
              'Bochenek',
              'Bogucki',
              'Bogusz',
              'Borek',
              'Borkowski',
              'Borowiec',
              'Borowski',
              'Bożek',
              'Broda',
              'Brzeziński',
              'Brzozowski',
              'Buczek',
              'Buczkowski',
              'Buczyński',
              'Budziński',
              'Budzyński',
              'Bujak',
              'Bukowski',
              'Burzyński',
              'Bąk',
              'Bąkowski',
              'Błaszczak',
              'Błaszczyk',
              'Cebula',
              'Chmiel',
              'Chmielewski',
              'Chmura',
              'Chojnacki',
              'Chojnowski',
              'Cholewa',
              'Chrzanowski',
              'Chudzik',
              'Cichocki',
              'Cichoń',
              'Cichy',
              'Ciesielski',
              'Cieśla',
              'Cieślak',
              'Cieślik',
              'Ciszewski',
              'Cybulski',
              'Cygan',
              'Czaja',
              'Czajka',
              'Czajkowski',
              'Czapla',
              'Czarnecki',
              'Czech',
              'Czechowski',
              'Czekaj',
              'Czerniak',
              'Czerwiński',
              'Czyż',
              'Czyżewski',
              'Dec',
              'Dobosz',
              'Dobrowolski',
              'Dobrzyński',
              'Domagała',
              'Domański',
              'Dominiak',
              'Drabik',
              'Drozd',
              'Drozdowski',
              'Drzewiecki',
              'Dróżdż',
              'Dubiel',
              'Duda',
              'Dudek',
              'Dudziak',
              'Dudzik',
              'Dudziński',
              'Duszyński',
              'Dziedzic',
              'Dziuba',
              'Dąbek',
              'Dąbkowski',
              'Dąbrowski',
              'Dębowski',
              'Dębski',
              'Długosz',
              'Falkowski',
              'Fijałkowski',
              'Filipek',
              'Filipiak',
              'Filipowicz',
              'Flak',
              'Flis',
              'Florczak',
              'Florek',
              'Frankowski',
              'Frąckowiak',
              'Frączek',
              'Frątczak',
              'Furman',
              'Gadomski',
              'Gajda',
              'Gajewski',
              'Gaweł',
              'Gawlik',
              'Gawron',
              'Gawroński',
              'Gałka',
              'Gałązka',
              'Gil',
              'Godlewski',
              'Golec',
              'Gołąb',
              'Gołębiewski',
              'Gołębiowski',
              'Grabowski',
              'Graczyk',
              'Grochowski',
              'Grudzień',
              'Gruszczyński',
              'Gruszka',
              'Grzegorczyk',
              'Grzelak',
              'Grzesiak',
              'Grzesik',
              'Grześkowiak',
              'Grzyb',
              'Grzybowski',
              'Grzywacz',
              'Gutowski',
              'Guzik',
              'Gwóźdź',
              'Góra',
              'Góral',
              'Górecki',
              'Górka',
              'Górniak',
              'Górny',
              'Górski',
              'Gąsior',
              'Gąsiorowski',
              'Głogowski',
              'Głowacki',
              'Głąb',
              'Hajduk',
              'Herman',
              'Iwański',
              'Izdebski',
              'Jabłoński',
              'Jackowski',
              'Jagielski',
              'Jagiełło',
              'Jagodziński',
              'Jakubiak',
              'Jakubowski',
              'Janas',
              'Janiak',
              'Janicki',
              'Janik',
              'Janiszewski',
              'Jankowiak',
              'Jankowski',
              'Janowski',
              'Janus',
              'Janusz',
              'Januszewski',
              'Jaros',
              'Jarosz',
              'Jarząbek',
              'Jasiński',
              'Jastrzębski',
              'Jaworski',
              'Jaśkiewicz',
              'Jezierski',
              'Jurek',
              'Jurkiewicz',
              'Jurkowski',
              'Juszczak',
              'Jóźwiak',
              'Jóźwik',
              'Jędrzejczak',
              'Jędrzejczyk',
              'Jędrzejewski',
              'Kacprzak',
              'Kaczmarczyk',
              'Kaczmarek',
              'Kaczmarski',
              'Kaczor',
              'Kaczorowski',
              'Kaczyński',
              'Kaleta',
              'Kalinowski',
              'Kalisz',
              'Kamiński',
              'Kania',
              'Kaniewski',
              'Kapusta',
              'Karaś',
              'Karczewski',
              'Karpiński',
              'Karwowski',
              'Kasperek',
              'Kasprzak',
              'Kasprzyk',
              'Kaszuba',
              'Kawa',
              'Kawecki',
              'Kałuża',
              'Kaźmierczak',
              'Kiełbasa',
              'Kisiel',
              'Kita',
              'Klimczak',
              'Klimek',
              'Kmiecik',
              'Kmieć',
              'Knapik',
              'Kobus',
              'Kogut',
              'Kolasa',
              'Komorowski',
              'Konieczna',
              'Konieczny',
              'Konopka',
              'Kopczyński',
              'Koper',
              'Kopeć',
              'Korzeniowski',
              'Kos',
              'Kosiński',
              'Kosowski',
              'Kostecki',
              'Kostrzewa',
              'Kot',
              'Kotowski',
              'Kowal',
              'Kowalczuk',
              'Kowalczyk',
              'Kowalewski',
              'Kowalik',
              'Kowalski',
              'Koza',
              'Kozak',
              'Kozieł',
              'Kozioł',
              'Kozłowski',
              'Kołakowski',
              'Kołodziej',
              'Kołodziejczyk',
              'Kołodziejski',
              'Krajewski',
              'Krakowiak',
              'Krawczyk',
              'Krawiec',
              'Kruk',
              'Krukowski',
              'Krupa',
              'Krupiński',
              'Kruszewski',
              'Krysiak',
              'Krzemiński',
              'Krzyżanowski',
              'Król',
              'Królikowski',
              'Książek',
              'Kubacki',
              'Kubiak',
              'Kubica',
              'Kubicki',
              'Kubik',
              'Kuc',
              'Kucharczyk',
              'Kucharski',
              'Kuchta',
              'Kuciński',
              'Kuczyński',
              'Kujawa',
              'Kujawski',
              'Kula',
              'Kulesza',
              'Kulig',
              'Kulik',
              'Kuliński',
              'Kurek',
              'Kurowski',
              'Kuś',
              'Kwaśniewski',
              'Kwiatkowski',
              'Kwiecień',
              'Kwieciński',
              'Kędzierski',
              'Kędziora',
              'Kępa',
              'Kłos',
              'Kłosowski',
              'Lach',
              'Laskowski',
              'Lasota',
              'Lech',
              'Lenart',
              'Lesiak',
              'Leszczyński',
              'Lewandowski',
              'Lewicki',
              'Leśniak',
              'Leśniewski',
              'Lipiński',
              'Lipka',
              'Lipski',
              'Lis',
              'Lisiecki',
              'Lisowski',
              'Maciejewski',
              'Maciąg',
              'Mackiewicz',
              'Madej',
              'Maj',
              'Majcher',
              'Majchrzak',
              'Majewski',
              'Majka',
              'Makowski',
              'Malec',
              'Malicki',
              'Malinowski',
              'Maliszewski',
              'Marchewka',
              'Marciniak',
              'Marcinkowski',
              'Marczak',
              'Marek',
              'Markiewicz',
              'Markowski',
              'Marszałek',
              'Marzec',
              'Masłowski',
              'Matusiak',
              'Matuszak',
              'Matuszewski',
              'Matysiak',
              'Mazur',
              'Mazurek',
              'Mazurkiewicz',
              'Maćkowiak',
              'Małecki',
              'Małek',
              'Maślanka',
              'Michalak',
              'Michalczyk',
              'Michalik',
              'Michalski',
              'Michałek',
              'Michałowski',
              'Mielczarek',
              'Mierzejewski',
              'Mika',
              'Mikołajczak',
              'Mikołajczyk',
              'Mikulski',
              'Milczarek',
              'Milewski',
              'Miller',
              'Misiak',
              'Misztal',
              'Miśkiewicz',
              'Modzelewski',
              'Molenda',
              'Morawski',
              'Motyka',
              'Mroczek',
              'Mroczkowski',
              'Mrozek',
              'Mróz',
              'Mucha',
              'Murawski',
              'Musiał',
              'Muszyński',
              'Młynarczyk',
              'Napierała',
              'Nawrocki',
              'Nawrot',
              'Niedziela',
              'Niedzielski',
              'Niedźwiecki',
              'Niemczyk',
              'Niemiec',
              'Niewiadomski',
              'Noga',
              'Nowacki',
              'Nowaczyk',
              'Nowak',
              'Nowakowski',
              'Nowicki',
              'Nowiński',
              'Olczak',
              'Olejniczak',
              'Olejnik',
              'Olszewski',
              'Orzechowski',
              'Orłowski',
              'Osiński',
              'Ossowski',
              'Ostrowski',
              'Owczarek',
              'Paczkowski',
              'Pająk',
              'Pakuła',
              'Paluch',
              'Panek',
              'Partyka',
              'Pasternak',
              'Paszkowski',
              'Pawelec',
              'Pawlak',
              'Pawlicki',
              'Pawlik',
              'Pawlikowski',
              'Pawłowski',
              'Pałka',
              'Piasecki',
              'Piechota',
              'Piekarski',
              'Pietras',
              'Pietruszka',
              'Pietrzak',
              'Pietrzyk',
              'Pilarski',
              'Pilch',
              'Piotrowicz',
              'Piotrowski',
              'Piwowarczyk',
              'Piórkowski',
              'Piątek',
              'Piątkowski',
              'Piłat',
              'Pluta',
              'Podgórski',
              'Polak',
              'Popławski',
              'Porębski',
              'Prokop',
              'Prus',
              'Przybylski',
              'Przybysz',
              'Przybył',
              'Przybyła',
              'Ptak',
              'Puchalski',
              'Pytel',
              'Płonka',
              'Raczyński',
              'Radecki',
              'Radomski',
              'Rak',
              'Rakowski',
              'Ratajczak',
              'Robak',
              'Rogala',
              'Rogalski',
              'Rogowski',
              'Rojek',
              'Romanowski',
              'Rosa',
              'Rosiak',
              'Rosiński',
              'Ruciński',
              'Rudnicki',
              'Rudziński',
              'Rudzki',
              'Rusin',
              'Rutkowski',
              'Rybak',
              'Rybarczyk',
              'Rybicki',
              'Rzepka',
              'Różański',
              'Różycki',
              'Sadowski',
              'Sawicki',
              'Serafin',
              'Siedlecki',
              'Sienkiewicz',
              'Sieradzki',
              'Sikora',
              'Sikorski',
              'Sitek',
              'Siwek',
              'Skalski',
              'Skiba',
              'Skibiński',
              'Skoczylas',
              'Skowron',
              'Skowronek',
              'Skowroński',
              'Skrzypczak',
              'Skrzypek',
              'Skóra',
              'Smoliński',
              'Sobczak',
              'Sobczyk',
              'Sobieraj',
              'Sobolewski',
              'Socha',
              'Sochacki',
              'Sokołowski',
              'Sokół',
              'Sosnowski',
              'Sowa',
              'Sowiński',
              'Sołtys',
              'Sołtysiak',
              'Sroka',
              'Stachowiak',
              'Stachowicz',
              'Stachura',
              'Stachurski',
              'Stanek',
              'Staniszewski',
              'Stanisławski',
              'Stankiewicz',
              'Stasiak',
              'Staszewski',
              'Stawicki',
              'Stec',
              'Stefaniak',
              'Stefański',
              'Stelmach',
              'Stolarczyk',
              'Stolarski',
              'Strzelczyk',
              'Strzelecki',
              'Stępień',
              'Stępniak',
              'Surma',
              'Suski',
              'Szafrański',
              'Szatkowski',
              'Szczepaniak',
              'Szczepanik',
              'Szczepański',
              'Szczerba',
              'Szcześniak',
              'Szczygieł',
              'Szczęsna',
              'Szczęsny',
              'Szeląg',
              'Szewczyk',
              'Szostak',
              'Szulc',
              'Szwarc',
              'Szwed',
              'Szydłowski',
              'Szymański',
              'Szymczak',
              'Szymczyk',
              'Szymkowiak',
              'Szyszka',
              'Sławiński',
              'Słowik',
              'Słowiński',
              'Tarnowski',
              'Tkaczyk',
              'Tokarski',
              'Tomala',
              'Tomaszewski',
              'Tomczak',
              'Tomczyk',
              'Tracz',
              'Trojanowski',
              'Trzciński',
              'Trzeciak',
              'Turek',
              'Twardowski',
              'Urban',
              'Urbanek',
              'Urbaniak',
              'Urbanowicz',
              'Urbańczyk',
              'Urbański',
              'Walczak',
              'Walkowiak',
              'Warchoł',
              'Wasiak',
              'Wasilewski',
              'Wawrzyniak',
              'Wesołowski',
              'Wieczorek',
              'Wierzbicki',
              'Wilczek',
              'Wilczyński',
              'Wilk',
              'Winiarski',
              'Witczak',
              'Witek',
              'Witkowski',
              'Wiącek',
              'Więcek',
              'Więckowski',
              'Wiśniewski',
              'Wnuk',
              'Wojciechowski',
              'Wojtas',
              'Wojtasik',
              'Wojtczak',
              'Wojtkowiak',
              'Wolak',
              'Woliński',
              'Wolny',
              'Wolski',
              'Woś',
              'Woźniak',
              'Wrona',
              'Wroński',
              'Wróbel',
              'Wróblewski',
              'Wypych',
              'Wysocki',
              'Wyszyński',
              'Wójcicki',
              'Wójcik',
              'Wójtowicz',
              'Wąsik',
              'Węgrzyn',
              'Włodarczyk',
              'Włodarski',
              'Zaborowski',
              'Zabłocki',
              'Zagórski',
              'Zając',
              'Zajączkowski',
              'Zakrzewski',
              'Zalewski',
              'Zaremba',
              'Zarzycki',
              'Zaręba',
              'Zawada',
              'Zawadzki',
              'Zdunek',
              'Zieliński',
              'Zielonka',
              'Ziółkowski',
              'Zięba',
              'Ziętek',
              'Zwoliński',
              'Zych',
              'Zygmunt',
              'Łapiński',
              'Łuczak',
              'Łukasiewicz',
              'Łukasik',
              'Łukaszewski',
              'Śliwa',
              'Śliwiński',
              'Ślusarczyk',
              'Świderski',
              'Świerczyński',
              'Świątek',
              'Żak',
              'Żebrowski',
              'Żmuda',
              'Żuk',
              'Żukowski',
              'Żurawski',
              'Żurek',
              'Żyła'
            ],
            prefix: [
              'Pan',
              'Pani'
            ],
            title: {
              descriptor: [
                'Lead',
                'Senior',
                'Direct',
                'Corporate',
                'Dynamic',
                'Future',
                'Product',
                'National',
                'Regional',
                'District',
                'Central',
                'Global',
                'Customer',
                'Investor',
                'Dynamic',
                'International',
                'Legacy',
                'Forward',
                'Internal',
                'Human',
                'Chief',
                'Principal'
              ],
              level: [
                'Solutions',
                'Program',
                'Brand',
                'Security',
                'Research',
                'Marketing',
                'Directives',
                'Implementation',
                'Integration',
                'Functionality',
                'Response',
                'Paradigm',
                'Tactics',
                'Identity',
                'Markets',
                'Group',
                'Division',
                'Applications',
                'Optimization',
                'Operations',
                'Infrastructure',
                'Intranet',
                'Communications',
                'Web',
                'Branding',
                'Quality',
                'Assurance',
                'Mobility',
                'Accounts',
                'Data',
                'Creative',
                'Configuration',
                'Accountability',
                'Interactions',
                'Factors',
                'Usability',
                'Metrics'
              ],
              job: [
                'Supervisor',
                'Associate',
                'Executive',
                'Liason',
                'Officer',
                'Manager',
                'Engineer',
                'Specialist',
                'Director',
                'Coordinator',
                'Administrator',
                'Architect',
                'Analyst',
                'Designer',
                'Planner',
                'Orchestrator',
                'Technician',
                'Developer',
                'Producer',
                'Consultant',
                'Assistant',
                'Facilitator',
                'Agent',
                'Representative',
                'Strategist'
              ]
            },
            name: [
              '#{prefix} #{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name}'
            ]
          },
          address: {
            country: [
              'Afganistan',
              'Albania',
              'Algieria',
              'Andora',
              'Angola',
              'Antigua i Barbuda',
              'Arabia Saudyjska',
              'Argentyna',
              'Armenia',
              'Australia',
              'Austria',
              'Azerbejdżan',
              'Bahamy',
              'Bahrajn',
              'Bangladesz',
              'Barbados',
              'Belgia',
              'Belize',
              'Benin',
              'Bhutan',
              'Białoruś',
              'Birma',
              'Boliwia',
              'Sucre',
              'Bośnia i Hercegowina',
              'Botswana',
              'Brazylia',
              'Brunei',
              'Bułgaria',
              'Burkina Faso',
              'Burundi',
              'Chile',
              'Chiny',
              'Chorwacja',
              'Cypr',
              'Czad',
              'Czarnogóra',
              'Czechy',
              'Dania',
              'Demokratyczna Republika Konga',
              'Dominika',
              'Dominikana',
              'Dżibuti',
              'Egipt',
              'Ekwador',
              'Erytrea',
              'Estonia',
              'Etiopia',
              'Fidżi',
              'Filipiny',
              'Finlandia',
              'Francja',
              'Gabon',
              'Gambia',
              'Ghana',
              'Grecja',
              'Grenada',
              'Gruzja',
              'Gujana',
              'Gwatemala',
              'Gwinea',
              'Gwinea Bissau',
              'Gwinea Równikowa',
              'Haiti',
              'Hiszpania',
              'Holandia',
              'Haga',
              'Honduras',
              'Indie',
              'Indonezja',
              'Irak',
              'Iran',
              'Irlandia',
              'Islandia',
              'Izrael',
              'Jamajka',
              'Japonia',
              'Jemen',
              'Jordania',
              'Kambodża',
              'Kamerun',
              'Kanada',
              'Katar',
              'Kazachstan',
              'Kenia',
              'Kirgistan',
              'Kiribati',
              'Kolumbia',
              'Komory',
              'Kongo',
              'Korea Południowa',
              'Korea Północna',
              'Kostaryka',
              'Kuba',
              'Kuwejt',
              'Laos',
              'Lesotho',
              'Liban',
              'Liberia',
              'Libia',
              'Liechtenstein',
              'Litwa',
              'Luksemburg',
              'Łotwa',
              'Macedonia',
              'Madagaskar',
              'Malawi',
              'Malediwy',
              'Malezja',
              'Mali',
              'Malta',
              'Maroko',
              'Mauretania',
              'Mauritius',
              'Meksyk',
              'Mikronezja',
              'Mołdawia',
              'Monako',
              'Mongolia',
              'Mozambik',
              'Namibia',
              'Nauru',
              'Nepal',
              'Niemcy',
              'Niger',
              'Nigeria',
              'Nikaragua',
              'Norwegia',
              'Nowa Zelandia',
              'Oman',
              'Pakistan',
              'Palau',
              'Panama',
              'Papua-Nowa Gwinea',
              'Paragwaj',
              'Peru',
              'Polska',
              '322 575',
              'Portugalia',
              'Republika Południowej Afryki',
              'Republika Środkowoafrykańska',
              'Republika Zielonego Przylądka',
              'Rosja',
              'Rumunia',
              'Rwanda',
              'Saint Kitts i Nevis',
              'Saint Lucia',
              'Saint Vincent i Grenadyny',
              'Salwador',
              'Samoa',
              'San Marino',
              'Senegal',
              'Serbia',
              'Seszele',
              'Sierra Leone',
              'Singapur',
              'Słowacja',
              'Słowenia',
              'Somalia',
              'Sri Lanka',
              'Stany Zjednoczone',
              'Suazi',
              'Sudan',
              'Sudan Południowy',
              'Surinam',
              'Syria',
              'Szwajcaria',
              'Szwecja',
              'Tadżykistan',
              'Tajlandia',
              'Tanzania',
              'Timor Wschodni',
              'Togo',
              'Tonga',
              'Trynidad i Tobago',
              'Tunezja',
              'Turcja',
              'Turkmenistan',
              'Tuvalu',
              'Funafuti',
              'Uganda',
              'Ukraina',
              'Urugwaj',
              2008,
              'Uzbekistan',
              'Vanuatu',
              'Watykan',
              'Wenezuela',
              'Węgry',
              'Wielka Brytania',
              'Wietnam',
              'Włochy',
              'Wybrzeże Kości Słoniowej',
              'Wyspy Marshalla',
              'Wyspy Salomona',
              'Wyspy Świętego Tomasza i Książęca',
              'Zambia',
              'Zimbabwe',
              'Zjednoczone Emiraty Arabskie'
            ],
            building_number: [
              '#####',
              '####',
              '###'
            ],
            street_prefix: [
              'ul.',
              'al.'
            ],
            secondary_address: [
              'Apt. ###',
              'Suite ###'
            ],
            postcode: [
              '##-###'
            ],
            state: [
              'Dolnośląskie',
              'Kujawsko-pomorskie',
              'Lubelskie',
              'Lubuskie',
              'Łódzkie',
              'Małopolskie',
              'Mazowieckie',
              'Opolskie',
              'Podkarpackie',
              'Podlaskie',
              'Pomorskie',
              'Śląskie',
              'Świętokrzyskie',
              'Warmińsko-mazurskie',
              'Wielkopolskie',
              'Zachodniopomorskie'
            ],
            state_abbr: [
              'DŚ',
              'KP',
              'LB',
              'LS',
              'ŁD',
              'MP',
              'MZ',
              'OP',
              'PK',
              'PL',
              'PM',
              'ŚL',
              'ŚK',
              'WM',
              'WP',
              'ZP'
            ],
            city_name: [
              'Aleksandrów Kujawski',
              'Aleksandrów Łódzki',
              'Alwernia',
              'Andrychów',
              'Annopol',
              'Augustów',
              'Babimost',
              'Baborów',
              'Baranów Sandomierski',
              'Barcin',
              'Barczewo',
              'Bardo',
              'Barlinek',
              'Bartoszyce',
              'Barwice',
              'Bełchatów',
              'Bełżyce',
              'Będzin',
              'Biała',
              'Biała Piska',
              'Biała Podlaska',
              'Biała Rawska',
              'Białobrzegi',
              'Białogard',
              'Biały Bór',
              'Białystok',
              'Biecz',
              'Bielawa',
              'Bielsk Podlaski',
              'Bielsko-Biała',
              'Bieruń',
              'Bierutów',
              'Bieżuń',
              'Biłgoraj',
              'Biskupiec',
              'Bisztynek',
              'Blachownia',
              'Błaszki',
              'Błażowa',
              'Błonie',
              'Bobolice',
              'Bobowa',
              'Bochnia',
              'Bodzentyn',
              'Bogatynia',
              'Boguchwała',
              'Boguszów-Gorce',
              'Bojanowo',
              'Bolesławiec',
              'Bolków',
              'Borek Wielkopolski',
              'Borne Sulinowo',
              'Braniewo',
              'Brańsk',
              'Brodnica',
              'Brok',
              'Brusy',
              'Brwinów',
              'Brzeg',
              'Brzeg Dolny',
              'Brzesko',
              'Brzeszcze',
              'Brześć Kujawski',
              'Brzeziny',
              'Brzostek',
              'Brzozów',
              'Buk',
              'Bukowno',
              'Busko-Zdrój',
              'Bychawa',
              'Byczyna',
              'Bydgoszcz',
              'Bystrzyca Kłodzka',
              'Bytom',
              'Bytom Odrzański',
              'Bytów',
              'Cedynia',
              'Chełm',
              'Chełmek',
              'Chełmno',
              'Chełmża',
              'Chęciny',
              'Chmielnik',
              'Chocianów',
              'Chociwel',
              'Chodecz',
              'Chodzież',
              'Chojna',
              'Chojnice',
              'Chojnów',
              'Choroszcz',
              'Chorzele',
              'Chorzów',
              'Choszczno',
              'Chrzanów',
              'Ciechanowiec',
              'Ciechanów',
              'Ciechocinek',
              'Cieszanów',
              'Cieszyn',
              'Ciężkowice',
              'Cybinka',
              'Czaplinek',
              'Czarna Białostocka',
              'Czarna Woda',
              'Czarne',
              'Czarnków',
              'Czchów',
              'Czechowice-Dziedzice',
              'Czeladź',
              'Czempiń',
              'Czerniejewo',
              'Czersk',
              'Czerwieńsk',
              'Czerwionka-Leszczyny',
              'Częstochowa',
              'Człopa',
              'Człuchów',
              'Czyżew',
              'Ćmielów',
              'Daleszyce',
              'Darłowo',
              'Dąbie',
              'Dąbrowa Białostocka',
              'Dąbrowa Górnicza',
              'Dąbrowa Tarnowska',
              'Debrzno',
              'Dębica',
              'Dęblin',
              'Dębno',
              'Dobczyce',
              'Dobiegniew',
              'Dobra (powiat łobeski)',
              'Dobra (powiat turecki)',
              'Dobre Miasto',
              'Dobrodzień',
              'Dobrzany',
              'Dobrzyń nad Wisłą',
              'Dolsk',
              'Drawno',
              'Drawsko Pomorskie',
              'Drezdenko',
              'Drobin',
              'Drohiczyn',
              'Drzewica',
              'Dukla',
              'Duszniki-Zdrój',
              'Dynów',
              'Działdowo',
              'Działoszyce',
              'Działoszyn',
              'Dzierzgoń',
              'Dzierżoniów',
              'Dziwnów',
              'Elbląg',
              'Ełk',
              'Frampol',
              'Frombork',
              'Garwolin',
              'Gąbin',
              'Gdańsk',
              'Gdynia',
              'Giżycko',
              'Glinojeck',
              'Gliwice',
              'Głogów',
              'Głogów Małopolski',
              'Głogówek',
              'Głowno',
              'Głubczyce',
              'Głuchołazy',
              'Głuszyca',
              'Gniew',
              'Gniewkowo',
              'Gniezno',
              'Gogolin',
              'Golczewo',
              'Goleniów',
              'Golina',
              'Golub-Dobrzyń',
              'Gołańcz',
              'Gołdap',
              'Goniądz',
              'Gorlice',
              'Gorzów Śląski',
              'Gorzów Wielkopolski',
              'Gostynin',
              'Gostyń',
              'Gościno',
              'Gozdnica',
              'Góra',
              'Góra Kalwaria',
              'Górowo Iławeckie',
              'Górzno',
              'Grabów nad Prosną',
              'Grajewo',
              'Grodków',
              'Grodzisk Mazowiecki',
              'Grodzisk Wielkopolski',
              'Grójec',
              'Grudziądz',
              'Grybów',
              'Gryfice',
              'Gryfino',
              'Gryfów Śląski',
              'Gubin',
              'Hajnówka',
              'Halinów',
              'Hel',
              'Hrubieszów',
              'Iława',
              'Iłowa',
              'Iłża',
              'Imielin',
              'Inowrocław',
              'Ińsko',
              'Iwonicz-Zdrój',
              'Izbica Kujawska',
              'Jabłonowo Pomorskie',
              'Janikowo',
              'Janowiec Wielkopolski',
              'Janów Lubelski',
              'Jarocin',
              'Jarosław',
              'Jasień',
              'Jasło',
              'Jastarnia',
              'Jastrowie',
              'Jastrzębie-Zdrój',
              'Jawor',
              'Jaworzno',
              'Jaworzyna Śląska',
              'Jedlicze',
              'Jedlina-Zdrój',
              'Jedwabne',
              'Jelcz-Laskowice',
              'Jelenia Góra',
              'Jeziorany',
              'Jędrzejów',
              'Jordanów',
              'Józefów (powiat biłgorajski)',
              'Józefów (powiat otwocki)',
              'Jutrosin',
              'Kalety',
              'Kalisz',
              'Kalisz Pomorski',
              'Kalwaria Zebrzydowska',
              'Kałuszyn',
              'Kamienna Góra',
              'Kamień Krajeński',
              'Kamień Pomorski',
              'Kamieńsk',
              'Kańczuga',
              'Karczew',
              'Kargowa',
              'Karlino',
              'Karpacz',
              'Kartuzy',
              'Katowice',
              'Kazimierz Dolny',
              'Kazimierza Wielka',
              'Kąty Wrocławskie',
              'Kcynia',
              'Kędzierzyn-Koźle',
              'Kępice',
              'Kępno',
              'Kętrzyn',
              'Kęty',
              'Kielce',
              'Kietrz',
              'Kisielice',
              'Kleczew',
              'Kleszczele',
              'Kluczbork',
              'Kłecko',
              'Kłobuck',
              'Kłodawa',
              'Kłodzko',
              'Knurów',
              'Knyszyn',
              'Kobylin',
              'Kobyłka',
              'Kock',
              'Kolbuszowa',
              'Kolno',
              'Kolonowskie',
              'Koluszki',
              'Kołaczyce',
              'Koło',
              'Kołobrzeg',
              'Koniecpol',
              'Konin',
              'Konstancin-Jeziorna',
              'Konstantynów Łódzki',
              'Końskie',
              'Koprzywnica',
              'Korfantów',
              'Koronowo',
              'Korsze',
              'Kosów Lacki',
              'Kostrzyn',
              'Kostrzyn nad Odrą',
              'Koszalin',
              'Kościan',
              'Kościerzyna',
              'Kowal',
              'Kowalewo Pomorskie',
              'Kowary',
              'Koziegłowy',
              'Kozienice',
              'Koźmin Wielkopolski',
              'Kożuchów',
              'Kórnik',
              'Krajenka',
              'Kraków',
              'Krapkowice',
              'Krasnobród',
              'Krasnystaw',
              'Kraśnik',
              'Krobia',
              'Krosno',
              'Krosno Odrzańskie',
              'Krośniewice',
              'Krotoszyn',
              'Kruszwica',
              'Krynica Morska',
              'Krynica-Zdrój',
              'Krynki',
              'Krzanowice',
              'Krzepice',
              'Krzeszowice',
              'Krzywiń',
              'Krzyż Wielkopolski',
              'Książ Wielkopolski',
              'Kudowa-Zdrój',
              'Kunów',
              'Kutno',
              'Kuźnia Raciborska',
              'Kwidzyn',
              'Lądek-Zdrój',
              'Legionowo',
              'Legnica',
              'Lesko',
              'Leszno',
              'Leśna',
              'Leśnica',
              'Lewin Brzeski',
              'Leżajsk',
              'Lębork',
              'Lędziny',
              'Libiąż',
              'Lidzbark',
              'Lidzbark Warmiński',
              'Limanowa',
              'Lipiany',
              'Lipno',
              'Lipsk',
              'Lipsko',
              'Lubaczów',
              'Lubań',
              'Lubartów',
              'Lubawa',
              'Lubawka',
              'Lubień Kujawski',
              'Lubin',
              'Lublin',
              'Lubliniec',
              'Lubniewice',
              'Lubomierz',
              'Luboń',
              'Lubraniec',
              'Lubsko',
              'Lwówek',
              'Lwówek Śląski',
              'Łabiszyn',
              'Łańcut',
              'Łapy',
              'Łasin',
              'Łask',
              'Łaskarzew',
              'Łaszczów',
              'Łaziska Górne',
              'Łazy',
              'Łeba',
              'Łęczna',
              'Łęczyca',
              'Łęknica',
              'Łobez',
              'Łobżenica',
              'Łochów',
              'Łomianki',
              'Łomża',
              'Łosice',
              'Łowicz',
              'Łódź',
              'Łuków',
              'Maków Mazowiecki',
              'Maków Podhalański',
              'Malbork',
              'Małogoszcz',
              'Małomice',
              'Margonin',
              'Marki',
              'Maszewo',
              'Miasteczko Śląskie',
              'Miastko',
              'Michałowo',
              'Miechów',
              'Miejska Górka',
              'Mielec',
              'Mieroszów',
              'Mieszkowice',
              'Międzybórz',
              'Międzychód',
              'Międzylesie',
              'Międzyrzec Podlaski',
              'Międzyrzecz',
              'Międzyzdroje',
              'Mikołajki',
              'Mikołów',
              'Mikstat',
              'Milanówek',
              'Milicz',
              'Miłakowo',
              'Miłomłyn',
              'Miłosław',
              'Mińsk Mazowiecki',
              'Mirosławiec',
              'Mirsk',
              'Mława',
              'Młynary',
              'Mogielnica',
              'Mogilno',
              'Mońki',
              'Morąg',
              'Mordy',
              'Moryń',
              'Mosina',
              'Mrągowo',
              'Mrocza',
              'Mszana Dolna',
              'Mszczonów',
              'Murowana Goślina',
              'Muszyna',
              'Mysłowice',
              'Myszków',
              'Myszyniec',
              'Myślenice',
              'Myślibórz',
              'Nakło nad Notecią',
              'Nałęczów',
              'Namysłów',
              'Narol',
              'Nasielsk',
              'Nekla',
              'Nidzica',
              'Niemcza',
              'Niemodlin',
              'Niepołomice',
              'Nieszawa',
              'Nisko',
              'Nowa Dęba',
              'Nowa Ruda',
              'Nowa Sarzyna',
              'Nowa Sól',
              'Nowe',
              'Nowe Brzesko',
              'Nowe Miasteczko',
              'Nowe Miasto Lubawskie',
              'Nowe Miasto nad Pilicą',
              'Nowe Skalmierzyce',
              'Nowe Warpno',
              'Nowogard',
              'Nowogrodziec',
              'Nowogród',
              'Nowogród Bobrzański',
              'Nowy Dwór Gdański',
              'Nowy Dwór Mazowiecki',
              'Nowy Sącz',
              'Nowy Staw',
              'Nowy Targ',
              'Nowy Tomyśl',
              'Nowy Wiśnicz',
              'Nysa',
              'Oborniki',
              'Oborniki Śląskie',
              'Obrzycko',
              'Odolanów',
              'Ogrodzieniec',
              'Okonek',
              'Olecko',
              'Olesno',
              'Oleszyce',
              'Oleśnica',
              'Olkusz',
              'Olsztyn',
              'Olsztynek',
              'Olszyna',
              'Oława',
              'Opalenica',
              'Opatów',
              'Opoczno',
              'Opole',
              'Opole Lubelskie',
              'Orneta',
              'Orzesze',
              'Orzysz',
              'Osieczna',
              'Osiek',
              'Ostrołęka',
              'Ostroróg',
              'Ostrowiec Świętokrzyski',
              'Ostróda',
              'Ostrów Lubelski',
              'Ostrów Mazowiecka',
              'Ostrów Wielkopolski',
              'Ostrzeszów',
              'Ośno Lubuskie',
              'Oświęcim',
              'Otmuchów',
              'Otwock',
              'Ozimek',
              'Ozorków',
              'Ożarów',
              'Ożarów Mazowiecki',
              'Pabianice',
              'Paczków',
              'Pajęczno',
              'Pakość',
              'Parczew',
              'Pasłęk',
              'Pasym',
              'Pelplin',
              'Pełczyce',
              'Piaseczno',
              'Piaski',
              'Piastów',
              'Piechowice',
              'Piekary Śląskie',
              'Pieniężno',
              'Pieńsk',
              'Pieszyce',
              'Pilawa',
              'Pilica',
              'Pilzno',
              'Piła',
              'Piława Górna',
              'Pińczów',
              'Pionki',
              'Piotrków Kujawski',
              'Piotrków Trybunalski',
              'Pisz',
              'Piwniczna-Zdrój',
              'Pleszew',
              'Płock',
              'Płońsk',
              'Płoty',
              'Pniewy',
              'Pobiedziska',
              'Poddębice',
              'Podkowa Leśna',
              'Pogorzela',
              'Polanica-Zdrój',
              'Polanów',
              'Police',
              'Polkowice',
              'Połaniec',
              'Połczyn-Zdrój',
              'Poniatowa',
              'Poniec',
              'Poręba',
              'Poznań',
              'Prabuty',
              'Praszka',
              'Prochowice',
              'Proszowice',
              'Prószków',
              'Pruchnik',
              'Prudnik',
              'Prusice',
              'Pruszcz Gdański',
              'Pruszków',
              'Przasnysz',
              'Przecław',
              'Przedbórz',
              'Przedecz',
              'Przemków',
              'Przemyśl',
              'Przeworsk',
              'Przysucha',
              'Pszczyna',
              'Pszów',
              'Puck',
              'Puławy',
              'Pułtusk',
              'Puszczykowo',
              'Pyrzyce',
              'Pyskowice',
              'Pyzdry',
              'Rabka-Zdrój',
              'Raciąż',
              'Racibórz',
              'Radków',
              'Radlin',
              'Radłów',
              'Radom',
              'Radomsko',
              'Radomyśl Wielki',
              'Radymno',
              'Radziejów',
              'Radzionków',
              'Radzymin',
              'Radzyń Chełmiński',
              'Radzyń Podlaski',
              'Rajgród',
              'Rakoniewice',
              'Raszków',
              'Rawa Mazowiecka',
              'Rawicz',
              'Recz',
              'Reda',
              'Rejowiec Fabryczny',
              'Resko',
              'Reszel',
              'Rogoźno',
              'Ropczyce',
              'Różan',
              'Ruciane-Nida',
              'Ruda Śląska',
              'Rudnik nad Sanem',
              'Rumia',
              'Rybnik',
              'Rychwał',
              'Rydułtowy',
              'Rydzyna',
              'Ryglice',
              'Ryki',
              'Rymanów',
              'Ryn',
              'Rypin',
              'Rzepin',
              'Rzeszów',
              'Rzgów',
              'Sandomierz',
              'Sanok',
              'Sejny',
              'Serock',
              'Sędziszów',
              'Sędziszów Małopolski',
              'Sępopol',
              'Sępólno Krajeńskie',
              'Sianów',
              'Siechnice',
              'Siedlce',
              'Siemianowice Śląskie',
              'Siemiatycze',
              'Sieniawa',
              'Sieradz',
              'Sieraków',
              'Sierpc',
              'Siewierz',
              'Skalbmierz',
              'Skała',
              'Skarszewy',
              'Skaryszew',
              'Skarżysko-Kamienna',
              'Skawina',
              'Skępe',
              'Skierniewice',
              'Skoczów',
              'Skoki',
              'Skórcz',
              'Skwierzyna',
              'Sława',
              'Sławków',
              'Sławno',
              'Słomniki',
              'Słubice',
              'Słupca',
              'Słupsk',
              'Sobótka',
              'Sochaczew',
              'Sokołów Małopolski',
              'Sokołów Podlaski',
              'Sokółka',
              'Solec Kujawski',
              'Sompolno',
              'Sopot',
              'Sosnowiec',
              'Sośnicowice',
              'Stalowa Wola',
              'Starachowice',
              'Stargard Szczeciński',
              'Starogard Gdański',
              'Stary Sącz',
              'Staszów',
              'Stawiski',
              'Stawiszyn',
              'Stąporków',
              'Stęszew',
              'Stoczek Łukowski',
              'Stronie Śląskie',
              'Strumień',
              'Stryków',
              'Strzegom',
              'Strzelce Krajeńskie',
              'Strzelce Opolskie',
              'Strzelin',
              'Strzelno',
              'Strzyżów',
              'Sucha Beskidzka',
              'Suchań',
              'Suchedniów',
              'Suchowola',
              'Sulechów',
              'Sulejów',
              'Sulejówek',
              'Sulęcin',
              'Sulmierzyce',
              'Sułkowice',
              'Supraśl',
              'Suraż',
              'Susz',
              'Suwałki',
              'Swarzędz',
              'Syców',
              'Szadek',
              'Szamocin',
              'Szamotuły',
              'Szczawnica',
              'Szczawno-Zdrój',
              'Szczebrzeszyn',
              'Szczecin',
              'Szczecinek',
              'Szczekociny',
              'Szczucin',
              'Szczuczyn',
              'Szczyrk',
              'Szczytna',
              'Szczytno',
              'Szepietowo',
              'Szklarska Poręba',
              'Szlichtyngowa',
              'Szprotawa',
              'Sztum',
              'Szubin',
              'Szydłowiec',
              'Ścinawa',
              'Ślesin',
              'Śmigiel',
              'Śrem',
              'Środa Śląska',
              'Środa Wielkopolska',
              'Świątniki Górne',
              'Świdnica',
              'Świdnik',
              'Świdwin',
              'Świebodzice',
              'Świebodzin',
              'Świecie',
              'Świeradów-Zdrój',
              'Świerzawa',
              'Świętochłowice',
              'Świnoujście',
              'Tarczyn',
              'Tarnobrzeg',
              'Tarnogród',
              'Tarnowskie Góry',
              'Tarnów',
              'Tczew',
              'Terespol',
              'Tłuszcz',
              'Tolkmicko',
              'Tomaszów Lubelski',
              'Tomaszów Mazowiecki',
              'Toruń',
              'Torzym',
              'Toszek',
              'Trzcianka',
              'Trzciel',
              'Trzcińsko-Zdrój',
              'Trzebiatów',
              'Trzebinia',
              'Trzebnica',
              'Trzemeszno',
              'Tuchola',
              'Tuchów',
              'Tuczno',
              'Tuliszków',
              'Turek',
              'Tuszyn',
              'Twardogóra',
              'Tychowo',
              'Tychy',
              'Tyczyn',
              'Tykocin',
              'Tyszowce',
              'Ujazd',
              'Ujście',
              'Ulanów',
              'Uniejów',
              'Ustka',
              'Ustroń',
              'Ustrzyki Dolne',
              'Wadowice',
              'Wałbrzych',
              'Wałcz',
              'Warka',
              'Warszawa',
              'Warta',
              'Wasilków',
              'Wąbrzeźno',
              'Wąchock',
              'Wągrowiec',
              'Wąsosz',
              'Wejherowo',
              'Węgliniec',
              'Węgorzewo',
              'Węgorzyno',
              'Węgrów',
              'Wiązów',
              'Wieleń',
              'Wielichowo',
              'Wieliczka',
              'Wieluń',
              'Wieruszów',
              'Więcbork',
              'Wilamowice',
              'Wisła',
              'Witkowo',
              'Witnica',
              'Wleń',
              'Władysławowo',
              'Włocławek',
              'Włodawa',
              'Włoszczowa',
              'Wodzisław Śląski',
              'Wojcieszów',
              'Wojkowice',
              'Wojnicz',
              'Wolbórz',
              'Wolbrom',
              'Wolin',
              'Wolsztyn',
              'Wołczyn',
              'Wołomin',
              'Wołów',
              'Woźniki',
              'Wrocław',
              'Wronki',
              'Września',
              'Wschowa',
              'Wyrzysk',
              'Wysoka',
              'Wysokie Mazowieckie',
              'Wyszków',
              'Wyszogród',
              'Wyśmierzyce',
              'Zabłudów',
              'Zabrze',
              'Zagórów',
              'Zagórz',
              'Zakliczyn',
              'Zakopane',
              'Zakroczym',
              'Zalewo',
              'Zambrów',
              'Zamość',
              'Zator',
              'Zawadzkie',
              'Zawichost',
              'Zawidów',
              'Zawiercie',
              'Ząbki',
              'Ząbkowice Śląskie',
              'Zbąszynek',
              'Zbąszyń',
              'Zduny',
              'Zduńska Wola',
              'Zdzieszowice',
              'Zelów',
              'Zgierz',
              'Zgorzelec',
              'Zielona Góra',
              'Zielonka',
              'Ziębice',
              'Złocieniec',
              'Złoczew',
              'Złotoryja',
              'Złotów',
              'Złoty Stok',
              'Zwierzyniec',
              'Zwoleń',
              'Żabno',
              'Żagań',
              'Żarki',
              'Żarów',
              'Żary',
              'Żelechów',
              'Żerków',
              'Żmigród',
              'Żnin',
              'Żory',
              'Żukowo',
              'Żuromin',
              'Żychlin',
              'Żyrardów',
              'Żywiec'
            ],
            city: [
              '#{city_name}'
            ],
            street_name: [
              '#{street_prefix} #{Name.last_name}'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            default_country: [
              'Polska'
            ]
          },
          company: {
            suffix: [
              'Inc',
              'and Sons',
              'LLC',
              'Group'
            ],
            buzzwords: [
              ['Adaptive',
              'Advanced',
              'Ameliorated',
              'Assimilated',
              'Automated',
              'Balanced',
              'Business-focused',
              'Centralized',
              'Cloned',
              'Compatible',
              'Configurable',
              'Cross-group',
              'Cross-platform',
              'Customer-focused',
              'Customizable',
              'Decentralized',
              'De-engineered',
              'Devolved',
              'Digitized',
              'Distributed',
              'Diverse',
              'Down-sized',
              'Enhanced',
              'Enterprise-wide',
              'Ergonomic',
              'Exclusive',
              'Expanded',
              'Extended',
              'Face to face',
              'Focused',
              'Front-line',
              'Fully-configurable',
              'Function-based',
              'Fundamental',
              'Future-proofed',
              'Grass-roots',
              'Horizontal',
              'Implemented',
              'Innovative',
              'Integrated',
              'Intuitive',
              'Inverse',
              'Managed',
              'Mandatory',
              'Monitored',
              'Multi-channelled',
              'Multi-lateral',
              'Multi-layered',
              'Multi-tiered',
              'Networked',
              'Object-based',
              'Open-architected',
              'Open-source',
              'Operative',
              'Optimized',
              'Optional',
              'Organic',
              'Organized',
              'Persevering',
              'Persistent',
              'Phased',
              'Polarised',
              'Pre-emptive',
              'Proactive',
              'Profit-focused',
              'Profound',
              'Programmable',
              'Progressive',
              'Public-key',
              'Quality-focused',
              'Reactive',
              'Realigned',
              'Re-contextualized',
              'Re-engineered',
              'Reduced',
              'Reverse-engineered',
              'Right-sized',
              'Robust',
              'Seamless',
              'Secured',
              'Self-enabling',
              'Sharable',
              'Stand-alone',
              'Streamlined',
              'Switchable',
              'Synchronised',
              'Synergistic',
              'Synergized',
              'Team-oriented',
              'Total',
              'Triple-buffered',
              'Universal',
              'Up-sized',
              'Upgradable',
              'User-centric',
              'User-friendly',
              'Versatile',
              'Virtual',
              'Visionary',
              'Vision-oriented'],
              [
                '24 hour',
                '24/7',
                '3rd generation',
                '4th generation',
                '5th generation',
                '6th generation',
                'actuating',
                'analyzing',
                'asymmetric',
                'asynchronous',
                'attitude-oriented',
                'background',
                'bandwidth-monitored',
                'bi-directional',
                'bifurcated',
                'bottom-line',
                'clear-thinking',
                'client-driven',
                'client-server',
                'coherent',
                'cohesive',
                'composite',
                'context-sensitive',
                'contextually-based',
                'content-based',
                'dedicated',
                'demand-driven',
                'didactic',
                'directional',
                'discrete',
                'disintermediate',
                'dynamic',
                'eco-centric',
                'empowering',
                'encompassing',
                'even-keeled',
                'executive',
                'explicit',
                'exuding',
                'fault-tolerant',
                'foreground',
                'fresh-thinking',
                'full-range',
                'global',
                'grid-enabled',
                'heuristic',
                'high-level',
                'holistic',
                'homogeneous',
                'human-resource',
                'hybrid',
                'impactful',
                'incremental',
                'intangible',
                'interactive',
                'intermediate',
                'leading edge',
                'local',
                'logistical',
                'maximized',
                'methodical',
                'mission-critical',
                'mobile',
                'modular',
                'motivating',
                'multimedia',
                'multi-state',
                'multi-tasking',
                'national',
                'needs-based',
                'neutral',
                'next generation',
                'non-volatile',
                'object-oriented',
                'optimal',
                'optimizing',
                'radical',
                'real-time',
                'reciprocal',
                'regional',
                'responsive',
                'scalable',
                'secondary',
                'solution-oriented',
                'stable',
                'static',
                'systematic',
                'systemic',
                'system-worthy',
                'tangible',
                'tertiary',
                'transitional',
                'uniform',
                'upward-trending',
                'user-facing',
                'value-added',
                'web-enabled',
                'well-modulated',
                'zero administration',
                'zero defect',
                'zero tolerance'
              ],
              [
                'ability',
                'access',
                'adapter',
                'algorithm',
                'alliance',
                'analyzer',
                'application',
                'approach',
                'architecture',
                'archive',
                'artificial intelligence',
                'array',
                'attitude',
                'benchmark',
                'budgetary management',
                'capability',
                'capacity',
                'challenge',
                'circuit',
                'collaboration',
                'complexity',
                'concept',
                'conglomeration',
                'contingency',
                'core',
                'customer loyalty',
                'database',
                'data-warehouse',
                'definition',
                'emulation',
                'encoding',
                'encryption',
                'extranet',
                'firmware',
                'flexibility',
                'focus group',
                'forecast',
                'frame',
                'framework',
                'function',
                'functionalities',
                'Graphic Interface',
                'groupware',
                'Graphical User Interface',
                'hardware',
                'help-desk',
                'hierarchy',
                'hub',
                'implementation',
                'info-mediaries',
                'infrastructure',
                'initiative',
                'installation',
                'instruction set',
                'interface',
                'internet solution',
                'intranet',
                'knowledge user',
                'knowledge base',
                'local area network',
                'leverage',
                'matrices',
                'matrix',
                'methodology',
                'middleware',
                'migration',
                'model',
                'moderator',
                'monitoring',
                'moratorium',
                'neural-net',
                'open architecture',
                'open system',
                'orchestration',
                'paradigm',
                'parallelism',
                'policy',
                'portal',
                'pricing structure',
                'process improvement',
                'product',
                'productivity',
                'project',
                'projection',
                'protocol',
                'secured line',
                'service-desk',
                'software',
                'solution',
                'standardization',
                'strategy',
                'structure',
                'success',
                'superstructure',
                'support',
                'synergy',
                'system engine',
                'task-force',
                'throughput',
                'time-frame',
                'toolset',
                'utilisation',
                'website',
                'workforce'
              ]
            ],
            bs: [
              ['implement',
              'utilize',
              'integrate',
              'streamline',
              'optimize',
              'evolve',
              'transform',
              'embrace',
              'enable',
              'orchestrate',
              'leverage',
              'reinvent',
              'aggregate',
              'architect',
              'enhance',
              'incentivize',
              'morph',
              'empower',
              'envisioneer',
              'monetize',
              'harness',
              'facilitate',
              'seize',
              'disintermediate',
              'synergize',
              'strategize',
              'deploy',
              'brand',
              'grow',
              'target',
              'syndicate',
              'synthesize',
              'deliver',
              'mesh',
              'incubate',
              'engage',
              'maximize',
              'benchmark',
              'expedite',
              'reintermediate',
              'whiteboard',
              'visualize',
              'repurpose',
              'innovate',
              'scale',
              'unleash',
              'drive',
              'extend',
              'engineer',
              'revolutionize',
              'generate',
              'exploit',
              'transition',
              'e-enable',
              'iterate',
              'cultivate',
              'matrix',
              'productize',
              'redefine',
              'recontextualize'],
              [
                'clicks-and-mortar',
                'value-added',
                'vertical',
                'proactive',
                'robust',
                'revolutionary',
                'scalable',
                'leading-edge',
                'innovative',
                'intuitive',
                'strategic',
                'e-business',
                'mission-critical',
                'sticky',
                'one-to-one',
                '24/7',
                'end-to-end',
                'global',
                'B2B',
                'B2C',
                'granular',
                'frictionless',
                'virtual',
                'viral',
                'dynamic',
                '24/365',
                'best-of-breed',
                'killer',
                'magnetic',
                'bleeding-edge',
                'web-enabled',
                'interactive',
                'dot-com',
                'sexy',
                'back-end',
                'real-time',
                'efficient',
                'front-end',
                'distributed',
                'seamless',
                'extensible',
                'turn-key',
                'world-class',
                'open-source',
                'cross-platform',
                'cross-media',
                'synergistic',
                'bricks-and-clicks',
                'out-of-the-box',
                'enterprise',
                'integrated',
                'impactful',
                'wireless',
                'transparent',
                'next-generation',
                'cutting-edge',
                'user-centric',
                'visionary',
                'customized',
                'ubiquitous',
                'plug-and-play',
                'collaborative',
                'compelling',
                'holistic',
                'rich'
              ],
              [
                'synergies',
                'web-readiness',
                'paradigms',
                'markets',
                'partnerships',
                'infrastructures',
                'platforms',
                'initiatives',
                'channels',
                'eyeballs',
                'communities',
                'ROI',
                'solutions',
                'e-tailers',
                'e-services',
                'action-items',
                'portals',
                'niches',
                'technologies',
                'content',
                'vortals',
                'supply-chains',
                'convergence',
                'relationships',
                'architectures',
                'interfaces',
                'e-markets',
                'e-commerce',
                'systems',
                'bandwidth',
                'infomediaries',
                'models',
                'mindshare',
                'deliverables',
                'users',
                'schemas',
                'networks',
                'applications',
                'metrics',
                'e-business',
                'functionalities',
                'experiences',
                'web services',
                'methodologies'
              ]
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} and #{Name.last_name}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'com',
              'pl',
              'com.pl',
              'net',
              'org'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ],
            supplemental: [
              'abbas',
              'abduco',
              'abeo',
              'abscido',
              'absconditus',
              'absens',
              'absorbeo',
              'absque',
              'abstergo',
              'absum',
              'abundans',
              'abutor',
              'accedo',
              'accendo',
              'acceptus',
              'accipio',
              'accommodo',
              'accusator',
              'acer',
              'acerbitas',
              'acervus',
              'acidus',
              'acies',
              'acquiro',
              'acsi',
              'adamo',
              'adaugeo',
              'addo',
              'adduco',
              'ademptio',
              'adeo',
              'adeptio',
              'adfectus',
              'adfero',
              'adficio',
              'adflicto',
              'adhaero',
              'adhuc',
              'adicio',
              'adimpleo',
              'adinventitias',
              'adipiscor',
              'adiuvo',
              'administratio',
              'admiratio',
              'admitto',
              'admoneo',
              'admoveo',
              'adnuo',
              'adopto',
              'adsidue',
              'adstringo',
              'adsuesco',
              'adsum',
              'adulatio',
              'adulescens',
              'adultus',
              'aduro',
              'advenio',
              'adversus',
              'advoco',
              'aedificium',
              'aeger',
              'aegre',
              'aegrotatio',
              'aegrus',
              'aeneus',
              'aequitas',
              'aequus',
              'aer',
              'aestas',
              'aestivus',
              'aestus',
              'aetas',
              'aeternus',
              'ager',
              'aggero',
              'aggredior',
              'agnitio',
              'agnosco',
              'ago',
              'ait',
              'aiunt',
              'alienus',
              'alii',
              'alioqui',
              'aliqua',
              'alius',
              'allatus',
              'alo',
              'alter',
              'altus',
              'alveus',
              'amaritudo',
              'ambitus',
              'ambulo',
              'amicitia',
              'amiculum',
              'amissio',
              'amita',
              'amitto',
              'amo',
              'amor',
              'amoveo',
              'amplexus',
              'amplitudo',
              'amplus',
              'ancilla',
              'angelus',
              'angulus',
              'angustus',
              'animadverto',
              'animi',
              'animus',
              'annus',
              'anser',
              'ante',
              'antea',
              'antepono',
              'antiquus',
              'aperio',
              'aperte',
              'apostolus',
              'apparatus',
              'appello',
              'appono',
              'appositus',
              'approbo',
              'apto',
              'aptus',
              'apud',
              'aqua',
              'ara',
              'aranea',
              'arbitro',
              'arbor',
              'arbustum',
              'arca',
              'arceo',
              'arcesso',
              'arcus',
              'argentum',
              'argumentum',
              'arguo',
              'arma',
              'armarium',
              'armo',
              'aro',
              'ars',
              'articulus',
              'artificiose',
              'arto',
              'arx',
              'ascisco',
              'ascit',
              'asper',
              'aspicio',
              'asporto',
              'assentator',
              'astrum',
              'atavus',
              'ater',
              'atqui',
              'atrocitas',
              'atrox',
              'attero',
              'attollo',
              'attonbitus',
              'auctor',
              'auctus',
              'audacia',
              'audax',
              'audentia',
              'audeo',
              'audio',
              'auditor',
              'aufero',
              'aureus',
              'auris',
              'aurum',
              'aut',
              'autem',
              'autus',
              'auxilium',
              'avaritia',
              'avarus',
              'aveho',
              'averto',
              'avoco',
              'baiulus',
              'balbus',
              'barba',
              'bardus',
              'basium',
              'beatus',
              'bellicus',
              'bellum',
              'bene',
              'beneficium',
              'benevolentia',
              'benigne',
              'bestia',
              'bibo',
              'bis',
              'blandior',
              'bonus',
              'bos',
              'brevis',
              'cado',
              'caecus',
              'caelestis',
              'caelum',
              'calamitas',
              'calcar',
              'calco',
              'calculus',
              'callide',
              'campana',
              'candidus',
              'canis',
              'canonicus',
              'canto',
              'capillus',
              'capio',
              'capitulus',
              'capto',
              'caput',
              'carbo',
              'carcer',
              'careo',
              'caries',
              'cariosus',
              'caritas',
              'carmen',
              'carpo',
              'carus',
              'casso',
              'caste',
              'casus',
              'catena',
              'caterva',
              'cattus',
              'cauda',
              'causa',
              'caute',
              'caveo',
              'cavus',
              'cedo',
              'celebrer',
              'celer',
              'celo',
              'cena',
              'cenaculum',
              'ceno',
              'censura',
              'centum',
              'cerno',
              'cernuus',
              'certe',
              'certo',
              'certus',
              'cervus',
              'cetera',
              'charisma',
              'chirographum',
              'cibo',
              'cibus',
              'cicuta',
              'cilicium',
              'cimentarius',
              'ciminatio',
              'cinis',
              'circumvenio',
              'cito',
              'civis',
              'civitas',
              'clam',
              'clamo',
              'claro',
              'clarus',
              'claudeo',
              'claustrum',
              'clementia',
              'clibanus',
              'coadunatio',
              'coaegresco',
              'coepi',
              'coerceo',
              'cogito',
              'cognatus',
              'cognomen',
              'cogo',
              'cohaero',
              'cohibeo',
              'cohors',
              'colligo',
              'colloco',
              'collum',
              'colo',
              'color',
              'coma',
              'combibo',
              'comburo',
              'comedo',
              'comes',
              'cometes',
              'comis',
              'comitatus',
              'commemoro',
              'comminor',
              'commodo',
              'communis',
              'comparo',
              'compello',
              'complectus',
              'compono',
              'comprehendo',
              'comptus',
              'conatus',
              'concedo',
              'concido',
              'conculco',
              'condico',
              'conduco',
              'confero',
              'confido',
              'conforto',
              'confugo',
              'congregatio',
              'conicio',
              'coniecto',
              'conitor',
              'coniuratio',
              'conor',
              'conqueror',
              'conscendo',
              'conservo',
              'considero',
              'conspergo',
              'constans',
              'consuasor',
              'contabesco',
              'contego',
              'contigo',
              'contra',
              'conturbo',
              'conventus',
              'convoco',
              'copia',
              'copiose',
              'cornu',
              'corona',
              'corpus',
              'correptius',
              'corrigo',
              'corroboro',
              'corrumpo',
              'coruscus',
              'cotidie',
              'crapula',
              'cras',
              'crastinus',
              'creator',
              'creber',
              'crebro',
              'credo',
              'creo',
              'creptio',
              'crepusculum',
              'cresco',
              'creta',
              'cribro',
              'crinis',
              'cruciamentum',
              'crudelis',
              'cruentus',
              'crur',
              'crustulum',
              'crux',
              'cubicularis',
              'cubitum',
              'cubo',
              'cui',
              'cuius',
              'culpa',
              'culpo',
              'cultellus',
              'cultura',
              'cum',
              'cunabula',
              'cunae',
              'cunctatio',
              'cupiditas',
              'cupio',
              'cuppedia',
              'cupressus',
              'cur',
              'cura',
              'curatio',
              'curia',
              'curiositas',
              'curis',
              'curo',
              'curriculum',
              'currus',
              'cursim',
              'curso',
              'cursus',
              'curto',
              'curtus',
              'curvo',
              'curvus',
              'custodia',
              'damnatio',
              'damno',
              'dapifer',
              'debeo',
              'debilito',
              'decens',
              'decerno',
              'decet',
              'decimus',
              'decipio',
              'decor',
              'decretum',
              'decumbo',
              'dedecor',
              'dedico',
              'deduco',
              'defaeco',
              'defendo',
              'defero',
              'defessus',
              'defetiscor',
              'deficio',
              'defigo',
              'defleo',
              'defluo',
              'defungo',
              'degenero',
              'degero',
              'degusto',
              'deinde',
              'delectatio',
              'delego',
              'deleo',
              'delibero',
              'delicate',
              'delinquo',
              'deludo',
              'demens',
              'demergo',
              'demitto',
              'demo',
              'demonstro',
              'demoror',
              'demulceo',
              'demum',
              'denego',
              'denique',
              'dens',
              'denuncio',
              'denuo',
              'deorsum',
              'depereo',
              'depono',
              'depopulo',
              'deporto',
              'depraedor',
              'deprecator',
              'deprimo',
              'depromo',
              'depulso',
              'deputo',
              'derelinquo',
              'derideo',
              'deripio',
              'desidero',
              'desino',
              'desipio',
              'desolo',
              'desparatus',
              'despecto',
              'despirmatio',
              'infit',
              'inflammatio',
              'paens',
              'patior',
              'patria',
              'patrocinor',
              'patruus',
              'pauci',
              'paulatim',
              'pauper',
              'pax',
              'peccatus',
              'pecco',
              'pecto',
              'pectus',
              'pecunia',
              'pecus',
              'peior',
              'pel',
              'ocer',
              'socius',
              'sodalitas',
              'sol',
              'soleo',
              'solio',
              'solitudo',
              'solium',
              'sollers',
              'sollicito',
              'solum',
              'solus',
              'solutio',
              'solvo',
              'somniculosus',
              'somnus',
              'sonitus',
              'sono',
              'sophismata',
              'sopor',
              'sordeo',
              'sortitus',
              'spargo',
              'speciosus',
              'spectaculum',
              'speculum',
              'sperno',
              'spero',
              'spes',
              'spiculum',
              'spiritus',
              'spoliatio',
              'sponte',
              'stabilis',
              'statim',
              'statua',
              'stella',
              'stillicidium',
              'stipes',
              'stips',
              'sto',
              'strenuus',
              'strues',
              'studio',
              'stultus',
              'suadeo',
              'suasoria',
              'sub',
              'subito',
              'subiungo',
              'sublime',
              'subnecto',
              'subseco',
              'substantia',
              'subvenio',
              'succedo',
              'succurro',
              'sufficio',
              'suffoco',
              'suffragium',
              'suggero',
              'sui',
              'sulum',
              'sum',
              'summa',
              'summisse',
              'summopere',
              'sumo',
              'sumptus',
              'supellex',
              'super',
              'suppellex',
              'supplanto',
              'suppono',
              'supra',
              'surculus',
              'surgo',
              'sursum',
              'suscipio',
              'suspendo',
              'sustineo',
              'suus',
              'synagoga',
              'tabella',
              'tabernus',
              'tabesco',
              'tabgo',
              'tabula',
              'taceo',
              'tactus',
              'taedium',
              'talio',
              'talis',
              'talus',
              'tam',
              'tamdiu',
              'tamen',
              'tametsi',
              'tamisium',
              'tamquam',
              'tandem',
              'tantillus',
              'tantum',
              'tardus',
              'tego',
              'temeritas',
              'temperantia',
              'templum',
              'temptatio',
              'tempus',
              'tenax',
              'tendo',
              'teneo',
              'tener',
              'tenuis',
              'tenus',
              'tepesco',
              'tepidus',
              'ter',
              'terebro',
              'teres',
              'terga',
              'tergeo',
              'tergiversatio',
              'tergo',
              'tergum',
              'termes',
              'terminatio',
              'tero',
              'terra',
              'terreo',
              'territo',
              'terror',
              'tersus',
              'tertius',
              'testimonium',
              'texo',
              'textilis',
              'textor',
              'textus',
              'thalassinus',
              'theatrum',
              'theca',
              'thema',
              'theologus',
              'thermae',
              'thesaurus',
              'thesis',
              'thorax',
              'thymbra',
              'thymum',
              'tibi',
              'timidus',
              'timor',
              'titulus',
              'tolero',
              'tollo',
              'tondeo',
              'tonsor',
              'torqueo',
              'torrens',
              'tot',
              'totidem',
              'toties',
              'totus',
              'tracto',
              'trado',
              'traho',
              'trans',
              'tredecim',
              'tremo',
              'trepide',
              'tres',
              'tribuo',
              'tricesimus',
              'triduana',
              'triginta',
              'tripudio',
              'tristis',
              'triumphus',
              'trucido',
              'truculenter',
              'tubineus',
              'tui',
              'tum',
              'tumultus',
              'tunc',
              'turba',
              'turbo',
              'turpe',
              'turpis',
              'tutamen',
              'tutis',
              'tyrannus',
              'uberrime',
              'ubi',
              'ulciscor',
              'ullus',
              'ulterius',
              'ultio',
              'ultra',
              'umbra',
              'umerus',
              'umquam',
              'una',
              'unde',
              'undique',
              'universe',
              'unus',
              'urbanus',
              'urbs',
              'uredo',
              'usitas',
              'usque',
              'ustilo',
              'ustulo',
              'usus',
              'uter',
              'uterque',
              'utilis',
              'utique',
              'utor',
              'utpote',
              'utrimque',
              'utroque',
              'utrum',
              'uxor',
              'vaco',
              'vacuus',
              'vado',
              'vae',
              'valde',
              'valens',
              'valeo',
              'valetudo',
              'validus',
              'vallum',
              'vapulus',
              'varietas',
              'varius',
              'vehemens',
              'vel',
              'velociter',
              'velum',
              'velut',
              'venia',
              'venio',
              'ventito',
              'ventosus',
              'ventus',
              'venustas',
              'ver',
              'verbera',
              'verbum',
              'vere',
              'verecundia',
              'vereor',
              'vergo',
              'veritas',
              'vero',
              'versus',
              'verto',
              'verumtamen',
              'verus',
              'vesco',
              'vesica',
              'vesper',
              'vespillo',
              'vester',
              'vestigium',
              'vestrum',
              'vetus',
              'via',
              'vicinus',
              'vicissitudo',
              'victoria',
              'victus',
              'videlicet',
              'video',
              'viduata',
              'viduo',
              'vigilo',
              'vigor',
              'vilicus',
              'vilis',
              'vilitas',
              'villa',
              'vinco',
              'vinculum',
              'vindico',
              'vinitor',
              'vinum',
              'vir',
              'virga',
              'virgo',
              'viridis',
              'viriliter',
              'virtus',
              'vis',
              'viscus',
              'vita',
              'vitiosus',
              'vitium',
              'vito',
              'vivo',
              'vix',
              'vobis',
              'vociferor',
              'voco',
              'volaticus',
              'volo',
              'volubilis',
              'voluntarius',
              'volup',
              'volutabrum',
              'volva',
              'vomer',
              'vomica',
              'vomito',
              'vorago',
              'vorax',
              'voro',
              'vos',
              'votum',
              'voveo',
              'vox',
              'vulariter',
              'vulgaris',
              'vulgivagus',
              'vulgo',
              'vulgus',
              'vulnero',
              'vulnus',
              'vulpes',
              'vulticulus',
              'vultuosus',
              'xiphias'
            ]
          },
          phone_number: {
            formats: [
              '12-###-##-##',
              '13-###-##-##',
              '14-###-##-##',
              '15-###-##-##',
              '16-###-##-##',
              '17-###-##-##',
              '18-###-##-##',
              '22-###-##-##',
              '23-###-##-##',
              '24-###-##-##',
              '25-###-##-##',
              '29-###-##-##',
              '32-###-##-##',
              '33-###-##-##',
              '34-###-##-##',
              '41-###-##-##',
              '42-###-##-##',
              '43-###-##-##',
              '44-###-##-##',
              '46-###-##-##',
              '48-###-##-##',
              '52-###-##-##',
              '54-###-##-##',
              '55-###-##-##',
              '56-###-##-##',
              '58-###-##-##',
              '59-###-##-##',
              '61-###-##-##',
              '62-###-##-##',
              '63-###-##-##',
              '65-###-##-##',
              '67-###-##-##',
              '68-###-##-##',
              '71-###-##-##',
              '74-###-##-##',
              '75-###-##-##',
              '76-###-##-##',
              '77-###-##-##',
              '81-###-##-##',
              '82-###-##-##',
              '83-###-##-##',
              '84-###-##-##',
              '85-###-##-##',
              '86-###-##-##',
              '87-###-##-##',
              '89-###-##-##',
              '91-###-##-##',
              '94-###-##-##',
              '95-###-##-##'
            ]
          },
          cell_phone: {
            formats: [
              '50-###-##-##',
              '51-###-##-##',
              '53-###-##-##',
              '57-###-##-##',
              '60-###-##-##',
              '66-###-##-##',
              '69-###-##-##',
              '72-###-##-##',
              '73-###-##-##',
              '78-###-##-##',
              '79-###-##-##',
              '88-###-##-##'
            ]
          }
        }
      },
      'pt-BR': {
        faker: {
          address: {
            city_prefix: [
              'Nova',
              'Velha',
              'Grande',
              'Vila',
              'Município de'
            ],
            city_suffix: [
              'do Descoberto',
              'de Nossa Senhora',
              'do Norte',
              'do Sul'
            ],
            country: [
              'Afeganistão',
              'Albânia',
              'Algéria',
              'Samoa',
              'Andorra',
              'Angola',
              'Anguilla',
              'Antigua and Barbada',
              'Argentina',
              'Armênia',
              'Aruba',
              'Austrália',
              'Áustria',
              'Alzerbajão',
              'Bahamas',
              'Barém',
              'Bangladesh',
              'Barbado',
              'Belgrado',
              'Bélgica',
              'Belize',
              'Benin',
              'Bermuda',
              'Bhutan',
              'Bolívia',
              'Bôsnia',
              'Botuasuna',
              'Bouvetoia',
              'Brasil',
              'Arquipélago de Chagos',
              'Ilhas Virgens',
              'Brunei',
              'Bulgária',
              'Burkina Faso',
              'Burundi',
              'Cambójia',
              'Camarões',
              'Canadá',
              'Cabo Verde',
              'Ilhas Caiman',
              'República da África Central',
              'Chad',
              'Chile',
              'China',
              'Ilhas Natal',
              'Ilhas Cocos',
              'Colômbia',
              'Comoros',
              'Congo',
              'Ilhas Cook',
              'Costa Rica',
              'Costa do Marfim',
              'Croácia',
              'Cuba',
              'Cyprus',
              'República Tcheca',
              'Dinamarca',
              'Djibouti',
              'Dominica',
              'República Dominicana',
              'Equador',
              'Egito',
              'El Salvador',
              'Guiné Equatorial',
              'Eritrea',
              'Estônia',
              'Etiópia',
              'Ilhas Faroe',
              'Malvinas',
              'Fiji',
              'Finlândia',
              'França',
              'Guiné Francesa',
              'Polinésia Francesa',
              'Gabão',
              'Gâmbia',
              'Georgia',
              'Alemanha',
              'Gana',
              'Gibraltar',
              'Grécia',
              'Groelândia',
              'Granada',
              'Guadalupe',
              'Guano',
              'Guatemala',
              'Guernsey',
              'Guiné',
              'Guiné-Bissau',
              'Guiana',
              'Haiti',
              'Heard Island and McDonald Islands',
              'Vaticano',
              'Honduras',
              'Hong Kong',
              'Hungria',
              'Iceland',
              'Índia',
              'Indonésia',
              'Irã',
              'Iraque',
              'Irlanda',
              'Ilha de Man',
              'Israel',
              'Itália',
              'Jamaica',
              'Japão',
              'Jersey',
              'Jordânia',
              'Cazaquistão',
              'Quênia',
              'Kiribati',
              'Coreia do Norte',
              'Coreia do Sul',
              'Kuwait',
              'Kyrgyz Republic',
              'República Democrática de Lao People',
              'Latvia',
              'Líbano',
              'Lesotho',
              'Libéria',
              'Libyan Arab Jamahiriya',
              'Liechtenstein',
              'Lituânia',
              'Luxemburgo',
              'Macao',
              'Macedônia',
              'Madagascar',
              'Malawi',
              'Malásia',
              'Maldives',
              'Mali',
              'Malta',
              'Ilhas Marshall',
              'Martinica',
              'Mauritânia',
              'Mauritius',
              'Mayotte',
              'México',
              'Micronésia',
              'Moldova',
              'Mônaco',
              'Mongólia',
              'Montenegro',
              'Montserrat',
              'Marrocos',
              'Moçambique',
              'Myanmar',
              'Namibia',
              'Nauru',
              'Nepal',
              'Antilhas Holandesas',
              'Holanda',
              'Nova Caledonia',
              'Nova Zelândia',
              'Nicarágua',
              'Nigéria',
              'Niue',
              'Ilha Norfolk',
              'Northern Mariana Islands',
              'Noruega',
              'Oman',
              'Paquistão',
              'Palau',
              'Território da Palestina',
              'Panamá',
              'Nova Guiné Papua',
              'Paraguai',
              'Peru',
              'Filipinas',
              'Polônia',
              'Portugal',
              'Puerto Rico',
              'Qatar',
              'Romênia',
              'Rússia',
              'Ruanda',
              'São Bartolomeu',
              'Santa Helena',
              'Santa Lúcia',
              'Saint Martin',
              'Saint Pierre and Miquelon',
              'Saint Vincent and the Grenadines',
              'Samoa',
              'San Marino',
              'Sao Tomé e Príncipe',
              'Arábia Saudita',
              'Senegal',
              'Sérvia',
              'Seychelles',
              'Serra Leoa',
              'Singapura',
              'Eslováquia',
              'Eslovênia',
              'Ilhas Salomão',
              'Somália',
              'África do Sul',
              'South Georgia and the South Sandwich Islands',
              'Spanha',
              'Sri Lanka',
              'Sudão',
              'Suriname',
              'Svalbard & Jan Mayen Islands',
              'Swaziland',
              'Suécia',
              'Suíça',
              'Síria',
              'Taiwan',
              'Tajiquistão',
              'Tanzânia',
              'Tailândia',
              'Timor-Leste',
              'Togo',
              'Tokelau',
              'Tonga',
              'Trinidá e Tobago',
              'Tunísia',
              'Turquia',
              'Turcomenistão',
              'Turks and Caicos Islands',
              'Tuvalu',
              'Uganda',
              'Ucrânia',
              'Emirados Árabes Unidos',
              'Reino Unido',
              'Estados Unidos da América',
              'Estados Unidos das Ilhas Virgens',
              'Uruguai',
              'Uzbequistão',
              'Vanuatu',
              'Venezuela',
              'Vietnã',
              'Wallis and Futuna',
              'Sahara',
              'Yemen',
              'Zâmbia',
              'Zimbábue'
            ],
            building_number: [
              '#####',
              '####',
              '###'
            ],
            street_suffix: [
              'Rua',
              'Avenida',
              'Travessa',
              'Ponte',
              'Alameda',
              'Marginal',
              'Viela',
              'Rodovia'
            ],
            secondary_address: [
              'Apto. ###',
              'Sobrado ##',
              'Casa #',
              'Lote ##',
              'Quadra ##'
            ],
            postcode: [
              '#####',
              '#####-###'
            ],
            state: [
              'Acre',
              'Alagoas',
              'Amapá',
              'Amazonas',
              'Bahia',
              'Ceará',
              'Distrito Federal',
              'Espírito Santo',
              'Goiás',
              'Maranhão',
              'Mato Grosso',
              'Mato Grosso do Sul',
              'Minas Gerais',
              'Pará',
              'Paraíba',
              'Paraná',
              'Pernambuco',
              'Piauí',
              'Rio de Janeiro',
              'Rio Grande do Norte',
              'Rio Grande do Sul',
              'Rondônia',
              'Roraima',
              'Santa Catarina',
              'São Paulo',
              'Sergipe',
              'Tocantins'
            ],
            state_abbr: [
              'AC',
              'AL',
              'AP',
              'AM',
              'BA',
              'CE',
              'DF',
              'ES',
              'GO',
              'MA',
              'MT',
              'MS',
              'PA',
              'PB',
              'PR',
              'PE',
              'PI',
              'RJ',
              'RN',
              'RS',
              'RO',
              'RR',
              'SC',
              'SP'
            ],
            default_country: [
              'Brasil'
            ]
          },
          company: {
            suffix: [
              'S.A.',
              'LTDA',
              'e Associados',
              'Comércio'
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} e #{Name.last_name}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'yahoo.com',
              'hotmail.com',
              'live.com',
              'bol.com.br'
            ],
            domain_suffix: [
              'br',
              'com',
              'biz',
              'info',
              'name',
              'net',
              'org'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ]
          },
          name: {
            first_name: [
              'Alessandro',
              'Alessandra',
              'Alexandre',
              'Aline',
              'Antônio',
              'Breno',
              'Bruna',
              'Carlos',
              'Carla',
              'Célia',
              'Cecília',
              'César',
              'Danilo',
              'Dalila',
              'Deneval',
              'Eduardo',
              'Eduarda',
              'Esther',
              'Elísio',
              'Fábio',
              'Fabrício',
              'Fabrícia',
              'Félix',
              'Felícia',
              'Feliciano',
              'Frederico',
              'Fabiano',
              'Gustavo',
              'Guilherme',
              'Gúbio',
              'Heitor',
              'Hélio',
              'Hugo',
              'Isabel',
              'Isabela',
              'Ígor',
              'João',
              'Joana',
              'Júlio César',
              'Júlio',
              'Júlia',
              'Janaína',
              'Karla',
              'Kléber',
              'Lucas',
              'Lorena',
              'Lorraine',
              'Larissa',
              'Ladislau',
              'Marcos',
              'Meire',
              'Marcelo',
              'Marcela',
              'Margarida',
              'Mércia',
              'Márcia',
              'Marli',
              'Morgana',
              'Maria',
              'Norberto',
              'Natália',
              'Nataniel',
              'Núbia',
              'Ofélia',
              'Paulo',
              'Paula',
              'Pablo',
              'Pedro',
              'Raul',
              'Rafael',
              'Rafaela',
              'Ricardo',
              'Roberto',
              'Roberta',
              'Sílvia',
              'Sílvia',
              'Silas',
              'Suélen',
              'Sara',
              'Salvador',
              'Sirineu',
              'Talita',
              'Tertuliano',
              'Vicente',
              'Víctor',
              'Vitória',
              'Yango',
              'Yago',
              'Yuri',
              'Washington',
              'Warley'
            ],
            last_name: [
              'Silva',
              'Souza',
              'Carvalho',
              'Santos',
              'Reis',
              'Xavier',
              'Franco',
              'Braga',
              'Macedo',
              'Batista',
              'Barros',
              'Moraes',
              'Costa',
              'Pereira',
              'Carvalho',
              'Melo',
              'Saraiva',
              'Nogueira',
              'Oliveira',
              'Martins',
              'Moreira',
              'Albuquerque'
            ],
            prefix: [
              'Sr.',
              'Sra.',
              'Srta.',
              'Dr.'
            ],
            suffix: [
              'Jr.',
              'Neto',
              'Filho'
            ]
          },
          phone_number: {
            formats: [
              '(##) ####-####',
              '+55 (##) ####-####',
              '(##) #####-####'
            ]
          }
        }
      },
      ru: {
        faker: {
          separator: ' и ',
          address: {
            country: [
              'Австралия',
              'Австрия',
              'Азербайджан',
              'Албания',
              'Алжир',
              'Американское Самоа (не признана)',
              'Ангилья',
              'Ангола',
              'Андорра',
              'Антарктика (не признана)',
              'Антигуа и Барбуда',
              'Антильские Острова (не признана)',
              'Аомынь (не признана)',
              'Аргентина',
              'Армения',
              'Афганистан',
              'Багамские Острова',
              'Бангладеш',
              'Барбадос',
              'Бахрейн',
              'Беларусь',
              'Белиз',
              'Бельгия',
              'Бенин',
              'Болгария',
              'Боливия',
              'Босния и Герцеговина',
              'Ботсвана',
              'Бразилия',
              'Бруней',
              'Буркина-Фасо',
              'Бурунди',
              'Бутан',
              'Вануату',
              'Ватикан',
              'Великобритания',
              'Венгрия',
              'Венесуэла',
              'Восточный Тимор',
              'Вьетнам',
              'Габон',
              'Гаити',
              'Гайана',
              'Гамбия',
              'Гана',
              'Гваделупа (не признана)',
              'Гватемала',
              'Гвиана (не признана)',
              'Гвинея',
              'Гвинея-Бисау',
              'Германия',
              'Гондурас',
              'Гренада',
              'Греция',
              'Грузия',
              'Дания',
              'Джибути',
              'Доминика',
              'Доминиканская Республика',
              'Египет',
              'Замбия',
              'Зимбабве',
              'Израиль',
              'Индия',
              'Индонезия',
              'Иордания',
              'Ирак',
              'Иран',
              'Ирландия',
              'Исландия',
              'Испания',
              'Италия',
              'Йемен',
              'Кабо-Верде',
              'Казахстан',
              'Камбоджа',
              'Камерун',
              'Канада',
              'Катар',
              'Кения',
              'Кипр',
              'Кирибати',
              'Китай',
              'Колумбия',
              'Коморские Острова',
              'Конго',
              'Демократическая Республика',
              'Корея (Северная)',
              'Корея (Южная)',
              'Косово',
              'Коста-Рика',
              'Кот-д\'Ивуар',
              'Куба',
              'Кувейт',
              'Кука острова',
              'Кыргызстан',
              'Лаос',
              'Латвия',
              'Лесото',
              'Либерия',
              'Ливан',
              'Ливия',
              'Литва',
              'Лихтенштейн',
              'Люксембург',
              'Маврикий',
              'Мавритания',
              'Мадагаскар',
              'Македония',
              'Малави',
              'Малайзия',
              'Мали',
              'Мальдивы',
              'Мальта',
              'Маршалловы Острова',
              'Мексика',
              'Микронезия',
              'Мозамбик',
              'Молдова',
              'Монако',
              'Монголия',
              'Марокко',
              'Мьянма',
              'Намибия',
              'Науру',
              'Непал',
              'Нигер',
              'Нигерия',
              'Нидерланды',
              'Никарагуа',
              'Новая Зеландия',
              'Норвегия',
              'Объединенные Арабские Эмираты',
              'Оман',
              'Пакистан',
              'Палау',
              'Панама',
              'Папуа — Новая Гвинея',
              'Парагвай',
              'Перу',
              'Польша',
              'Португалия',
              'Республика Конго',
              'Россия',
              'Руанда',
              'Румыния',
              'Сальвадор',
              'Самоа',
              'Сан-Марино',
              'Сан-Томе и Принсипи',
              'Саудовская Аравия',
              'Свазиленд',
              'Сейшельские острова',
              'Сенегал',
              'Сент-Винсент и Гренадины',
              'Сент-Киттс и Невис',
              'Сент-Люсия',
              'Сербия',
              'Сингапур',
              'Сирия',
              'Словакия',
              'Словения',
              'Соединенные Штаты Америки',
              'Соломоновы Острова',
              'Сомали',
              'Судан',
              'Суринам',
              'Сьерра-Леоне',
              'Таджикистан',
              'Таиланд',
              'Тайвань (не признана)',
              'Тамил-Илам (не признана)',
              'Танзания',
              'Тёркс и Кайкос (не признана)',
              'Того',
              'Токелау (не признана)',
              'Тонга',
              'Тринидад и Тобаго',
              'Тувалу',
              'Тунис',
              'Турецкая Республика Северного Кипра (не признана)',
              'Туркменистан',
              'Турция',
              'Уганда',
              'Узбекистан',
              'Украина',
              'Уругвай',
              'Фарерские Острова (не признана)',
              'Фиджи',
              'Филиппины',
              'Финляндия',
              'Франция',
              'Французская Полинезия (не признана)',
              'Хорватия',
              'Центральноафриканская Республика',
              'Чад',
              'Черногория',
              'Чехия',
              'Чили',
              'Швейцария',
              'Швеция',
              'Шри-Ланка',
              'Эквадор',
              'Экваториальная Гвинея',
              'Эритрея',
              'Эстония',
              'Эфиопия',
              'Южно-Африканская Республика',
              'Ямайка',
              'Япония'
            ],
            building_number: [
              '###'
            ],
            street_suffix: [
              'ул.',
              'улица',
              'проспект',
              'пр.',
              'площадь',
              'пл.'
            ],
            secondary_address: [
              'кв. ###'
            ],
            postcode: [
              '######'
            ],
            state: [
              'Республика Адыгея',
              'Республика Башкортостан',
              'Республика Бурятия',
              'Республика Алтай Республика Дагестан',
              'Республика Ингушетия',
              'Кабардино-Балкарская Республика',
              'Республика Калмыкия',
              'Республика Карачаево-Черкессия',
              'Республика Карелия',
              'Республика Коми',
              'Республика Марий Эл',
              'Республика Мордовия',
              'Республика Саха (Якутия)',
              'Республика Северная Осетия-Алания',
              'Республика Татарстан',
              'Республика Тыва',
              'Удмуртская Республика',
              'Республика Хакасия',
              'Чувашская Республика',
              'Алтайский край',
              'Краснодарский край',
              'Красноярский край',
              'Приморский край',
              'Ставропольский край',
              'Хабаровский край',
              'Амурская область',
              'Архангельская область',
              'Астраханская область',
              'Белгородская область',
              'Брянская область',
              'Владимирская область',
              'Волгоградская область',
              'Вологодская область',
              'Воронежская область',
              'Ивановская область',
              'Иркутская область',
              'Калиниградская область',
              'Калужская область',
              'Камчатская область',
              'Кемеровская область',
              'Кировская область',
              'Костромская область',
              'Курганская область',
              'Курская область',
              'Ленинградская область',
              'Липецкая область',
              'Магаданская область',
              'Московская область',
              'Мурманская область',
              'Нижегородская область',
              'Новгородская область',
              'Новосибирская область',
              'Омская область',
              'Оренбургская область',
              'Орловская область',
              'Пензенская область',
              'Пермская область',
              'Псковская область',
              'Ростовская область',
              'Рязанская область',
              'Самарская область',
              'Саратовская область',
              'Сахалинская область',
              'Свердловская область',
              'Смоленская область',
              'Тамбовская область',
              'Тверская область',
              'Томская область',
              'Тульская область',
              'Тюменская область',
              'Ульяновская область',
              'Челябинская область',
              'Читинская область',
              'Ярославская область',
              'Еврейская автономная область',
              'Агинский Бурятский авт. округ',
              'Коми-Пермяцкий автономный округ',
              'Корякский автономный округ',
              'Ненецкий автономный округ',
              'Таймырский (Долгано-Ненецкий) автономный округ',
              'Усть-Ордынский Бурятский автономный округ',
              'Ханты-Мансийский автономный округ',
              'Чукотский автономный округ',
              'Эвенкийский автономный округ',
              'Ямало-Ненецкий автономный округ',
              'Чеченская Республика'
            ],
            street_title: [
              'Советская',
              'Молодежная',
              'Центральная',
              'Школьная',
              'Новая',
              'Садовая',
              'Лесная',
              'Набережная',
              'Ленина',
              'Мира',
              'Октябрьская',
              'Зеленая',
              'Комсомольская',
              'Заречная',
              'Первомайская',
              'Гагарина',
              'Полевая',
              'Луговая',
              'Пионерская',
              'Кирова',
              'Юбилейная',
              'Северная',
              'Пролетарская',
              'Степная',
              'Пушкина',
              'Калинина',
              'Южная',
              'Колхозная',
              'Рабочая',
              'Солнечная',
              'Железнодорожная',
              'Восточная',
              'Заводская',
              'Чапаева',
              'Нагорная',
              'Строителей',
              'Береговая',
              'Победы',
              'Горького',
              'Кооперативная',
              'Красноармейская',
              'Совхозная',
              'Речная',
              'Школьный',
              'Спортивная',
              'Озерная',
              'Строительная',
              'Парковая',
              'Чкалова',
              'Мичурина',
              'речень улиц',
              'Подгорная',
              'Дружбы',
              'Почтовая',
              'Партизанская',
              'Вокзальная',
              'Лермонтова',
              'Свободы',
              'Дорожная',
              'Дачная',
              'Маяковского',
              'Западная',
              'Фрунзе',
              'Дзержинского',
              'Московская',
              'Свердлова',
              'Некрасова',
              'Гоголя',
              'Красная',
              'Трудовая',
              'Шоссейная',
              'Чехова',
              'Коммунистическая',
              'Труда',
              'Комарова',
              'Матросова',
              'Островского',
              'Сосновая',
              'Клубная',
              'Куйбышева',
              'Крупской',
              'Березовая',
              'Карла Маркса',
              '8 Марта',
              'Больничная',
              'Садовый',
              'Интернациональная',
              'Суворова',
              'Цветочная',
              'Трактовая',
              'Ломоносова',
              'Горная',
              'Космонавтов',
              'Энергетиков',
              'Шевченко',
              'Весенняя',
              'Механизаторов',
              'Коммунальная',
              'Лесной',
              '40 лет Победы',
              'Майская'
            ],
            city_name: [
              'Москва',
              'Владимир',
              'Санкт-Петербург',
              'Новосибирск',
              'Екатеринбург',
              'Нижний Новгород',
              'Самара',
              'Казань',
              'Омск',
              'Челябинск',
              'Ростов-на-Дону',
              'Уфа',
              'Волгоград',
              'Пермь',
              'Красноярск',
              'Воронеж',
              'Саратов',
              'Краснодар',
              'Тольятти',
              'Ижевск',
              'Барнаул',
              'Ульяновск',
              'Тюмень',
              'Иркутск',
              'Владивосток',
              'Ярославль',
              'Хабаровск',
              'Махачкала',
              'Оренбург',
              'Новокузнецк',
              'Томск',
              'Кемерово',
              'Рязань',
              'Астрахань',
              'Пенза',
              'Липецк',
              'Тула',
              'Киров',
              'Чебоксары',
              'Курск',
              'Брянскm Магнитогорск',
              'Иваново',
              'Тверь',
              'Ставрополь',
              'Белгород',
              'Сочи'
            ],
            city: [
              '#{Address.city_name}'
            ],
            street_name: [
              '#{street_suffix} #{Address.street_title}',
              '#{Address.street_title} #{street_suffix}'
            ],
            street_address: [
              '#{street_name}, #{building_number}'
            ],
            default_country: [
              'Россия'
            ]
          },
          internet: {
            free_email: [
              'yandex.ru',
              'ya.ru',
              'mail.ru',
              'gmail.com',
              'yahoo.com',
              'hotmail.com'
            ],
            domain_suffix: [
              'com',
              'ru',
              'info',
              'рф',
              'net',
              'org'
            ]
          },
          name: {
            male_first_name: [
              'Александр',
              'Алексей',
              'Альберт',
              'Анатолий',
              'Андрей',
              'Антон',
              'Аркадий',
              'Арсений',
              'Артём',
              'Борис',
              'Вадим',
              'Валентин',
              'Валерий',
              'Василий',
              'Виктор',
              'Виталий',
              'Владимир',
              'Владислав',
              'Вячеслав',
              'Геннадий',
              'Георгий',
              'Герман',
              'Григорий',
              'Даниил',
              'Денис',
              'Дмитрий',
              'Евгений',
              'Егор',
              'Иван',
              'Игнатий',
              'Игорь',
              'Илья',
              'Константин',
              'Лаврентий',
              'Леонид',
              'Лука',
              'Макар',
              'Максим',
              'Матвей',
              'Михаил',
              'Никита',
              'Николай',
              'Олег',
              'Роман',
              'Семён',
              'Сергей',
              'Станислав',
              'Степан',
              'Фёдор',
              'Эдуард',
              'Юрий',
              'Ярослав'
            ],
            male_middle_name: [
              'Александрович',
              'Алексеевич',
              'Альбертович',
              'Анатольевич',
              'Андреевич',
              'Антонович',
              'Аркадьевич',
              'Арсеньевич',
              'Артёмович',
              'Борисович',
              'Вадимович',
              'Валентинович',
              'Валерьевич',
              'Васильевич',
              'Викторович',
              'Витальевич',
              'Владимирович',
              'Владиславович',
              'Вячеславович',
              'Геннадьевич',
              'Георгиевич',
              'Германович',
              'Григорьевич',
              'Даниилович',
              'Денисович',
              'Дмитриевич',
              'Евгеньевич',
              'Егорович',
              'Иванович',
              'Игнатьевич',
              'Игоревич',
              'Ильич',
              'Константинович',
              'Лаврентьевич',
              'Леонидович',
              'Лукич',
              'Макарович',
              'Максимович',
              'Матвеевич',
              'Михайлович',
              'Никитич',
              'Николаевич',
              'Олегович',
              'Романович',
              'Семёнович',
              'Сергеевич',
              'Станиславович',
              'Степанович',
              'Фёдорович',
              'Эдуардович',
              'Юрьевич',
              'Ярославович'
            ],
            male_last_name: [
              'Смирнов',
              'Иванов',
              'Кузнецов',
              'Попов',
              'Соколов',
              'Лебедев',
              'Козлов',
              'Новиков',
              'Морозов',
              'Петров',
              'Волков',
              'Соловьев',
              'Васильев',
              'Зайцев',
              'Павлов',
              'Семенов',
              'Голубев',
              'Виноградов',
              'Богданов',
              'Воробьев',
              'Федоров',
              'Михайлов',
              'Беляев',
              'Тарасов',
              'Белов',
              'Комаров',
              'Орлов',
              'Киселев',
              'Макаров',
              'Андреев',
              'Ковалев',
              'Ильин',
              'Гусев',
              'Титов',
              'Кузьмин',
              'Кудрявцев',
              'Баранов',
              'Куликов',
              'Алексеев',
              'Степанов',
              'Яковлев',
              'Сорокин',
              'Сергеев',
              'Романов',
              'Захаров',
              'Борисов',
              'Королев',
              'Герасимов',
              'Пономарев',
              'Григорьев',
              'Лазарев',
              'Медведев',
              'Ершов',
              'Никитин',
              'Соболев',
              'Рябов',
              'Поляков',
              'Цветков',
              'Данилов',
              'Жуков',
              'Фролов',
              'Журавлев',
              'Николаев',
              'Крылов',
              'Максимов',
              'Сидоров',
              'Осипов',
              'Белоусов',
              'Федотов',
              'Дорофеев',
              'Егоров',
              'Матвеев',
              'Бобров',
              'Дмитриев',
              'Калинин',
              'Анисимов',
              'Петухов',
              'Антонов',
              'Тимофеев',
              'Никифоров',
              'Веселов',
              'Филиппов',
              'Марков',
              'Большаков',
              'Суханов',
              'Миронов',
              'Ширяев',
              'Александров',
              'Коновалов',
              'Шестаков',
              'Казаков',
              'Ефимов',
              'Денисов',
              'Громов',
              'Фомин',
              'Давыдов',
              'Мельников',
              'Щербаков',
              'Блинов',
              'Колесников',
              'Карпов',
              'Афанасьев',
              'Власов',
              'Маслов',
              'Исаков',
              'Тихонов',
              'Аксенов',
              'Гаврилов',
              'Родионов',
              'Котов',
              'Горбунов',
              'Кудряшов',
              'Быков',
              'Зуев',
              'Третьяков',
              'Савельев',
              'Панов',
              'Рыбаков',
              'Суворов',
              'Абрамов',
              'Воронов',
              'Мухин',
              'Архипов',
              'Трофимов',
              'Мартынов',
              'Емельянов',
              'Горшков',
              'Чернов',
              'Овчинников',
              'Селезнев',
              'Панфилов',
              'Копылов',
              'Михеев',
              'Галкин',
              'Назаров',
              'Лобанов',
              'Лукин',
              'Беляков',
              'Потапов',
              'Некрасов',
              'Хохлов',
              'Жданов',
              'Наумов',
              'Шилов',
              'Воронцов',
              'Ермаков',
              'Дроздов',
              'Игнатьев',
              'Савин',
              'Логинов',
              'Сафонов',
              'Капустин',
              'Кириллов',
              'Моисеев',
              'Елисеев',
              'Кошелев',
              'Костин',
              'Горбачев',
              'Орехов',
              'Ефремов',
              'Исаев',
              'Евдокимов',
              'Калашников',
              'Кабанов',
              'Носков',
              'Юдин',
              'Кулагин',
              'Лапин',
              'Прохоров',
              'Нестеров',
              'Харитонов',
              'Агафонов',
              'Муравьев',
              'Ларионов',
              'Федосеев',
              'Зимин',
              'Пахомов',
              'Шубин',
              'Игнатов',
              'Филатов',
              'Крюков',
              'Рогов',
              'Кулаков',
              'Терентьев',
              'Молчанов',
              'Владимиров',
              'Артемьев',
              'Гурьев',
              'Зиновьев',
              'Гришин',
              'Кононов',
              'Дементьев',
              'Ситников',
              'Симонов',
              'Мишин',
              'Фадеев',
              'Комиссаров',
              'Мамонтов',
              'Носов',
              'Гуляев',
              'Шаров',
              'Устинов',
              'Вишняков',
              'Евсеев',
              'Лаврентьев',
              'Брагин',
              'Константинов',
              'Корнилов',
              'Авдеев',
              'Зыков',
              'Бирюков',
              'Шарапов',
              'Никонов',
              'Щукин',
              'Дьячков',
              'Одинцов',
              'Сазонов',
              'Якушев',
              'Красильников',
              'Гордеев',
              'Самойлов',
              'Князев',
              'Беспалов',
              'Уваров',
              'Шашков',
              'Бобылев',
              'Доронин',
              'Белозеров',
              'Рожков',
              'Самсонов',
              'Мясников',
              'Лихачев',
              'Буров',
              'Сысоев',
              'Фомичев',
              'Русаков',
              'Стрелков',
              'Гущин',
              'Тетерин',
              'Колобов',
              'Субботин',
              'Фокин',
              'Блохин',
              'Селиверстов',
              'Пестов',
              'Кондратьев',
              'Силин',
              'Меркушев',
              'Лыткин',
              'Туров'
            ],
            female_first_name: [
              'Анна',
              'Алёна',
              'Алевтина',
              'Александра',
              'Алина',
              'Алла',
              'Анастасия',
              'Ангелина',
              'Анжела',
              'Анжелика',
              'Антонида',
              'Антонина',
              'Анфиса',
              'Арина',
              'Валентина',
              'Валерия',
              'Варвара',
              'Василиса',
              'Вера',
              'Вероника',
              'Виктория',
              'Галина',
              'Дарья',
              'Евгения',
              'Екатерина',
              'Елена',
              'Елизавета',
              'Жанна',
              'Зинаида',
              'Зоя',
              'Ирина',
              'Кира',
              'Клавдия',
              'Ксения',
              'Лариса',
              'Лидия',
              'Любовь',
              'Людмила',
              'Маргарита',
              'Марина',
              'Мария',
              'Надежда',
              'Наталья',
              'Нина',
              'Оксана',
              'Ольга',
              'Раиса',
              'Регина',
              'Римма',
              'Светлана',
              'София',
              'Таисия',
              'Тамара',
              'Татьяна',
              'Ульяна',
              'Юлия'
            ],
            female_middle_name: [
              'Александровна',
              'Алексеевна',
              'Альбертовна',
              'Анатольевна',
              'Андреевна',
              'Антоновна',
              'Аркадьевна',
              'Арсеньевна',
              'Артёмовна',
              'Борисовна',
              'Вадимовна',
              'Валентиновна',
              'Валерьевна',
              'Васильевна',
              'Викторовна',
              'Витальевна',
              'Владимировна',
              'Владиславовна',
              'Вячеславовна',
              'Геннадьевна',
              'Георгиевна',
              'Германовна',
              'Григорьевна',
              'Данииловна',
              'Денисовна',
              'Дмитриевна',
              'Евгеньевна',
              'Егоровна',
              'Ивановна',
              'Игнатьевна',
              'Игоревна',
              'Ильинична',
              'Константиновна',
              'Лаврентьевна',
              'Леонидовна',
              'Макаровна',
              'Максимовна',
              'Матвеевна',
              'Михайловна',
              'Никитична',
              'Николаевна',
              'Олеговна',
              'Романовна',
              'Семёновна',
              'Сергеевна',
              'Станиславовна',
              'Степановна',
              'Фёдоровна',
              'Эдуардовна',
              'Юрьевна',
              'Ярославовна'
            ],
            female_last_name: [
              'Смирнова',
              'Иванова',
              'Кузнецова',
              'Попова',
              'Соколова',
              'Лебедева',
              'Козлова',
              'Новикова',
              'Морозова',
              'Петрова',
              'Волкова',
              'Соловьева',
              'Васильева',
              'Зайцева',
              'Павлова',
              'Семенова',
              'Голубева',
              'Виноградова',
              'Богданова',
              'Воробьева',
              'Федорова',
              'Михайлова',
              'Беляева',
              'Тарасова',
              'Белова',
              'Комарова',
              'Орлова',
              'Киселева',
              'Макарова',
              'Андреева',
              'Ковалева',
              'Ильина',
              'Гусева',
              'Титова',
              'Кузьмина',
              'Кудрявцева',
              'Баранова',
              'Куликова',
              'Алексеева',
              'Степанова',
              'Яковлева',
              'Сорокина',
              'Сергеева',
              'Романова',
              'Захарова',
              'Борисова',
              'Королева',
              'Герасимова',
              'Пономарева',
              'Григорьева',
              'Лазарева',
              'Медведева',
              'Ершова',
              'Никитина',
              'Соболева',
              'Рябова',
              'Полякова',
              'Цветкова',
              'Данилова',
              'Жукова',
              'Фролова',
              'Журавлева',
              'Николаева',
              'Крылова',
              'Максимова',
              'Сидорова',
              'Осипова',
              'Белоусова',
              'Федотова',
              'Дорофеева',
              'Егорова',
              'Матвеева',
              'Боброва',
              'Дмитриева',
              'Калинина',
              'Анисимова',
              'Петухова',
              'Антонова',
              'Тимофеева',
              'Никифорова',
              'Веселова',
              'Филиппова',
              'Маркова',
              'Большакова',
              'Суханова',
              'Миронова',
              'Ширяева',
              'Александрова',
              'Коновалова',
              'Шестакова',
              'Казакова',
              'Ефимова',
              'Денисова',
              'Громова',
              'Фомина',
              'Давыдова',
              'Мельникова',
              'Щербакова',
              'Блинова',
              'Колесникова',
              'Карпова',
              'Афанасьева',
              'Власова',
              'Маслова',
              'Исакова',
              'Тихонова',
              'Аксенова',
              'Гаврилова',
              'Родионова',
              'Котова',
              'Горбунова',
              'Кудряшова',
              'Быкова',
              'Зуева',
              'Третьякова',
              'Савельева',
              'Панова',
              'Рыбакова',
              'Суворова',
              'Абрамова',
              'Воронова',
              'Мухина',
              'Архипова',
              'Трофимова',
              'Мартынова',
              'Емельянова',
              'Горшкова',
              'Чернова',
              'Овчинникова',
              'Селезнева',
              'Панфилова',
              'Копылова',
              'Михеева',
              'Галкина',
              'Назарова',
              'Лобанова',
              'Лукина',
              'Белякова',
              'Потапова',
              'Некрасова',
              'Хохлова',
              'Жданова',
              'Наумова',
              'Шилова',
              'Воронцова',
              'Ермакова',
              'Дроздова',
              'Игнатьева',
              'Савина',
              'Логинова',
              'Сафонова',
              'Капустина',
              'Кириллова',
              'Моисеева',
              'Елисеева',
              'Кошелева',
              'Костина',
              'Горбачева',
              'Орехова',
              'Ефремова',
              'Исаева',
              'Евдокимова',
              'Калашникова',
              'Кабанова',
              'Носкова',
              'Юдина',
              'Кулагина',
              'Лапина',
              'Прохорова',
              'Нестерова',
              'Харитонова',
              'Агафонова',
              'Муравьева',
              'Ларионова',
              'Федосеева',
              'Зимина',
              'Пахомова',
              'Шубина',
              'Игнатова',
              'Филатова',
              'Крюкова',
              'Рогова',
              'Кулакова',
              'Терентьева',
              'Молчанова',
              'Владимирова',
              'Артемьева',
              'Гурьева',
              'Зиновьева',
              'Гришина',
              'Кононова',
              'Дементьева',
              'Ситникова',
              'Симонова',
              'Мишина',
              'Фадеева',
              'Комиссарова',
              'Мамонтова',
              'Носова',
              'Гуляева',
              'Шарова',
              'Устинова',
              'Вишнякова',
              'Евсеева',
              'Лаврентьева',
              'Брагина',
              'Константинова',
              'Корнилова',
              'Авдеева',
              'Зыкова',
              'Бирюкова',
              'Шарапова',
              'Никонова',
              'Щукина',
              'Дьячкова',
              'Одинцова',
              'Сазонова',
              'Якушева',
              'Красильникова',
              'Гордеева',
              'Самойлова',
              'Князева',
              'Беспалова',
              'Уварова',
              'Шашкова',
              'Бобылева',
              'Доронина',
              'Белозерова',
              'Рожкова',
              'Самсонова',
              'Мясникова',
              'Лихачева',
              'Бурова',
              'Сысоева',
              'Фомичева',
              'Русакова',
              'Стрелкова',
              'Гущина',
              'Тетерина',
              'Колобова',
              'Субботина',
              'Фокина',
              'Блохина',
              'Селиверстова',
              'Пестова',
              'Кондратьева',
              'Силина',
              'Меркушева',
              'Лыткина',
              'Турова'
            ],
            name: [
              '#{male_first_name} #{male_last_name}',
              '#{male_last_name} #{male_first_name}',
              '#{male_first_name} #{male_middle_name} #{male_last_name}',
              '#{male_last_name} #{male_first_name} #{male_middle_name}',
              '#{female_first_name} #{female_last_name}',
              '#{female_last_name} #{female_first_name}',
              '#{female_first_name} #{female_middle_name} #{female_last_name}',
              '#{female_last_name} #{female_first_name} #{female_middle_name}'
            ]
          },
          phone_number: {
            formats: [
              '(9##)###-##-##'
            ]
          },
          commerce: {
            color: [
              'красный',
              'зеленый',
              'синий',
              'желтый',
              'багровый',
              'мятный',
              'зеленовато-голубой',
              'белый',
              'черный',
              'оранжевый',
              'розовый',
              'серый',
              'красно-коричневый',
              'фиолетовый',
              'бирюзовый',
              'желто-коричневый',
              'небесно голубой',
              'оранжево-розовый',
              'темно-фиолетовый',
              'орхидный',
              'оливковый',
              'пурпурный',
              'лимонный',
              'кремовый',
              'сине-фиолетовый',
              'золотой',
              'красно-пурпурный',
              'голубой',
              'лазурный',
              'лиловый',
              'серебряный'
            ],
            department: [
              'Книги',
              'Фильмы',
              'музыка',
              'игры',
              'Электроника',
              'компьютеры',
              'Дом',
              'садинструмент',
              'Бакалея',
              'здоровье',
              'красота',
              'Игрушки',
              'детское',
              'для малышей',
              'Одежда',
              'обувь',
              'украшения',
              'Спорт',
              'туризм',
              'Автомобильное',
              'промышленное'
            ],
            product_name: {
              adjective: [
                'Маленький',
                'Эргономичный',
                'Грубый',
                'Интеллектуальный',
                'Великолепный',
                'Невероятный',
                'Фантастический',
                'Практчиный',
                'Лоснящийся',
                'Потрясающий'
              ],
              material: [
                'Стальной',
                'Деревянный',
                'Бетонный',
                'Пластиковый',
                'Хлопковый',
                'Гранитный',
                'Резиновый'
              ],
              product: [
                'Стул',
                'Автомобиль',
                'Компьютер',
                'Берет',
                'Кулон',
                'Стол',
                'Свитер',
                'Ремень',
                'Ботинок'
              ]
            }
          },
          company: {
            prefix: [
              'ИП',
              'ООО',
              'ЗАО',
              'ОАО',
              'НКО',
              'ТСЖ',
              'ОП'
            ],
            suffix: [
              'Снаб',
              'Торг',
              'Пром',
              'Трейд',
              'Сбыт'
            ],
            name: [
              '#{prefix} #{Name.female_first_name}',
              '#{prefix} #{Name.male_first_name}',
              '#{prefix} #{Name.male_last_name}',
              '#{prefix} #{suffix}#{suffix}',
              '#{prefix} #{suffix}#{suffix}#{suffix}',
              '#{prefix} #{Address.city_name}#{suffix}',
              '#{prefix} #{Address.city_name}#{suffix}#{suffix}',
              '#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}'
            ]
          }
        }
      },
      sk: {
        faker: {
          address: {
            city_prefix: [
              'North',
              'East',
              'West',
              'South',
              'New',
              'Lake',
              'Port'
            ],
            city_suffix: [
              'town',
              'ton',
              'land',
              'ville',
              'berg',
              'burgh',
              'borough',
              'bury',
              'view',
              'port',
              'mouth',
              'stad',
              'furt',
              'chester',
              'mouth',
              'fort',
              'haven',
              'side',
              'shire'
            ],
            country: [
              'Afganistan',
              'Afgánsky islamský štát',
              'Albánsko',
              'Albánska republika',
              'Alžírsko',
              'Alžírska demokratická ľudová republika',
              'Andorra',
              'Andorrské kniežatsvo',
              'Angola',
              'Angolská republika',
              'Antigua a Barbuda',
              'Antigua a Barbuda',
              'Argentína',
              'Argentínska republika',
              'Arménsko',
              'Arménska republika',
              'Austrália',
              'Austrálsky zväz',
              'Azerbajdžan',
              'Azerbajdžanská republika',
              'Bahamy',
              'Bahamské spoločenstvo',
              'Bahrajn',
              'Bahrajnské kráľovstvo',
              'Bangladéš',
              'Bangladéšska ľudová republika',
              'Barbados',
              'Barbados',
              'Belgicko',
              'Belgické kráľovstvo',
              'Belize',
              'Belize',
              'Benin',
              'Beninská republika',
              'Bhután',
              'Bhutánske kráľovstvo',
              'Bielorusko',
              'Bieloruská republika',
              'Bolívia',
              'Bolívijská republika',
              'Bosna a Hercegovina',
              'Republika Bosny a Hercegoviny',
              'Botswana',
              'Botswanská republika',
              'Brazília',
              'Brazílska federatívna republika',
              'Brunej',
              'Brunejský sultanát',
              'Bulharsko',
              'Bulharská republika',
              'Burkina Faso',
              'Burkina Faso',
              'Burundi',
              'Burundská republika',
              'Cyprus',
              'Cyperská republika',
              'Čad',
              'Republika Čad',
              'Česko',
              'Česká republika',
              'Čína',
              'Čínska ľudová republika',
              'Dánsko',
              'Dánsko kráľovstvo',
              'Dominika',
              'Spoločenstvo Dominika',
              'Dominikánska republika',
              'Dominikánska republika',
              'Džibutsko',
              'Džibutská republika',
              'Egypt',
              'Egyptská arabská republika',
              'Ekvádor',
              'Ekvádorská republika',
              'Eritrea',
              'Eritrejský štát',
              'Estónsko',
              'Estónska republika',
              'Etiópia',
              'Etiópska federatívna demokratická republika',
              'Fidži',
              'Republika ostrovy Fidži',
              'Filipíny',
              'Filipínska republika',
              'Fínsko',
              'Fínska republika',
              'Francúzsko',
              'Francúzska republika',
              'Gabon',
              'Gabonská republika',
              'Gambia',
              'Gambijská republika',
              'Ghana',
              'Ghanská republika',
              'Grécko',
              'Helénska republika',
              'Grenada',
              'Grenada',
              'Gruzínsko',
              'Gruzínsko',
              'Guatemala',
              'Guatemalská republika',
              'Guinea',
              'Guinejská republika',
              'Guinea-Bissau',
              'Republika Guinea-Bissau',
              'Guayana',
              'Guayanská republika',
              'Haiti',
              'Republika Haiti',
              'Holandsko',
              'Holandské kráľovstvo',
              'Honduras',
              'Honduraská republika',
              'Chile',
              'Čílska republika',
              'Chorvátsko',
              'Chorvátska republika',
              'India',
              'Indická republika',
              'Indonézia',
              'Indonézska republika',
              'Irak',
              'Iracká republika',
              'Irán',
              'Iránska islamská republika',
              'Island',
              'Islandská republika',
              'Izrael',
              'Štát Izrael',
              'Írsko',
              'Írska republika',
              'Jamajka',
              'Jamajka',
              'Japonsko',
              'Japonsko',
              'Jemen',
              'Jemenská republika',
              'Jordánsko',
              'Jordánske hášimovské kráľovstvo',
              'Južná Afrika',
              'Juhoafrická republika',
              'Kambodža',
              'Kambodžské kráľovstvo',
              'Kamerun',
              'Kamerunská republika',
              'Kanada',
              'Kanada',
              'Kapverdy',
              'Kapverdská republika',
              'Katar',
              'Štát Katar',
              'Kazachstan',
              'Kazašská republika',
              'Keňa',
              'Kenská republika',
              'Kirgizsko',
              'Kirgizská republika',
              'Kiribati',
              'Kiribatská republika',
              'Kolumbia',
              'Kolumbijská republika',
              'Komory',
              'Komorská únia',
              'Kongo',
              'Konžská demokratická republika',
              'Kongo ("Brazzaville")',
              'Konžská republika',
              'Kórea ("Južná")',
              'Kórejská republika',
              'Kórea ("Severná")',
              'Kórejská ľudovodemokratická republika',
              'Kostarika',
              'Kostarická republika',
              'Kuba',
              'Kubánska republika',
              'Kuvajt',
              'Kuvajtský štát',
              'Laos',
              'Laoská ľudovodemokratická republika',
              'Lesotho',
              'Lesothské kráľovstvo',
              'Libanon',
              'Libanonská republika',
              'Libéria',
              'Libérijská republika',
              'Líbya',
              'Líbyjská arabská ľudová socialistická džamáhírija',
              'Lichtenštajnsko',
              'Lichtenštajnské kniežatstvo',
              'Litva',
              'Litovská republika',
              'Lotyšsko',
              'Lotyšská republika',
              'Luxembursko',
              'Luxemburské veľkovojvodstvo',
              'Macedónsko',
              'Macedónska republika',
              'Madagaskar',
              'Madagaskarská republika',
              'Maďarsko',
              'Maďarská republika',
              'Malajzia',
              'Malajzia',
              'Malawi',
              'Malawijská republika',
              'Maldivy',
              'Maldivská republika',
              'Mali',
              'Malijská republika',
              'Malta',
              'Malta',
              'Maroko',
              'Marocké kráľovstvo',
              'Marshallove ostrovy',
              'Republika Marshallových ostrovy',
              'Mauritánia',
              'Mauritánska islamská republika',
              'Maurícius',
              'Maurícijská republika',
              'Mexiko',
              'Spojené štáty mexické',
              'Mikronézia',
              'Mikronézske federatívne štáty',
              'Mjanmarsko',
              'Mjanmarský zväz',
              'Moldavsko',
              'Moldavská republika',
              'Monako',
              'Monacké kniežatstvo',
              'Mongolsko',
              'Mongolsko',
              'Mozambik',
              'Mozambická republika',
              'Namíbia',
              'Namíbijská republika',
              'Nauru',
              'Naurská republika',
              'Nemecko',
              'Nemecká spolková republika',
              'Nepál',
              'Nepálske kráľovstvo',
              'Niger',
              'Nigerská republika',
              'Nigéria',
              'Nigérijská federatívna republika',
              'Nikaragua',
              'Nikaragujská republika',
              'Nový Zéland',
              'Nový Zéland',
              'Nórsko',
              'Nórske kráľovstvo',
              'Omán',
              'Ománsky sultanát',
              'Pakistan',
              'Pakistanská islamská republika',
              'Palau',
              'Palauská republika',
              'Panama',
              'Panamská republika',
              'Papua-Nová Guinea',
              'Nezávislý štát Papua-Nová Guinea',
              'Paraguaj',
              'Paraguajská republika',
              'Peru',
              'Peruánska republika',
              'Pobrežie Slonoviny',
              'Republika Pobrežie Slonoviny',
              'Poľsko',
              'Poľská republika',
              'Portugalsko',
              'Portugalská republika',
              'Rakúsko',
              'Rakúska republika',
              'Rovníková Guinea',
              'Republika Rovníková Guinea',
              'Rumunsko',
              'Rumunsko',
              'Rusko',
              'Ruská federácia',
              'Rwanda',
              'Rwandská republika',
              'Salvádor',
              'Salvádorská republika',
              'Samoa',
              'Nezávislý štát Samoa',
              'San Maríno',
              'Sanmarínska republika',
              'Saudská Arábia',
              'Kráľovstvo Saudskej Arábie',
              'Senegal',
              'Senegalská republika',
              'Seychely',
              'Seychelská republika',
              'Sierra Leone',
              'Republika Sierra Leone',
              'Singapur',
              'Singapurska republika',
              'Slovensko',
              'Slovenská republika',
              'Slovinsko',
              'Slovinská republika',
              'Somálsko',
              'Somálska demokratická republika',
              'Spojené arabské emiráty',
              'Spojené arabské emiráty',
              'Spojené štáty americké',
              'Spojené štáty americké',
              'Srbsko a Čierna Hora',
              'Srbsko a Čierna Hora',
              'Srí Lanka',
              'Demokratická socialistická republika Srí Lanka',
              'Stredoafrická republika',
              'Stredoafrická republika',
              'Sudán',
              'Sudánska republika',
              'Surinam',
              'Surinamská republika',
              'Svazijsko',
              'Svazijské kráľovstvo',
              'Svätá Lucia',
              'Svätá Lucia',
              'Svätý Krištof a Nevis',
              'Federácia Svätý Krištof a Nevis',
              'Sv. Tomáš a Princov Ostrov',
              'Demokratická republika Svätý Tomáš a Princov Ostrov',
              'Sv. Vincent a Grenadíny',
              'Svätý Vincent a Grenadíny',
              'Sýria',
              'Sýrska arabská republika',
              'Šalamúnove ostrovy',
              'Šalamúnove ostrovy',
              'Španielsko',
              'Španielske kráľovstvo',
              'Švajčiarsko',
              'Švajčiarska konfederácia',
              'Švédsko',
              'Švédske kráľovstvo',
              'Tadžikistan',
              'Tadžická republika',
              'Taliansko',
              'Talianska republika',
              'Tanzánia',
              'Tanzánijská zjednotená republika',
              'Thajsko',
              'Thajské kráľovstvo',
              'Togo',
              'Tožská republika',
              'Tonga',
              'Tonžské kráľovstvo',
              'Trinidad a Tobago',
              'Republika Trinidad a Tobago',
              'Tunisko',
              'Tuniská republika',
              'Turecko',
              'Turecká republika',
              'Turkménsko',
              'Turkménsko',
              'Tuvalu',
              'Tuvalu',
              'Uganda',
              'Ugandská republika',
              'Ukrajina',
              'Uruguaj',
              'Uruguajská východná republika',
              'Uzbekistan',
              'Vanuatu',
              'Vanuatská republika',
              'Vatikán',
              'Svätá Stolica',
              'Veľká Británia',
              'Spojené kráľovstvo Veľkej Británie a Severného Írska',
              'Venezuela',
              'Venezuelská bolívarovská republika',
              'Vietnam',
              'Vietnamská socialistická republika',
              'Východný Timor',
              'Demokratická republika Východný Timor',
              'Zambia',
              'Zambijská republika',
              'Zimbabwe',
              'Zimbabwianska republika'
            ],
            building_number: [
              '#',
              '##',
              '###'
            ],
            secondary_address: [
              'Apt. ###',
              'Suite ###'
            ],
            postcode: [
              '#####',
              '### ##',
              '## ###'
            ],
            state: [
            ],
            state_abbr: [
            ],
            time_zone: [
              'Pacific/Midway',
              'Pacific/Pago_Pago',
              'Pacific/Honolulu',
              'America/Juneau',
              'America/Los_Angeles',
              'America/Tijuana',
              'America/Denver',
              'America/Phoenix',
              'America/Chihuahua',
              'America/Mazatlan',
              'America/Chicago',
              'America/Regina',
              'America/Mexico_City',
              'America/Mexico_City',
              'America/Monterrey',
              'America/Guatemala',
              'America/New_York',
              'America/Indiana/Indianapolis',
              'America/Bogota',
              'America/Lima',
              'America/Lima',
              'America/Halifax',
              'America/Caracas',
              'America/La_Paz',
              'America/Santiago',
              'America/St_Johns',
              'America/Sao_Paulo',
              'America/Argentina/Buenos_Aires',
              'America/Guyana',
              'America/Godthab',
              'Atlantic/South_Georgia',
              'Atlantic/Azores',
              'Atlantic/Cape_Verde',
              'Europe/Dublin',
              'Europe/London',
              'Europe/Lisbon',
              'Europe/London',
              'Africa/Casablanca',
              'Africa/Monrovia',
              'Etc/UTC',
              'Europe/Belgrade',
              'Europe/Bratislava',
              'Europe/Budapest',
              'Europe/Ljubljana',
              'Europe/Prague',
              'Europe/Sarajevo',
              'Europe/Skopje',
              'Europe/Warsaw',
              'Europe/Zagreb',
              'Europe/Brussels',
              'Europe/Copenhagen',
              'Europe/Madrid',
              'Europe/Paris',
              'Europe/Amsterdam',
              'Europe/Berlin',
              'Europe/Berlin',
              'Europe/Rome',
              'Europe/Stockholm',
              'Europe/Vienna',
              'Africa/Algiers',
              'Europe/Bucharest',
              'Africa/Cairo',
              'Europe/Helsinki',
              'Europe/Kiev',
              'Europe/Riga',
              'Europe/Sofia',
              'Europe/Tallinn',
              'Europe/Vilnius',
              'Europe/Athens',
              'Europe/Istanbul',
              'Europe/Minsk',
              'Asia/Jerusalem',
              'Africa/Harare',
              'Africa/Johannesburg',
              'Europe/Moscow',
              'Europe/Moscow',
              'Europe/Moscow',
              'Asia/Kuwait',
              'Asia/Riyadh',
              'Africa/Nairobi',
              'Asia/Baghdad',
              'Asia/Tehran',
              'Asia/Muscat',
              'Asia/Muscat',
              'Asia/Baku',
              'Asia/Tbilisi',
              'Asia/Yerevan',
              'Asia/Kabul',
              'Asia/Yekaterinburg',
              'Asia/Karachi',
              'Asia/Karachi',
              'Asia/Tashkent',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kolkata',
              'Asia/Kathmandu',
              'Asia/Dhaka',
              'Asia/Dhaka',
              'Asia/Colombo',
              'Asia/Almaty',
              'Asia/Novosibirsk',
              'Asia/Rangoon',
              'Asia/Bangkok',
              'Asia/Bangkok',
              'Asia/Jakarta',
              'Asia/Krasnoyarsk',
              'Asia/Shanghai',
              'Asia/Chongqing',
              'Asia/Hong_Kong',
              'Asia/Urumqi',
              'Asia/Kuala_Lumpur',
              'Asia/Singapore',
              'Asia/Taipei',
              'Australia/Perth',
              'Asia/Irkutsk',
              'Asia/Ulaanbaatar',
              'Asia/Seoul',
              'Asia/Tokyo',
              'Asia/Tokyo',
              'Asia/Tokyo',
              'Asia/Yakutsk',
              'Australia/Darwin',
              'Australia/Adelaide',
              'Australia/Melbourne',
              'Australia/Melbourne',
              'Australia/Sydney',
              'Australia/Brisbane',
              'Australia/Hobart',
              'Asia/Vladivostok',
              'Pacific/Guam',
              'Pacific/Port_Moresby',
              'Asia/Magadan',
              'Asia/Magadan',
              'Pacific/Noumea',
              'Pacific/Fiji',
              'Asia/Kamchatka',
              'Pacific/Majuro',
              'Pacific/Auckland',
              'Pacific/Auckland',
              'Pacific/Tongatapu',
              'Pacific/Fakaofo',
              'Pacific/Apia'
            ],
            city_name: [
              'Bánovce nad Bebravou',
              'Banská Bystrica',
              'Banská Štiavnica',
              'Bardejov',
              'Bratislava I',
              'Bratislava II',
              'Bratislava III',
              'Bratislava IV',
              'Bratislava V',
              'Brezno',
              'Bytča',
              'Čadca',
              'Detva',
              'Dolný Kubín',
              'Dunajská Streda',
              'Galanta',
              'Gelnica',
              'Hlohovec',
              'Humenné',
              'Ilava',
              'Kežmarok',
              'Komárno',
              'Košice I',
              'Košice II',
              'Košice III',
              'Košice IV',
              'Košice-okolie',
              'Krupina',
              'Kysucké Nové Mesto',
              'Levice',
              'Levoča',
              'Liptovský Mikuláš',
              'Lučenec',
              'Malacky',
              'Martin',
              'Medzilaborce',
              'Michalovce',
              'Myjava',
              'Námestovo',
              'Nitra',
              'Nové Mesto n.Váhom',
              'Nové Zámky',
              'Partizánske',
              'Pezinok',
              'Piešťany',
              'Poltár',
              'Poprad',
              'Považská Bystrica',
              'Prešov',
              'Prievidza',
              'Púchov',
              'Revúca',
              'Rimavská Sobota',
              'Rožňava',
              'Ružomberok',
              'Sabinov',
              'Šaľa',
              'Senec',
              'Senica',
              'Skalica',
              'Snina',
              'Sobrance',
              'Spišská Nová Ves',
              'Stará Ľubovňa',
              'Stropkov',
              'Svidník',
              'Topoľčany',
              'Trebišov',
              'Trenčín',
              'Trnava',
              'Turčianske Teplice',
              'Tvrdošín',
              'Veľký Krtíš',
              'Vranov nad Topľou',
              'Žarnovica',
              'Žiar nad Hronom',
              'Žilina',
              'Zlaté Moravce',
              'Zvolen'
            ],
            city: [
              '#{city_name}'
            ],
            street: [
              'Adámiho',
              'Ahoj',
              'Albína Brunovského',
              'Albrechtova',
              'Alejová',
              'Alešova',
              'Alibernetová',
              'Alžbetínska',
              'Alžbety Gwerkovej',
              'Ambroseho',
              'Ambrušova',
              'Americká',
              'Americké námestie',
              'Americké námestie',
              'Andreja Mráza',
              'Andreja Plávku',
              'Andrusovova',
              'Anenská',
              'Anenská',
              'Antolská',
              'Astronomická',
              'Astrová',
              'Azalková',
              'Azovská',
              'Babuškova',
              'Bachova',
              'Bajkalská',
              'Bajkalská',
              'Bajkalská',
              'Bajkalská',
              'Bajkalská',
              'Bajkalská',
              'Bajzova',
              'Bancíkovej',
              'Banícka',
              'Baníkova',
              'Banskobystrická',
              'Banšelova',
              'Bardejovská',
              'Bartókova',
              'Bartoňova',
              'Bartoškova',
              'Baštová',
              'Bazová',
              'Bažantia',
              'Beblavého',
              'Beckovská',
              'Bedľová',
              'Belániková',
              'Belehradská',
              'Belinského',
              'Belopotockého',
              'Beňadická',
              'Bencúrova',
              'Benediktiho',
              'Beniakova',
              'Bernolákova',
              'Beskydská',
              'Betliarska',
              'Bezručova',
              'Biela',
              'Bielkova',
              'Björnsonova',
              'Blagoevova',
              'Blatnická',
              'Blumentálska',
              'Blyskáčová',
              'Bočná',
              'Bohrova',
              'Bohúňova',
              'Bojnická',
              'Borodáčova',
              'Borská',
              'Bosákova',
              'Botanická',
              'Bottova',
              'Boženy Němcovej',
              'Bôrik',
              'Bradáčova',
              'Bradlianska',
              'Brančská',
              'Bratská',
              'Brestová',
              'Brezovská',
              'Briežky',
              'Brnianska',
              'Brodná',
              'Brodská',
              'Broskyňová',
              'Břeclavská',
              'Budatínska',
              'Budatínska',
              'Budatínska',
              'Búdkova  cesta',
              'Budovateľská',
              'Budyšínska',
              'Budyšínska',
              'Buková',
              'Bukureštská',
              'Bulharská',
              'Bulíkova',
              'Bystrého',
              'Bzovícka',
              'Cablkova',
              'Cesta na Červený most',
              'Cesta na Červený most',
              'Cesta na Senec',
              'Cikkerova',
              'Cintorínska',
              'Cintulova',
              'Cukrová',
              'Cyrilova',
              'Čajakova',
              'Čajkovského',
              'Čaklovská',
              'Čalovská',
              'Čapajevova',
              'Čapkova',
              'Čárskeho',
              'Čavojského',
              'Čečinová',
              'Čelakovského',
              'Čerešňová',
              'Černyševského',
              'Červeňova',
              'Česká',
              'Československých par',
              'Čipkárska',
              'Čmelíkova',
              'Čmeľovec',
              'Čulenova',
              'Daliborovo námestie',
              'Dankovského',
              'Dargovská',
              'Ďatelinová',
              'Daxnerovo námestie',
              'Devínska cesta',
              'Dlhé diely I.',
              'Dlhé diely II.',
              'Dlhé diely III.',
              'Dobrovičova',
              'Dobrovičova',
              'Dobrovského',
              'Dobšinského',
              'Dohnalova',
              'Dohnányho',
              'Doležalova',
              'Dolná',
              'Dolnozemská cesta',
              'Domkárska',
              'Domové role',
              'Donnerova',
              'Donovalova',
              'Dostojevského rad',
              'Dr. Vladimíra Clemen',
              'Drevená',
              'Drieňová',
              'Drieňová',
              'Drieňová',
              'Drotárska cesta',
              'Drotárska cesta',
              'Drotárska cesta',
              'Družicová',
              'Družstevná',
              'Dubnická',
              'Dubová',
              'Dúbravská cesta',
              'Dudova',
              'Dulovo námestie',
              'Dulovo námestie',
              'Dunajská',
              'Dvořákovo nábrežie',
              'Edisonova',
              'Einsteinova',
              'Elektrárenská',
              'Exnárova',
              'F. Kostku',
              'Fadruszova',
              'Fajnorovo nábrežie',
              'Fándlyho',
              'Farebná',
              'Farská',
              'Farského',
              'Fazuľová',
              'Fedinova',
              'Ferienčíkova',
              'Fialkové údolie',
              'Fibichova',
              'Filiálne nádražie',
              'Flöglova',
              'Floriánske námestie',
              'Fraňa Kráľa',
              'Francisciho',
              'Francúzskych partizá',
              'Františkánska',
              'Františkánske námest',
              'Furdekova',
              'Furdekova',
              'Gabčíkova',
              'Gagarinova',
              'Gagarinova',
              'Gagarinova',
              'Gajova',
              'Galaktická',
              'Galandova',
              'Gallova',
              'Galvaniho',
              'Gašparíkova',
              'Gaštanová',
              'Gavlovičova',
              'Gemerská',
              'Gercenova',
              'Gessayova',
              'Gettingová',
              'Godrova',
              'Gogoľova',
              'Goláňova',
              'Gondova',
              'Goralská',
              'Gorazdova',
              'Gorkého',
              'Gregorovej',
              'Grösslingova',
              'Gruzínska',
              'Gunduličova',
              'Gusevova',
              'Haanova',
              'Haburská',
              'Halašova',
              'Hálkova',
              'Hálova',
              'Hamuliakova',
              'Hanácka',
              'Handlovská',
              'Hany Meličkovej',
              'Harmanecká',
              'Hasičská',
              'Hattalova',
              'Havlíčkova',
              'Havrania',
              'Haydnova',
              'Herlianska',
              'Herlianska',
              'Heydukova',
              'Hlaváčikova',
              'Hlavatého',
              'Hlavné námestie',
              'Hlboká cesta',
              'Hlboká cesta',
              'Hlivová',
              'Hlučínska',
              'Hodálova',
              'Hodžovo námestie',
              'Holekova',
              'Holíčska',
              'Hollého',
              'Holubyho',
              'Hontianska',
              'Horárska',
              'Horné Židiny',
              'Horská',
              'Horská',
              'Hrad',
              'Hradné údolie',
              'Hrachová',
              'Hraničná',
              'Hrebendova',
              'Hríbová',
              'Hriňovská',
              'Hrobákova',
              'Hrobárska',
              'Hroboňova',
              'Hudecova',
              'Humenské námestie',
              'Hummelova',
              'Hurbanovo námestie',
              'Hurbanovo námestie',
              'Hviezdoslavovo námes',
              'Hýrošova',
              'Chalupkova',
              'Chemická',
              'Chlumeckého',
              'Chorvátska',
              'Chorvátska',
              'Iľjušinova',
              'Ilkovičova',
              'Inovecká',
              'Inovecká',
              'Iskerníková',
              'Ivana Horvátha',
              'Ivánska cesta',
              'J.C.Hronského',
              'Jabloňová',
              'Jadrová',
              'Jakabova',
              'Jakubovo námestie',
              'Jamnického',
              'Jána Stanislava',
              'Janáčkova',
              'Jančova',
              'Janíkove role',
              'Jankolova',
              'Jánošíkova',
              'Jánoškova',
              'Janotova',
              'Jánska',
              'Jantárová cesta',
              'Jarabinková',
              'Jarná',
              'Jaroslavova',
              'Jarošova',
              'Jaseňová',
              'Jasná',
              'Jasovská',
              'Jastrabia',
              'Jašíkova',
              'Javorinská',
              'Javorová',
              'Jazdecká',
              'Jedlíkova',
              'Jégého',
              'Jelačičova',
              'Jelenia',
              'Jesenná',
              'Jesenského',
              'Jiráskova',
              'Jiskrova',
              'Jozefská',
              'Junácka',
              'Jungmannova',
              'Jurigovo námestie',
              'Jurovského',
              'Jurská',
              'Justičná',
              'K lomu',
              'K Železnej studienke',
              'Kalinčiakova',
              'Kamenárska',
              'Kamenné námestie',
              'Kapicova',
              'Kapitulská',
              'Kapitulský dvor',
              'Kapucínska',
              'Kapušianska',
              'Karadžičova',
              'Karadžičova',
              'Karadžičova',
              'Karadžičova',
              'Karloveská',
              'Karloveské rameno',
              'Karpatská',
              'Kašmírska',
              'Kaštielska',
              'Kaukazská',
              'Kempelenova',
              'Kežmarské námestie',
              'Kladnianska',
              'Klariská',
              'Kláštorská',
              'Klatovská',
              'Klatovská',
              'Klemensova',
              'Klincová',
              'Klobučnícka',
              'Klokočova',
              'Kľukatá',
              'Kmeťovo námestie',
              'Koceľova',
              'Kočánkova',
              'Kohútova',
              'Kolárska',
              'Kolískova',
              'Kollárovo námestie',
              'Kollárovo námestie',
              'Kolmá',
              'Komárňanská',
              'Komárnická',
              'Komárnická',
              'Komenského námestie',
              'Kominárska',
              'Komonicová',
              'Konopná',
              'Konvalinková',
              'Konventná',
              'Kopanice',
              'Kopčianska',
              'Koperníkova',
              'Korabinského',
              'Koreničova',
              'Kostlivého',
              'Kostolná',
              'Košická',
              'Košická',
              'Košická',
              'Kováčska',
              'Kovorobotnícka',
              'Kozia',
              'Koziarka',
              'Kozmonautická',
              'Krajná',
              'Krakovská',
              'Kráľovské údolie',
              'Krasinského',
              'Kraskova',
              'Krásna',
              'Krásnohorská',
              'Krasovského',
              'Krátka',
              'Krčméryho',
              'Kremnická',
              'Kresánkova',
              'Krivá',
              'Križkova',
              'Krížna',
              'Krížna',
              'Krížna',
              'Krížna',
              'Krmanova',
              'Krompašská',
              'Krupinská',
              'Krupkova',
              'Kubániho',
              'Kubínska',
              'Kuklovská',
              'Kukučínova',
              'Kukuričná',
              'Kulíškova',
              'Kultúrna',
              'Kupeckého',
              'Kúpeľná',
              'Kutlíkova',
              'Kutuzovova',
              'Kuzmányho',
              'Kvačalova',
              'Kvetná',
              'Kýčerského',
              'Kyjevská',
              'Kysucká',
              'Laborecká',
              'Lackova',
              'Ladislava Sáru',
              'Ľadová',
              'Lachova',
              'Ľaliová',
              'Lamačská cesta',
              'Lamačská cesta',
              'Lamanského',
              'Landererova',
              'Langsfeldova',
              'Ľanová',
              'Laskomerského',
              'Laučekova',
              'Laurinská',
              'Lazaretská',
              'Lazaretská',
              'Legerského',
              'Legionárska',
              'Legionárska',
              'Lehockého',
              'Lehockého',
              'Lenardova',
              'Lermontovova',
              'Lesná',
              'Leškova',
              'Letecká',
              'Letisko M.R.Štefánik',
              'Letná',
              'Levárska',
              'Levická',
              'Levočská',
              'Lidická',
              'Lietavská',
              'Lichardova',
              'Lipová',
              'Lipovinová',
              'Liptovská',
              'Listová',
              'Líščie nivy',
              'Líščie údolie',
              'Litovská',
              'Lodná',
              'Lombardiniho',
              'Lomonosovova',
              'Lopenícka',
              'Lovinského',
              'Ľubietovská',
              'Ľubinská',
              'Ľubľanská',
              'Ľubochnianska',
              'Ľubovnianska',
              'Lúčna',
              'Ľudové námestie',
              'Ľudovíta Fullu',
              'Luhačovická',
              'Lužická',
              'Lužná',
              'Lýcejná',
              'Lykovcová',
              'M. Hella',
              'Magnetová',
              'Macharova',
              'Majakovského',
              'Majerníkova',
              'Májkova',
              'Májová',
              'Makovického',
              'Malá',
              'Malé pálenisko',
              'Malinová',
              'Malý Draždiak',
              'Malý trh',
              'Mamateyova',
              'Mamateyova',
              'Mánesovo námestie',
              'Mariánska',
              'Marie Curie-Sklodows',
              'Márie Medveďovej',
              'Markova',
              'Marótyho',
              'Martákovej',
              'Martinčekova',
              'Martinčekova',
              'Martinengova',
              'Martinská',
              'Mateja Bela',
              'Matejkova',
              'Matičná',
              'Matúšova',
              'Medená',
              'Medzierka',
              'Medzilaborecká',
              'Merlotová',
              'Mesačná',
              'Mestská',
              'Meteorová',
              'Metodova',
              'Mickiewiczova',
              'Mierová',
              'Michalská',
              'Mikovíniho',
              'Mikulášska',
              'Miletičova',
              'Miletičova',
              'Mišíkova',
              'Mišíkova',
              'Mišíkova',
              'Mliekárenská',
              'Mlynarovičova',
              'Mlynská dolina',
              'Mlynská dolina',
              'Mlynská dolina',
              'Mlynské luhy',
              'Mlynské nivy',
              'Mlynské nivy',
              'Mlynské nivy',
              'Mlynské nivy',
              'Mlynské nivy',
              'Mlyny',
              'Modranská',
              'Mojmírova',
              'Mokráň záhon',
              'Mokrohájska cesta',
              'Moldavská',
              'Molecova',
              'Moravská',
              'Moskovská',
              'Most SNP',
              'Mostová',
              'Mošovského',
              'Motýlia',
              'Moyzesova',
              'Mozartova',
              'Mraziarenská',
              'Mudroňova',
              'Mudroňova',
              'Mudroňova',
              'Muchovo námestie',
              'Murgašova',
              'Muškátová',
              'Muštová',
              'Múzejná',
              'Myjavská',
              'Mýtna',
              'Mýtna',
              'Na Baránku',
              'Na Brezinách',
              'Na Hrebienku',
              'Na Kalvárii',
              'Na Kampárke',
              'Na kopci',
              'Na križovatkách',
              'Na lánoch',
              'Na paši',
              'Na piesku',
              'Na Riviére',
              'Na Sitine',
              'Na Slavíne',
              'Na stráni',
              'Na Štyridsiatku',
              'Na úvrati',
              'Na vŕšku',
              'Na výslní',
              'Nábělkova',
              'Nábrežie arm. gen. L',
              'Nábrežná',
              'Nad Dunajom',
              'Nad lomom',
              'Nad lúčkami',
              'Nad lúčkami',
              'Nad ostrovom',
              'Nad Sihoťou',
              'Námestie 1. mája',
              'Námestie Alexandra D',
              'Námestie Biely kríž',
              'Námestie Hraničiarov',
              'Námestie Jána Pavla',
              'Námestie Ľudovíta Št',
              'Námestie Martina Ben',
              'Nám. M.R.Štefánika',
              'Námestie slobody',
              'Námestie slobody',
              'Námestie SNP',
              'Námestie SNP',
              'Námestie sv. Františ',
              'Narcisová',
              'Nedbalova',
              'Nekrasovova',
              'Neronetová',
              'Nerudova',
              'Nevädzová',
              'Nezábudková',
              'Niťová',
              'Nitrianska',
              'Nížinná',
              'Nobelova',
              'Nobelovo námestie',
              'Nová',
              'Nová Rožňavská',
              'Novackého',
              'Nové pálenisko',
              'Nové záhrady I',
              'Nové záhrady II',
              'Nové záhrady III',
              'Nové záhrady IV',
              'Nové záhrady V',
              'Nové záhrady VI',
              'Nové záhrady VII',
              'Novinárska',
              'Novobanská',
              'Novohradská',
              'Novosvetská',
              'Novosvetská',
              'Novosvetská',
              'Obežná',
              'Obchodná',
              'Očovská',
              'Odbojárov',
              'Odborárska',
              'Odborárske námestie',
              'Odborárske námestie',
              'Ohnicová',
              'Okánikova',
              'Okružná',
              'Olbrachtova',
              'Olejkárska',
              'Ondavská',
              'Ondrejovova',
              'Oravská',
              'Orechová cesta',
              'Orechový rad',
              'Oriešková',
              'Ormisova',
              'Osadná',
              'Ostravská',
              'Ostredková',
              'Osuského',
              'Osvetová',
              'Otonelská',
              'Ovručská',
              'Ovsištské námestie',
              'Pajštúnska',
              'Palackého',
              'Palárikova',
              'Palárikova',
              'Pálavská',
              'Palisády',
              'Palisády',
              'Palisády',
              'Palkovičova',
              'Panenská',
              'Pankúchova',
              'Panónska cesta',
              'Panská',
              'Papánkovo námestie',
              'Papraďová',
              'Páričkova',
              'Parková',
              'Partizánska',
              'Pasienky',
              'Paulínyho',
              'Pavlovičova',
              'Pavlovova',
              'Pavlovská',
              'Pažického',
              'Pažítková',
              'Pečnianska',
              'Pernecká',
              'Pestovateľská',
              'Peterská',
              'Petzvalova',
              'Pezinská',
              'Piesočná',
              'Piešťanská',
              'Pifflova',
              'Pilárikova',
              'Pionierska',
              'Pivoňková',
              'Planckova',
              'Planét',
              'Plátenícka',
              'Pluhová',
              'Plynárenská',
              'Plzenská',
              'Pobrežná',
              'Pod Bôrikom',
              'Pod Kalváriou',
              'Pod lesom',
              'Pod Rovnicami',
              'Pod vinicami',
              'Podhorského',
              'Podjavorinskej',
              'Podlučinského',
              'Podniková',
              'Podtatranského',
              'Pohronská',
              'Polárna',
              'Poloreckého',
              'Poľná',
              'Poľská',
              'Poludníková',
              'Porubského',
              'Poštová',
              'Považská',
              'Povraznícka',
              'Povraznícka',
              'Pražská',
              'Predstaničné námesti',
              'Prepoštská',
              'Prešernova',
              'Prešovská',
              'Prešovská',
              'Prešovská',
              'Pri Bielom kríži',
              'Pri dvore',
              'Pri Dynamitke',
              'Pri Habánskom mlyne',
              'Pri hradnej studni',
              'Pri seči',
              'Pri Starej Prachárni',
              'Pri Starom háji',
              'Pri Starom Mýte',
              'Pri strelnici',
              'Pri Suchom mlyne',
              'Pri zvonici',
              'Pribinova',
              'Pribinova',
              'Pribinova',
              'Pribišova',
              'Pribylinská',
              'Priečna',
              'Priekopy',
              'Priemyselná',
              'Priemyselná',
              'Prievozská',
              'Prievozská',
              'Prievozská',
              'Príkopova',
              'Primaciálne námestie',
              'Prístav',
              'Prístavná',
              'Prokofievova',
              'Prokopa Veľkého',
              'Prokopova',
              'Prúdová',
              'Prvosienková',
              'Púpavová',
              'Pustá',
              'Puškinova',
              'Račianska',
              'Račianska',
              'Račianske mýto',
              'Radarová',
              'Rádiová',
              'Radlinského',
              'Radničná',
              'Radničné námestie',
              'Radvanská',
              'Rajská',
              'Raketová',
              'Rákosová',
              'Rastislavova',
              'Rázusovo nábrežie',
              'Repná',
              'Rešetkova',
              'Revolučná',
              'Révová',
              'Revúcka',
              'Rezedová',
              'Riazanská',
              'Riazanská',
              'Ribayová',
              'Riečna',
              'Rigeleho',
              'Rízlingová',
              'Riznerova',
              'Robotnícka',
              'Romanova',
              'Röntgenova',
              'Rosná',
              'Rovná',
              'Rovniankova',
              'Rovníková',
              'Rozmarínová',
              'Rožňavská',
              'Rožňavská',
              'Rožňavská',
              'Rubinsteinova',
              'Rudnayovo námestie',
              'Rumančeková',
              'Rusovská cesta',
              'Ružičková',
              'Ružinovská',
              'Ružinovská',
              'Ružinovská',
              'Ružomberská',
              'Ružová dolina',
              'Ružová dolina',
              'Rybárska brána',
              'Rybné námestie',
              'Rýdziková',
              'Sabinovská',
              'Sabinovská',
              'Sad Janka Kráľa',
              'Sadová',
              'Sartorisova',
              'Sasinkova',
              'Seberíniho',
              'Sečovská',
              'Sedlárska',
              'Sedmokrásková',
              'Segnerova',
              'Sekulská',
              'Semianova',
              'Senická',
              'Senná',
              'Schillerova',
              'Schody pri starej vo',
              'Sibírska',
              'Sienkiewiczova',
              'Silvánska',
              'Sinokvetná',
              'Skalická cesta',
              'Skalná',
              'Sklenárova',
              'Sklenárska',
              'Sládkovičova',
              'Sladová',
              'Slávičie údolie',
              'Slavín',
              'Slepá',
              'Sliačska',
              'Sliezska',
              'Slivková',
              'Slnečná',
              'Slovanská',
              'Slovinská',
              'Slovnaftská',
              'Slowackého',
              'Smetanova',
              'Smikova',
              'Smolenická',
              'Smolnícka',
              'Smrečianska',
              'Soferove schody',
              'Socháňova',
              'Sokolská',
              'Solivarská',
              'Sološnická',
              'Somolického',
              'Somolického',
              'Sosnová',
              'Spišská',
              'Spojná',
              'Spoločenská',
              'Sputniková',
              'Sreznevského',
              'Srnčia',
              'Stachanovská',
              'Stálicová',
              'Staničná',
              'Stará Černicová',
              'Stará Ivánska cesta',
              'Stará Prievozská',
              'Stará Vajnorská',
              'Stará vinárska',
              'Staré Grunty',
              'Staré ihrisko',
              'Staré záhrady',
              'Starhradská',
              'Starohájska',
              'Staromestská',
              'Staroturský chodník',
              'Staviteľská',
              'Stodolova',
              'Stoklasová',
              'Strakova',
              'Strážnická',
              'Strážny dom',
              'Strečnianska',
              'Stredná',
              'Strelecká',
              'Strmá cesta',
              'Strojnícka',
              'Stropkovská',
              'Struková',
              'Studená',
              'Stuhová',
              'Súbežná',
              'Súhvezdná',
              'Suché mýto',
              'Suchohradská',
              'Súkennícka',
              'Súľovská',
              'Sumbalova',
              'Súmračná',
              'Súťažná',
              'Svätého Vincenta',
              'Svätoplukova',
              'Svätoplukova',
              'Svätovojtešská',
              'Svetlá',
              'Svíbová',
              'Svidnícka',
              'Svoradova',
              'Svrčia',
              'Syslia',
              'Šafárikovo námestie',
              'Šafárikovo námestie',
              'Šafránová',
              'Šagátova',
              'Šalviová',
              'Šancová',
              'Šancová',
              'Šancová',
              'Šancová',
              'Šándorova',
              'Šarišská',
              'Šášovská',
              'Šaštínska',
              'Ševčenkova',
              'Šintavská',
              'Šípková',
              'Škarniclova',
              'Školská',
              'Škovránčia',
              'Škultétyho',
              'Šoltésovej',
              'Špieszova',
              'Špitálska',
              'Športová',
              'Šrobárovo námestie',
              'Šťastná',
              'Štedrá',
              'Štefánikova',
              'Štefánikova',
              'Štefánikova',
              'Štefanovičova',
              'Štefunkova',
              'Štetinova',
              'Štiavnická',
              'Štúrova',
              'Štyndlova',
              'Šulekova',
              'Šulekova',
              'Šulekova',
              'Šumavská',
              'Šuňavcova',
              'Šustekova',
              'Švabinského',
              'Tabaková',
              'Tablicova',
              'Táborská',
              'Tajovského',
              'Tallerova',
              'Tehelná',
              'Technická',
              'Tekovská',
              'Telocvičná',
              'Tematínska',
              'Teplická',
              'Terchovská',
              'Teslova',
              'Tetmayerova',
              'Thurzova',
              'Tichá',
              'Tilgnerova',
              'Timravina',
              'Tobrucká',
              'Tokajícka',
              'Tolstého',
              'Tománkova',
              'Tomášikova',
              'Tomášikova',
              'Tomášikova',
              'Tomášikova',
              'Tomášikova',
              'Topoľčianska',
              'Topoľová',
              'Továrenská',
              'Trebišovská',
              'Trebišovská',
              'Trebišovská',
              'Trenčianska',
              'Treskoňova',
              'Trnavská cesta',
              'Trnavská cesta',
              'Trnavská cesta',
              'Trnavská cesta',
              'Trnavská cesta',
              'Trnavské mýto',
              'Tŕňová',
              'Trojdomy',
              'Tučkova',
              'Tupolevova',
              'Turbínova',
              'Turčianska',
              'Turnianska',
              'Tvarožkova',
              'Tylova',
              'Tyršovo nábrežie',
              'Údernícka',
              'Údolná',
              'Uhorková',
              'Ukrajinská',
              'Ulica 29. augusta',
              'Ulica 29. augusta',
              'Ulica 29. augusta',
              'Ulica 29. augusta',
              'Ulica Imricha Karvaš',
              'Ulica Jozefa Krónera',
              'Ulica Viktora Tegelh',
              'Úprkova',
              'Úradnícka',
              'Uránová',
              'Urbánkova',
              'Ursínyho',
              'Uršulínska',
              'Úzka',
              'V záhradách',
              'Vajanského nábrežie',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Vajnorská',
              'Valašská',
              'Valchárska',
              'Vansovej',
              'Vápenná',
              'Varínska',
              'Varšavská',
              'Varšavská',
              'Vavilovova',
              'Vavrínova',
              'Vazovova',
              'Včelárska',
              'Velehradská',
              'Veltlínska',
              'Ventúrska',
              'Veterná',
              'Veternicová',
              'Vetvová',
              'Viedenská cesta',
              'Viedenská cesta',
              'Vietnamská',
              'Vígľašská',
              'Vihorlatská',
              'Viktorínova',
              'Vilová',
              'Vincenta Hložníka',
              'Vínna',
              'Vlastenecké námestie',
              'Vlčkova',
              'Vlčkova',
              'Vlčkova',
              'Vodný vrch',
              'Votrubova',
              'Vrábeľská',
              'Vrakunská cesta',
              'Vranovská',
              'Vretenová',
              'Vrchná',
              'Vrútocká',
              'Vyhliadka',
              'Vyhnianska cesta',
              'Vysoká',
              'Vyšehradská',
              'Vyšná',
              'Wattova',
              'Wilsonova',
              'Wolkrova',
              'Za Kasárňou',
              'Za sokolovňou',
              'Za Stanicou',
              'Za tehelňou',
              'Záborského',
              'Zadunajská cesta',
              'Záhorácka',
              'Záhradnícka',
              'Záhradnícka',
              'Záhradnícka',
              'Záhradnícka',
              'Záhrebská',
              'Záhrebská',
              'Zálužická',
              'Zámocká',
              'Zámocké schody',
              'Zámočnícka',
              'Západná',
              'Západný rad',
              'Záporožská',
              'Zátišie',
              'Závodníkova',
              'Zelená',
              'Zelinárska',
              'Zimná',
              'Zlaté piesky',
              'Zlaté schody',
              'Znievska',
              'Zohorská',
              'Zochova',
              'Zrinského',
              'Zvolenská',
              'Žabí majer',
              'Žabotova',
              'Žehrianska',
              'Železná',
              'Železničiarska',
              'Žellova',
              'Žiarska',
              'Židovská',
              'Žilinská',
              'Žilinská',
              'Živnostenská',
              'Žižkova',
              'Župné námestie'
            ],
            street_name: [
              '#{street}'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            default_country: [
              'Slovensko'
            ]
          },
          company: {
            suffix: [
              's.r.o.',
              'a.s.',
              'v.o.s.'
            ],
            buzzwords: [
              ['Adaptive',
              'Advanced',
              'Ameliorated',
              'Assimilated',
              'Automated',
              'Balanced',
              'Business-focused',
              'Centralized',
              'Cloned',
              'Compatible',
              'Configurable',
              'Cross-group',
              'Cross-platform',
              'Customer-focused',
              'Customizable',
              'Decentralized',
              'De-engineered',
              'Devolved',
              'Digitized',
              'Distributed',
              'Diverse',
              'Down-sized',
              'Enhanced',
              'Enterprise-wide',
              'Ergonomic',
              'Exclusive',
              'Expanded',
              'Extended',
              'Face to face',
              'Focused',
              'Front-line',
              'Fully-configurable',
              'Function-based',
              'Fundamental',
              'Future-proofed',
              'Grass-roots',
              'Horizontal',
              'Implemented',
              'Innovative',
              'Integrated',
              'Intuitive',
              'Inverse',
              'Managed',
              'Mandatory',
              'Monitored',
              'Multi-channelled',
              'Multi-lateral',
              'Multi-layered',
              'Multi-tiered',
              'Networked',
              'Object-based',
              'Open-architected',
              'Open-source',
              'Operative',
              'Optimized',
              'Optional',
              'Organic',
              'Organized',
              'Persevering',
              'Persistent',
              'Phased',
              'Polarised',
              'Pre-emptive',
              'Proactive',
              'Profit-focused',
              'Profound',
              'Programmable',
              'Progressive',
              'Public-key',
              'Quality-focused',
              'Reactive',
              'Realigned',
              'Re-contextualized',
              'Re-engineered',
              'Reduced',
              'Reverse-engineered',
              'Right-sized',
              'Robust',
              'Seamless',
              'Secured',
              'Self-enabling',
              'Sharable',
              'Stand-alone',
              'Streamlined',
              'Switchable',
              'Synchronised',
              'Synergistic',
              'Synergized',
              'Team-oriented',
              'Total',
              'Triple-buffered',
              'Universal',
              'Up-sized',
              'Upgradable',
              'User-centric',
              'User-friendly',
              'Versatile',
              'Virtual',
              'Visionary',
              'Vision-oriented'],
              [
                '24 hour',
                '24/7',
                '3rd generation',
                '4th generation',
                '5th generation',
                '6th generation',
                'actuating',
                'analyzing',
                'asymmetric',
                'asynchronous',
                'attitude-oriented',
                'background',
                'bandwidth-monitored',
                'bi-directional',
                'bifurcated',
                'bottom-line',
                'clear-thinking',
                'client-driven',
                'client-server',
                'coherent',
                'cohesive',
                'composite',
                'context-sensitive',
                'contextually-based',
                'content-based',
                'dedicated',
                'demand-driven',
                'didactic',
                'directional',
                'discrete',
                'disintermediate',
                'dynamic',
                'eco-centric',
                'empowering',
                'encompassing',
                'even-keeled',
                'executive',
                'explicit',
                'exuding',
                'fault-tolerant',
                'foreground',
                'fresh-thinking',
                'full-range',
                'global',
                'grid-enabled',
                'heuristic',
                'high-level',
                'holistic',
                'homogeneous',
                'human-resource',
                'hybrid',
                'impactful',
                'incremental',
                'intangible',
                'interactive',
                'intermediate',
                'leading edge',
                'local',
                'logistical',
                'maximized',
                'methodical',
                'mission-critical',
                'mobile',
                'modular',
                'motivating',
                'multimedia',
                'multi-state',
                'multi-tasking',
                'national',
                'needs-based',
                'neutral',
                'next generation',
                'non-volatile',
                'object-oriented',
                'optimal',
                'optimizing',
                'radical',
                'real-time',
                'reciprocal',
                'regional',
                'responsive',
                'scalable',
                'secondary',
                'solution-oriented',
                'stable',
                'static',
                'systematic',
                'systemic',
                'system-worthy',
                'tangible',
                'tertiary',
                'transitional',
                'uniform',
                'upward-trending',
                'user-facing',
                'value-added',
                'web-enabled',
                'well-modulated',
                'zero administration',
                'zero defect',
                'zero tolerance'
              ],
              [
                'ability',
                'access',
                'adapter',
                'algorithm',
                'alliance',
                'analyzer',
                'application',
                'approach',
                'architecture',
                'archive',
                'artificial intelligence',
                'array',
                'attitude',
                'benchmark',
                'budgetary management',
                'capability',
                'capacity',
                'challenge',
                'circuit',
                'collaboration',
                'complexity',
                'concept',
                'conglomeration',
                'contingency',
                'core',
                'customer loyalty',
                'database',
                'data-warehouse',
                'definition',
                'emulation',
                'encoding',
                'encryption',
                'extranet',
                'firmware',
                'flexibility',
                'focus group',
                'forecast',
                'frame',
                'framework',
                'function',
                'functionalities',
                'Graphic Interface',
                'groupware',
                'Graphical User Interface',
                'hardware',
                'help-desk',
                'hierarchy',
                'hub',
                'implementation',
                'info-mediaries',
                'infrastructure',
                'initiative',
                'installation',
                'instruction set',
                'interface',
                'internet solution',
                'intranet',
                'knowledge user',
                'knowledge base',
                'local area network',
                'leverage',
                'matrices',
                'matrix',
                'methodology',
                'middleware',
                'migration',
                'model',
                'moderator',
                'monitoring',
                'moratorium',
                'neural-net',
                'open architecture',
                'open system',
                'orchestration',
                'paradigm',
                'parallelism',
                'policy',
                'portal',
                'pricing structure',
                'process improvement',
                'product',
                'productivity',
                'project',
                'projection',
                'protocol',
                'secured line',
                'service-desk',
                'software',
                'solution',
                'standardization',
                'strategy',
                'structure',
                'success',
                'superstructure',
                'support',
                'synergy',
                'system engine',
                'task-force',
                'throughput',
                'time-frame',
                'toolset',
                'utilisation',
                'website',
                'workforce'
              ]
            ],
            bs: [
              ['implement',
              'utilize',
              'integrate',
              'streamline',
              'optimize',
              'evolve',
              'transform',
              'embrace',
              'enable',
              'orchestrate',
              'leverage',
              'reinvent',
              'aggregate',
              'architect',
              'enhance',
              'incentivize',
              'morph',
              'empower',
              'envisioneer',
              'monetize',
              'harness',
              'facilitate',
              'seize',
              'disintermediate',
              'synergize',
              'strategize',
              'deploy',
              'brand',
              'grow',
              'target',
              'syndicate',
              'synthesize',
              'deliver',
              'mesh',
              'incubate',
              'engage',
              'maximize',
              'benchmark',
              'expedite',
              'reintermediate',
              'whiteboard',
              'visualize',
              'repurpose',
              'innovate',
              'scale',
              'unleash',
              'drive',
              'extend',
              'engineer',
              'revolutionize',
              'generate',
              'exploit',
              'transition',
              'e-enable',
              'iterate',
              'cultivate',
              'matrix',
              'productize',
              'redefine',
              'recontextualize'],
              [
                'clicks-and-mortar',
                'value-added',
                'vertical',
                'proactive',
                'robust',
                'revolutionary',
                'scalable',
                'leading-edge',
                'innovative',
                'intuitive',
                'strategic',
                'e-business',
                'mission-critical',
                'sticky',
                'one-to-one',
                '24/7',
                'end-to-end',
                'global',
                'B2B',
                'B2C',
                'granular',
                'frictionless',
                'virtual',
                'viral',
                'dynamic',
                '24/365',
                'best-of-breed',
                'killer',
                'magnetic',
                'bleeding-edge',
                'web-enabled',
                'interactive',
                'dot-com',
                'sexy',
                'back-end',
                'real-time',
                'efficient',
                'front-end',
                'distributed',
                'seamless',
                'extensible',
                'turn-key',
                'world-class',
                'open-source',
                'cross-platform',
                'cross-media',
                'synergistic',
                'bricks-and-clicks',
                'out-of-the-box',
                'enterprise',
                'integrated',
                'impactful',
                'wireless',
                'transparent',
                'next-generation',
                'cutting-edge',
                'user-centric',
                'visionary',
                'customized',
                'ubiquitous',
                'plug-and-play',
                'collaborative',
                'compelling',
                'holistic',
                'rich'
              ],
              [
                'synergies',
                'web-readiness',
                'paradigms',
                'markets',
                'partnerships',
                'infrastructures',
                'platforms',
                'initiatives',
                'channels',
                'eyeballs',
                'communities',
                'ROI',
                'solutions',
                'e-tailers',
                'e-services',
                'action-items',
                'portals',
                'niches',
                'technologies',
                'content',
                'vortals',
                'supply-chains',
                'convergence',
                'relationships',
                'architectures',
                'interfaces',
                'e-markets',
                'e-commerce',
                'systems',
                'bandwidth',
                'infomediaries',
                'models',
                'mindshare',
                'deliverables',
                'users',
                'schemas',
                'networks',
                'applications',
                'metrics',
                'e-business',
                'functionalities',
                'experiences',
                'web services',
                'methodologies'
              ]
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name} #{suffix}',
              '#{Name.man_last_name} a #{Name.man_last_name} #{suffix}'
            ]
          },
          internet: {
            free_email: [
              'gmail.com',
              'zoznam.sk',
              'azet.sk'
            ],
            domain_suffix: [
              'sk',
              'com',
              'net',
              'eu',
              'org'
            ]
          },
          lorem: {
            words: [
              'alias',
              'consequatur',
              'aut',
              'perferendis',
              'sit',
              'voluptatem',
              'accusantium',
              'doloremque',
              'aperiam',
              'eaque',
              'ipsa',
              'quae',
              'ab',
              'illo',
              'inventore',
              'veritatis',
              'et',
              'quasi',
              'architecto',
              'beatae',
              'vitae',
              'dicta',
              'sunt',
              'explicabo',
              'aspernatur',
              'aut',
              'odit',
              'aut',
              'fugit',
              'sed',
              'quia',
              'consequuntur',
              'magni',
              'dolores',
              'eos',
              'qui',
              'ratione',
              'voluptatem',
              'sequi',
              'nesciunt',
              'neque',
              'dolorem',
              'ipsum',
              'quia',
              'dolor',
              'sit',
              'amet',
              'consectetur',
              'adipisci',
              'velit',
              'sed',
              'quia',
              'non',
              'numquam',
              'eius',
              'modi',
              'tempora',
              'incidunt',
              'ut',
              'labore',
              'et',
              'dolore',
              'magnam',
              'aliquam',
              'quaerat',
              'voluptatem',
              'ut',
              'enim',
              'ad',
              'minima',
              'veniam',
              'quis',
              'nostrum',
              'exercitationem',
              'ullam',
              'corporis',
              'nemo',
              'enim',
              'ipsam',
              'voluptatem',
              'quia',
              'voluptas',
              'sit',
              'suscipit',
              'laboriosam',
              'nisi',
              'ut',
              'aliquid',
              'ex',
              'ea',
              'commodi',
              'consequatur',
              'quis',
              'autem',
              'vel',
              'eum',
              'iure',
              'reprehenderit',
              'qui',
              'in',
              'ea',
              'voluptate',
              'velit',
              'esse',
              'quam',
              'nihil',
              'molestiae',
              'et',
              'iusto',
              'odio',
              'dignissimos',
              'ducimus',
              'qui',
              'blanditiis',
              'praesentium',
              'laudantium',
              'totam',
              'rem',
              'voluptatum',
              'deleniti',
              'atque',
              'corrupti',
              'quos',
              'dolores',
              'et',
              'quas',
              'molestias',
              'excepturi',
              'sint',
              'occaecati',
              'cupiditate',
              'non',
              'provident',
              'sed',
              'ut',
              'perspiciatis',
              'unde',
              'omnis',
              'iste',
              'natus',
              'error',
              'similique',
              'sunt',
              'in',
              'culpa',
              'qui',
              'officia',
              'deserunt',
              'mollitia',
              'animi',
              'id',
              'est',
              'laborum',
              'et',
              'dolorum',
              'fuga',
              'et',
              'harum',
              'quidem',
              'rerum',
              'facilis',
              'est',
              'et',
              'expedita',
              'distinctio',
              'nam',
              'libero',
              'tempore',
              'cum',
              'soluta',
              'nobis',
              'est',
              'eligendi',
              'optio',
              'cumque',
              'nihil',
              'impedit',
              'quo',
              'porro',
              'quisquam',
              'est',
              'qui',
              'minus',
              'id',
              'quod',
              'maxime',
              'placeat',
              'facere',
              'possimus',
              'omnis',
              'voluptas',
              'assumenda',
              'est',
              'omnis',
              'dolor',
              'repellendus',
              'temporibus',
              'autem',
              'quibusdam',
              'et',
              'aut',
              'consequatur',
              'vel',
              'illum',
              'qui',
              'dolorem',
              'eum',
              'fugiat',
              'quo',
              'voluptas',
              'nulla',
              'pariatur',
              'at',
              'vero',
              'eos',
              'et',
              'accusamus',
              'officiis',
              'debitis',
              'aut',
              'rerum',
              'necessitatibus',
              'saepe',
              'eveniet',
              'ut',
              'et',
              'voluptates',
              'repudiandae',
              'sint',
              'et',
              'molestiae',
              'non',
              'recusandae',
              'itaque',
              'earum',
              'rerum',
              'hic',
              'tenetur',
              'a',
              'sapiente',
              'delectus',
              'ut',
              'aut',
              'reiciendis',
              'voluptatibus',
              'maiores',
              'doloribus',
              'asperiores',
              'repellat'
            ],
            supplemental: [
              'abbas',
              'abduco',
              'abeo',
              'abscido',
              'absconditus',
              'absens',
              'absorbeo',
              'absque',
              'abstergo',
              'absum',
              'abundans',
              'abutor',
              'accedo',
              'accendo',
              'acceptus',
              'accipio',
              'accommodo',
              'accusator',
              'acer',
              'acerbitas',
              'acervus',
              'acidus',
              'acies',
              'acquiro',
              'acsi',
              'adamo',
              'adaugeo',
              'addo',
              'adduco',
              'ademptio',
              'adeo',
              'adeptio',
              'adfectus',
              'adfero',
              'adficio',
              'adflicto',
              'adhaero',
              'adhuc',
              'adicio',
              'adimpleo',
              'adinventitias',
              'adipiscor',
              'adiuvo',
              'administratio',
              'admiratio',
              'admitto',
              'admoneo',
              'admoveo',
              'adnuo',
              'adopto',
              'adsidue',
              'adstringo',
              'adsuesco',
              'adsum',
              'adulatio',
              'adulescens',
              'adultus',
              'aduro',
              'advenio',
              'adversus',
              'advoco',
              'aedificium',
              'aeger',
              'aegre',
              'aegrotatio',
              'aegrus',
              'aeneus',
              'aequitas',
              'aequus',
              'aer',
              'aestas',
              'aestivus',
              'aestus',
              'aetas',
              'aeternus',
              'ager',
              'aggero',
              'aggredior',
              'agnitio',
              'agnosco',
              'ago',
              'ait',
              'aiunt',
              'alienus',
              'alii',
              'alioqui',
              'aliqua',
              'alius',
              'allatus',
              'alo',
              'alter',
              'altus',
              'alveus',
              'amaritudo',
              'ambitus',
              'ambulo',
              'amicitia',
              'amiculum',
              'amissio',
              'amita',
              'amitto',
              'amo',
              'amor',
              'amoveo',
              'amplexus',
              'amplitudo',
              'amplus',
              'ancilla',
              'angelus',
              'angulus',
              'angustus',
              'animadverto',
              'animi',
              'animus',
              'annus',
              'anser',
              'ante',
              'antea',
              'antepono',
              'antiquus',
              'aperio',
              'aperte',
              'apostolus',
              'apparatus',
              'appello',
              'appono',
              'appositus',
              'approbo',
              'apto',
              'aptus',
              'apud',
              'aqua',
              'ara',
              'aranea',
              'arbitro',
              'arbor',
              'arbustum',
              'arca',
              'arceo',
              'arcesso',
              'arcus',
              'argentum',
              'argumentum',
              'arguo',
              'arma',
              'armarium',
              'armo',
              'aro',
              'ars',
              'articulus',
              'artificiose',
              'arto',
              'arx',
              'ascisco',
              'ascit',
              'asper',
              'aspicio',
              'asporto',
              'assentator',
              'astrum',
              'atavus',
              'ater',
              'atqui',
              'atrocitas',
              'atrox',
              'attero',
              'attollo',
              'attonbitus',
              'auctor',
              'auctus',
              'audacia',
              'audax',
              'audentia',
              'audeo',
              'audio',
              'auditor',
              'aufero',
              'aureus',
              'auris',
              'aurum',
              'aut',
              'autem',
              'autus',
              'auxilium',
              'avaritia',
              'avarus',
              'aveho',
              'averto',
              'avoco',
              'baiulus',
              'balbus',
              'barba',
              'bardus',
              'basium',
              'beatus',
              'bellicus',
              'bellum',
              'bene',
              'beneficium',
              'benevolentia',
              'benigne',
              'bestia',
              'bibo',
              'bis',
              'blandior',
              'bonus',
              'bos',
              'brevis',
              'cado',
              'caecus',
              'caelestis',
              'caelum',
              'calamitas',
              'calcar',
              'calco',
              'calculus',
              'callide',
              'campana',
              'candidus',
              'canis',
              'canonicus',
              'canto',
              'capillus',
              'capio',
              'capitulus',
              'capto',
              'caput',
              'carbo',
              'carcer',
              'careo',
              'caries',
              'cariosus',
              'caritas',
              'carmen',
              'carpo',
              'carus',
              'casso',
              'caste',
              'casus',
              'catena',
              'caterva',
              'cattus',
              'cauda',
              'causa',
              'caute',
              'caveo',
              'cavus',
              'cedo',
              'celebrer',
              'celer',
              'celo',
              'cena',
              'cenaculum',
              'ceno',
              'censura',
              'centum',
              'cerno',
              'cernuus',
              'certe',
              'certo',
              'certus',
              'cervus',
              'cetera',
              'charisma',
              'chirographum',
              'cibo',
              'cibus',
              'cicuta',
              'cilicium',
              'cimentarius',
              'ciminatio',
              'cinis',
              'circumvenio',
              'cito',
              'civis',
              'civitas',
              'clam',
              'clamo',
              'claro',
              'clarus',
              'claudeo',
              'claustrum',
              'clementia',
              'clibanus',
              'coadunatio',
              'coaegresco',
              'coepi',
              'coerceo',
              'cogito',
              'cognatus',
              'cognomen',
              'cogo',
              'cohaero',
              'cohibeo',
              'cohors',
              'colligo',
              'colloco',
              'collum',
              'colo',
              'color',
              'coma',
              'combibo',
              'comburo',
              'comedo',
              'comes',
              'cometes',
              'comis',
              'comitatus',
              'commemoro',
              'comminor',
              'commodo',
              'communis',
              'comparo',
              'compello',
              'complectus',
              'compono',
              'comprehendo',
              'comptus',
              'conatus',
              'concedo',
              'concido',
              'conculco',
              'condico',
              'conduco',
              'confero',
              'confido',
              'conforto',
              'confugo',
              'congregatio',
              'conicio',
              'coniecto',
              'conitor',
              'coniuratio',
              'conor',
              'conqueror',
              'conscendo',
              'conservo',
              'considero',
              'conspergo',
              'constans',
              'consuasor',
              'contabesco',
              'contego',
              'contigo',
              'contra',
              'conturbo',
              'conventus',
              'convoco',
              'copia',
              'copiose',
              'cornu',
              'corona',
              'corpus',
              'correptius',
              'corrigo',
              'corroboro',
              'corrumpo',
              'coruscus',
              'cotidie',
              'crapula',
              'cras',
              'crastinus',
              'creator',
              'creber',
              'crebro',
              'credo',
              'creo',
              'creptio',
              'crepusculum',
              'cresco',
              'creta',
              'cribro',
              'crinis',
              'cruciamentum',
              'crudelis',
              'cruentus',
              'crur',
              'crustulum',
              'crux',
              'cubicularis',
              'cubitum',
              'cubo',
              'cui',
              'cuius',
              'culpa',
              'culpo',
              'cultellus',
              'cultura',
              'cum',
              'cunabula',
              'cunae',
              'cunctatio',
              'cupiditas',
              'cupio',
              'cuppedia',
              'cupressus',
              'cur',
              'cura',
              'curatio',
              'curia',
              'curiositas',
              'curis',
              'curo',
              'curriculum',
              'currus',
              'cursim',
              'curso',
              'cursus',
              'curto',
              'curtus',
              'curvo',
              'curvus',
              'custodia',
              'damnatio',
              'damno',
              'dapifer',
              'debeo',
              'debilito',
              'decens',
              'decerno',
              'decet',
              'decimus',
              'decipio',
              'decor',
              'decretum',
              'decumbo',
              'dedecor',
              'dedico',
              'deduco',
              'defaeco',
              'defendo',
              'defero',
              'defessus',
              'defetiscor',
              'deficio',
              'defigo',
              'defleo',
              'defluo',
              'defungo',
              'degenero',
              'degero',
              'degusto',
              'deinde',
              'delectatio',
              'delego',
              'deleo',
              'delibero',
              'delicate',
              'delinquo',
              'deludo',
              'demens',
              'demergo',
              'demitto',
              'demo',
              'demonstro',
              'demoror',
              'demulceo',
              'demum',
              'denego',
              'denique',
              'dens',
              'denuncio',
              'denuo',
              'deorsum',
              'depereo',
              'depono',
              'depopulo',
              'deporto',
              'depraedor',
              'deprecator',
              'deprimo',
              'depromo',
              'depulso',
              'deputo',
              'derelinquo',
              'derideo',
              'deripio',
              'desidero',
              'desino',
              'desipio',
              'desolo',
              'desparatus',
              'despecto',
              'despirmatio',
              'infit',
              'inflammatio',
              'paens',
              'patior',
              'patria',
              'patrocinor',
              'patruus',
              'pauci',
              'paulatim',
              'pauper',
              'pax',
              'peccatus',
              'pecco',
              'pecto',
              'pectus',
              'pecunia',
              'pecus',
              'peior',
              'pel',
              'ocer',
              'socius',
              'sodalitas',
              'sol',
              'soleo',
              'solio',
              'solitudo',
              'solium',
              'sollers',
              'sollicito',
              'solum',
              'solus',
              'solutio',
              'solvo',
              'somniculosus',
              'somnus',
              'sonitus',
              'sono',
              'sophismata',
              'sopor',
              'sordeo',
              'sortitus',
              'spargo',
              'speciosus',
              'spectaculum',
              'speculum',
              'sperno',
              'spero',
              'spes',
              'spiculum',
              'spiritus',
              'spoliatio',
              'sponte',
              'stabilis',
              'statim',
              'statua',
              'stella',
              'stillicidium',
              'stipes',
              'stips',
              'sto',
              'strenuus',
              'strues',
              'studio',
              'stultus',
              'suadeo',
              'suasoria',
              'sub',
              'subito',
              'subiungo',
              'sublime',
              'subnecto',
              'subseco',
              'substantia',
              'subvenio',
              'succedo',
              'succurro',
              'sufficio',
              'suffoco',
              'suffragium',
              'suggero',
              'sui',
              'sulum',
              'sum',
              'summa',
              'summisse',
              'summopere',
              'sumo',
              'sumptus',
              'supellex',
              'super',
              'suppellex',
              'supplanto',
              'suppono',
              'supra',
              'surculus',
              'surgo',
              'sursum',
              'suscipio',
              'suspendo',
              'sustineo',
              'suus',
              'synagoga',
              'tabella',
              'tabernus',
              'tabesco',
              'tabgo',
              'tabula',
              'taceo',
              'tactus',
              'taedium',
              'talio',
              'talis',
              'talus',
              'tam',
              'tamdiu',
              'tamen',
              'tametsi',
              'tamisium',
              'tamquam',
              'tandem',
              'tantillus',
              'tantum',
              'tardus',
              'tego',
              'temeritas',
              'temperantia',
              'templum',
              'temptatio',
              'tempus',
              'tenax',
              'tendo',
              'teneo',
              'tener',
              'tenuis',
              'tenus',
              'tepesco',
              'tepidus',
              'ter',
              'terebro',
              'teres',
              'terga',
              'tergeo',
              'tergiversatio',
              'tergo',
              'tergum',
              'termes',
              'terminatio',
              'tero',
              'terra',
              'terreo',
              'territo',
              'terror',
              'tersus',
              'tertius',
              'testimonium',
              'texo',
              'textilis',
              'textor',
              'textus',
              'thalassinus',
              'theatrum',
              'theca',
              'thema',
              'theologus',
              'thermae',
              'thesaurus',
              'thesis',
              'thorax',
              'thymbra',
              'thymum',
              'tibi',
              'timidus',
              'timor',
              'titulus',
              'tolero',
              'tollo',
              'tondeo',
              'tonsor',
              'torqueo',
              'torrens',
              'tot',
              'totidem',
              'toties',
              'totus',
              'tracto',
              'trado',
              'traho',
              'trans',
              'tredecim',
              'tremo',
              'trepide',
              'tres',
              'tribuo',
              'tricesimus',
              'triduana',
              'triginta',
              'tripudio',
              'tristis',
              'triumphus',
              'trucido',
              'truculenter',
              'tubineus',
              'tui',
              'tum',
              'tumultus',
              'tunc',
              'turba',
              'turbo',
              'turpe',
              'turpis',
              'tutamen',
              'tutis',
              'tyrannus',
              'uberrime',
              'ubi',
              'ulciscor',
              'ullus',
              'ulterius',
              'ultio',
              'ultra',
              'umbra',
              'umerus',
              'umquam',
              'una',
              'unde',
              'undique',
              'universe',
              'unus',
              'urbanus',
              'urbs',
              'uredo',
              'usitas',
              'usque',
              'ustilo',
              'ustulo',
              'usus',
              'uter',
              'uterque',
              'utilis',
              'utique',
              'utor',
              'utpote',
              'utrimque',
              'utroque',
              'utrum',
              'uxor',
              'vaco',
              'vacuus',
              'vado',
              'vae',
              'valde',
              'valens',
              'valeo',
              'valetudo',
              'validus',
              'vallum',
              'vapulus',
              'varietas',
              'varius',
              'vehemens',
              'vel',
              'velociter',
              'velum',
              'velut',
              'venia',
              'venio',
              'ventito',
              'ventosus',
              'ventus',
              'venustas',
              'ver',
              'verbera',
              'verbum',
              'vere',
              'verecundia',
              'vereor',
              'vergo',
              'veritas',
              'vero',
              'versus',
              'verto',
              'verumtamen',
              'verus',
              'vesco',
              'vesica',
              'vesper',
              'vespillo',
              'vester',
              'vestigium',
              'vestrum',
              'vetus',
              'via',
              'vicinus',
              'vicissitudo',
              'victoria',
              'victus',
              'videlicet',
              'video',
              'viduata',
              'viduo',
              'vigilo',
              'vigor',
              'vilicus',
              'vilis',
              'vilitas',
              'villa',
              'vinco',
              'vinculum',
              'vindico',
              'vinitor',
              'vinum',
              'vir',
              'virga',
              'virgo',
              'viridis',
              'viriliter',
              'virtus',
              'vis',
              'viscus',
              'vita',
              'vitiosus',
              'vitium',
              'vito',
              'vivo',
              'vix',
              'vobis',
              'vociferor',
              'voco',
              'volaticus',
              'volo',
              'volubilis',
              'voluntarius',
              'volup',
              'volutabrum',
              'volva',
              'vomer',
              'vomica',
              'vomito',
              'vorago',
              'vorax',
              'voro',
              'vos',
              'votum',
              'voveo',
              'vox',
              'vulariter',
              'vulgaris',
              'vulgivagus',
              'vulgo',
              'vulgus',
              'vulnero',
              'vulnus',
              'vulpes',
              'vulticulus',
              'vultuosus',
              'xiphias'
            ]
          },
          name: {
            man_first_name: [
              'Drahoslav',
              'Severín',
              'Alexej',
              'Ernest',
              'Rastislav',
              'Radovan',
              'Dobroslav',
              'Dalibor',
              'Vincent',
              'Miloš',
              'Timotej',
              'Gejza',
              'Bohuš',
              'Alfonz',
              'Gašpar',
              'Emil',
              'Erik',
              'Blažej',
              'Zdenko',
              'Dezider',
              'Arpád',
              'Valentín',
              'Pravoslav',
              'Jaromír',
              'Roman',
              'Matej',
              'Frederik',
              'Viktor',
              'Alexander',
              'Radomír',
              'Albín',
              'Bohumil',
              'Kazimír',
              'Fridrich',
              'Radoslav',
              'Tomáš',
              'Alan',
              'Branislav',
              'Bruno',
              'Gregor',
              'Vlastimil',
              'Boleslav',
              'Eduard',
              'Jozef',
              'Víťazoslav',
              'Blahoslav',
              'Beňadik',
              'Adrián',
              'Gabriel',
              'Marián',
              'Emanuel',
              'Miroslav',
              'Benjamín',
              'Hugo',
              'Richard',
              'Izidor',
              'Zoltán',
              'Albert',
              'Igor',
              'Július',
              'Aleš',
              'Fedor',
              'Rudolf',
              'Valér',
              'Marcel',
              'Ervín',
              'Slavomír',
              'Vojtech',
              'Juraj',
              'Marek',
              'Jaroslav',
              'Žigmund',
              'Florián',
              'Roland',
              'Pankrác',
              'Servác',
              'Bonifác',
              'Svetozár',
              'Bernard',
              'Júlia',
              'Urban',
              'Dušan',
              'Viliam',
              'Ferdinand',
              'Norbert',
              'Róbert',
              'Medard',
              'Zlatko',
              'Anton',
              'Vasil',
              'Vít',
              'Adolf',
              'Vratislav',
              'Alfréd',
              'Alojz',
              'Ján',
              'Tadeáš',
              'Ladislav',
              'Peter',
              'Pavol',
              'Miloslav',
              'Prokop',
              'Cyril',
              'Metod',
              'Patrik',
              'Oliver',
              'Ivan',
              'Kamil',
              'Henrich',
              'Drahomír',
              'Bohuslav',
              'Iľja',
              'Daniel',
              'Vladimír',
              'Jakub',
              'Krištof',
              'Ignác',
              'Gustáv',
              'Jerguš',
              'Dominik',
              'Oskar',
              'Vavrinec',
              'Ľubomír',
              'Mojmír',
              'Leonard',
              'Tichomír',
              'Filip',
              'Bartolomej',
              'Ľudovít',
              'Samuel',
              'Augustín',
              'Belo',
              'Oleg',
              'Bystrík',
              'Ctibor',
              'Ľudomil',
              'Konštantín',
              'Ľuboslav',
              'Matúš',
              'Móric',
              'Ľuboš',
              'Ľubor',
              'Vladislav',
              'Cyprián',
              'Václav',
              'Michal',
              'Jarolím',
              'Arnold',
              'Levoslav',
              'František',
              'Dionýz',
              'Maximilián',
              'Koloman',
              'Boris',
              'Lukáš',
              'Kristián',
              'Vendelín',
              'Sergej',
              'Aurel',
              'Demeter',
              'Denis',
              'Hubert',
              'Karol',
              'Imrich',
              'René',
              'Bohumír',
              'Teodor',
              'Tibor',
              'Maroš',
              'Martin',
              'Svätopluk',
              'Stanislav',
              'Leopold',
              'Eugen',
              'Félix',
              'Klement',
              'Kornel',
              'Milan',
              'Vratko',
              'Ondrej',
              'Andrej',
              'Edmund',
              'Oldrich',
              'Oto',
              'Mikuláš',
              'Ambróz',
              'Radúz',
              'Bohdan',
              'Adam',
              'Štefan',
              'Dávid',
              'Silvester'
            ],
            woman_first_name: [
              'Alexandra',
              'Karina',
              'Daniela',
              'Andrea',
              'Antónia',
              'Bohuslava',
              'Dáša',
              'Malvína',
              'Kristína',
              'Nataša',
              'Bohdana',
              'Drahomíra',
              'Sára',
              'Zora',
              'Tamara',
              'Ema',
              'Tatiana',
              'Erika',
              'Veronika',
              'Agáta',
              'Dorota',
              'Vanda',
              'Zoja',
              'Gabriela',
              'Perla',
              'Ida',
              'Liana',
              'Miloslava',
              'Vlasta',
              'Lívia',
              'Eleonóra',
              'Etela',
              'Romana',
              'Zlatica',
              'Anežka',
              'Bohumila',
              'Františka',
              'Angela',
              'Matilda',
              'Svetlana',
              'Ľubica',
              'Alena',
              'Soňa',
              'Vieroslava',
              'Zita',
              'Miroslava',
              'Irena',
              'Milena',
              'Estera',
              'Justína',
              'Dana',
              'Danica',
              'Jela',
              'Jaroslava',
              'Jarmila',
              'Lea',
              'Anastázia',
              'Galina',
              'Lesana',
              'Hermína',
              'Monika',
              'Ingrida',
              'Viktória',
              'Blažena',
              'Žofia',
              'Sofia',
              'Gizela',
              'Viola',
              'Gertrúda',
              'Zina',
              'Júlia',
              'Juliana',
              'Želmíra',
              'Ela',
              'Vanesa',
              'Iveta',
              'Vilma',
              'Petronela',
              'Žaneta',
              'Xénia',
              'Karolína',
              'Lenka',
              'Laura',
              'Stanislava',
              'Margaréta',
              'Dobroslava',
              'Blanka',
              'Valéria',
              'Paulína',
              'Sidónia',
              'Adriána',
              'Beáta',
              'Petra',
              'Melánia',
              'Diana',
              'Berta',
              'Patrícia',
              'Lujza',
              'Amália',
              'Milota',
              'Nina',
              'Margita',
              'Kamila',
              'Dušana',
              'Magdaléna',
              'Oľga',
              'Anna',
              'Hana',
              'Božena',
              'Marta',
              'Libuša',
              'Božidara',
              'Dominika',
              'Hortenzia',
              'Jozefína',
              'Štefánia',
              'Ľubomíra',
              'Zuzana',
              'Darina',
              'Marcela',
              'Milica',
              'Elena',
              'Helena',
              'Lýdia',
              'Anabela',
              'Jana',
              'Silvia',
              'Nikola',
              'Ružena',
              'Nora',
              'Drahoslava',
              'Linda',
              'Melinda',
              'Rebeka',
              'Rozália',
              'Regína',
              'Alica',
              'Marianna',
              'Miriama',
              'Martina',
              'Mária',
              'Jolana',
              'Ľudomila',
              'Ľudmila',
              'Olympia',
              'Eugénia',
              'Ľuboslava',
              'Zdenka',
              'Edita',
              'Michaela',
              'Stela',
              'Viera',
              'Natália',
              'Eliška',
              'Brigita',
              'Valentína',
              'Terézia',
              'Vladimíra',
              'Hedviga',
              'Uršuľa',
              'Alojza',
              'Kvetoslava',
              'Sabína',
              'Dobromila',
              'Klára',
              'Simona',
              'Aurélia',
              'Denisa',
              'Renáta',
              'Irma',
              'Agnesa',
              'Klaudia',
              'Alžbeta',
              'Elvíra',
              'Cecília',
              'Emília',
              'Katarína',
              'Henrieta',
              'Bibiána',
              'Barbora',
              'Marína',
              'Izabela',
              'Hilda',
              'Otília',
              'Lucia',
              'Branislava',
              'Bronislava',
              'Ivica',
              'Albína',
              'Kornélia',
              'Sláva',
              'Slávka',
              'Judita',
              'Dagmara',
              'Adela',
              'Nadežda',
              'Eva',
              'Filoména',
              'Ivana',
              'Milada'
            ],
            man_last_name: [
              'Antal',
              'Babka',
              'Bahna',
              'Bahno',
              'Baláž',
              'Baran',
              'Baranka',
              'Bartovič',
              'Bartoš',
              'Bača',
              'Bernolák',
              'Beňo',
              'Bicek',
              'Bielik',
              'Blaho',
              'Bondra',
              'Bosák',
              'Boška',
              'Brezina',
              'Bukovský',
              'Chalupka',
              'Chudík',
              'Cibula',
              'Cibulka',
              'Cibuľa',
              'Cyprich',
              'Cíger',
              'Danko',
              'Daňko',
              'Daňo',
              'Debnár',
              'Dej',
              'Dekýš',
              'Doležal',
              'Dočolomanský',
              'Droppa',
              'Dubovský',
              'Dudek',
              'Dula',
              'Dulla',
              'Dusík',
              'Dvonč',
              'Dzurjanin',
              'Dávid',
              'Fabian',
              'Fabián',
              'Fajnor',
              'Farkašovský',
              'Fico',
              'Filc',
              'Filip',
              'Finka',
              'Ftorek',
              'Gašpar',
              'Gašparovič',
              'Gocník',
              'Gregor',
              'Greguš',
              'Grznár',
              'Hablák',
              'Habšuda',
              'Halda',
              'Haluška',
              'Halák',
              'Hanko',
              'Hanzal',
              'Haščák',
              'Heretik',
              'Hečko',
              'Hlaváček',
              'Hlinka',
              'Holub',
              'Holuby',
              'Hossa',
              'Hoza',
              'Hraško',
              'Hric',
              'Hrmo',
              'Hrušovský',
              'Huba',
              'Ihnačák',
              'Janeček',
              'Janoška',
              'Jantošovič',
              'Janík',
              'Janček',
              'Jedľovský',
              'Jendek',
              'Jonata',
              'Jurina',
              'Jurkovič',
              'Jurík',
              'Jánošík',
              'Kafenda',
              'Kaliský',
              'Karul',
              'Keníž',
              'Klapka',
              'Kmeť',
              'Kolesár',
              'Kollár',
              'Kolnik',
              'Kolník',
              'Kolár',
              'Korec',
              'Kostka',
              'Kostrec',
              'Kováč',
              'Kováčik',
              'Koza',
              'Kočiš',
              'Krajíček',
              'Krajči',
              'Krajčo',
              'Krajčovič',
              'Krajčír',
              'Králik',
              'Krúpa',
              'Kubík',
              'Kyseľ',
              'Kállay',
              'Labuda',
              'Lepšík',
              'Lipták',
              'Lisický',
              'Lubina',
              'Lukáč',
              'Lupták',
              'Líška',
              'Madej',
              'Majeský',
              'Malachovský',
              'Malíšek',
              'Mamojka',
              'Marcinko',
              'Marián',
              'Masaryk',
              'Maslo',
              'Matiaško',
              'Medveď',
              'Melcer',
              'Mečiar',
              'Michalík',
              'Mihalik',
              'Mihál',
              'Mihálik',
              'Mikloško',
              'Mikulík',
              'Mikuš',
              'Mikúš',
              'Milota',
              'Mináč',
              'Mišík',
              'Mojžiš',
              'Mokroš',
              'Mora',
              'Moravčík',
              'Mydlo',
              'Nemec',
              'Nitra',
              'Novák',
              'Obšut',
              'Ondruš',
              'Otčenáš',
              'Pauko',
              'Pavlikovský',
              'Pavúk',
              'Pašek',
              'Paška',
              'Paško',
              'Pelikán',
              'Petrovický',
              'Petruška',
              'Peško',
              'Plch',
              'Plekanec',
              'Podhradský',
              'Podkonický',
              'Poliak',
              'Pupák',
              'Rak',
              'Repiský',
              'Romančík',
              'Rus',
              'Ružička',
              'Rybníček',
              'Rybár',
              'Rybárik',
              'Samson',
              'Sedliak',
              'Senko',
              'Sklenka',
              'Skokan',
              'Skutecký',
              'Slašťan',
              'Sloboda',
              'Slobodník',
              'Slota',
              'Slovák',
              'Smrek',
              'Stodola',
              'Straka',
              'Strnisko',
              'Svrbík',
              'Sámel',
              'Sýkora',
              'Tatar',
              'Tatarka',
              'Tatár',
              'Tatárka',
              'Thomka',
              'Tomeček',
              'Tomka',
              'Tomko',
              'Truben',
              'Turčok',
              'Uram',
              'Urblík',
              'Vajcík',
              'Vajda',
              'Valach',
              'Valachovič',
              'Valent',
              'Valuška',
              'Vanek',
              'Vesel',
              'Vicen',
              'Višňovský',
              'Vlach',
              'Vojtek',
              'Vydarený',
              'Zajac',
              'Zima',
              'Zimka',
              'Záborský',
              'Zúbrik',
              'Čapkovič',
              'Čaplovič',
              'Čarnogurský',
              'Čierny',
              'Čobrda',
              'Ďaďo',
              'Ďurica',
              'Ďuriš',
              'Šidlo',
              'Šimonovič',
              'Škriniar',
              'Škultéty',
              'Šmajda',
              'Šoltés',
              'Šoltýs',
              'Štefan',
              'Štefanka',
              'Šulc',
              'Šurka',
              'Švehla',
              'Šťastný'
            ],
            woman_last_name: [
              'Antalová',
              'Babková',
              'Bahnová',
              'Balážová',
              'Baranová',
              'Baranková',
              'Bartovičová',
              'Bartošová',
              'Bačová',
              'Bernoláková',
              'Beňová',
              'Biceková',
              'Bieliková',
              'Blahová',
              'Bondrová',
              'Bosáková',
              'Bošková',
              'Brezinová',
              'Bukovská',
              'Chalupková',
              'Chudíková',
              'Cibulová',
              'Cibulková',
              'Cyprichová',
              'Cígerová',
              'Danková',
              'Daňková',
              'Daňová',
              'Debnárová',
              'Dejová',
              'Dekýšová',
              'Doležalová',
              'Dočolomanská',
              'Droppová',
              'Dubovská',
              'Dudeková',
              'Dulová',
              'Dullová',
              'Dusíková',
              'Dvončová',
              'Dzurjaninová',
              'Dávidová',
              'Fabianová',
              'Fabiánová',
              'Fajnorová',
              'Farkašovská',
              'Ficová',
              'Filcová',
              'Filipová',
              'Finková',
              'Ftoreková',
              'Gašparová',
              'Gašparovičová',
              'Gocníková',
              'Gregorová',
              'Gregušová',
              'Grznárová',
              'Habláková',
              'Habšudová',
              'Haldová',
              'Halušková',
              'Haláková',
              'Hanková',
              'Hanzalová',
              'Haščáková',
              'Heretiková',
              'Hečková',
              'Hlaváčeková',
              'Hlinková',
              'Holubová',
              'Holubyová',
              'Hossová',
              'Hozová',
              'Hrašková',
              'Hricová',
              'Hrmová',
              'Hrušovská',
              'Hubová',
              'Ihnačáková',
              'Janečeková',
              'Janošková',
              'Jantošovičová',
              'Janíková',
              'Jančeková',
              'Jedľovská',
              'Jendeková',
              'Jonatová',
              'Jurinová',
              'Jurkovičová',
              'Juríková',
              'Jánošíková',
              'Kafendová',
              'Kaliská',
              'Karulová',
              'Kenížová',
              'Klapková',
              'Kmeťová',
              'Kolesárová',
              'Kollárová',
              'Kolniková',
              'Kolníková',
              'Kolárová',
              'Korecová',
              'Kostkaová',
              'Kostrecová',
              'Kováčová',
              'Kováčiková',
              'Kozová',
              'Kočišová',
              'Krajíčeková',
              'Krajčová',
              'Krajčovičová',
              'Krajčírová',
              'Králiková',
              'Krúpová',
              'Kubíková',
              'Kyseľová',
              'Kállayová',
              'Labudová',
              'Lepšíková',
              'Liptáková',
              'Lisická',
              'Lubinová',
              'Lukáčová',
              'Luptáková',
              'Líšková',
              'Madejová',
              'Majeská',
              'Malachovská',
              'Malíšeková',
              'Mamojková',
              'Marcinková',
              'Mariánová',
              'Masaryková',
              'Maslová',
              'Matiašková',
              'Medveďová',
              'Melcerová',
              'Mečiarová',
              'Michalíková',
              'Mihaliková',
              'Mihálová',
              'Miháliková',
              'Miklošková',
              'Mikulíková',
              'Mikušová',
              'Mikúšová',
              'Milotová',
              'Mináčová',
              'Mišíková',
              'Mojžišová',
              'Mokrošová',
              'Morová',
              'Moravčíková',
              'Mydlová',
              'Nemcová',
              'Nováková',
              'Obšutová',
              'Ondrušová',
              'Otčenášová',
              'Pauková',
              'Pavlikovská',
              'Pavúková',
              'Pašeková',
              'Pašková',
              'Pelikánová',
              'Petrovická',
              'Petrušková',
              'Pešková',
              'Plchová',
              'Plekanecová',
              'Podhradská',
              'Podkonická',
              'Poliaková',
              'Pupáková',
              'Raková',
              'Repiská',
              'Romančíková',
              'Rusová',
              'Ružičková',
              'Rybníčeková',
              'Rybárová',
              'Rybáriková',
              'Samsonová',
              'Sedliaková',
              'Senková',
              'Sklenková',
              'Skokanová',
              'Skutecká',
              'Slašťanová',
              'Slobodová',
              'Slobodníková',
              'Slotová',
              'Slováková',
              'Smreková',
              'Stodolová',
              'Straková',
              'Strnisková',
              'Svrbíková',
              'Sámelová',
              'Sýkorová',
              'Tatarová',
              'Tatarková',
              'Tatárová',
              'Tatárkaová',
              'Thomková',
              'Tomečeková',
              'Tomková',
              'Trubenová',
              'Turčoková',
              'Uramová',
              'Urblíková',
              'Vajcíková',
              'Vajdová',
              'Valachová',
              'Valachovičová',
              'Valentová',
              'Valušková',
              'Vaneková',
              'Veselová',
              'Vicenová',
              'Višňovská',
              'Vlachová',
              'Vojteková',
              'Vydarená',
              'Zajacová',
              'Zimová',
              'Zimková',
              'Záborská',
              'Zúbriková',
              'Čapkovičová',
              'Čaplovičová',
              'Čarnogurská',
              'Čierná',
              'Čobrdová',
              'Ďaďová',
              'Ďuricová',
              'Ďurišová',
              'Šidlová',
              'Šimonovičová',
              'Škriniarová',
              'Škultétyová',
              'Šmajdová',
              'Šoltésová',
              'Šoltýsová',
              'Štefanová',
              'Štefanková',
              'Šulcová',
              'Šurková',
              'Švehlová',
              'Šťastná'
            ],
            prefix: [
              'Ing.',
              'Mgr.',
              'JUDr.',
              'MUDr.'
            ],
            suffix: [
              'Phd.'
            ],
            title: {
              descriptor: [
                'Lead',
                'Senior',
                'Direct',
                'Corporate',
                'Dynamic',
                'Future',
                'Product',
                'National',
                'Regional',
                'District',
                'Central',
                'Global',
                'Customer',
                'Investor',
                'Dynamic',
                'International',
                'Legacy',
                'Forward',
                'Internal',
                'Human',
                'Chief',
                'Principal'
              ],
              level: [
                'Solutions',
                'Program',
                'Brand',
                'Security',
                'Research',
                'Marketing',
                'Directives',
                'Implementation',
                'Integration',
                'Functionality',
                'Response',
                'Paradigm',
                'Tactics',
                'Identity',
                'Markets',
                'Group',
                'Division',
                'Applications',
                'Optimization',
                'Operations',
                'Infrastructure',
                'Intranet',
                'Communications',
                'Web',
                'Branding',
                'Quality',
                'Assurance',
                'Mobility',
                'Accounts',
                'Data',
                'Creative',
                'Configuration',
                'Accountability',
                'Interactions',
                'Factors',
                'Usability',
                'Metrics'
              ],
              job: [
                'Supervisor',
                'Associate',
                'Executive',
                'Liason',
                'Officer',
                'Manager',
                'Engineer',
                'Specialist',
                'Director',
                'Coordinator',
                'Administrator',
                'Architect',
                'Analyst',
                'Designer',
                'Planner',
                'Orchestrator',
                'Technician',
                'Developer',
                'Producer',
                'Consultant',
                'Assistant',
                'Facilitator',
                'Agent',
                'Representative',
                'Strategist'
              ]
            },
            name: [
              '#{prefix} #{man_first_name} #{man_last_name}',
              '#{prefix} #{woman_first_name} #{woman_last_name}',
              '#{man_first_name} #{man_last_name} #{suffix}',
              '#{woman_first_name} #{woman_last_name} #{suffix}',
              '#{man_first_name} #{man_last_name}',
              '#{man_first_name} #{man_last_name}',
              '#{man_first_name} #{man_last_name}',
              '#{woman_first_name} #{woman_last_name}',
              '#{woman_first_name} #{woman_last_name}',
              '#{woman_first_name} #{woman_last_name}'
            ]
          },
          phone_number: {
            formats: [
              '09## ### ###',
              '0## #### ####',
              '0# #### ####',
              '+421 ### ### ###'
            ]
          }
        }
      },
      sv: {
        faker: {
          address: {
            city_prefix: [
              'Söder',
              'Norr',
              'Väst',
              'Öster',
              'Aling',
              'Ar',
              'Av',
              'Bo',
              'Br',
              'Bå',
              'Ek',
              'En',
              'Esk',
              'Fal',
              'Gäv',
              'Göte',
              'Ha',
              'Helsing',
              'Karl',
              'Krist',
              'Kram',
              'Kung',
              'Kö',
              'Lyck',
              'Ny'
            ],
            city_suffix: [
              'stad',
              'land',
              'sås',
              'ås',
              'holm',
              'tuna',
              'sta',
              'berg',
              'löv',
              'borg',
              'mora',
              'hamn',
              'fors',
              'köping',
              'by',
              'hult',
              'torp',
              'fred',
              'vik'
            ],
            country: [
              'Ryssland',
              'Kanada',
              'Kina',
              'USA',
              'Brasilien',
              'Australien',
              'Indien',
              'Argentina',
              'Kazakstan',
              'Algeriet',
              'DR Kongo',
              'Danmark',
              'Färöarna',
              'Grönland',
              'Saudiarabien',
              'Mexiko',
              'Indonesien',
              'Sudan',
              'Libyen',
              'Iran',
              'Mongoliet',
              'Peru',
              'Tchad',
              'Niger',
              'Angola',
              'Mali',
              'Sydafrika',
              'Colombia',
              'Etiopien',
              'Bolivia',
              'Mauretanien',
              'Egypten',
              'Tanzania',
              'Nigeria',
              'Venezuela',
              'Namibia',
              'Pakistan',
              'Moçambique',
              'Turkiet',
              'Chile',
              'Zambia',
              'Marocko',
              'Västsahara',
              'Burma',
              'Afghanistan',
              'Somalia',
              'Centralafrikanska republiken',
              'Sydsudan',
              'Ukraina',
              'Botswana',
              'Madagaskar',
              'Kenya',
              'Frankrike',
              'Franska Guyana',
              'Jemen',
              'Thailand',
              'Spanien',
              'Turkmenistan',
              'Kamerun',
              'Papua Nya Guinea',
              'Sverige',
              'Uzbekistan',
              'Irak',
              'Paraguay',
              'Zimbabwe',
              'Japan',
              'Tyskland',
              'Kongo',
              'Finland',
              'Malaysia',
              'Vietnam',
              'Norge',
              'Svalbard',
              'Jan Mayen',
              'Elfenbenskusten',
              'Polen',
              'Italien',
              'Filippinerna',
              'Ecuador',
              'Burkina Faso',
              'Nya Zeeland',
              'Gabon',
              'Guinea',
              'Storbritannien',
              'Ghana',
              'Rumänien',
              'Laos',
              'Uganda',
              'Guyana',
              'Oman',
              'Vitryssland',
              'Kirgizistan',
              'Senegal',
              'Syrien',
              'Kambodja',
              'Uruguay',
              'Tunisien',
              'Surinam',
              'Nepal',
              'Bangladesh',
              'Tadzjikistan',
              'Grekland',
              'Nicaragua',
              'Eritrea',
              'Nordkorea',
              'Malawi',
              'Benin',
              'Honduras',
              'Liberia',
              'Bulgarien',
              'Kuba',
              'Guatemala',
              'Island',
              'Sydkorea',
              'Ungern',
              'Portugal',
              'Jordanien',
              'Serbien',
              'Azerbajdzjan',
              'Österrike',
              'Förenade Arabemiraten',
              'Tjeckien',
              'Panama',
              'Sierra Leone',
              'Irland',
              'Georgien',
              'Sri Lanka',
              'Litauen',
              'Lettland',
              'Togo',
              'Kroatien',
              'Bosnien och Hercegovina',
              'Costa Rica',
              'Slovakien',
              'Dominikanska republiken',
              'Bhutan',
              'Estland',
              'Danmark',
              'Färöarna',
              'Grönland',
              'Nederländerna',
              'Schweiz',
              'Guinea-Bissau',
              'Taiwan',
              'Moldavien',
              'Belgien',
              'Lesotho',
              'Armenien',
              'Albanien',
              'Salomonöarna',
              'Ekvatorialguinea',
              'Burundi',
              'Haiti',
              'Rwanda',
              'Makedonien',
              'Djibouti',
              'Belize',
              'Israel',
              'El Salvador',
              'Slovenien',
              'Fiji',
              'Kuwait',
              'Swaziland',
              'Timor-Leste',
              'Montenegro',
              'Bahamas',
              'Vanuatu',
              'Qatar',
              'Gambia',
              'Jamaica',
              'Kosovo',
              'Libanon',
              'Cypern',
              'Brunei',
              'Trinidad och Tobago',
              'Kap Verde',
              'Samoa',
              'Luxemburg',
              'Komorerna',
              'Mauritius',
              'São Tomé och Príncipe',
              'Kiribati',
              'Dominica',
              'Tonga',
              'Mikronesiens federerade stater',
              'Singapore',
              'Bahrain',
              'Saint Lucia',
              'Andorra',
              'Palau',
              'Seychellerna',
              'Antigua och Barbuda',
              'Barbados',
              'Saint Vincent och Grenadinerna',
              'Grenada',
              'Malta',
              'Maldiverna',
              'Saint Kitts och Nevis',
              'Marshallöarna',
              'Liechtenstein',
              'San Marino',
              'Tuvalu',
              'Nauru',
              'Monaco',
              'Vatikanstaten'
            ],
            common_street_suffix: [
              's Väg',
              's Gata'
            ],
            street_prefix: [
              'Västra',
              'Östra',
              'Norra',
              'Södra',
              'Övre',
              'Undre'
            ],
            street_root: [
              'Björk',
              'Järnvägs',
              'Ring',
              'Skol',
              'Skogs',
              'Ny',
              'Gran',
              'Idrotts',
              'Stor',
              'Kyrk',
              'Industri',
              'Park',
              'Strand',
              'Skol',
              'Trädgård',
              'Ängs',
              'Kyrko',
              'Villa',
              'Ek',
              'Kvarn',
              'Stations',
              'Back',
              'Furu',
              'Gen',
              'Fabriks',
              'Åker',
              'Bäck',
              'Asp'
            ],
            street_suffix: [
              'vägen',
              'gatan',
              'gränden',
              'gärdet',
              'allén'
            ],
            state: [
              'Blekinge',
              'Dalarna',
              'Gotland',
              'Gävleborg',
              'Göteborg',
              'Halland',
              'Jämtland',
              'Jönköping',
              'Kalmar',
              'Kronoberg',
              'Norrbotten',
              'Skaraborg',
              'Skåne',
              'Stockholm',
              'Södermanland',
              'Uppsala',
              'Värmland',
              'Västerbotten',
              'Västernorrland',
              'Västmanland',
              'Älvsborg',
              'Örebro',
              'Östergötland'
            ],
            city: [
              '#{city_prefix}#{city_suffix}'
            ],
            street_name: [
              '#{street_root}#{street_suffix}',
              '#{street_prefix} #{street_root}#{street_suffix}',
              '#{Name.first_name}#{common_street_suffix}',
              '#{Name.last_name}#{common_street_suffix}'
            ],
            postcode: [
              '#####'
            ],
            building_number: [
              '###',
              '##',
              '#'
            ],
            secondary_address: [
              'Lgh. ###',
              'Hus ###'
            ],
            street_address: [
              '#{street_name} #{building_number}'
            ],
            default_country: [
              'Sverige'
            ]
          },
          company: {
            suffix: [
              'Gruppen',
              'AB',
              'HB',
              'Group',
              'Investment',
              'Kommanditbolag',
              'Aktiebolag'
            ],
            name: [
              '#{Name.last_name} #{suffix}',
              '#{Name.last_name}-#{Name.last_name}',
              '#{Name.last_name}, #{Name.last_name} #{suffix}'
            ]
          },
          internet: {
            domain_suffix: [
              'se',
              'nu',
              'info',
              'com',
              'org'
            ]
          },
          name: {
            first_name_women: [
              'Maria',
              'Anna',
              'Margareta',
              'Elisabeth',
              'Eva',
              'Birgitta',
              'Kristina',
              'Karin',
              'Elisabet',
              'Marie'
            ],
            first_name_men: [
              'Erik',
              'Lars',
              'Karl',
              'Anders',
              'Per',
              'Johan',
              'Nils',
              'Lennart',
              'Emil',
              'Hans'
            ],
            last_name: [
              'Johansson',
              'Andersson',
              'Karlsson',
              'Nilsson',
              'Eriksson',
              'Larsson',
              'Olsson',
              'Persson',
              'Svensson',
              'Gustafsson'
            ],
            prefix: [
              'Dr.',
              'Prof.',
              'PhD.'
            ],
            title: {
              descriptor: [
                'Lead',
                'Senior',
                'Direct',
                'Corporate',
                'Dynamic',
                'Future',
                'Product',
                'National',
                'Regional',
                'District',
                'Central',
                'Global',
                'Customer',
                'Investor',
                'Dynamic',
                'International',
                'Legacy',
                'Forward',
                'Internal',
                'Human',
                'Chief',
                'Principal'
              ],
              level: [
                'Solutions',
                'Program',
                'Brand',
                'Security',
                'Research',
                'Marketing',
                'Directives',
                'Implementation',
                'Integration',
                'Functionality',
                'Response',
                'Paradigm',
                'Tactics',
                'Identity',
                'Markets',
                'Group',
                'Division',
                'Applications',
                'Optimization',
                'Operations',
                'Infrastructure',
                'Intranet',
                'Communications',
                'Web',
                'Branding',
                'Quality',
                'Assurance',
                'Mobility',
                'Accounts',
                'Data',
                'Creative',
                'Configuration',
                'Accountability',
                'Interactions',
                'Factors',
                'Usability',
                'Metrics'
              ],
              job: [
                'Supervisor',
                'Associate',
                'Executive',
                'Liason',
                'Officer',
                'Manager',
                'Engineer',
                'Specialist',
                'Director',
                'Coordinator',
                'Administrator',
                'Architect',
                'Analyst',
                'Designer',
                'Planner',
                'Orchestrator',
                'Technician',
                'Developer',
                'Producer',
                'Consultant',
                'Assistant',
                'Facilitator',
                'Agent',
                'Representative',
                'Strategist'
              ]
            },
            name: [
              '#{first_name_women} #{last_name}',
              '#{first_name_men} #{last_name}',
              '#{first_name_women} #{last_name}',
              '#{first_name_men} #{last_name}',
              '#{first_name_women} #{last_name}',
              '#{first_name_men} #{last_name}',
              '#{prefix} #{first_name_men} #{last_name}',
              '#{prefix} #{first_name_women} #{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '####-#####',
              '####-######'
            ]
          },
          cell_phone: {
            common_cell_prefix: [
              56,
              62,
              59
            ],
            formats: [
              '#{common_cell_prefix}-###-####'
            ]
          },
          commerce: {
            color: [
              'vit',
              'silver',
              'grå',
              'svart',
              'röd',
              'grön',
              'blå',
              'gul',
              'lila',
              'indigo',
              'guld',
              'brun',
              'rosa',
              'purpur',
              'korall'
            ],
            department: [
              'Böcker',
              'Filmer',
              'Musik',
              'Spel',
              'Elektronik',
              'Datorer',
              'Hem',
              'Trädgård',
              'Verktyg',
              'Livsmedel',
              'Hälsa',
              'Skönhet',
              'Leksaker',
              'Klädsel',
              'Skor',
              'Smycken',
              'Sport'
            ],
            product_name: {
              adjective: [
                'Liten',
                'Ergonomisk',
                'Robust',
                'Intelligent',
                'Söt',
                'Otrolig',
                'Fatastisk',
                'Praktisk',
                'Slimmad',
                'Grym'
              ],
              material: [
                'Stål',
                'Metall',
                'Trä',
                'Betong',
                'Plast',
                'Bomul',
                'Grnit',
                'Gummi',
                'Latex'
              ],
              product: [
                'Stol',
                'Bil',
                'Dator',
                'Handskar',
                'Pants',
                'Shirt',
                'Table',
                'Shoes',
                'Hat'
              ]
            }
          },
          team: {
            suffix: [
              'IF',
              'FF',
              'BK',
              'HK',
              'AIF',
              'SK',
              'FC',
              'SK',
              'BoIS',
              'FK',
              'BIS',
              'FIF',
              'IK'
            ],
            name: [
              '#{Address.city} #{suffix}'
            ]
          }
        }
      },
      vi: {
        faker: {
          address: {
            city_root: [
              'Bắc Giang',
              'Bắc Kạn',
              'Bắc Ninh',
              'Cao Bằng',
              'Điện Biên',
              'Hà Giang',
              'Hà Nam',
              'Hà Tây',
              'Hải Dương',
              'TP Hải Phòng',
              'Hòa Bình',
              'Hưng Yên',
              'Lai Châu',
              'Lào Cai',
              'Lạng Sơn',
              'Nam Định',
              'Ninh Bình',
              'Phú Thọ',
              'Quảng Ninh',
              'Sơn La',
              'Thái Bình',
              'Thái Nguyên',
              'Tuyên Quang',
              'Vĩnh Phúc',
              'Yên Bái',
              'TP Đà Nẵng',
              'Bình Định',
              'Đắk Lắk',
              'Đắk Nông',
              'Gia Lai',
              'Hà Tĩnh',
              'Khánh Hòa',
              'Kon Tum',
              'Nghệ An',
              'Phú Yên',
              'Quảng Bình',
              'Quảng Nam',
              'Quảng Ngãi',
              'Quảng Trị',
              'Thanh Hóa',
              'Thừa Thiên Huế',
              'TP TP. Hồ Chí Minh',
              'An Giang',
              'Bà Rịa Vũng Tàu',
              'Bạc Liêu',
              'Bến Tre',
              'Bình Dương',
              'Bình Phước',
              'Bình Thuận',
              'Cà Mau',
              'TP Cần Thơ',
              'Đồng Nai',
              'Đồng Tháp',
              'Hậu Giang',
              'Kiên Giang',
              'Lâm Đồng',
              'Long An',
              'Ninh Thuận',
              'Sóc Trăng',
              'Tây Ninh',
              'Tiền Giang',
              'Trà Vinh',
              'Vĩnh Long'
            ],
            city: [
              '#{city_root}'
            ],
            postcode: '/[A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? {1,2}[0-9][ABD-HJLN-UW-Z]{2}/',
            county: [
              'Avon',
              'Bedfordshire',
              'Berkshire',
              'Borders',
              'Buckinghamshire',
              'Cambridgeshire',
              'Central',
              'Cheshire',
              'Cleveland',
              'Clwyd',
              'Cornwall',
              'County Antrim',
              'County Armagh',
              'County Down',
              'County Fermanagh',
              'County Londonderry',
              'County Tyrone',
              'Cumbria',
              'Derbyshire',
              'Devon',
              'Dorset',
              'Dumfries and Galloway',
              'Durham',
              'Dyfed',
              'East Sussex',
              'Essex',
              'Fife',
              'Gloucestershire',
              'Grampian',
              'Greater Manchester',
              'Gwent',
              'Gwynedd County',
              'Hampshire',
              'Herefordshire',
              'Hertfordshire',
              'Highlands and Islands',
              'Humberside',
              'Isle of Wight',
              'Kent',
              'Lancashire',
              'Leicestershire',
              'Lincolnshire',
              'Lothian',
              'Merseyside',
              'Mid Glamorgan',
              'Norfolk',
              'North Yorkshire',
              'Northamptonshire',
              'Northumberland',
              'Nottinghamshire',
              'Oxfordshire',
              'Powys',
              'Rutland',
              'Shropshire',
              'Somerset',
              'South Glamorgan',
              'South Yorkshire',
              'Staffordshire',
              'Strathclyde',
              'Suffolk',
              'Surrey',
              'Tayside',
              'Tyne and Wear',
              'Việt Nam',
              'Warwickshire',
              'West Glamorgan',
              'West Midlands',
              'West Sussex',
              'West Yorkshire',
              'Wiltshire',
              'Worcestershire'
            ],
            default_country: [
              'Việt Nam'
            ]
          },
          internet: {
            domain_suffix: [
              'com',
              'net',
              'info',
              'vn',
              'com.vn'
            ]
          },
          phone_number: {
            formats: [
              '01#### #####',
              '01### ######',
              '01#1 ### ####',
              '011# ### ####',
              '02# #### ####',
              '03## ### ####',
              '055 #### ####',
              '056 #### ####',
              '0800 ### ####',
              '08## ### ####',
              '09## ### ####',
              '016977 ####',
              '01### #####',
              '0500 ######',
              '0800 ######'
            ]
          },
          cell_phone: {
            formats: [
              '074## ######',
              '075## ######',
              '076## ######',
              '077## ######',
              '078## ######',
              '079## ######'
            ]
          },
          name: {
            first_name: [
              'Phạm',
              'Nguyễn',
              'Trần',
              'Lê',
              'Lý',
              'Hoàng',
              'Phan',
              'Vũ',
              'Tăng',
              'Đặng',
              'Bùi',
              'Đỗ',
              'Hồ',
              'Ngô',
              'Dương',
              'Đào',
              'Đoàn',
              'Vương',
              'Trịnh',
              'Đinh',
              'Lâm',
              'Phùng',
              'Mai',
              'Tô',
              'Trương',
              'Hà'
            ],
            last_name: [
              'Nam',
              'Trung',
              'Thanh',
              'Thị',
              'Văn',
              'Dương',
              'Tăng',
              'Quốc',
              'Như',
              'Phạm',
              'Nguyễn',
              'Trần',
              'Lê',
              'Lý',
              'Hoàng',
              'Phan',
              'Vũ',
              'Tăng',
              'Đặng',
              'Bùi',
              'Đỗ',
              'Hồ',
              'Ngô',
              'Dương',
              'Đào',
              'Đoàn',
              'Vương',
              'Trịnh',
              'Đinh',
              'Lâm',
              'Phùng',
              'Mai',
              'Tô',
              'Trương',
              'Hà',
              'Vinh',
              'Nhung',
              'Hòa',
              'Tiến',
              'Tâm',
              'Bửu',
              'Loan',
              'Hiền',
              'Hải',
              'Vân',
              'Kha',
              'Minh',
              'Nhân',
              'Triệu',
              'Tuân',
              'Hữu',
              'Đức',
              'Phú',
              'Khoa',
              'Thắgn',
              'Sơn',
              'Dung',
              'Tú',
              'Trinh',
              'Thảo',
              'Sa',
              'Kim',
              'Long',
              'Thi',
              'Cường',
              'Ngọc',
              'Sinh',
              'Khang',
              'Phong',
              'Thắm',
              'Thu',
              'Thủy',
              'Nhàn'
            ],
            name: [
              '#{first_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name}',
              '#{first_name} #{last_name} #{last_name} #{last_name}'
            ]
          },
          company: {
            prefix: [
              'Công ty',
              'Cty TNHH',
              'Cty',
              'Cửa hàng',
              'Trung tâm',
              'Chi nhánh'
            ],
            name: [
              '#{prefix} #{Name.last_name}'
            ]
          },
          lorem: {
            words: [
              'đã',
              'đang',
              'ừ',
              'ờ',
              'á',
              'không',
              'biết',
              'gì',
              'hết',
              'đâu',
              'nha',
              'thế',
              'thì',
              'là',
              'đánh',
              'đá',
              'đập',
              'phá',
              'viết',
              'vẽ',
              'tô',
              'thuê',
              'mướn',
              'mượn',
              'mua',
              'một',
              'hai',
              'ba',
              'bốn',
              'năm',
              'sáu',
              'bảy',
              'tám',
              'chín',
              'mười',
              'thôi',
              'việc',
              'nghỉ',
              'làm',
              'nhà',
              'cửa',
              'xe',
              'đạp',
              'ác',
              'độc',
              'khoảng',
              'khoan',
              'thuyền',
              'tàu',
              'bè',
              'lầu',
              'xanh',
              'đỏ',
              'tím',
              'vàng',
              'kim',
              'chỉ',
              'khâu',
              'may',
              'vá',
              'em',
              'anh',
              'yêu',
              'thương',
              'thích',
              'con',
              'cái',
              'bàn',
              'ghế',
              'tủ',
              'quần',
              'áo',
              'nón',
              'dép',
              'giày',
              'lỗi',
              'được',
              'ghét',
              'giết',
              'chết',
              'hết',
              'tôi',
              'bạn',
              'tui',
              'trời',
              'trăng',
              'mây',
              'gió',
              'máy',
              'hàng',
              'hóa',
              'leo',
              'núi',
              'bơi',
              'biển',
              'chìm',
              'xuồng',
              'nước',
              'ngọt',
              'ruộng',
              'đồng',
              'quê',
              'hương'
            ]
          }
        }
      },
      'zh-CN': {
        faker: {
          address: {
            city_prefix: [
              '长',
              '上',
              '南',
              '西',
              '北',
              '诸',
              '宁',
              '珠',
              '武',
              '衡',
              '成',
              '福',
              '厦',
              '贵',
              '吉',
              '海',
              '太',
              '济',
              '安',
              '吉',
              '包'
            ],
            city_suffix: [
              '沙市',
              '京市',
              '宁市',
              '安市',
              '乡县',
              '海市',
              '码市',
              '汉市',
              '阳市',
              '都市',
              '州市',
              '门市',
              '阳市',
              '口市',
              '原市',
              '南市',
              '徽市',
              '林市',
              '头市'
            ],
            building_number: [
              '#####',
              '####',
              '###',
              '##',
              '#'
            ],
            street_suffix: [
              '巷',
              '街',
              '路',
              '桥',
              '侬',
              '旁',
              '中心',
              '栋'
            ],
            postcode: [
              '######'
            ],
            state: [
              '北京市',
              '上海市',
              '天津市',
              '重庆市',
              '黑龙江省',
              '吉林省',
              '辽宁省',
              '内蒙古',
              '河北省',
              '新疆',
              '甘肃省',
              '青海省',
              '陕西省',
              '宁夏',
              '河南省',
              '山东省',
              '山西省',
              '安徽省',
              '湖北省',
              '湖南省',
              '江苏省',
              '四川省',
              '贵州省',
              '云南省',
              '广西省',
              '西藏',
              '浙江省',
              '江西省',
              '广东省',
              '福建省',
              '台湾省',
              '海南省',
              '香港',
              '澳门'
            ],
            state_abbr: [
              '京',
              '沪',
              '津',
              '渝',
              '黑',
              '吉',
              '辽',
              '蒙',
              '冀',
              '新',
              '甘',
              '青',
              '陕',
              '宁',
              '豫',
              '鲁',
              '晋',
              '皖',
              '鄂',
              '湘',
              '苏',
              '川',
              '黔',
              '滇',
              '桂',
              '藏',
              '浙',
              '赣',
              '粤',
              '闽',
              '台',
              '琼',
              '港',
              '澳'
            ],
            city: [
              '#{city_prefix}#{city_suffix}'
            ],
            street_name: [
              '#{Name.last_name}#{street_suffix}'
            ],
            street_address: [
              '#{street_name}#{building_number}号'
            ],
            default_country: [
              '中国'
            ]
          },
          name: {
            first_name: [
              '王',
              '李',
              '张',
              '刘',
              '陈',
              '杨',
              '黄',
              '吴',
              '赵',
              '周',
              '徐',
              '孙',
              '马',
              '朱',
              '胡',
              '林',
              '郭',
              '何',
              '高',
              '罗',
              '郑',
              '梁',
              '谢',
              '宋',
              '唐',
              '许',
              '邓',
              '冯',
              '韩',
              '曹',
              '曾',
              '彭',
              '萧',
              '蔡',
              '潘',
              '田',
              '董',
              '袁',
              '于',
              '余',
              '叶',
              '蒋',
              '杜',
              '苏',
              '魏',
              '程',
              '吕',
              '丁',
              '沈',
              '任',
              '姚',
              '卢',
              '傅',
              '钟',
              '姜',
              '崔',
              '谭',
              '廖',
              '范',
              '汪',
              '陆',
              '金',
              '石',
              '戴',
              '贾',
              '韦',
              '夏',
              '邱',
              '方',
              '侯',
              '邹',
              '熊',
              '孟',
              '秦',
              '白',
              '江',
              '阎',
              '薛',
              '尹',
              '段',
              '雷',
              '黎',
              '史',
              '龙',
              '陶',
              '贺',
              '顾',
              '毛',
              '郝',
              '龚',
              '邵',
              '万',
              '钱',
              '严',
              '赖',
              '覃',
              '洪',
              '武',
              '莫',
              '孔'
            ],
            last_name: [
              '绍齐',
              '博文',
              '梓晨',
              '胤祥',
              '瑞霖',
              '明哲',
              '天翊',
              '凯瑞',
              '健雄',
              '耀杰',
              '潇然',
              '子涵',
              '越彬',
              '钰轩',
              '智辉',
              '致远',
              '俊驰',
              '雨泽',
              '烨磊',
              '晟睿',
              '文昊',
              '修洁',
              '黎昕',
              '远航',
              '旭尧',
              '鸿涛',
              '伟祺',
              '荣轩',
              '越泽',
              '浩宇',
              '瑾瑜',
              '皓轩',
              '擎苍',
              '擎宇',
              '志泽',
              '子轩',
              '睿渊',
              '弘文',
              '哲瀚',
              '雨泽',
              '楷瑞',
              '建辉',
              '晋鹏',
              '天磊',
              '绍辉',
              '泽洋',
              '鑫磊',
              '鹏煊',
              '昊强',
              '伟宸',
              '博超',
              '君浩',
              '子骞',
              '鹏涛',
              '炎彬',
              '鹤轩',
              '越彬',
              '风华',
              '靖琪',
              '明辉',
              '伟诚',
              '明轩',
              '健柏',
              '修杰',
              '志泽',
              '弘文',
              '峻熙',
              '嘉懿',
              '煜城',
              '懿轩',
              '烨伟',
              '苑博',
              '伟泽',
              '熠彤',
              '鸿煊',
              '博涛',
              '烨霖',
              '烨华',
              '煜祺',
              '智宸',
              '正豪',
              '昊然',
              '明杰',
              '立诚',
              '立轩',
              '立辉',
              '峻熙',
              '弘文',
              '熠彤',
              '鸿煊',
              '烨霖',
              '哲瀚',
              '鑫鹏',
              '昊天',
              '思聪',
              '展鹏',
              '笑愚',
              '志强',
              '炫明',
              '雪松',
              '思源',
              '智渊',
              '思淼',
              '晓啸',
              '天宇',
              '浩然',
              '文轩',
              '鹭洋',
              '振家',
              '乐驹',
              '晓博',
              '文博',
              '昊焱',
              '立果',
              '金鑫',
              '锦程',
              '嘉熙',
              '鹏飞',
              '子默',
              '思远',
              '浩轩',
              '语堂',
              '聪健',
              '明',
              '文',
              '果',
              '思',
              '鹏',
              '驰',
              '涛',
              '琪',
              '浩',
              '航',
              '彬'
            ],
            name: [
              '#{first_name}#{last_name}'
            ]
          },
          phone_number: {
            formats: [
              '###-########',
              '####-########',
              '###########'
            ]
          }
        }
      },
      pt: {
        adjust: {
          title: 'Ajustes de usuário',
          title_admin: 'Ajustes de usuário administrador',
          personal: 'Dados pessoais',
          language: 'Idioma',
          spanish: 'Español',
          english: 'English',
          french: 'Français',
          italian: 'Italiano',
          portuguese: 'Português',
          german: 'Deutsch',
          password: {
            password_change: 'Trocar palavra-passe',
            new_password_placeholder: 'Nova palavra-passe',
            new_password_repeat_placeholder: 'Repita nova palavra-passe',
            old_password_placeholder: 'Palavra-passe atual'
          },
          require: {
            name: 'Informe seu nome',
            surname: 'Informe seu sobrenome'
          },
          advanced_adjust: 'Ajustes avançados',
          advanced_adjust_text: 'Mostrar ajustes avançados',
          type_temp: 'Temperatura',
          type_temp_text: 'Modo de temperatura',
          save: {
            title: 'Ajustes salvos',
            body: 'Seus ajustes foram salvos corretamente.'
          },
          unsubscribe_confirm: 'Deseja eliminar da aplicação Airzone? Todos os seus dados serão apagados e não poderão ser recuperados',
          unsubscribe: {
            title: 'Eliminação confirmada',
            body: 'Todos os seus dados pessoais foram apagados do Airzone.'
          },
          change_pass: 'Trocar palavra-passe'
        },
        languages: {
        },
        modal_mode: {
          cold: 'Frio',
          cold_text: 'Modo frio',
          heat: 'Calor',
          heat_text: 'Modo calor',
          ventilate_cold: 'Ventilação frio',
          ventilate_cold_text: 'Modo ventilação em frío',
          heat_cold_auto: 'Auto',
          heat_cold_auto_text: 'Modo Auto',
          dehumidify: 'Seco',
          dehumidify_text: 'Modo seco',
          cold_auto: 'Auto frio',
          cold_auto_text: 'Modo frio auto',
          heat_auto: 'Auto calor',
          heat_auto_text: 'Modo calor auto',
          ventilate_heat: 'Ventilação calor',
          ventilate_heat_text: 'Modo ventilação em frío'
        },
        modal_speed: {
          title: 'Modos do velocidade do ventilador disponível',
          speed_1: 'Só tem uma velocidade disponível',
          speed_2: 'Selecione entre 2 velocidades.',
          speed_3: 'Selecione entre 3 velocidades.',
          speed_4: 'Selecione entre 4 velocidades.',
          speed_5: 'Selecione entre 5 velocidades.'
        },
        modal_vertical: {
          title: 'Posições das lâminas verticais',
          position_0: 'Inclinação 0: lâminas a 90º',
          position_1: 'Inclinação 1: lâminas a 72º',
          position_2: 'Inclinação 2: lâminas a 54º',
          position_3: 'Inclinação 3: lâminas a 36º',
          position_4: 'Inclinação 4: lâminas a 0º',
          position_swing: 'Swing: alterna todas as posições das lâminas'
        },
        modal_horizontal: {
          title: 'Posições das lâminas horizontais',
          position_0: 'Inclinação 0: lâminas a 180º',
          position_1: 'Inclinação 1: lâminas a 135º',
          position_2: 'Inclinação 2: lâminas a 90º',
          position_3: 'Inclinação 3: lâminas a 45º',
          position_4: 'Inclinação 4: lâminas a 0º',
          position_swing: 'Swing: alterna todas as posições das lâminas'
        },
        modal_scenary: {
          vacant: 'Modo desocupado',
          vacant_text: 'Por padrão, desliga o equipamento. Evita que a temperatura ambiente supere a temperatura limite estabelecida em modo calor, ou seja, mais baixa que a temperatura limite estabelecida em modo frio.',
          occupied: 'Modo ocupado',
          occupied_text: 'Cenário estabelecido pelo padrão.',
          sleep: 'Modo Autodesligado',
          sleep_text: 'Desliga o equipamento quando o tempo fixado nos ajustes tiver sido atingido.'
        },
        advanced_adjust: {
        },
        adjust_zone: {
          'true': 'Sí',
          help: {
          }
        },
        installations: {
          'return': 'Voltar',
          exit: 'Sair',
          finish: 'Finalizar',
          next: 'Seguinte',
          edit: 'Editar',
          error: 'Ocorreu um erro ao conectar ao DKN WServer',
          retry: 'Retentar',
          state1: {
            text: 'Siga os passos a seguir para associar o DKN WServer ao router'
          },
          state2: {
            text: 'Verifique se o dispositivo está alimentado e em modo ponto de acesso. LED Ap fixo.'
          },
          state3: {
            text: 'Selecione o processo de associaçao',
            assisted: 'Assistida',
            wps: 'WPS'
          },
          state4: {
            text: 'Altere a rede WiFi nos ajustes do dispositivo por uma que comece com:',
            text4: 'La senha é: 123456789'
          },
          state5: {
            text: 'Selecione o router para associar:',
            loading_text: 'Conectando com o dispositivo. Aguarde...',
            loading_text2: '(Se a operação demorar mais de um minuto, verificar se a conexão do dispositivo está correta)',
            low_signal: {
              title: 'Cobertura insuficiente',
              text: 'Aproxime o Webserver do router ou instale um repetidor WiFi para melhorar a cobertura'
            }
          },
          state6: {
            text: 'Selecione o tipo do segurança da sua rede wifi e insira a chave de rede',
            text2: 'Introduza os dados da rede WiFi',
            none: 'Sem segurança',
            wep: 'WEP',
            wpa: 'WPA/WPA2',
            pass: 'Senha',
            name: 'Nome'
          },
          state7: {
            text: 'Dados da sua configuração de rede',
            ip: 'IP',
            port: 'Gateway',
            masc: 'Máscara de rede',
            manual: 'MANUAL',
            dhcp: 'DHCP',
            loading_text: 'A configurar o DKN WServer. Aguarde...'
          },
          state8: {
            text: 'Una vez asociado, el LED Ap permanecerá parpadeando en modo lento.'
          },
          state9: {
            text: 'Processo realizado corretamente'
          },
          state21: {
            text1: 'Prima sobre o botão WPS no roteador.',
            text2: 'Pode ser identificado com um símbolo.'
          },
          state22: {
            text1: 'Prima sobre o botão da configuração WPS do dispositivo até que o LED mude de estado.',
            text2: 'Uma vez associado, o LED Ap permanecerá piscando lentamente.'
          },
          state41: {
            title: 'Selecione o método de associação',
            auto_info: 'Automático. Pesquisar automaticamente por redes Wi-Fi.',
            manual_info: 'Manual. Insira os dados da rede Wi-Fi.',
            auto: 'Auto',
            manual: 'Manual'
          }
        },
        buttons: {
          sign_in: 'Entrar',
          cancel: 'Cancelar',
          init: 'Começar',
          send: 'Enviar',
          save: 'Salvar',
          save_installation: 'Adicionar instalação',
          accept: 'Aceitar',
          resend_confirmation: 'Reenviar confirmação',
          back: 'Voltar',
          icon: 'Ícone',
          unsubscribe: 'Cancelar subscrição',
          remove: 'Eliminar',
          restore_factory: 'Restaurar de fábrica',
          next: 'Seguinte',
          prev: 'Anterior',
          close: 'Fechar',
          recharge: 'Recarregar',
          hide: 'Ocultar',
          'continue': 'Continuar',
          exit: 'Sair',
          help: 'Ajuda',
          modify: 'Modificar',
          contact: 'Contacto'
        },
        devices: {
          warnings: {
            installer: 'Instalador',
            text: 'Código erro:'
          },
          alert_installer_modal: {
            name_placeholder: 'Insira o nome',
            phone_placeholder: 'Insira o telefone',
            send_button: 'Notificar ao instalador',
            user_params: 'Indique suas informações de contato:',
            installer_params: 'Entre em contato com o instalador',
            success_title: 'Notificado ao instalador',
            success_message: 'Um e-mail foi enviado corretamente ao seu instalador. Espere um pouco antes de enviar outro aviso sobre o seu dispositivo.',
            error: {
              name: 'Deve indicar seu nome',
              phone: 'Deve indicar seu telefone'
            },
            no_email: 'Os dados do instalador não foram especificados e, portanto, não é possível enviar um aviso. Caso queira enviar um aviso, pode especificar essas informações nos ajustes da instalação.'
          },
          adjusts: {
            name: 'Nome',
            mac: 'MAC',
            pin: 'PIN',
            installation: 'Instalação',
            device: 'Dados do equipamento',
            name_text: 'Nome do dispositivo',
            installation_text: 'Instalação à qual o dispositivo será associado. Poderá alterar a instalação do dispositivo sempre que tiver permissão sobre ela.',
            links: {
              adjust: 'Ajustes',
              params: 'Parâmetros'
            },
            model_device: 'Modelo do equipamento',
            sleep: 'Auto apagado',
            min_temp_unoccupied: 'Temperatura minimo desocupado',
            min_temp_unoccupied_text: 'Define la temperatura mínima cuando el sistema tenga activado el modo desocupado',
            max_temp_unoccupied: 'Temperatura máxima desocupado',
            max_temp_unoccupied_text: 'Defina a temperatura mínima quando o sistema tiver ativado o modo desocupado',
            sleep_time: 'Autodesligado',
            sleep_time_text: 'Permite estabelecer o tempo até o equipamento desligar-se'
          },
          schedules: {
            init: 'Começar',
            days: 'Dias',
            monday: 'SEG',
            tuesday: 'TER',
            wednesday: 'QUA',
            thursday: 'QUI',
            friday: 'SEX',
            saturday: 'SAB',
            sunday: 'DOM',
            add_schedule: 'Adicionar programação',
            schedules_types: 'Tipo de programação',
            on_off: 'On/Off',
            mode: 'Modo',
            start_mode: 'Modo de início',
            close: 'Fechar',
            remove: 'Eliminar',
            save: 'Salvar',
            hour: 'Hora',
            temperature: 'Temperatura',
            new_prog: 'Nova programação',
            edit_prog: 'Editar programação',
            schedules_name: 'Nome',
            all_devices: 'Todo o equipamento',
            waiting_title: 'Criando programações',
            waiting_text: 'Neste momento, as programações estão sendo criadas. Este processo pode demorar alguns segundos, até que todas as zonas sejam criadas.',
            days_error: 'Você deve selecionar um dia.'
          }
        },
        devise: {
          mailer: {
            confirmation_instructions: {
              subject: 'Confirmação de e-mail DKN.'
            },
            reset_password_instructions: {
              subject: 'Instruções para alteração de palavra-passe'
            }
          }
        },
        error: {
          internal: {
            title: 'Erro Interno',
            body: 'Sua ação não pôde ser realizada. Tente novamente mais tarde.'
          }
        },
        errors_page: {
          page_404: {
            title: 'Página não encontrada',
            text: 'Sentimos muito, mas não conseguimos encontrar a página que procura.',
            button: 'Ir para a página de início'
          },
          page_403: {
            title: 'Acesso proibido',
            text: 'Sentimos muito, mas não tem permissão para aceder a esta zona.',
            button: 'Ir para a página de início'
          }
        },
        home: {
          menu: {
            installations: 'Instalações',
            adjusts: 'Usuário',
            help: 'Ajuda',
            admin: 'Servidores',
            exit: 'Encerrar sessão',
            admin_users: 'Usuários',
            admins: 'Administradores',
            support: 'Suporte'
          },
          upload: {
            title: 'Existe uma versão nova de DKN Cloud.',
            description: 'Atualize a aplicação para utilizá-la.'
          },
          maintenance: {
            title: 'Este site está temporariamente em manutenção',
            description: 'Esta página está em manutenção programada.',
            text: 'E ficará disponível novamente em breve.'
          }
        },
        list_installations: {
          edit: 'Editar',
          close: 'Fechar'
        },
        edit_installation: {
          installator: {
            name: 'Nome',
            phone: 'Telefone',
            email: 'Email'
          }
        },
        installation: {
          temp: 'TEMPERATURA',
          months: {
            0: 'JAN',
            1: 'FEV',
            2: 'MAR',
            3: 'ABR',
            4: 'MAI',
            5: 'JUN',
            6: 'JUL',
            7: 'AGO',
            8: 'SET',
            9: 'OUT',
            10: 'NOV',
            11: 'DEZ'
          },
          days: {
            0: 'Domingo',
            1: 'Segunda-feira',
            2: 'Terça-feira',
            3: 'Quarta-feira',
            4: 'Quinta-feira',
            5: 'Sexta-feira',
            6: 'Sábado'
          },
          modes: {
            header: 'Modos de funcionamento',
            cool: 'Frio',
            heat: 'Calor',
            ventilate: 'Ventilação',
            'ventilate-cold': 'Ventilação frio',
            'heat-cold-auto': 'Auto',
            dehumidify: 'Seco',
            'cool-air': 'Auto frio',
            'heat-air': 'Auto calor',
            'ventilate-heat': 'Ventilação calor'
          },
          velocity: {
            header: 'Velocidade do ventilador',
            'velocity-0': 'Auto',
            'velocity-1': 'Ultra-Baixa',
            'velocity-2': 'Baixa',
            'velocity-3': 'Média',
            'velocity-4': 'Média-alta',
            'velocity-5': 'Alta'
          },
          vertical: {
            header: 'Inclinação verticais',
            'vertical-0000': 'Inclinação 1',
            'vertical-0001': 'Inclinação 2',
            'vertical-0010': 'Inclinação 3',
            'vertical-0011': 'Inclinação 4',
            'vertical-0100': 'Inclinação 5',
            'vertical-0111': 'Swing'
          },
          horizontal: {
            header: 'Inclinação horizontais',
            'horizontal-0000': 'Inclinação 1',
            'horizontal-0001': 'Inclinação 2',
            'horizontal-0010': 'Inclinação 3',
            'horizontal-0011': 'Inclinação 4',
            'horizontal-0100': 'Inclinação 5',
            'horizontal-0111': 'Swing'
          },
          scenary: {
            header: 'Cenário',
            occupied: 'Ocupado',
            vacant: 'Desocupado',
            sleep30: 'Auto-desligar 30\'',
            sleep60: 'Auto-desligar 60\'',
            sleep90: 'Auto-desligar 90\'',
            sleep: 'Auto-desligar'
          },
          modal: {
            name: 'Nome da instalação',
            location: 'Localização',
            icon: 'Ícone',
            users: 'Usuários',
            installer: 'Dados do instalador',
            installer_name: 'Nome',
            installer_phone: 'Telefone',
            installer_email: 'Email',
            add_user: 'Adicionar usuário',
            save: 'Salvar',
            remove: 'Eliminar',
            cancel: 'Cancelar',
            unoccupied: 'Temperaturas desocupado',
            unoccupied_min_temp: 'Temp. desocupado Calor',
            unoccupied_max_temp: 'Temp. desocupado Frio',
            name_error: 'Especifique um nome para a instalação',
            location_error: 'Especifique uma localização para a instalação',
            type: 'Tipo de instalação',
            type_home: 'Residencial',
            type_commercial: 'Comercial',
            type_business: 'Gabinete',
            type_others: 'Outros',
            postal_code: 'Código Postal',
            sleep_time: 'Auto desligar',
            links: {
              adjust: 'Ajustes',
              params: 'Parâmetros',
              users: 'Usuários'
            },
            new_user: {
              title: 'Adicionar usuário a instalação',
              name: 'Nome',
              surname: 'Sobrenome',
              email: 'Email',
              avanced: 'Usuário avançado',
              name_blank: 'Especifique um nome para o usuário',
              surname_blank: 'Especifique um sobrenome para o usuário',
              email_blank: 'Especifique um e-mail para o usuário'
            },
            help: {
              name: 'Nome',
              name_text: 'Permite modificar o nome da instalação',
              location: 'Localização',
              location_text: 'Permite modificar a localização da instalação',
              icon: 'Ícone',
              icon_text: 'Permite modificar o ícone da instalação',
              users: 'Usuarios',
              users_text: 'Permite gerir os usuários que podem utilizar a aplicação. Usuário básico: Controlo das funções básicas de climatização. Usuário avançado: Para além das funções básicas, o usuário pode aceder aos seguintes menus: ajustes da instalação, programações temporizadas e gestão de usuários.',
              installer: 'Instalador',
              installer_text: 'Dados que permitirão entrar em contacto com o instalador no caso de incidência',
              postal_code: 'Código Postal',
              postal_code_text: 'Código postal do local da instalação',
              type: 'Tipo do instalação',
              type_text: 'Definir o tipo do instalação',
              min_temp_unoccupied: 'Temperatura mínima do desocupado',
              min_temp_unoccupied_text: 'Define a temperatura mínima quando o sistema estiver no modo desocupado',
              max_temp_unoccupied: 'Temperatura máxima desocupado',
              max_temp_unoccupied_text: 'Define a temperatura máxima quando o sistema estiver no modo desocupado',
              sleep_time: 'Temporizador',
              sleep_time_text: 'Define o tempo de espera antes de desativar a instalação'
            }
          }
        },
        login: {
          restore_password: 'Lembrar palavra-passe',
          demo: 'Demo',
          router: 'Associar router'
        },
        register: {
          sign_up: 'Criar conta'
        },
        complete_registration: {
          title: 'Complete seu registro'
        },
        mailers: {
          confirmation: {
            welcome: 'Bem-vindos à DKN WServer,',
            text: 'Para registar-se, confirme seu e-mail através do seguinte link:',
            confirm: 'Confirmar registro'
          },
          reset_password: {
            welcome: 'Olá',
            text: 'Fomos informados que esqueceu-se da sua palavra-passe. Não se preocupe, isso acontece a todos. Para modificar a palavra-passe, pressione o link a seguir.',
            change_password: 'Trocar palavra-passe',
            subject: 'Foi convidado para a DKN WServer'
          },
          complete_registration: {
            title: 'Complete seu registo na DKN WServer',
            text: 'Um usuário convidou-o a gerenciar um dispositivo na DKN Cloud. Complete seu registo para acessar a plataforma e gerenciá-lo.',
            link: 'Completar registro',
            subject: 'Convite para plataforma DKN WServer'
          },
          invitation: {
            title: 'Acesse  a DKN WServer',
            text: 'Um usuário convidou-o a gerenciar um dispositivo na DKN Cloud. Acesse a plataforma para ver o dispositivo e gerenciá-lo.',
            link: 'Acesse a DKN WServer',
            subject: 'Convite para gerenciar uma instalação DKN WServer'
          },
          alert_installer: {
            subject: 'Aviso sobre um problema num dispositivo DKN WServer',
            text: 'Um usuário reportou um problema com o seu dispositivo.',
            title: 'Problema reportado com um dispositivo',
            user_name: 'Nome do usuário',
            user_phone: 'Telefone do usuário',
            error: 'Erro'
          },
          import_devices: {
            title: 'Relatório de importação de dispositivos:',
            subject: 'DKN - Importação'
          }
        },
        messages: {
          errors: {
            name_blank: 'O nome não pode estar em branco',
            surname_blank: 'O sobrenome não pode estar em branco',
            login: 'A palavra-passe ou o e-mail não é válido',
            email: 'O e-mail não é válido',
            email_blank: 'O e-mail não pode estar em branco',
            email_taken: 'O e-mail já está em uso',
            password_length: 'A palavra-passe deve ter pelo menos 8 caracteres',
            password_blank: 'A palavra-passe não pode estar em branco',
            password_confirmation_check: 'As palavras-passe devem ser iguais',
            password_confirmation_blank: 'Deve confirmar a sua palavra-passe',
            password_new_length: 'A palavra-passe nova deve ter pelo menos 8 caracteres',
            password_new_blank: 'A palavra-passe nova não pode estar em branco',
            invalid_old_password: 'A palavra-passe informada não está correta.',
            condition: 'Deve aceitar as condições de uso',
            token_invalid: 'O código de ativação não está correto. Solicite novamente Recordar Palavra-passe.',
            email_not_exist: 'Não existe nenhuma conta associada a esse e-mail',
            confirmation: 'Ocorreu um erro na confirmação. Preencha o formulário e enviaremos um novo e-mail de confirmação.',
            unconfirmed: 'E-mail não confirmado!',
            device_blank: 'Indique um nome para o equipamento',
            installation_blank: 'Deve selecionar instalação',
            mac_blank: 'Indique o endereço MAC do seu equipamento',
            mac_invalid: 'A MAC introduzida está incorreta. Verifique se concorda com os dados do DKN WServer',
            mac_format: 'O formato da MAC está incorreto',
            mac_repeated: 'Já existe um servidor com esta MAC',
            pin_blank: 'Indique o código PIN do seu servidor',
            pin_invalid: 'O PIN introduzido não corresponde à MAC',
            server_sleeping: 'O DKN WServer solicitado não tem ligação à Internet. Verifique se está associado ao router e se possui ligação à Internet',
            device_taken: 'A MAC solicitada já foi incluída na plataforma Cloud',
            location_blank: 'Indique a localidade do seu instalação',
            icon_blank: 'Indique um ícone para representar seu instalação',
            file_error: 'O ficheiro que tenta importar está incorreto. Os formatos suportados são xls, xlsx e csv.',
            must_select_file: 'Deve selecionar um ficheiro',
            not_connected: 'Não há ligação à Internet no momento e as ações realizadas não terão efeito em seu sistema DKN. Quando tiver ligação à Internet, recarregue a página e tente novamente.',
            not_connected_title: 'Aviso sobre sua ligação à Internet',
            not_connected_device: 'Seu dispositivo DKN não está ligado à Internet no momento e, portanto, as ações realizadas não terão efeito. Ligue seu dispositivo DKN à Internet, recarregue a página e tente novamente:',
            not_connected_devices: 'Seu dispositivo DKN não está ligado à Internet no momento:',
            not_connected_device_title: 'Aviso sobre sua ligação do seu dispositivo',
            error_device: 'Ocorreu um erro no seu dispositivo. Se essa mensagem persistir, entre em contacto com o seu instalador.',
            registration_already_completed: 'O registo já foi concluído anteriormente. Inicie a sessão com seus dados.',
            user_taken: 'O usuário já está associado ao servidor',
            not_permission_title: 'Permissão negada',
            not_permission: 'O seu usuário não tem permissão para aceder a esta opção.',
            not_permission_new_schedule: 'O número máximo de programações disponíveis (24) foi alcançado. Apague uma programação existente para criar uma nova.',
            without_internet_title: 'Conexão de internet',
            without_internet_text: 'Esta aplicação precisa de ligação à Internet para o trabalho. Conecte seu dispositivo e tente novamenteo',
            mac_length_seek: 'Deve ter pelo menos 4 dígitos',
            email_length_seek: 'Deve ter pelo menos 3 caracteres',
            machine_error_11_title: 'Erro de conexão com a unidade',
            machine_error_11_text: 'Verifique a conexão nas portas P1 e P2 da unidade.',
            backend_error: 'Não foi possível processar a sua solicitação. Tente novamente mais tarde.'
          },
          success: {
            register: '¡Registro correto!',
            send_reset_password: 'Acabamos de enviar um e-mail com instruções para modificar sua palavra-passe.',
            reset_password: 'A sua palavra-passe foi modificada',
            resend_confirmation: 'Foi enviada uma nova mensagem de confirmação para seu e-mail.',
            user_device_added: 'A conexão com o DKN foi realizada corretamente. Poderá acessar a partir da janela de instalações.',
            user_device_updated: 'A informação do servidor foi atualizada corretamente.',
            restore_factory: 'O DKN WServer foi restaurado à sua configuração inicial.',
            remove_installation_confirmation: 'Tem a certeza que deseja eliminar a instalação?',
            remove_device_confirmation: 'Tem a certeza que deseja eliminar o DKN Webserver?',
            remove_last_device_confirmation: 'Se esta ação for realizada, a sua instalação será apagada. Quer realizar esta ação?',
            remove_installation_without_devices: 'Nenhum DKNW foi associado. Deseja continuar?',
            remove_user_confirmation: 'Tem a certeza que deseja eliminar o acesso do usuário ao instalação?',
            confirmed: '•\tE-mail adicionado corretamente. Inicie a sessão para aceder à plataforma.'
          },
          info: {
            has_email: 'Recebeu um e-mail!',
            go_login: 'Ir a login',
            reset_password: 'Volte ao login e introduza seu e-mail e sua nova palavra-passe para entrar.',
            change_password: 'Escreva e repita sua palavra-passe nova.',
            send_reset_password: 'Isso acontece com todo mundo. Informe o seu endereço de e-mail e enviaremos instruções para modificar sua palavra-passe.',
            register_success: 'Um e-mail foi enviado ao seu endereço para verificar sua identidade.',
            complete_registration_success: 'O registo foi realizado corretamente. Pode iniciar a sessão e acessar a gestão do seu dispositivo DKN WServer.',
            resend_confirmation: 'Informe o seu e-mail e enviaremos uma nova mensagem de confirmação.',
            unconfirmed: 'Confirme seu e-mail antes de iniciar a sessão',
            remove_server_admin: {
              question: 'Deseja eliminar este servidor?',
              info: 'Todos os dados associados a este servidor serão eliminados.'
            },
            restore_server_admin: {
              question: 'Deseja restaurar este servidor à configuração de fábrica?',
              info: 'Será feito um reset de todos os dados associados a este servidor.'
            },
            browsers: 'O navegador utilizado não é suportado por nossa aplicação ou é uma versão muito antiga. Caso queira usar a aplicação, recomendamos a instalação ou a atualização de um dos seguintes navegadores.',
            firmware_updated: 'A ordem de atualização do firmware foi enviada corretamente',
            remove_schedule: 'Tem a certeza que deseja eliminar a programação permanentemente?',
            disable_permission_device: 'O DKN WServer deve ter pelo menos um usuário'
          },
          title: {
            reset_password: 'Volte ao login e introduza seu e-mail e sua nova palavra-passe para entrar',
            change_password: 'Escreva e repita sua palavra-passe nova',
            resend_confirmation: 'Informe o seu e-mail e enviaremos uma nova mensagem de confirmação',
            user_device_added: 'Equipamento definido corretamente',
            user_device_updated: 'Instalação atualizada corretamente',
            add_device: 'Adicionar DKN WServer',
            server_data: 'Dados do servidor',
            remove_server: 'Eliminar servidor',
            restore_factory: 'Restaurar servidor do fábrica',
            remove_installation_confirm: 'Eliminar instalação',
            remove_user_confirm: 'Elimiar usuário da instalação',
            firmware_updated: 'Firmware atualizado',
            device_permissions: 'Permissões DKN WServer',
            installation_permissions: 'Permissões da instalação'
          }
        },
        email: 'Email',
        name: 'Nome',
        surname: 'Sobrenomes',
        password: 'Palavra-passe',
        new_password: 'Nova palavra-passe',
        repeat_password: 'Repetir palavra-passe',
        server: 'Servidor',
        state: 'Estado',
        enabled: 'Habilitado',
        sleeping: 'Fornecido',
        connected: 'Conectado',
        activated: 'Ativado',
        components: 'Componentes',
        historic: 'Histórico',
        system: 'Sistema',
        filters: 'Filtros',
        mac: 'Mac',
        locality: 'Localidade',
        all: 'Todos',
        pin: 'PIN',
        status: 'Estado',
        support: 'Suporte',
        videos: 'Vídeos',
        documents: 'Documentos',
        servers: {
          no_results: 'Nenhum servidor foi encontrado',
          tags: {
            servers: 'servidores',
            results: 'resultados',
            page: 'Página ',
            of: ' de ',
            update: 'Actualizar'
          },
          'new': {
            add_servers: 'Adicionar servidores',
            'return': 'Voltar',
            from_file: 'Desde ficheiro',
            select_file: 'Selecione um ficheiro',
            select_file2: 'Selecione um ficheiro',
            from_form: 'Desde formulário',
            success_add2: 'Foram adicionados',
            success_add_f2: 'servidores corretamente',
            success_add1: 'Foi adicionado',
            success_add_f1: 'servidor corretamente',
            failure_add1: 'Não foi possível adicionar o seguinte servidor',
            failure_add2: 'Não foi possível adicionar os seguintes',
            failure_add_f2: 'servidores',
            accept: 'Aceitar',
            success: {
              added: 'Servidor adicionado corretamente',
              added2: 'O servidor foi incluído corretamente na plataforma'
            }
          },
          remove: {
            message: 'Servidor eliminado',
            confirmation_deleted: 'O servidor foi eliminado corretamente'
          }
        },
        terms: {
          accept: 'Aceito as ',
          legal_terms: 'Condições de uso',
          and: ' e a ',
          privacy: 'Política de privacidade',
          publicity: 'Desejo receber comunicações comerciais'
        },
        installation_relation_list: {
          title: 'Instalações',
          no_installations_title: 'Bem-vindo!',
          no_installations_info: 'Para começar a controlar a instalação, adicione um servidor à sua conta.',
          internal_error: 'Erro  interno',
          internal_error_message: 'Não foi possível realizar sua ação. Tente novamente mais tarde',
          actions: {
            edit: 'Editar',
            close: 'Fechar',
            add_device: 'Adicionar DKN WServer'
          }
        },
        add_device: {
          name_placeholder: 'Nome (cozinha, lounge, quarto)',
          mac_placeholder: 'MAC (12:AB:34:CD:45:F0)',
          pin_placeholder: 'PIN',
          choose_installation: 'selecione uma instalação',
          add_device: 'Indique os dados do equipamento'
        },
        add_installation: {
          add_installation: 'Adicionar instalação',
          name_placeholder: 'Nome (casa, escritório, chalé)',
          location_placeholder: 'Localização da instalação',
          postal_code_placeholder: 'Código Postal',
          type: 'Tipo da instalação'
        },
        add_user_to_device: {
        },
        users: {
          title: 'Usuários',
          basic: 'Básico',
          advanced: 'Avançado'
        },
        admin_users: {
          title: 'USUÁRIOS',
          email: 'Email',
          name: 'Nome',
          results: 'Resultados',
          no_results: 'Sem resultados',
          page: 'Página',
          of: 'de',
          device_modal: {
            title: 'Unidades acessíveis pelo usuário',
            no_devices: 'O usuário não pode acessar nenhuma unidade de AC',
            location: 'Localização'
          }
        }
      }
    };
    var isDefined = angular.isDefined,
    isUndefined = angular.isUndefined,
    isNumber = angular.isNumber,
    isObject = angular.isObject,
    isArray = angular.isArray,
    extend = angular.extend,
    toJson = angular.toJson,
    fromJson = angular.fromJson,
    angularLocalStorage = angular.module('LocalStorageModule', [
    ]);
    angularLocalStorage.provider('localStorageService', function () {
      this.prefix = 'ls',
      this.storageType = 'localStorage',
      this.cookie = {
        expiry: 30,
        path: '/'
      },
      this.notify = {
        setItem: !0,
        removeItem: !1
      },
      this.setPrefix = function (e) {
        this.prefix = e
      },
      this.setStorageType = function (e) {
        this.storageType = e
      },
      this.setStorageCookie = function (e, n) {
        this.cookie = {
          expiry: e,
          path: n
        }
      },
      this.setStorageCookieDomain = function (e) {
        this.cookie.domain = e
      },
      this.setNotify = function (e, n) {
        this.notify = {
          setItem: e,
          removeItem: n
        }
      },
      this.$get = [
        '$rootScope',
        '$window',
        '$document',
        '$parse',
        function (e, n, a, t) {
          var i,
          r = this,
          o = r.prefix,
          s = r.cookie,
          l = r.notify,
          c = r.storageType;
          a ? a[0] && (a = a[0])  : a = document,
          '.' !== o.substr( - 1) && (o = o ? o + '.' : '');
          var u = function (e) {
            return o + e
          },
          d = function () {
            try {
              var a = c in n && null !== n[c],
              t = u('__' + Math.round(10000000 * Math.random()));
              return a && (i = n[c], i.setItem(t, ''), i.removeItem(t)),
              a
            } catch (r) {
              return c = 'cookie',
              e.$broadcast('LocalStorageModule.notification.error', r.message),
              !1
            }
          }(),
          m = function (n, a) {
            if (isUndefined(a) ? a = null : (isObject(a) || isArray(a) || isNumber( + a || a)) && (a = toJson(a)), !d || 'cookie' === r.storageType) return d || e.$broadcast('LocalStorageModule.notification.warning', 'LOCAL_STORAGE_NOT_SUPPORTED'),
            l.setItem && e.$broadcast('LocalStorageModule.notification.setitem', {
              key: n,
              newvalue: a,
              storageType: 'cookie'
            }),
            _(n, a);
            try {
              (isObject(a) || isArray(a)) && (a = toJson(a)),
              i && i.setItem(u(n), a),
              l.setItem && e.$broadcast('LocalStorageModule.notification.setitem', {
                key: n,
                newvalue: a,
                storageType: r.storageType
              })
            } catch (t) {
              return e.$broadcast('LocalStorageModule.notification.error', t.message),
              _(n, a)
            }
            return !0
          },
          h = function (n) {
            if (!d || 'cookie' === r.storageType) return d || e.$broadcast('LocalStorageModule.notification.warning', 'LOCAL_STORAGE_NOT_SUPPORTED'),
            b(n);
            var a = i ? i.getItem(u(n))  : null;
            return a && 'null' !== a ? '{' === a.charAt(0) || '[' === a.charAt(0) || isStringNumber(a) ? fromJson(a)  : a : null
          },
          p = function (n) {
            if (!d || 'cookie' === r.storageType) return d || e.$broadcast('LocalStorageModule.notification.warning', 'LOCAL_STORAGE_NOT_SUPPORTED'),
            l.removeItem && e.$broadcast('LocalStorageModule.notification.removeitem', {
              key: n,
              storageType: 'cookie'
            }),
            y(n);
            try {
              i.removeItem(u(n)),
              l.removeItem && e.$broadcast('LocalStorageModule.notification.removeitem', {
                key: n,
                storageType: r.storageType
              })
            } catch (a) {
              return e.$broadcast('LocalStorageModule.notification.error', a.message),
              y(n)
            }
            return !0
          },
          v = function () {
            if (!d) return e.$broadcast('LocalStorageModule.notification.warning', 'LOCAL_STORAGE_NOT_SUPPORTED'),
            !1;
            var n = o.length,
            a = [
            ];
            for (var t in i) if (t.substr(0, n) === o) try {
              a.push(t.substr(n))
            } catch (r) {
              return e.$broadcast('LocalStorageModule.notification.error', r.Description),
              [
              ]
            }
            return a
          },
          g = function (n) {
            n = n || '';
            var a = o.slice(0, - 1),
            t = new RegExp(a + '.' + n);
            if (!d || 'cookie' === r.storageType) return d || e.$broadcast('LocalStorageModule.notification.warning', 'LOCAL_STORAGE_NOT_SUPPORTED'),
            w();
            var s = o.length;
            for (var l in i) if (t.test(l)) try {
              p(l.substr(s))
            } catch (c) {
              return e.$broadcast('LocalStorageModule.notification.error', c.message),
              w()
            }
            return !0
          },
          f = function () {
            try {
              return navigator.cookieEnabled || 'cookie' in a && (a.cookie.length > 0 || (a.cookie = 'test').indexOf.call(a.cookie, 'test') > - 1)
            } catch (n) {
              return e.$broadcast('LocalStorageModule.notification.error', n.message),
              !1
            }
          },
          _ = function (n, t) {
            if (isUndefined(t)) return !1;
            if ((isArray(t) || isObject(t)) && (t = toJson(t)), !f()) return e.$broadcast('LocalStorageModule.notification.error', 'COOKIES_NOT_SUPPORTED'),
            !1;
            try {
              var i = '',
              r = new Date,
              o = '';
              if (null === t ? (r.setTime(r.getTime() + - 86400000), i = '; expires=' + r.toGMTString(), t = '')  : 0 !== s.expiry && (r.setTime(r.getTime() + 24 * s.expiry * 60 * 60 * 1000), i = '; expires=' + r.toGMTString()), n) {
                var l = '; path=' + s.path;
                s.domain && (o = '; domain=' + s.domain),
                a.cookie = u(n) + '=' + encodeURIComponent(t) + i + l + o
              }
            } catch (c) {
              return e.$broadcast('LocalStorageModule.notification.error', c.message),
              !1
            }
            return !0
          },
          b = function (n) {
            if (!f()) return e.$broadcast('LocalStorageModule.notification.error', 'COOKIES_NOT_SUPPORTED'),
            !1;
            for (var t = a.cookie && a.cookie.split(';') || [
            ], i = 0; i < t.length; i++) {
              for (var r = t[i]; ' ' === r.charAt(0); ) r = r.substring(1, r.length);
              if (0 === r.indexOf(u(n) + '=')) {
                var s = decodeURIComponent(r.substring(o.length + n.length + 1, r.length));
                try {
                  var l = JSON.parse(s);
                  return fromJson(l)
                } catch (c) {
                  return s
                }
              }
            }
            return null
          },
          y = function (e) {
            _(e, null)
          },
          w = function () {
            for (var e = null, n = o.length, t = a.cookie.split(';'), i = 0; i < t.length; i++) {
              for (e = t[i]; ' ' === e.charAt(0); ) e = e.substring(1, e.length);
              var r = e.substring(n, e.indexOf('='));
              y(r)
            }
          },
          k = function () {
            return c
          },
          S = function (e, n, a, i) {
            i = i || n;
            var r = h(i);
            return null === r && isDefined(a) ? r = a : isObject(r) && isObject(a) && (r = extend(a, r)),
            t(n).assign(e, r),
            e.$watch(n, function (e) {
              m(i, e)
            }, isObject(e[n]))
          },
          A = function () {
            for (var e = 0, a = n[c], t = 0; t < a.length; t++) 0 === a.key(t).indexOf(o) && e++;
            return e
          };
          return {
            isSupported: d,
            getStorageType: k,
            set: m,
            add: m,
            get: h,
            keys: v,
            remove: p,
            clearAll: g,
            bind: S,
            deriveKey: u,
            length: A,
            cookie: {
              set: _,
              add: _,
              get: b,
              remove: y,
              clearAll: w
            }
          }
        }
      ]
    }),
    function (e, n) {
      'use strict';
      var a = 6,
      t = 4,
      i = 'asc',
      r = 'desc',
      o = '_ng_field_',
      s = '_ng_depth_',
      l = '_ng_hidden_',
      c = '_ng_column_',
      u = /CUSTOM_FILTERS/g,
      d = /COL_FIELD/g,
      m = /DISPLAY_CELL_TEMPLATE/g,
      h = /EDITABLE_CELL_TEMPLATE/g,
      p = /<.+>/;
      e.ngGrid = {
      },
      e.ngGrid.i18n = {
      };
      var v = (angular.module('ngGrid.services', [
      ]), angular.module('ngGrid.directives', [
      ])),
      g = angular.module('ngGrid.filters', [
      ]);
      angular.module('ngGrid', [
        'ngGrid.services',
        'ngGrid.directives',
        'ngGrid.filters'
      ]);
      var f = function (e, n, t, i) {
        if (void 0 === e.selectionProvider.selectedItems) return !0;
        var r,
        o = t.which || t.keyCode,
        s = !1,
        l = !1,
        c = void 0 === e.selectionProvider.lastClickedRow ? 1 : e.selectionProvider.lastClickedRow.rowIndex,
        u = e.columns.filter(function (e) {
          return e.visible
        }),
        d = e.columns.filter(function (e) {
          return e.pinned
        });
        if (e.col && (r = u.indexOf(e.col)), 37 !== o && 38 !== o && 39 !== o && 40 !== o && 9 !== o && 13 !== o) return !0;
        if (e.enableCellSelection) {
          9 === o && t.preventDefault();
          var m = e.showSelectionCheckbox ? 1 === e.col.index : 0 === e.col.index,
          h = 1 === e.$index || 0 === e.$index,
          p = e.$index === e.renderedColumns.length - 1 || e.$index === e.renderedColumns.length - 2,
          v = u.indexOf(e.col) === u.length - 1,
          g = d.indexOf(e.col) === d.length - 1;
          if (37 === o || 9 === o && t.shiftKey) {
            var f = 0;
            m || (r -= 1),
            h ? m && 9 === o && t.shiftKey ? (f = i.$canvas.width(), r = u.length - 1, l = !0)  : f = i.$viewport.scrollLeft() - e.col.width : d.length > 0 && (f = i.$viewport.scrollLeft() - u[r].width),
            i.$viewport.scrollLeft(f)
          } else (39 === o || 9 === o && !t.shiftKey) && (p ? v && 9 === o && !t.shiftKey ? (i.$viewport.scrollLeft(0), r = e.showSelectionCheckbox ? 1 : 0, s = !0)  : i.$viewport.scrollLeft(i.$viewport.scrollLeft() + e.col.width)  : g && i.$viewport.scrollLeft(0), v || (r += 1))
        }
        var _;
        _ = e.configGroups.length > 0 ? i.rowFactory.parsedData.filter(function (e) {
          return !e.isAggRow
        })  : i.filteredRows;
        var b = 0;
        if (0 !== c && (38 === o || 13 === o && t.shiftKey || 9 === o && t.shiftKey && l) ? b = - 1 : c !== _.length - 1 && (40 === o || 13 === o && !t.shiftKey || 9 === o && s) && (b = 1), b) {
          var y = _[c + b];
          y.beforeSelectionChange(y, t) && (y.continueSelection(t), e.$emit('ngGridEventDigestGridParent'), e.selectionProvider.lastClickedRow.renderedRowIndex >= e.renderedRows.length - a - 2 ? i.$viewport.scrollTop(i.$viewport.scrollTop() + e.rowHeight)  : e.selectionProvider.lastClickedRow.renderedRowIndex <= a + 2 && i.$viewport.scrollTop(i.$viewport.scrollTop() - e.rowHeight))
        }
        return e.enableCellSelection && setTimeout(function () {
          e.domAccessProvider.focusCellElement(e, e.renderedColumns.indexOf(u[r]))
        }, 3),
        !1
      };
      String.prototype.trim || (String.prototype.trim = function () {
        return this.replace(/^\s+|\s+$/g, '')
      }),
      Array.prototype.indexOf || (Array.prototype.indexOf = function (e) {
        var n = this.length >>> 0,
        a = Number(arguments[1]) || 0;
        for (a = 0 > a ? Math.ceil(a)  : Math.floor(a), 0 > a && (a += n); n > a; a++) if (a in this && this[a] === e) return a;
        return - 1
      }),
      Array.prototype.filter || (Array.prototype.filter = function (e) {
        var n = Object(this),
        a = n.length >>> 0;
        if ('function' != typeof e) throw new TypeError;
        for (var t = [
        ], i = arguments[1], r = 0; a > r; r++) if (r in n) {
          var o = n[r];
          e.call(i, o, r, n) && t.push(o)
        }
        return t
      }),
      g.filter('checkmark', function () {
        return function (e) {
          return e ? '✔' : '✘'
        }
      }),
      g.filter('ngColumns', function () {
        return function (e) {
          return e.filter(function (e) {
            return !e.isAggCol
          })
        }
      }),
      angular.module('ngGrid.services').factory('$domUtilityService', [
        '$utilityService',
        function (e) {
          var a = {
          },
          t = {
          },
          i = function () {
            var e = n('<div></div>');
            e.appendTo('body'),
            e.height(100).width(100).css('position', 'absolute').css('overflow', 'scroll'),
            e.append('<div style="height: 400px; width: 400px;"></div>'),
            a.ScrollH = e.height() - e[0].clientHeight,
            a.ScrollW = e.width() - e[0].clientWidth,
            e.empty(),
            e.attr('style', ''),
            e.append('<span style="font-family: Verdana, Helvetica, Sans-Serif; font-size: 14px;"><strong>M</strong></span>'),
            a.LetterW = e.children().first().width(),
            e.remove()
          };
          return a.eventStorage = {
          },
          a.AssignGridContainers = function (e, t, i) {
            i.$root = n(t),
            i.$topPanel = i.$root.find('.ngTopPanel'),
            i.$groupPanel = i.$root.find('.ngGroupPanel'),
            i.$headerContainer = i.$topPanel.find('.ngHeaderContainer'),
            e.$headerContainer = i.$headerContainer,
            i.$headerScroller = i.$topPanel.find('.ngHeaderScroller'),
            i.$headers = i.$headerScroller.children(),
            i.$viewport = i.$root.find('.ngViewport'),
            i.$canvas = i.$viewport.find('.ngCanvas'),
            i.$footerPanel = i.$root.find('.ngFooterPanel'),
            e.$watch(function () {
              return i.$viewport.scrollLeft()
            }, function (e) {
              return i.$headerContainer.scrollLeft(e)
            }),
            a.UpdateGridLayout(e, i)
          },
          a.getRealWidth = function (e) {
            var a = 0,
            t = {
              visibility: 'hidden',
              display: 'block'
            },
            i = e.parents().andSelf().not(':visible');
            return n.swap(i[0], t, function () {
              a = e.outerWidth()
            }),
            a
          },
          a.UpdateGridLayout = function (e, n) {
            var t = n.$viewport.scrollTop();
            n.elementDims.rootMaxW = n.$root.width(),
            n.$root.is(':hidden') && (n.elementDims.rootMaxW = a.getRealWidth(n.$root)),
            n.elementDims.rootMaxH = n.$root.height(),
            n.refreshDomSizes(),
            e.adjustScrollTop(t, !0)
          },
          a.numberOfGrids = 0,
          a.BuildStyles = function (t, i, r) {
            var o,
            s = i.config.rowHeight,
            l = i.$styleSheet,
            c = i.gridId,
            u = t.columns,
            d = 0;
            l || (l = n('#' + c), l[0] || (l = n('<style id=\'' + c + '\' type=\'text/css\' rel=\'stylesheet\' />').appendTo(i.$root))),
            l.empty();
            var m = t.totalRowWidth();
            o = '.' + c + ' .ngCanvas { width: ' + m + 'px; }.' + c + ' .ngRow { width: ' + m + 'px; }.' + c + ' .ngCanvas { width: ' + m + 'px; }.' + c + ' .ngHeaderScroller { width: ' + (m + a.ScrollH) + 'px}';
            for (var h = 0; h < u.length; h++) {
              var p = u[h];
              p.visible !== !1 && (o += '.' + c + ' .col' + h + ' { width: ' + p.width + 'px; left: ' + d + 'px; height: ' + s + 'px }.' + c + ' .colt' + h + ' { width: ' + p.width + 'px; }', d += p.width)
            }
            e.isIe ? l[0].styleSheet.cssText = o : l[0].appendChild(document.createTextNode(o)),
            i.$styleSheet = l,
            t.adjustScrollLeft(i.$viewport.scrollLeft()),
            r && a.digest(t)
          },
          a.setColLeft = function (n, a, i) {
            if (i.$styleSheet) {
              var r = t[n.index];
              r || (r = t[n.index] = new RegExp('.col' + n.index + ' { width: [0-9]+px; left: [0-9]+px'));
              var o = i.$styleSheet.html(),
              s = o.replace(r, '.col' + n.index + ' { width: ' + n.width + 'px; left: ' + a + 'px');
              e.isIe ? setTimeout(function () {
                i.$styleSheet.html(s)
              })  : i.$styleSheet.html(s)
            }
          },
          a.setColLeft.immediate = 1,
          a.RebuildGrid = function (e, n) {
            a.UpdateGridLayout(e, n),
            (null == n.config.maintainColumnRatios || n.config.maintainColumnRatios) && n.configureColumnWidths(),
            e.adjustScrollLeft(n.$viewport.scrollLeft()),
            a.BuildStyles(e, n, !0)
          },
          a.digest = function (e) {
            e.$root.$$phase || e.$digest()
          },
          a.ScrollH = 17,
          a.ScrollW = 17,
          a.LetterW = 10,
          i(),
          a
        }
      ]),
      angular.module('ngGrid.services').factory('$sortService', [
        '$parse',
        function (e) {
          var n = {
          };
          return n.colSortFnCache = {
          },
          n.guessSortFn = function (e) {
            var a = typeof e;
            switch (a) {
              case 'number':
                return n.sortNumber;
              case 'boolean':
                return n.sortBool;
              case 'string':
                return e.match(/^[-+]?[\xa3$\xa4]?[\d,.]+%?$/) ? n.sortNumberStr : n.sortAlpha;
              default:
                return '[object Date]' === Object.prototype.toString.call(e) ? n.sortDate : n.basicSort
            }
          },
          n.basicSort = function (e, n) {
            return e === n ? 0 : n > e ? - 1 : 1
          },
          n.sortNumber = function (e, n) {
            return e - n
          },
          n.sortNumberStr = function (e, n) {
            var a,
            t,
            i = !1,
            r = !1;
            return a = parseFloat(e.replace(/[^0-9.-]/g, '')),
            isNaN(a) && (i = !0),
            t = parseFloat(n.replace(/[^0-9.-]/g, '')),
            isNaN(t) && (r = !0),
            i && r ? 0 : i ? 1 : r ? - 1 : a - t
          },
          n.sortAlpha = function (e, n) {
            var a = e.toLowerCase(),
            t = n.toLowerCase();
            return a === t ? 0 : t > a ? - 1 : 1
          },
          n.sortDate = function (e, n) {
            var a = e.getTime(),
            t = n.getTime();
            return a === t ? 0 : t > a ? - 1 : 1
          },
          n.sortBool = function (e, n) {
            return e && n ? 0 : e || n ? e ? 1 : - 1 : 0
          },
          n.sortData = function (a, t) {
            if (t && a) {
              var r,
              o,
              s = a.fields.length,
              l = a.fields,
              c = t.slice(0);
              t.sort(function (t, u) {
                for (var d, m = 0, h = 0; 0 === m && s > h; ) {
                  r = a.columns[h],
                  o = a.directions[h],
                  d = n.getSortFn(r, c);
                  var p = e(l[h]) (t),
                  v = e(l[h]) (u);
                  !p && 0 !== p || !v && 0 !== v ? v || p ? p ? v || (m = - 1)  : m = 1 : m = 0 : m = d(p, v),
                  h++
                }
                return o === i ? m : 0 - m
              })
            }
          },
          n.Sort = function (e, a) {
            n.isSorting || (n.isSorting = !0, n.sortData(e, a), n.isSorting = !1)
          },
          n.getSortFn = function (a, t) {
            var i,
            r;
            if (n.colSortFnCache[a.field]) i = n.colSortFnCache[a.field];
             else if (void 0 !== a.sortingAlgorithm) i = a.sortingAlgorithm,
            n.colSortFnCache[a.field] = a.sortingAlgorithm;
             else {
              if (r = t[0], !r) return i;
              i = n.guessSortFn(e(a.field) (r)),
              i ? n.colSortFnCache[a.field] = i : i = n.sortAlpha
            }
            return i
          },
          n
        }
        ]), angular.module('ngGrid.services').factory('$utilityService', [
          '$parse',
          function (a) {
            var t = /function (.{1,})\(/,
            i = {
              visualLength: function (e) {
                var a = document.getElementById('testDataLength');
                return a || (a = document.createElement('SPAN'), a.id = 'testDataLength', a.style.visibility = 'hidden', document.body.appendChild(a)),
                n(a).css('font', n(e).css('font')),
                n(a).css('font-size', n(e).css('font-size')),
                n(a).css('font-family', n(e).css('font-family')),
                a.innerHTML = n(e).text(),
                a.offsetWidth
              },
              forIn: function (e, n) {
                for (var a in e) e.hasOwnProperty(a) && n(e[a], a)
              },
              evalProperty: function (e, n) {
                return a(n) (e)
              },
              endsWith: function (e, n) {
                return e && n && 'string' == typeof e ? - 1 !== e.indexOf(n, e.length - n.length)  : !1
              },
              isNullOrUndefined: function (e) {
                return void 0 === e || null === e ? !0 : !1
              },
              getElementsByClassName: function (e) {
                for (var n = [
                ], a = new RegExp('\\b' + e + '\\b'), t = document.getElementsByTagName('*'), i = 0; i < t.length; i++) {
                  var r = t[i].className;
                  a.test(r) && n.push(t[i])
                }
                return n
              },
              newId: function () {
                var e = (new Date).getTime();
                return function () {
                  return e += 1
                }
              }(),
              seti18n: function (n, a) {
                var t = e.ngGrid.i18n[a];
                for (var i in t) n.i18n[i] = t[i]
              },
              getInstanceType: function (e) {
                var n = t.exec(e.constructor.toString());
                if (n && n.length > 1) {
                  var a = n[1].replace(/^\s+|\s+$/g, '');
                  return a
                }
                return ''
              },
              ieVersion: function () {
                var e = 3,
                n = document.createElement('div'),
                a = n.getElementsByTagName('i');
                do n.innerHTML = '<!--[if gt IE ' + ++e + ']><i></i><![endif]-->';
                while (a[0]);
                return e > 4 ? e : void 0
              }()
            };
            return n.extend(i, {
              isIe: function () {
                return void 0 !== i.ieVersion
              }()
            }),
            i
          }
        ]); var _ = function (e, n, a, t) {
          this.rowIndex = 0,
          this.offsetTop = this.rowIndex * a,
          this.entity = e,
          this.label = e.gLabel,
          this.field = e.gField,
          this.depth = e.gDepth,
          this.parent = e.parent,
          this.children = e.children,
          this.aggChildren = e.aggChildren,
          this.aggIndex = e.aggIndex,
          this.collapsed = t,
          this.groupInitState = t,
          this.rowFactory = n,
          this.rowHeight = a,
          this.isAggRow = !0,
          this.offsetLeft = 25 * e.gDepth,
          this.aggLabelFilter = e.aggLabelFilter
        }; _.prototype.toggleExpand = function () {
          this.collapsed = this.collapsed ? !1 : !0,
          this.orig && (this.orig.collapsed = this.collapsed),
          this.notifyChildren()
        }, _.prototype.setExpand = function (e) {
          this.collapsed = e,
          this.notifyChildren()
        }, _.prototype.notifyChildren = function () {
          for (var e = Math.max(this.rowFactory.aggCache.length, this.children.length), n = 0; e > n; n++) if (this.aggChildren[n] && (this.aggChildren[n].entity[l] = this.collapsed, this.collapsed && this.aggChildren[n].setExpand(this.collapsed)), this.children[n] && (this.children[n][l] = this.collapsed), n > this.aggIndex && this.rowFactory.aggCache[n]) {
            var a = this.rowFactory.aggCache[n],
            t = 30 * this.children.length;
            a.offsetTop = this.collapsed ? a.offsetTop - t : a.offsetTop + t
          }
          this.rowFactory.renderedChange()
        }, _.prototype.aggClass = function () {
          return this.collapsed ? 'ngAggArrowCollapsed' : 'ngAggArrowExpanded'
        }, _.prototype.totalChildren = function () {
          if (this.aggChildren.length > 0) {
            var e = 0,
            n = function (a) {
              a.aggChildren.length > 0 ? angular.forEach(a.aggChildren, function (e) {
                n(e)
              })  : e += a.children.length
            };
            return n(this),
            e
          }
          return this.children.length
        }, _.prototype.copy = function () {
          var e = new _(this.entity, this.rowFactory, this.rowHeight, this.groupInitState);
          return e.orig = this,
          e
        }; var b = function (e, a, t, o, s, l) {
          var c = this,
          d = e.colDef,
          m = 500,
          h = 0,
          v = null;
          c.colDef = e.colDef,
          c.width = d.width,
          c.groupIndex = 0,
          c.isGroupedBy = !1,
          c.minWidth = d.minWidth ? d.minWidth : 50,
          c.maxWidth = d.maxWidth ? d.maxWidth : 9000,
          c.enableCellEdit = void 0 !== d.enableCellEdit ? d.enableCellEdit : e.enableCellEdit || e.enableCellEditOnFocus,
          c.headerRowHeight = e.headerRowHeight,
          c.displayName = void 0 === d.displayName ? d.field : d.displayName,
          c.index = e.index,
          c.isAggCol = e.isAggCol,
          c.cellClass = d.cellClass,
          c.sortPriority = void 0,
          c.cellFilter = d.cellFilter ? d.cellFilter : '',
          c.field = d.field,
          c.aggLabelFilter = d.cellFilter || d.aggLabelFilter,
          c.visible = l.isNullOrUndefined(d.visible) || d.visible,
          c.sortable = !1,
          c.resizable = !1,
          c.pinnable = !1,
          c.pinned = e.enablePinning && d.pinned,
          c.originalIndex = null == e.originalIndex ? c.index : e.originalIndex,
          c.groupable = l.isNullOrUndefined(d.groupable) || d.groupable,
          e.enableSort && (c.sortable = l.isNullOrUndefined(d.sortable) || d.sortable),
          e.enableResize && (c.resizable = l.isNullOrUndefined(d.resizable) || d.resizable),
          e.enablePinning && (c.pinnable = l.isNullOrUndefined(d.pinnable) || d.pinnable),
          c.sortDirection = void 0,
          c.sortingAlgorithm = d.sortFn,
          c.headerClass = d.headerClass,
          c.cursor = c.sortable ? 'pointer' : 'default',
          c.headerCellTemplate = d.headerCellTemplate || s.get('headerCellTemplate.html'),
          c.cellTemplate = d.cellTemplate || s.get('cellTemplate.html').replace(u, c.cellFilter ? '|' + c.cellFilter : ''),
          c.enableCellEdit && (c.cellEditTemplate = s.get('cellEditTemplate.html'), c.editableCellTemplate = d.editableCellTemplate || s.get('editableCellTemplate.html')),
          d.cellTemplate && !p.test(d.cellTemplate) && (c.cellTemplate = n.ajax({
            type: 'GET',
            url: d.cellTemplate,
            async: !1
          }).responseText),
          c.enableCellEdit && d.editableCellTemplate && !p.test(d.editableCellTemplate) && (c.editableCellTemplate = n.ajax({
            type: 'GET',
            url: d.editableCellTemplate,
            async: !1
          }).responseText),
          d.headerCellTemplate && !p.test(d.headerCellTemplate) && (c.headerCellTemplate = n.ajax({
            type: 'GET',
            url: d.headerCellTemplate,
            async: !1
          }).responseText),
          c.colIndex = function () {
            var e = c.pinned ? 'pinned ' : '';
            return e += 'col' + c.index + ' colt' + c.index,
            c.cellClass && (e += ' ' + c.cellClass),
            e
          },
          c.groupedByClass = function () {
            return c.isGroupedBy ? 'ngGroupedByIcon' : 'ngGroupIcon'
          },
          c.toggleVisible = function () {
            c.visible = !c.visible
          },
          c.showSortButtonUp = function () {
            return c.sortable ? c.sortDirection === r : c.sortable
          },
          c.showSortButtonDown = function () {
            return c.sortable ? c.sortDirection === i : c.sortable
          },
          c.noSortVisible = function () {
            return !c.sortDirection
          },
          c.sort = function (n) {
            if (!c.sortable) return !0;
            var a = c.sortDirection === i ? r : i;
            return c.sortDirection = a,
            e.sortCallback(c, n),
            !1
          },
          c.gripClick = function () {
            h++,
            1 === h ? v = setTimeout(function () {
              h = 0
            }, m)  : (clearTimeout(v), e.resizeOnDataCallback(c), h = 0)
          },
          c.gripOnMouseDown = function (e) {
            return a.isColumnResizing = !0,
            e.ctrlKey && !c.pinned ? (c.toggleVisible(), o.BuildStyles(a, t), !0)  : (e.target.parentElement.style.cursor = 'col-resize', c.startMousePosition = e.clientX, c.origWidth = c.width, n(document).mousemove(c.onMouseMove), n(document).mouseup(c.gripOnMouseUp), !1)
          },
          c.onMouseMove = function (e) {
            var n = e.clientX - c.startMousePosition,
            i = n + c.origWidth;
            return c.width = i < c.minWidth ? c.minWidth : i > c.maxWidth ? c.maxWidth : i,
            a.hasUserChangedGridColumnWidths = !0,
            o.BuildStyles(a, t),
            !1
          },
          c.gripOnMouseUp = function (e) {
            return n(document).off('mousemove', c.onMouseMove),
            n(document).off('mouseup', c.gripOnMouseUp),
            e.target.parentElement.style.cursor = 'default',
            o.digest(a),
            a.isColumnResizing = !1,
            !1
          },
          c.copy = function () {
            var n = new b(e, a, t, o, s);
            return n.isClone = !0,
            n.orig = c,
            n
          },
          c.setVars = function (e) {
            c.orig = e,
            c.width = e.width,
            c.groupIndex = e.groupIndex,
            c.isGroupedBy = e.isGroupedBy,
            c.displayName = e.displayName,
            c.index = e.index,
            c.isAggCol = e.isAggCol,
            c.cellClass = e.cellClass,
            c.cellFilter = e.cellFilter,
            c.field = e.field,
            c.aggLabelFilter = e.aggLabelFilter,
            c.visible = e.visible,
            c.sortable = e.sortable,
            c.resizable = e.resizable,
            c.pinnable = e.pinnable,
            c.pinned = e.pinned,
            c.originalIndex = e.originalIndex,
            c.sortDirection = e.sortDirection,
            c.sortingAlgorithm = e.sortingAlgorithm,
            c.headerClass = e.headerClass,
            c.headerCellTemplate = e.headerCellTemplate,
            c.cellTemplate = e.cellTemplate,
            c.cellEditTemplate = e.cellEditTemplate
          }
        }, y = function (e) {
          this.outerHeight = null,
          this.outerWidth = null,
          n.extend(this, e)
        }, w = function (e) {
          this.previousColumn = null,
          this.grid = e
        }; w.prototype.changeUserSelect = function (e, n) {
          e.css({
            '-webkit-touch-callout': n,
            '-webkit-user-select': n,
            '-khtml-user-select': n,
            '-moz-user-select': 'none' === n ? '-moz-none' : n,
            '-ms-user-select': n,
            'user-select': n
          })
        }, w.prototype.focusCellElement = function (e, n) {
          if (e.selectionProvider.lastClickedRow) {
            var a = void 0 !== n ? n : this.previousColumn,
            t = e.selectionProvider.lastClickedRow.clone ? e.selectionProvider.lastClickedRow.clone.elm : e.selectionProvider.lastClickedRow.elm;
            if (void 0 !== a && t) {
              var i = angular.element(t[0].children).filter(function () {
                return 8 !== this.nodeType
              }),
              r = Math.max(Math.min(e.renderedColumns.length - 1, a), 0);
              this.grid.config.showSelectionCheckbox && angular.element(i[r]).scope() && 0 === angular.element(i[r]).scope().col.index && (r = 1),
              i[r] && i[r].children[1].children[0].focus(),
              this.previousColumn = a
            }
          }
        }, w.prototype.selectionHandlers = function (e, n) {
          var a = !1,
          t = this;
          n.bind('keydown', function (i) {
            if (16 === i.keyCode) return t.changeUserSelect(n, 'none', i),
            !0;
            if (!a) {
              a = !0;
              var r = f(e, n, i, t.grid);
              return a = !1,
              r
            }
            return !0
          }),
          n.bind('keyup', function (e) {
            return 16 === e.keyCode && t.changeUserSelect(n, 'text', e),
            !0
          })
        }; var k = function (a, t, i, r) {
          var o = this;
          o.colToMove = void 0,
          o.groupToMove = void 0,
          o.assignEvents = function () {
            a.config.jqueryUIDraggable && !a.config.enablePinning ? a.$groupPanel.droppable({
              addClasses: !1,
              drop: function (e) {
                o.onGroupDrop(e)
              }
            })  : (a.$groupPanel.on('mousedown', o.onGroupMouseDown).on('dragover', o.dragOver).on('drop', o.onGroupDrop), a.$headerScroller.on('mousedown', o.onHeaderMouseDown).on('dragover', o.dragOver), a.config.enableColumnReordering && !a.config.enablePinning && a.$headerScroller.on('drop', o.onHeaderDrop)),
            t.$watch('renderedColumns', function () {
              r(o.setDraggables)
            })
          },
          o.dragStart = function (e) {
            e.dataTransfer.setData('text', '')
          },
          o.dragOver = function (e) {
            e.preventDefault()
          },
          o.setDraggables = function () {
            if (a.config.jqueryUIDraggable) a.$root.find('.ngHeaderSortColumn').draggable({
              helper: 'clone',
              appendTo: 'body',
              stack: 'div',
              addClasses: !1,
              start: function (e) {
                o.onHeaderMouseDown(e)
              }
            }).droppable({
              drop: function (e) {
                o.onHeaderDrop(e)
              }
            });
             else {
              var e = a.$root.find('.ngHeaderSortColumn');
              angular.forEach(e, function (e) {
                e.className && - 1 !== e.className.indexOf('ngHeaderSortColumn') && (e.setAttribute('draggable', 'true'), e.addEventListener && e.addEventListener('dragstart', o.dragStart))
              }),
              - 1 !== navigator.userAgent.indexOf('MSIE') && a.$root.find('.ngHeaderSortColumn').bind('selectstart', function () {
                return this.dragDrop(),
                !1
              })
            }
          },
          o.onGroupMouseDown = function (e) {
            var t = n(e.target);
            if ('ngRemoveGroup' !== t[0].className) {
              var i = angular.element(t).scope();
              i && (a.config.jqueryUIDraggable || (t.attr('draggable', 'true'), this.addEventListener && this.addEventListener('dragstart', o.dragStart), - 1 !== navigator.userAgent.indexOf('MSIE') && t.bind('selectstart', function () {
                return this.dragDrop(),
                !1
              })), o.groupToMove = {
                header: t,
                groupName: i.group,
                index: i.$index
              })
            } else o.groupToMove = void 0
          },
          o.onGroupDrop = function (e) {
            e.stopPropagation();
            var i,
            r;
            o.groupToMove ? (i = n(e.target).closest('.ngGroupElement'), 'ngGroupPanel' === i.context.className ? (t.configGroups.splice(o.groupToMove.index, 1), t.configGroups.push(o.groupToMove.groupName))  : (r = angular.element(i).scope(), r && o.groupToMove.index !== r.$index && (t.configGroups.splice(o.groupToMove.index, 1), t.configGroups.splice(r.$index, 0, o.groupToMove.groupName))), o.groupToMove = void 0, a.fixGroupIndexes())  : o.colToMove && ( - 1 === t.configGroups.indexOf(o.colToMove.col) && (i = n(e.target).closest('.ngGroupElement'), 'ngGroupPanel' === i.context.className || 'ngGroupPanelDescription ng-binding' === i.context.className ? t.groupBy(o.colToMove.col)  : (r = angular.element(i).scope(), r && t.removeGroup(r.$index))), o.colToMove = void 0),
            t.$$phase || t.$apply()
          },
          o.onHeaderMouseDown = function (e) {
            var a = n(e.target).closest('.ngHeaderSortColumn'),
            t = angular.element(a).scope();
            t && (o.colToMove = {
              header: a,
              col: t.col
            })
          },
          o.onHeaderDrop = function (e) {
            if (o.colToMove && !o.colToMove.col.pinned) {
              var r = n(e.target).closest('.ngHeaderSortColumn'),
              s = angular.element(r).scope();
              if (s) {
                if (o.colToMove.col === s.col) return;
                t.columns.splice(o.colToMove.col.index, 1),
                t.columns.splice(s.col.index, 0, o.colToMove.col),
                a.fixColumnIndexes(),
                o.colToMove = void 0,
                i.digest(t)
              }
            }
          },
          o.assignGridEventHandlers = function () {
            - 1 === a.config.tabIndex ? (a.$viewport.attr('tabIndex', i.numberOfGrids), i.numberOfGrids++)  : a.$viewport.attr('tabIndex', a.config.tabIndex);
            var r;
            n(e).resize(function () {
              clearTimeout(r),
              r = setTimeout(function () {
                i.RebuildGrid(t, a)
              }, 100)
            });
            var o;
            n(a.$root.parent()).on('resize', function () {
              clearTimeout(o),
              o = setTimeout(function () {
                i.RebuildGrid(t, a)
              }, 100)
            })
          },
          o.assignGridEventHandlers(),
          o.assignEvents()
        }, S = function (e, n) {
          e.maxRows = function () {
            var a = Math.max(e.totalServerItems, n.data.length);
            return a
          },
          e.multiSelect = n.config.enableRowSelection && n.config.multiSelect,
          e.selectedItemCount = n.selectedItemCount,
          e.maxPages = function () {
            return Math.ceil(e.maxRows() / e.pagingOptions.pageSize)
          },
          e.pageForward = function () {
            var n = e.pagingOptions.currentPage;
            e.totalServerItems > 0 ? e.pagingOptions.currentPage = Math.min(n + 1, e.maxPages())  : e.pagingOptions.currentPage++
          },
          e.pageBackward = function () {
            var n = e.pagingOptions.currentPage;
            e.pagingOptions.currentPage = Math.max(n - 1, 1)
          },
          e.pageToFirst = function () {
            e.pagingOptions.currentPage = 1
          },
          e.pageToLast = function () {
            var n = e.maxPages();
            e.pagingOptions.currentPage = n
          },
          e.cantPageForward = function () {
            var a = e.pagingOptions.currentPage,
            t = e.maxPages();
            return e.totalServerItems > 0 ? a >= t : n.data.length < 1
          },
          e.cantPageToLast = function () {
            return e.totalServerItems > 0 ? e.cantPageForward()  : !0
          },
          e.cantPageBackward = function () {
            var n = e.pagingOptions.currentPage;
            return 1 >= n
          }
        }, A = function (i, r, o, s, c, u, d, m, h, v, g) {
          var f = {
            aggregateTemplate: void 0,
            afterSelectionChange: function () {
            },
            beforeSelectionChange: function () {
              return !0
            },
            checkboxCellTemplate: void 0,
            checkboxHeaderTemplate: void 0,
            columnDefs: void 0,
            data: [
            ],
            dataUpdated: function () {
            },
            enableCellEdit: !1,
            enableCellEditOnFocus: !1,
            enableCellSelection: !1,
            enableColumnResize: !1,
            enableColumnReordering: !1,
            enableColumnHeavyVirt: !1,
            enablePaging: !1,
            enablePinning: !1,
            enableRowSelection: !0,
            enableSorting: !0,
            enableHighlighting: !1,
            excludeProperties: [
            ],
            filterOptions: {
              filterText: '',
              useExternalFilter: !1
            },
            footerRowHeight: 55,
            footerTemplate: void 0,
            groups: [
            ],
            groupsCollapsedByDefault: !0,
            headerRowHeight: 30,
            headerRowTemplate: void 0,
            jqueryUIDraggable: !1,
            jqueryUITheme: !1,
            keepLastSelected: !0,
            maintainColumnRatios: void 0,
            menuTemplate: void 0,
            multiSelect: !0,
            pagingOptions: {
              pageSizes: [
                250,
                500,
                1000
              ],
              pageSize: 250,
              currentPage: 1
            },
            pinSelectionCheckbox: !1,
            plugins: [
            ],
            primaryKey: void 0,
            rowHeight: 30,
            rowTemplate: void 0,
            selectedItems: [
            ],
            selectWithCheckboxOnly: !1,
            showColumnMenu: !1,
            showFilter: !1,
            showFooter: !1,
            showGroupPanel: !1,
            showSelectionCheckbox: !1,
            sortInfo: {
              fields: [
              ],
              columns: [
              ],
              directions: [
              ]
            },
            tabIndex: - 1,
            totalServerItems: 0,
            useExternalSorting: !1,
            i18n: 'en',
            virtualizationThreshold: 50
          },
          _ = this;
          _.maxCanvasHt = 0,
          _.config = n.extend(f, e.ngGrid.config, r),
          _.config.showSelectionCheckbox = _.config.showSelectionCheckbox && _.config.enableColumnHeavyVirt === !1,
          _.config.enablePinning = _.config.enablePinning && _.config.enableColumnHeavyVirt === !1,
          _.config.selectWithCheckboxOnly = _.config.selectWithCheckboxOnly && _.config.showSelectionCheckbox !== !1,
          _.config.pinSelectionCheckbox = _.config.enablePinning,
          'string' == typeof r.columnDefs && (_.config.columnDefs = i.$eval(r.columnDefs)),
          _.rowCache = [
          ],
          _.rowMap = [
          ],
          _.gridId = 'ng' + d.newId(),
          _.$root = null,
          _.$groupPanel = null,
          _.$topPanel = null,
          _.$headerContainer = null,
          _.$headerScroller = null,
          _.$headers = null,
          _.$viewport = null,
          _.$canvas = null,
          _.rootDim = _.config.gridDim,
          _.data = [
          ],
          _.lateBindColumns = !1,
          _.filteredRows = [
          ],
          _.initTemplates = function () {
            var e = [
              'rowTemplate',
              'aggregateTemplate',
              'headerRowTemplate',
              'checkboxCellTemplate',
              'checkboxHeaderTemplate',
              'menuTemplate',
              'footerTemplate'
            ],
            n = [
            ];
            return angular.forEach(e, function (e) {
              n.push(_.getTemplate(e))
            }),
            g.all(n)
          },
          _.getTemplate = function (e) {
            var n = _.config[e],
            a = _.gridId + e + '.html',
            t = g.defer();
            if (n && !p.test(n)) v.get(n, {
              cache: u
            }).success(function (e) {
              u.put(a, e),
              t.resolve()
            }).error(function () {
              t.reject('Could not load template: ' + n)
            });
             else if (n) u.put(a, n),
            t.resolve();
             else {
              var i = e + '.html';
              u.put(a, u.get(i)),
              t.resolve()
            }
            return t.promise
          },
          'object' == typeof _.config.data && (_.data = _.config.data),
          _.calcMaxCanvasHeight = function () {
            var e;
            return e = _.config.groups.length > 0 ? _.rowFactory.parsedData.filter(function (e) {
              return !e[l]
            }).length * _.config.rowHeight : _.filteredRows.length * _.config.rowHeight
          },
          _.elementDims = {
            scrollW: 0,
            scrollH: 0,
            rowIndexCellW: 25,
            rowSelectedCellW: 25,
            rootMaxW: 0,
            rootMaxH: 0
          },
          _.setRenderedRows = function (e) {
            i.renderedRows.length = e.length;
            for (var n = 0; n < e.length; n++) !i.renderedRows[n] || e[n].isAggRow || i.renderedRows[n].isAggRow ? (i.renderedRows[n] = e[n].copy(), i.renderedRows[n].collapsed = e[n].collapsed, e[n].isAggRow || i.renderedRows[n].setVars(e[n]))  : i.renderedRows[n].setVars(e[n]),
            i.renderedRows[n].rowIndex = e[n].rowIndex,
            i.renderedRows[n].offsetTop = e[n].offsetTop,
            i.renderedRows[n].selected = e[n].selected,
            e[n].renderedRowIndex = n;
            _.refreshDomSizes(),
            i.$emit('ngGridEventRows', e)
          },
          _.minRowsToRender = function () {
            var e = i.viewportDimHeight() || 1;
            return Math.floor(e / _.config.rowHeight)
          },
          _.refreshDomSizes = function () {
            var e = new y;
            e.outerWidth = _.elementDims.rootMaxW,
            e.outerHeight = _.elementDims.rootMaxH,
            _.rootDim = e,
            _.maxCanvasHt = _.calcMaxCanvasHeight()
          },
          _.buildColumnDefsFromData = function () {
            _.config.columnDefs = [
            ];
            var e = _.data[0];
            return e ? void d.forIn(e, function (e, n) {
              - 1 === _.config.excludeProperties.indexOf(n) && _.config.columnDefs.push({
                field: n
              })
            })  : void (_.lateBoundColumns = !0)
          },
          _.buildColumns = function () {
            var e = _.config.columnDefs,
            n = [
            ];
            if (e || (_.buildColumnDefsFromData(), e = _.config.columnDefs), _.config.showSelectionCheckbox && n.push(new b({
              colDef: {
                field: '✔',
                width: _.elementDims.rowSelectedCellW,
                sortable: !1,
                resizable: !1,
                groupable: !1,
                headerCellTemplate: u.get(i.gridId + 'checkboxHeaderTemplate.html'),
                cellTemplate: u.get(i.gridId + 'checkboxCellTemplate.html'),
                pinned: _.config.pinSelectionCheckbox
              },
              index: 0,
              headerRowHeight: _.config.headerRowHeight,
              sortCallback: _.sortData,
              resizeOnDataCallback: _.resizeOnData,
              enableResize: _.config.enableColumnResize,
              enableSort: _.config.enableSorting,
              enablePinning: _.config.enablePinning
            }, i, _, s, u, d)), e.length > 0) {
              var a = _.config.showSelectionCheckbox ? 1 : 0,
              t = i.configGroups.length;
              i.configGroups.length = 0,
              angular.forEach(e, function (e, r) {
                r += a;
                var o = new b({
                  colDef: e,
                  index: r + t,
                  originalIndex: r,
                  headerRowHeight: _.config.headerRowHeight,
                  sortCallback: _.sortData,
                  resizeOnDataCallback: _.resizeOnData,
                  enableResize: _.config.enableColumnResize,
                  enableSort: _.config.enableSorting,
                  enablePinning: _.config.enablePinning,
                  enableCellEdit: _.config.enableCellEdit || _.config.enableCellEditOnFocus
                }, i, _, s, u, d),
                l = _.config.groups.indexOf(e.field);
                - 1 !== l && (o.isGroupedBy = !0, i.configGroups.splice(l, 0, o), o.groupIndex = i.configGroups.length),
                n.push(o)
              }),
              i.columns = n,
              i.configGroups.length > 0 && _.rowFactory.getGrouping(i.configGroups)
            }
          },
          _.configureColumnWidths = function () {
            var e = [
            ],
            n = [
            ],
            a = 0,
            t = 0,
            r = {
            };
            if (angular.forEach(i.columns, function (e, n) {
              if (!d.isNullOrUndefined(e.originalIndex)) {
                var a = e.originalIndex;
                _.config.showSelectionCheckbox && (0 === e.originalIndex && e.visible && (t += 25), a--),
                r[a] = n
              }
            }), angular.forEach(_.config.columnDefs, function (o, s) {
              var l = i.columns[r[s]];
              o.index = s;
              var c,
              u = !1;
              if (d.isNullOrUndefined(o.width) ? o.width = '*' : (u = isNaN(o.width) ? d.endsWith(o.width, '%')  : !1, c = u ? o.width : parseInt(o.width, 10)), isNaN(c) && !i.hasUserChangedGridColumnWidths) {
                if (c = o.width, 'auto' === c) {
                  l.width = l.minWidth,
                  t += l.width;
                  var m = l;
                  return void i.$on('ngGridEventData', function () {
                    _.resizeOnData(m)
                  })
                }
                if ( - 1 !== c.indexOf('*')) return l.visible !== !1 && (a += c.length),
                void e.push(o);
                if (u) return void n.push(o);
                throw 'unable to parse column width, use percentage ("10%","20%", etc...) or "*" to use remaining width of grid'
              }
              l.visible !== !1 && (t += l.width = parseInt(l.width, 10))
            }), n.length > 0) {
              _.config.maintainColumnRatios = _.config.maintainColumnRatios !== !1;
              var o = 0,
              l = 0;
              angular.forEach(n, function (e) {
                var n = i.columns[r[e.index]],
                a = e.width,
                t = parseInt(a.slice(0, - 1), 10) / 100;
                o += t,
                n.visible || (l += t)
              });
              var c = o - l;
              angular.forEach(n, function (e) {
                var n = i.columns[r[e.index]],
                a = e.width,
                s = parseInt(a.slice(0, - 1), 10) / 100;
                s /= l > 0 ? c : o;
                var u = _.rootDim.outerWidth * o;
                n.width = Math.floor(u * s),
                t += n.width
              })
            }
            if (e.length > 0) {
              _.config.maintainColumnRatios = _.config.maintainColumnRatios !== !1;
              var u = _.rootDim.outerWidth - t;
              _.maxCanvasHt > i.viewportDimHeight() && (u -= s.ScrollW);
              var m = Math.floor(u / a);
              angular.forEach(e, function (n, a) {
                var o = i.columns[r[n.index]];
                o.width = m * n.width.length,
                o.visible !== !1 && (t += o.width);
                var l = a === e.length - 1;
                if (l && t < _.rootDim.outerWidth) {
                  var c = _.rootDim.outerWidth - t;
                  _.maxCanvasHt > i.viewportDimHeight() && (c -= s.ScrollW),
                  o.width += c
                }
              })
            }
          },
          _.init = function () {
            return _.initTemplates().then(function () {
              i.selectionProvider = new P(_, i, h),
              i.domAccessProvider = new w(_),
              _.rowFactory = new C(_, i, s, u, d),
              _.searchProvider = new z(i, _, c),
              _.styleProvider = new T(i, _),
              i.$watch('configGroups', function (e) {
                var n = [
                ];
                angular.forEach(e, function (e) {
                  n.push(e.field || e)
                }),
                _.config.groups = n,
                _.rowFactory.filteredRowsChanged(),
                i.$emit('ngGridEventGroups', e)
              }, !0),
              i.$watch('columns', function (e) {
                i.isColumnResizing || s.RebuildGrid(i, _),
                i.$emit('ngGridEventColumns', e)
              }, !0),
              i.$watch(function () {
                return r.i18n
              }, function (e) {
                d.seti18n(i, e)
              }),
              _.maxCanvasHt = _.calcMaxCanvasHeight(),
              _.config.sortInfo.fields && _.config.sortInfo.fields.length > 0 && i.$watch(function () {
                return _.config.sortInfo
              }, function () {
                o.isSorting || (_.getColsFromFields(), _.sortActual(), _.searchProvider.evalFilter(), i.$emit('ngGridEventSorted', _.config.sortInfo))
              }, !0)
            })
          },
          _.resizeOnData = function (e) {
            var a = e.minWidth,
            t = d.getElementsByClassName('col' + e.index);
            angular.forEach(t, function (e, t) {
              var i;
              if (0 === t) {
                var r = n(e).find('.ngHeaderText');
                i = d.visualLength(r) + 10
              } else {
                var o = n(e).find('.ngCellText');
                i = d.visualLength(o) + 10
              }
              i > a && (a = i)
            }),
            e.width = e.longest = Math.min(e.maxWidth, a + 7),
            s.BuildStyles(i, _, !0)
          },
          _.lastSortedColumns = [
          ],
          _.sortData = function (e, a) {
            if (a && a.shiftKey && _.config.sortInfo) {
              var t = _.config.sortInfo.columns.indexOf(e);
              - 1 === t ? (1 === _.config.sortInfo.columns.length && (_.config.sortInfo.columns[0].sortPriority = 1), _.config.sortInfo.columns.push(e), e.sortPriority = _.config.sortInfo.columns.length, _.config.sortInfo.fields.push(e.field), _.config.sortInfo.directions.push(e.sortDirection), _.lastSortedColumns.push(e))  : _.config.sortInfo.directions[t] = e.sortDirection
            } else {
              var r = n.isArray(e);
              _.config.sortInfo.columns.length = 0,
              _.config.sortInfo.fields.length = 0,
              _.config.sortInfo.directions.length = 0;
              var o = function (e) {
                _.config.sortInfo.columns.push(e),
                _.config.sortInfo.fields.push(e.field),
                _.config.sortInfo.directions.push(e.sortDirection),
                _.lastSortedColumns.push(e)
              };
              r ? (_.clearSortingData(), angular.forEach(e, function (e, n) {
                e.sortPriority = n + 1,
                o(e)
              }))  : (_.clearSortingData(e), e.sortPriority = void 0, o(e))
            }
            _.sortActual(),
            _.searchProvider.evalFilter(),
            i.$emit('ngGridEventSorted', _.config.sortInfo)
          },
          _.getColsFromFields = function () {
            _.config.sortInfo.columns ? _.config.sortInfo.columns.length = 0 : _.config.sortInfo.columns = [
            ],
            angular.forEach(i.columns, function (e) {
              var n = _.config.sortInfo.fields.indexOf(e.field);
              return - 1 !== n && (e.sortDirection = _.config.sortInfo.directions[n] || 'asc', _.config.sortInfo.columns[n] = e),
              !1
            })
          },
          _.sortActual = function () {
            if (!_.config.useExternalSorting) {
              var e = _.data.slice(0);
              angular.forEach(e, function (e, n) {
                var a = _.rowMap[n];
                if (void 0 !== a) {
                  var t = _.rowCache[a];
                  void 0 !== t && (e.preSortSelected = t.selected, e.preSortIndex = n)
                }
              }),
              o.Sort(_.config.sortInfo, e),
              angular.forEach(e, function (e, n) {
                _.rowCache[n].entity = e,
                _.rowCache[n].selected = e.preSortSelected,
                _.rowMap[e.preSortIndex] = n,
                delete e.preSortSelected,
                delete e.preSortIndex
              })
            }
          },
          _.clearSortingData = function (e) {
            e ? (angular.forEach(_.lastSortedColumns, function (n) {
              e.index !== n.index && (n.sortDirection = '', n.sortPriority = null)
            }), _.lastSortedColumns[0] = e, _.lastSortedColumns.length = 1)  : (angular.forEach(_.lastSortedColumns, function (e) {
              e.sortDirection = '',
              e.sortPriority = null
            }), _.lastSortedColumns = [
            ])
          },
          _.fixColumnIndexes = function () {
            for (var e = 0; e < i.columns.length; e++) i.columns[e].index = e
          },
          _.fixGroupIndexes = function () {
            angular.forEach(i.configGroups, function (e, n) {
              e.groupIndex = n + 1
            })
          },
          i.elementsNeedMeasuring = !0,
          i.columns = [
          ],
          i.renderedRows = [
          ],
          i.renderedColumns = [
          ],
          i.headerRow = null,
          i.rowHeight = _.config.rowHeight,
          i.jqueryUITheme = _.config.jqueryUITheme,
          i.showSelectionCheckbox = _.config.showSelectionCheckbox,
          i.enableCellSelection = _.config.enableCellSelection,
          i.enableCellEditOnFocus = _.config.enableCellEditOnFocus,
          i.footer = null,
          i.selectedItems = _.config.selectedItems,
          i.multiSelect = _.config.multiSelect,
          i.showFooter = _.config.showFooter,
          i.footerRowHeight = i.showFooter ? _.config.footerRowHeight : 0,
          i.showColumnMenu = _.config.showColumnMenu,
          i.showMenu = !1,
          i.configGroups = [
          ],
          i.gridId = _.gridId,
          i.enablePaging = _.config.enablePaging,
          i.pagingOptions = _.config.pagingOptions,
          i.i18n = {
          },
          d.seti18n(i, _.config.i18n),
          i.adjustScrollLeft = function (e) {
            for (var n = 0, a = 0, t = i.columns.length, r = [
            ], o = !_.config.enableColumnHeavyVirt, l = 0, c = function (e) {
              o ? r.push(e)  : i.renderedColumns[l] ? i.renderedColumns[l].setVars(e)  : i.renderedColumns[l] = e.copy(),
              l++
            }, u = 0; t > u; u++) {
              var d = i.columns[u];
              if (d.visible !== !1) {
                var m = d.width + n;
                if (d.pinned) {
                  c(d);
                  var h = u > 0 ? e + a : e;
                  s.setColLeft(d, h, _),
                  a += d.width
                } else m >= e && n <= e + _.rootDim.outerWidth && c(d);
                n += d.width
              }
            }
            o && (i.renderedColumns = r)
          },
          _.prevScrollTop = 0,
          _.prevScrollIndex = 0,
          i.adjustScrollTop = function (e, n) {
            if (_.prevScrollTop !== e || n) {
              e > 0 && _.$viewport[0].scrollHeight - e <= _.$viewport.outerHeight() && i.$emit('ngGridEventScroll');
              var r,
              o = Math.floor(e / _.config.rowHeight);
              if (_.filteredRows.length > _.config.virtualizationThreshold) {
                if (_.prevScrollTop < e && o < _.prevScrollIndex + t) return;
                if (_.prevScrollTop > e && o > _.prevScrollIndex - t) return;
                r = new M(Math.max(0, o - a), o + _.minRowsToRender() + a)
              } else {
                var s = i.configGroups.length > 0 ? _.rowFactory.parsedData.length : _.data.length;
                r = new M(0, Math.max(s, _.minRowsToRender() + a))
              }
              _.prevScrollTop = e,
              _.rowFactory.UpdateViewableRange(r),
              _.prevScrollIndex = o
            }
          },
          i.toggleShowMenu = function () {
            i.showMenu = !i.showMenu
          },
          i.toggleSelectAll = function (e, n) {
            i.selectionProvider.toggleSelectAll(e, !1, n)
          },
          i.totalFilteredItemsLength = function () {
            return _.filteredRows.length
          },
          i.showGroupPanel = function () {
            return _.config.showGroupPanel
          },
          i.topPanelHeight = function () {
            return _.config.showGroupPanel === !0 ? _.config.headerRowHeight + 32 : _.config.headerRowHeight
          },
          i.viewportDimHeight = function () {
            return Math.max(0, _.rootDim.outerHeight - i.topPanelHeight() - i.footerRowHeight - 2)
          },
          i.groupBy = function (e) {
            if (!(_.data.length < 1) && e.groupable && e.field) {
              e.sortDirection || e.sort({
                shiftKey: i.configGroups.length > 0 ? !0 : !1
              });
              var n = i.configGroups.indexOf(e);
              - 1 === n ? (e.isGroupedBy = !0, i.configGroups.push(e), e.groupIndex = i.configGroups.length)  : i.removeGroup(n),
              _.$viewport.scrollTop(0),
              s.digest(i)
            }
          },
          i.removeGroup = function (e) {
            var n = i.columns.filter(function (n) {
              return n.groupIndex === e + 1
            }) [0];
            n.isGroupedBy = !1,
            n.groupIndex = 0,
            i.columns[e].isAggCol && (i.columns.splice(e, 1), i.configGroups.splice(e, 1), _.fixGroupIndexes()),
            0 === i.configGroups.length && (_.fixColumnIndexes(), s.digest(i)),
            i.adjustScrollLeft(0)
          },
          i.togglePin = function (e) {
            for (var n = e.index, a = 0, t = 0; t < i.columns.length && i.columns[t].pinned; t++) a++;
            e.pinned && (a = Math.max(e.originalIndex, a - 1)),
            e.pinned = !e.pinned,
            i.columns.splice(n, 1),
            i.columns.splice(a, 0, e),
            _.fixColumnIndexes(),
            s.BuildStyles(i, _, !0),
            _.$viewport.scrollLeft(_.$viewport.scrollLeft() - e.width)
          },
          i.totalRowWidth = function () {
            for (var e = 0, n = i.columns, a = 0; a < n.length; a++) n[a].visible !== !1 && (e += n[a].width);
            return e
          },
          i.headerScrollerDim = function () {
            var e = i.viewportDimHeight(),
            n = _.maxCanvasHt,
            a = n > e,
            t = new y;
            return t.autoFitHeight = !0,
            t.outerWidth = i.totalRowWidth(),
            a ? t.outerWidth += _.elementDims.scrollW : n - e <= _.elementDims.scrollH && (t.outerWidth += _.elementDims.scrollW),
            t
          }
        }, M = function (e, n) {
          this.topRow = e,
          this.bottomRow = n
        }, x = function (e, n, a, t, i) {
          this.entity = e,
          this.config = n,
          this.selectionProvider = a,
          this.rowIndex = t,
          this.utils = i,
          this.selected = a.getSelection(e),
          this.cursor = this.config.enableRowSelection ? 'pointer' : 'default',
          this.beforeSelectionChange = n.beforeSelectionChangeCallback,
          this.afterSelectionChange = n.afterSelectionChangeCallback,
          this.offsetTop = this.rowIndex * n.rowHeight,
          this.rowDisplayIndex = 0
        }; x.prototype.setSelection = function (e) {
          this.selectionProvider.setSelection(this, e),
          this.selectionProvider.lastClickedRow = this
        }, x.prototype.continueSelection = function (e) {
          this.selectionProvider.ChangeSelection(this, e)
        }, x.prototype.ensureEntity = function (e) {
          this.entity !== e && (this.entity = e, this.selected = this.selectionProvider.getSelection(this.entity))
        }, x.prototype.toggleSelected = function (e) {
          if (!this.config.enableRowSelection && !this.config.enableCellSelection) return !0;
          var n = e.target || e;
          return 'checkbox' === n.type && 'ngSelectionCell ng-scope' !== n.parentElement.className ? !0 : this.config.selectWithCheckboxOnly && 'checkbox' !== n.type ? (this.selectionProvider.lastClickedRow = this, !0)  : (this.beforeSelectionChange(this, e) && this.continueSelection(e), !1)
        }, x.prototype.alternatingRowClass = function () {
          var e = this.rowIndex % 2 === 0,
          n = {
            ngRow: !0,
            selected: this.selected,
            even: e,
            odd: !e,
            'ui-state-default': this.config.jqueryUITheme && e,
            'ui-state-active': this.config.jqueryUITheme && !e
          };
          return n
        }, x.prototype.getProperty = function (e) {
          return this.utils.evalProperty(this.entity, e)
        }, x.prototype.copy = function () {
          return this.clone = new x(this.entity, this.config, this.selectionProvider, this.rowIndex, this.utils),
          this.clone.isClone = !0,
          this.clone.elm = this.elm,
          this.clone.orig = this,
          this.clone
        }, x.prototype.setVars = function (e) {
          e.clone = this,
          this.entity = e.entity,
          this.selected = e.selected,
          this.orig = e
        }; var C = function (e, n, t, i, r) {
          var u = this;
          u.aggCache = {
          },
          u.parentCache = [
          ],
          u.dataChanged = !0,
          u.parsedData = [
          ],
          u.rowConfig = {
          },
          u.selectionProvider = n.selectionProvider,
          u.rowHeight = 30,
          u.numberOfAggregates = 0,
          u.groupedData = void 0,
          u.rowHeight = e.config.rowHeight,
          u.rowConfig = {
            enableRowSelection: e.config.enableRowSelection,
            rowClasses: e.config.rowClasses,
            selectedItems: n.selectedItems,
            selectWithCheckboxOnly: e.config.selectWithCheckboxOnly,
            beforeSelectionChangeCallback: e.config.beforeSelectionChange,
            afterSelectionChangeCallback: e.config.afterSelectionChange,
            jqueryUITheme: e.config.jqueryUITheme,
            enableCellSelection: e.config.enableCellSelection,
            rowHeight: e.config.rowHeight
          },
          u.renderedRange = new M(0, e.minRowsToRender() + a),
          u.buildEntityRow = function (e, n) {
            return new x(e, u.rowConfig, u.selectionProvider, n, r)
          },
          u.buildAggregateRow = function (n, a) {
            var t = u.aggCache[n.aggIndex];
            return t || (t = new _(n, u, u.rowConfig.rowHeight, e.config.groupsCollapsedByDefault), u.aggCache[n.aggIndex] = t),
            t.rowIndex = a,
            t.offsetTop = a * u.rowConfig.rowHeight,
            t
          },
          u.UpdateViewableRange = function (e) {
            u.renderedRange = e,
            u.renderedChange()
          },
          u.filteredRowsChanged = function () {
            e.lateBoundColumns && e.filteredRows.length > 0 && (e.config.columnDefs = void 0, e.buildColumns(), e.lateBoundColumns = !1, n.$evalAsync(function () {
              n.adjustScrollLeft(0)
            })),
            u.dataChanged = !0,
            e.config.groups.length > 0 && u.getGrouping(e.config.groups),
            u.UpdateViewableRange(u.renderedRange)
          },
          u.renderedChange = function () {
            if (!u.groupedData || e.config.groups.length < 1) return u.renderedChangeNoGroups(),
            void e.refreshDomSizes();
            u.wasGrouped = !0,
            u.parentCache = [
            ];
            var n = 0,
            a = u.parsedData.filter(function (e) {
              return e.isAggRow ? e.parent && e.parent.collapsed ? !1 : !0 : (e[l] || (e.rowIndex = n++), !e[l])
            });
            u.totalRows = a.length;
            for (var t = [
            ], i = u.renderedRange.topRow; i < u.renderedRange.bottomRow; i++) a[i] && (a[i].offsetTop = i * e.config.rowHeight, t.push(a[i]));
            e.setRenderedRows(t)
          },
          u.renderedChangeNoGroups = function () {
            for (var n = [
            ], a = u.renderedRange.topRow; a < u.renderedRange.bottomRow; a++) e.filteredRows[a] && (e.filteredRows[a].rowIndex = a, e.filteredRows[a].offsetTop = a * e.config.rowHeight, n.push(e.filteredRows[a]));
            e.setRenderedRows(n)
          },
          u.fixRowCache = function () {
            var n = e.data.length,
            a = n - e.rowCache.length;
            if (0 > a) e.rowCache.length = e.rowMap.length = n;
             else for (var t = e.rowCache.length; n > t; t++) e.rowCache[t] = e.rowFactory.buildEntityRow(e.data[t], t)
          },
          u.parseGroupData = function (e) {
            if (e.values) for (var n = 0; n < e.values.length; n++) u.parentCache[u.parentCache.length - 1].children.push(e.values[n]),
            u.parsedData.push(e.values[n]);
             else for (var a in e) if (a !== o && a !== s && a !== c && e.hasOwnProperty(a)) {
              var t = u.buildAggregateRow({
                gField: e[o],
                gLabel: a,
                gDepth: e[s],
                isAggRow: !0,
                _ng_hidden_: !1,
                children: [
                ],
                aggChildren: [
                ],
                aggIndex: u.numberOfAggregates,
                aggLabelFilter: e[c].aggLabelFilter
              }, 0);
              u.numberOfAggregates++,
              t.parent = u.parentCache[t.depth - 1],
              t.parent && (t.parent.collapsed = !1, t.parent.aggChildren.push(t)),
              u.parsedData.push(t),
              u.parentCache[t.depth] = t,
              u.parseGroupData(e[a])
            }
          },
          u.getGrouping = function (a) {
            function d(e, n) {
              return e.filter(function (e) {
                return e.field === n
              })
            }
            u.aggCache = [
            ],
            u.numberOfAggregates = 0,
            u.groupedData = {
            };
            for (var m = e.filteredRows, h = a.length, p = n.columns, v = 0; v < m.length; v++) {
              var g = m[v].entity;
              if (!g) return;
              m[v][l] = e.config.groupsCollapsedByDefault;
              for (var f = u.groupedData, _ = 0; _ < a.length; _++) {
                var y = a[_],
                w = d(p, y) [0],
                k = r.evalProperty(g, y);
                k = k ? k.toString()  : 'null',
                f[k] || (f[k] = {
                }),
                f[o] || (f[o] = y),
                f[s] || (f[s] = _),
                f[c] || (f[c] = w),
                f = f[k]
              }
              f.values || (f.values = [
              ]),
              f.values.push(m[v])
            }
            for (var S = 0; S < a.length; S++) !p[S].isAggCol && h >= S && p.splice(0, 0, new b({
              colDef: {
                field: '',
                width: 25,
                sortable: !1,
                resizable: !1,
                headerCellTemplate: '<div class="ngAggHeader"></div>',
                pinned: e.config.pinSelectionCheckbox
              },
              enablePinning: e.config.enablePinning,
              isAggCol: !0,
              headerRowHeight: e.config.headerRowHeight
            }, n, e, t, i, r));
            t.BuildStyles(n, e, !0),
            e.fixColumnIndexes(),
            n.adjustScrollLeft(0),
            u.parsedData.length = 0,
            u.parseGroupData(u.groupedData),
            u.fixRowCache()
          },
          e.config.groups.length > 0 && e.filteredRows.length > 0 && u.getGrouping(e.config.groups)
        }, z = function (e, a, t) {
          var i = this,
          r = [
          ];
          i.extFilter = a.config.filterOptions.useExternalFilter,
          e.showFilter = a.config.showFilter,
          e.filterText = '',
          i.fieldMap = {
          },
          i.evalFilter = function () {
            var e = function (e) {
              for (var n = 0, a = r.length; a > n; n++) {
                var s,
                l = r[n];
                if (!l.column) {
                  for (var c in e) if (e.hasOwnProperty(c)) {
                    var u = i.fieldMap[c.toLowerCase()];
                    if (!u) continue;
                    var d = null,
                    m = null;
                    u && u.cellFilter && (m = u.cellFilter.split(':'), d = t(m[0]));
                    var h = e[c];
                    if (null !== h && void 0 !== h) {
                      if ('function' == typeof d) {
                        var p = d('object' == typeof h ? o(h, u.field)  : h, m[1]).toString();
                        s = l.regex.test(p)
                      } else s = l.regex.test('object' == typeof h ? o(h, u.field).toString()  : h.toString());
                      if (s) return !0
                    }
                  }
                  return !1
                }
                var v = i.fieldMap[l.columnDisplay];
                if (!v) return !1;
                var g = v.cellFilter.split(':'),
                f = v.cellFilter ? t(g[0])  : null,
                _ = e[l.column] || e[v.field.split('.') [0]];
                if (null === _ || void 0 === _) return !1;
                if ('function' == typeof f) {
                  var b = f('object' == typeof _ ? o(_, v.field)  : _, g[1]).toString();
                  s = l.regex.test(b)
                } else s = l.regex.test('object' == typeof _ ? o(_, v.field).toString()  : _.toString());
                if (!s) return !1
              }
              return !0
            };
            a.filteredRows = 0 === r.length ? a.rowCache : a.rowCache.filter(function (n) {
              return e(n.entity)
            });
            for (var n = 0; n < a.filteredRows.length; n++) a.filteredRows[n].rowIndex = n;
            a.rowFactory.filteredRowsChanged()
          };
          var o = function (e, n) {
            if ('object' != typeof e || 'string' != typeof n) return e;
            var a = n.split('.'),
            t = e;
            if (a.length > 1) {
              for (var i = 1, r = a.length; r > i; i++) if (t = t[a[i]], !t) return e;
              return t
            }
            return e
          },
          s = function (e, n) {
            try {
              return new RegExp(e, n)
            } catch (a) {
              return new RegExp(e.replace(/(\^|\$|\(|\)|<|>|\[|\]|\{|\}|\\|\||\.|\*|\+|\?)/g, '\\$1'))
            }
          },
          l = function (e) {
            r = [
            ];
            var a;
            if (a = n.trim(e)) for (var t = a.split(';'), i = 0; i < t.length; i++) {
              var o = t[i].split(':');
              if (o.length > 1) {
                var l = n.trim(o[0]),
                c = n.trim(o[1]);
                l && c && r.push({
                  column: l,
                  columnDisplay: l.replace(/\s+/g, '').toLowerCase(),
                  regex: s(c, 'i')
                })
              } else {
                var u = n.trim(o[0]);
                u && r.push({
                  column: '',
                  regex: s(u, 'i')
                })
              }
            }
          };
          e.$watch(function () {
            return a.config.filterOptions.filterText
          }, function (n) {
            e.filterText = n
          }),
          e.$watch('filterText', function (n) {
            i.extFilter || (e.$emit('ngGridEventFilter', n), l(n), i.evalFilter())
          }),
          i.extFilter || e.$watch('columns', function (e) {
            for (var n = 0; n < e.length; n++) {
              var a = e[n];
              a.field && (i.fieldMap[a.field.split('.') [0].toLowerCase()] = a),
              a.displayName && (i.fieldMap[a.displayName.toLowerCase().replace(/\s+/g, '')] = a)
            }
          })
        }, P = function (e, n, a) {
          var t = this;
          t.multi = e.config.multiSelect,
          t.selectedItems = e.config.selectedItems,
          t.selectedIndex = e.config.selectedIndex,
          t.lastClickedRow = void 0,
          t.ignoreSelectedItemChanges = !1,
          t.pKeyParser = a(e.config.primaryKey),
          t.ChangeSelection = function (a, i) {
            var r = i.which || i.keyCode,
            o = 40 === r || 38 === r;
            if (i && i.shiftKey && !i.keyCode && t.multi && e.config.enableRowSelection) {
              if (t.lastClickedRow) {
                var s;
                s = n.configGroups.length > 0 ? e.rowFactory.parsedData.filter(function (e) {
                  return !e.isAggRow
                })  : e.filteredRows;
                var l = a.rowIndex,
                c = t.lastClickedRowIndex;
                if (l === c) return !1;
                c > l ? (l ^= c, c = l ^ c, l ^= c, l--)  : c++;
                for (var u = [
                ]; l >= c; c++) u.push(s[c]);
                if (u[u.length - 1].beforeSelectionChange(u, i)) {
                  for (var d = 0; d < u.length; d++) {
                    var m = u[d],
                    h = m.selected;
                    m.selected = !h,
                    m.clone && (m.clone.selected = m.selected);
                    var p = t.selectedItems.indexOf(m.entity);
                    - 1 === p ? t.selectedItems.push(m.entity)  : t.selectedItems.splice(p, 1)
                  }
                  u[u.length - 1].afterSelectionChange(u, i)
                }
                return t.lastClickedRow = a,
                t.lastClickedRowIndex = a.rowIndex,
                !0
              }
            } else t.multi ? (!i.keyCode || o && !e.config.selectWithCheckboxOnly) && t.setSelection(a, !a.selected)  : t.lastClickedRow === a ? t.setSelection(t.lastClickedRow, e.config.keepLastSelected ? !0 : !a.selected)  : (t.lastClickedRow && t.setSelection(t.lastClickedRow, !1), t.setSelection(a, !a.selected));
            return t.lastClickedRow = a,
            t.lastClickedRowIndex = a.rowIndex,
            !0
          },
          t.getSelection = function (n) {
            var a = !1;
            if (e.config.primaryKey) {
              var i = t.pKeyParser(n);
              angular.forEach(t.selectedItems, function (e) {
                i === t.pKeyParser(e) && (a = !0)
              })
            } else a = - 1 !== t.selectedItems.indexOf(n);
            return a
          },
          t.setSelection = function (n, a) {
            if (e.config.enableRowSelection) {
              if (a) - 1 === t.selectedItems.indexOf(n.entity) && (!t.multi && t.selectedItems.length > 0 && t.toggleSelectAll(!1, !0), t.selectedItems.push(n.entity));
               else {
                var i = t.selectedItems.indexOf(n.entity);
                - 1 !== i && t.selectedItems.splice(i, 1)
              }
              n.selected = a,
              n.orig && (n.orig.selected = a),
              n.clone && (n.clone.selected = a),
              n.afterSelectionChange(n)
            }
          },
          t.toggleSelectAll = function (n, a, i) {
            var r = i ? e.filteredRows : e.rowCache;
            if (a || e.config.beforeSelectionChange(r, n)) {
              var o = t.selectedItems.length;
              o > 0 && (t.selectedItems.length = 0);
              for (var s = 0; s < r.length; s++) r[s].selected = n,
              r[s].clone && (r[s].clone.selected = n),
              n && t.selectedItems.push(r[s].entity);
              a || e.config.afterSelectionChange(r, n)
            }
          }
        }, T = function (e, n) {
          e.headerCellStyle = function (e) {
            return {
              height: e.headerRowHeight + 'px'
            }
          },
          e.rowStyle = function (n) {
            var a = {
              top: n.offsetTop + 'px',
              height: e.rowHeight + 'px'
            };
            return n.isAggRow && (a.left = n.offsetLeft),
            a
          },
          e.canvasStyle = function () {
            return {
              height: n.maxCanvasHt + 'px'
            }
          },
          e.headerScrollerStyle = function () {
            return {
              height: n.config.headerRowHeight + 'px'
            }
          },
          e.topPanelStyle = function () {
            return {
              width: n.rootDim.outerWidth + 'px',
              height: e.topPanelHeight() + 'px'
            }
          },
          e.headerStyle = function () {
            return {
              width: n.rootDim.outerWidth + 'px',
              height: n.config.headerRowHeight + 'px'
            }
          },
          e.groupPanelStyle = function () {
            return {
              width: n.rootDim.outerWidth + 'px',
              height: '32px'
            }
          },
          e.viewportStyle = function () {
            return {
              width: n.rootDim.outerWidth + 'px',
              height: e.viewportDimHeight() + 'px'
            }
          },
          e.footerStyle = function () {
            return {
              width: n.rootDim.outerWidth + 'px',
              height: e.footerRowHeight + 'px'
            }
          }
        }; v.directive('ngCellHasFocus', [
          '$domUtilityService',
          function (e) {
            var n = function (n) {
              n.isFocused = !0,
              e.digest(n),
              n.$broadcast('ngGridEventStartCellEdit'),
              n.$on('ngGridEventEndCellEdit', function () {
                n.isFocused = !1,
                e.digest(n)
              })
            };
            return function (e, a) {
              var t = !1,
              i = !1;
              e.editCell = function () {
                e.enableCellEditOnFocus || setTimeout(function () {
                  n(e, a)
                }, 0)
              },
              a.bind('mousedown', function () {
                return e.enableCellEditOnFocus ? i = !0 : a.focus(),
                !0
              }),
              a.bind('click', function (t) {
                e.enableCellEditOnFocus && (t.preventDefault(), i = !1, n(e, a))
              }),
              a.bind('focus', function () {
                return t = !0,
                e.enableCellEditOnFocus && !i && n(e, a),
                !0
              }),
              a.bind('blur', function () {
                return t = !1,
                !0
              }),
              a.bind('keydown', function (i) {
                return e.enableCellEditOnFocus || (t && 37 !== i.keyCode && 38 !== i.keyCode && 39 !== i.keyCode && 40 !== i.keyCode && 9 !== i.keyCode && !i.shiftKey && 13 !== i.keyCode && n(e, a), i.shiftKey && i.keyCode >= 65 && i.keyCode <= 90 && n(e, a), 27 === i.keyCode && a.focus()),
                !0
              })
            }
          }
        ]), v.directive('ngCellText', function () {
          return function (e, n) {
            n.bind('mouseover', function (e) {
              e.preventDefault(),
              n.css({
                cursor: 'text'
              })
            }),
            n.bind('mouseleave', function (e) {
              e.preventDefault(),
              n.css({
                cursor: 'default'
              })
            })
          }
        }), v.directive('ngCell', [
          '$compile',
          '$domUtilityService',
          function (e, n) {
            var a = {
              scope: !1,
              compile: function () {
                return {
                  pre: function (n, a) {
                    var t,
                    i = n.col.cellTemplate.replace(d, 'row.entity.' + n.col.field);
                    n.col.enableCellEdit ? (t = n.col.cellEditTemplate, t = t.replace(m, i), t = t.replace(h, n.col.editableCellTemplate.replace(d, 'row.entity.' + n.col.field)))  : t = i;
                    var r = e(t) (n);
                    n.enableCellSelection && - 1 === r[0].className.indexOf('ngSelectionCell') && (r[0].setAttribute('tabindex', 0), r.addClass('ngCellElement')),
                    a.append(r)
                  },
                  post: function (e, a) {
                    e.enableCellSelection && e.domAccessProvider.selectionHandlers(e, a),
                    e.$on('ngGridEventDigestCell', function () {
                      n.digest(e)
                    })
                  }
                }
              }
            };
            return a
          }
        ]), v.directive('ngEditCellIf', [
          function () {
            return {
              transclude: 'element',
              priority: 1000,
              terminal: !0,
              restrict: 'A',
              compile: function (e, n, a) {
                return function (e, n, t) {
                  var i,
                  r;
                  e.$watch(t.ngEditCellIf, function (t) {
                    i && (i.remove(), i = void 0),
                    r && (r.$destroy(), r = void 0),
                    t && (r = e.$new(), a(r, function (e) {
                      i = e,
                      n.after(e)
                    }))
                  })
                }
              }
            }
          }
        ]), v.directive('ngGridFooter', [
          '$compile',
          '$templateCache',
          function (e, n) {
            var a = {
              scope: !1,
              compile: function () {
                return {
                  pre: function (a, t) {
                    0 === t.children().length && t.append(e(n.get(a.gridId + 'footerTemplate.html')) (a))
                  }
                }
              }
            };
            return a
          }
        ]), v.directive('ngGridMenu', [
          '$compile',
          '$templateCache',
          function (e, n) {
            var a = {
              scope: !1,
              compile: function () {
                return {
                  pre: function (a, t) {
                    0 === t.children().length && t.append(e(n.get(a.gridId + 'menuTemplate.html')) (a))
                  }
                }
              }
            };
            return a
          }
        ]), v.directive('ngGrid', [
          '$compile',
          '$filter',
          '$templateCache',
          '$sortService',
          '$domUtilityService',
          '$utilityService',
          '$timeout',
          '$parse',
          '$http',
          '$q',
          function (e, a, t, i, r, o, s, l, c, u) {
            var d = {
              scope: !0,
              compile: function () {
                return {
                  pre: function (d, m, h) {
                    var p = n(m),
                    v = d.$eval(h.ngGrid);
                    v.gridDim = new y({
                      outerHeight: n(p).height(),
                      outerWidth: n(p).width()
                    });
                    var g = new A(d, v, i, r, a, t, o, s, l, c, u);
                    return g.init().then(function () {
                      if ('string' == typeof v.columnDefs ? d.$parent.$watch(v.columnDefs, function (e) {
                        return e ? (g.lateBoundColumns = !1, d.columns = [
                        ], g.config.columnDefs = e, g.buildColumns(), g.eventProvider.assignEvents(), void r.RebuildGrid(d, g))  : (g.refreshDomSizes(), void g.buildColumns())
                      }, !0)  : g.buildColumns(), 'string' == typeof v.totalServerItems ? d.$parent.$watch(v.totalServerItems, function (e) {
                        d.totalServerItems = angular.isDefined(e) ? e : 0
                      })  : d.totalServerItems = 0, 'string' == typeof v.data) {
                        var a = function (e) {
                          g.data = n.extend([], e),
                          g.rowFactory.fixRowCache(),
                          angular.forEach(g.data, function (e, n) {
                            var a = g.rowMap[n] || n;
                            g.rowCache[a] && g.rowCache[a].ensureEntity(e),
                            g.rowMap[a] = n
                          }),
                          g.searchProvider.evalFilter(),
                          g.configureColumnWidths(),
                          g.refreshDomSizes(),
                          g.config.sortInfo.fields.length > 0 && (g.getColsFromFields(), g.sortActual(), g.searchProvider.evalFilter(), d.$emit('ngGridEventSorted', g.config.sortInfo)),
                          d.$emit('ngGridEventData', g.gridId)
                        };
                        d.$parent.$watch(v.data, a),
                        d.$parent.$watch(v.data + '.length', function () {
                          a(d.$eval(v.data))
                        })
                      }
                      return g.footerController = new S(d, g),
                      m.addClass('ngGrid').addClass(g.gridId.toString()),
                      v.enableHighlighting || m.addClass('unselectable'),
                      v.jqueryUITheme && m.addClass('ui-widget'),
                      m.append(e(t.get('gridTemplate.html')) (d)),
                      r.AssignGridContainers(d, m, g),
                      g.eventProvider = new k(g, d, r, s),
                      v.selectRow = function (e, n) {
                        g.rowCache[e] && (g.rowCache[e].clone && g.rowCache[e].clone.setSelection(n ? !0 : !1), g.rowCache[e].setSelection(n ? !0 : !1))
                      },
                      v.selectItem = function (e, n) {
                        v.selectRow(g.rowMap[e], n)
                      },
                      v.selectAll = function (e) {
                        d.toggleSelectAll(e)
                      },
                      v.selectVisible = function (e) {
                        d.toggleSelectAll(e, !0)
                      },
                      v.groupBy = function (e) {
                        if (e) d.groupBy(d.columns.filter(function (n) {
                          return n.field === e
                        }) [0]);
                         else {
                          var a = n.extend(!0, [
                          ], d.configGroups);
                          angular.forEach(a, d.groupBy)
                        }
                      },
                      v.sortBy = function (e) {
                        var n = d.columns.filter(function (n) {
                          return n.field === e
                        }) [0];
                        n && n.sort()
                      },
                      v.gridId = g.gridId,
                      v.ngGrid = g,
                      v.$gridScope = d,
                      v.$gridServices = {
                        SortService: i,
                        DomUtilityService: r,
                        UtilityService: o
                      },
                      d.$on('ngGridEventDigestGrid', function () {
                        r.digest(d.$parent)
                      }),
                      d.$on('ngGridEventDigestGridParent', function () {
                        r.digest(d.$parent)
                      }),
                      d.$evalAsync(function () {
                        d.adjustScrollLeft(0)
                      }),
                      angular.forEach(v.plugins, function (e) {
                        'function' == typeof e && (e = new e),
                        e.init(d.$new(), g, v.$gridServices),
                        v.plugins[o.getInstanceType(e)] = e
                      }),
                      'function' == typeof v.init && v.init(g, d),
                      null
                    })
                  }
                }
              }
            };
            return d
          }
        ]), v.directive('ngHeaderCell', [
          '$compile',
          function (e) {
            var n = {
              scope: !1,
              compile: function () {
                return {
                  pre: function (n, a) {
                    a.append(e(n.col.headerCellTemplate) (n))
                  }
                }
              }
            };
            return n
          }
        ]), v.directive('ngInput', [
          function () {
            return {
              require: 'ngModel',
              link: function (e, n, a, t) {
                var i,
                r = e.$watch('ngModel', function () {
                  i = t.$modelValue,
                  r()
                });
                n.bind('keydown', function (a) {
                  switch (a.keyCode) {
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                      a.stopPropagation();
                      break;
                    case 27:
                      e.$$phase || e.$apply(function () {
                        t.$setViewValue(i),
                        n.blur()
                      });
                      break;
                    case 13:
                      (e.enableCellEditOnFocus && e.totalFilteredItemsLength() - 1 > e.row.rowIndex && e.row.rowIndex > 0 || e.enableCellEdit) && n.blur()
                  }
                  return !0
                }), n.bind('click', function (e) {
                  e.stopPropagation()
                }), n.bind('mousedown', function (e) {
                  e.stopPropagation()
                }), e.$on('ngGridEventStartCellEdit', function () {
                  n.focus(),
                  n.select()
                }), angular.element(n).bind('blur', function () {
                  e.$emit('ngGridEventEndCellEdit')
                })
              }
            }
          }
          ]), v.directive('ngRow', [
            '$compile',
            '$domUtilityService',
            '$templateCache',
            function (e, n, a) {
              var t = {
                scope: !1,
                compile: function () {
                  return {
                    pre: function (t, i) {
                      if (t.row.elm = i, t.row.clone && (t.row.clone.elm = i), t.row.isAggRow) {
                        var r = a.get(t.gridId + 'aggregateTemplate.html');
                        r = t.row.aggLabelFilter ? r.replace(u, '| ' + t.row.aggLabelFilter)  : r.replace(u, ''),
                        i.append(e(r) (t))
                      } else i.append(e(a.get(t.gridId + 'rowTemplate.html')) (t));
                      t.$on('ngGridEventDigestRow', function () {
                        n.digest(t)
                      })
                    }
                  }
                }
              };
              return t
            }
          ]), v.directive('ngViewport', [
            function () {
              return function (e, n) {
                var a,
                t,
                i = 0;
                n.bind('scroll', function (n) {
                  var r = n.target.scrollLeft,
                  o = n.target.scrollTop;
                  return e.$headerContainer && e.$headerContainer.scrollLeft(r),
                  e.adjustScrollLeft(r),
                  e.adjustScrollTop(o),
                  e.$root.$$phase || e.$digest(),
                  t = r,
                  i = o,
                  a = !1,
                  !0
                }),
                n.bind('mousewheel DOMMouseScroll', function () {
                  return a = !0,
                  n.focus && n.focus(),
                  !0
                }),
                e.enableCellSelection || e.domAccessProvider.selectionHandlers(e, n)
              }
            }
          ]), e.ngGrid.i18n.da = {
            ngAggregateLabel: 'artikler',
            ngGroupPanelDescription: 'Grupér rækker udfra en kolonne ved at trække dens overskift hertil.',
            ngSearchPlaceHolder: 'Søg...',
            ngMenuText: 'Vælg kolonner:',
            ngShowingItemsLabel: 'Viste rækker:',
            ngTotalItemsLabel: 'Rækker totalt:',
            ngSelectedItemsLabel: 'Valgte rækker:',
            ngPageSizeLabel: 'Side størrelse:',
            ngPagerFirstTitle: 'Første side',
            ngPagerNextTitle: 'Næste side',
            ngPagerPrevTitle: 'Forrige side',
            ngPagerLastTitle: 'Sidste side'
          }, e.ngGrid.i18n.de = {
            ngAggregateLabel: 'artikel',
            ngGroupPanelDescription: 'Ziehen Sie eine Spaltenüberschrift hier und legen Sie es der Gruppe nach dieser Spalte.',
            ngSearchPlaceHolder: 'Suche...',
            ngMenuText: 'Spalten auswählen:',
            ngShowingItemsLabel: 'Zeige Artikel:',
            ngTotalItemsLabel: 'Meiste Artikel:',
            ngSelectedItemsLabel: 'Ausgewählte Artikel:',
            ngPageSizeLabel: 'Größe Seite:',
            ngPagerFirstTitle: 'Erste Page',
            ngPagerNextTitle: 'Nächste Page',
            ngPagerPrevTitle: 'Vorherige Page',
            ngPagerLastTitle: 'Letzte Page'
          }, e.ngGrid.i18n.en = {
            ngAggregateLabel: 'items',
            ngGroupPanelDescription: 'Drag a column header here and drop it to group by that column.',
            ngSearchPlaceHolder: 'Search...',
            ngMenuText: 'Choose Columns:',
            ngShowingItemsLabel: 'Showing Items:',
            ngTotalItemsLabel: 'Total Items:',
            ngSelectedItemsLabel: 'Selected Items:',
            ngPageSizeLabel: 'Page Size:',
            ngPagerFirstTitle: 'First Page',
            ngPagerNextTitle: 'Next Page',
            ngPagerPrevTitle: 'Previous Page',
            ngPagerLastTitle: 'Last Page'
          }, e.ngGrid.i18n.es = {
            ngAggregateLabel: 'Artículos',
            ngGroupPanelDescription: 'Arrastre un encabezado de columna aquí y soltarlo para agrupar por esa columna.',
            ngSearchPlaceHolder: 'Buscar...',
            ngMenuText: 'Elegir columnas:',
            ngShowingItemsLabel: 'Artículos Mostrando:',
            ngTotalItemsLabel: 'Artículos Totales:',
            ngSelectedItemsLabel: 'Artículos Seleccionados:',
            ngPageSizeLabel: 'Tamaño de Página:',
            ngPagerFirstTitle: 'Primera Página',
            ngPagerNextTitle: 'Página Siguiente',
            ngPagerPrevTitle: 'Página Anterior',
            ngPagerLastTitle: 'Última Página'
          }, e.ngGrid.i18n.fr = {
            ngAggregateLabel: 'articles',
            ngGroupPanelDescription: 'Faites glisser un en-tête de colonne ici et déposez-le vers un groupe par cette colonne.',
            ngSearchPlaceHolder: 'Recherche...',
            ngMenuText: 'Choisir des colonnes:',
            ngShowingItemsLabel: 'Articles Affichage des:',
            ngTotalItemsLabel: 'Nombre total d\'articles:',
            ngSelectedItemsLabel: 'Éléments Articles:',
            ngPageSizeLabel: 'Taille de page:',
            ngPagerFirstTitle: 'Première page',
            ngPagerNextTitle: 'Page Suivante',
            ngPagerPrevTitle: 'Page précédente',
            ngPagerLastTitle: 'Dernière page'
          }, e.ngGrid.i18n['pt-br'] = {
            ngAggregateLabel: 'items',
            ngGroupPanelDescription: 'Arraste e solte uma coluna aqui para agrupar por essa coluna',
            ngSearchPlaceHolder: 'Procurar...',
            ngMenuText: 'Selecione as colunas:',
            ngShowingItemsLabel: 'Mostrando os Items:',
            ngTotalItemsLabel: 'Total de Items:',
            ngSelectedItemsLabel: 'Items Selecionados:',
            ngPageSizeLabel: 'Tamanho da Página:',
            ngPagerFirstTitle: 'Primeira Página',
            ngPagerNextTitle: 'Próxima Página',
            ngPagerPrevTitle: 'Página Anterior',
            ngPagerLastTitle: 'Última Página'
          }, e.ngGrid.i18n['zh-cn'] = {
            ngAggregateLabel: '条目',
            ngGroupPanelDescription: '拖曳表头到此处以进行分组',
            ngSearchPlaceHolder: '搜索...',
            ngMenuText: '数据分组与选择列：',
            ngShowingItemsLabel: '当前显示条目：',
            ngTotalItemsLabel: '条目总数：',
            ngSelectedItemsLabel: '选中条目：',
            ngPageSizeLabel: '每页显示数：',
            ngPagerFirstTitle: '回到首页',
            ngPagerNextTitle: '下一页',
            ngPagerPrevTitle: '上一页',
            ngPagerLastTitle: '前往尾页'
          }, e.ngGrid.i18n['zh-tw'] = {
            ngAggregateLabel: '筆',
            ngGroupPanelDescription: '拖拉表頭到此處以進行分組',
            ngSearchPlaceHolder: '搜尋...',
            ngMenuText: '選擇欄位：',
            ngShowingItemsLabel: '目前顯示筆數：',
            ngTotalItemsLabel: '總筆數：',
            ngSelectedItemsLabel: '選取筆數：',
            ngPageSizeLabel: '每頁顯示：',
            ngPagerFirstTitle: '第一頁',
            ngPagerNextTitle: '下一頁',
            ngPagerPrevTitle: '上一頁',
            ngPagerLastTitle: '最後頁'
          }, angular.module('ngGrid').run(['$templateCache',
          function (e) {
            e.put('aggregateTemplate.html', '<div ng-click="row.toggleExpand()" ng-style="rowStyle(row)" class="ngAggregate">    <span class="ngAggregateText">{{row.label CUSTOM_FILTERS}} ({{row.totalChildren()}} {{AggItemsLabel}})</span>    <div class="{{row.aggClass()}}"></div></div>'),
            e.put('cellEditTemplate.html', '<div ng-cell-has-focus ng-dblclick="editCell()">\t<div ng-edit-cell-if="!isFocused">\t\t\tDISPLAY_CELL_TEMPLATE\t</div>\t<div ng-edit-cell-if="isFocused">\t\tEDITABLE_CELL_TEMPLATE\t</div></div>'),
            e.put('cellTemplate.html', '<div class="ngCellText" ng-class="col.colIndex()"><span ng-cell-text>{{COL_FIELD CUSTOM_FILTERS}}</span></div>'),
            e.put('checkboxCellTemplate.html', '<div class="ngSelectionCell"><input tabindex="-1" class="ngSelectionCheckbox" type="checkbox" ng-checked="row.selected" /></div>'),
            e.put('checkboxHeaderTemplate.html', '<input class="ngSelectionHeader" type="checkbox" ng-show="multiSelect" ng-model="allSelected" ng-change="toggleSelectAll(allSelected, true)"/>'),
            e.put('editableCellTemplate.html', '<input ng-class="\'colt\' + col.index" ng-input="COL_FIELD" ng-model="COL_FIELD" />'),
            e.put('footerTemplate.html', '<div ng-show="showFooter" class="ngFooterPanel" ng-class="{\'ui-widget-content\': jqueryUITheme, \'ui-corner-bottom\': jqueryUITheme}" ng-style="footerStyle()">    <div class="ngTotalSelectContainer" >        <div class="ngFooterTotalItems" ng-class="{\'ngNoMultiSelect\': !multiSelect}" >            <span class="ngLabel">{{i18n.ngTotalItemsLabel}} {{maxRows()}}</span><span ng-show="filterText.length > 0" class="ngLabel">({{i18n.ngShowingItemsLabel}} {{totalFilteredItemsLength()}})</span>        </div>        <div class="ngFooterSelectedItems" ng-show="multiSelect">            <span class="ngLabel">{{i18n.ngSelectedItemsLabel}} {{selectedItems.length}}</span>        </div>    </div>    <div class="ngPagerContainer" style="float: right; margin-top: 10px;" ng-show="enablePaging" ng-class="{\'ngNoMultiSelect\': !multiSelect}">        <div style="float:left; margin-right: 10px;" class="ngRowCountPicker">            <span style="float: left; margin-top: 3px;" class="ngLabel">{{i18n.ngPageSizeLabel}}</span>            <select style="float: left;height: 27px; width: 100px" ng-model="pagingOptions.pageSize" >                <option ng-repeat="size in pagingOptions.pageSizes">{{size}}</option>            </select>        </div>        <div style="float:left; margin-right: 10px; line-height:25px;" class="ngPagerControl" style="float: left; min-width: 135px;">            <button class="ngPagerButton" ng-click="pageToFirst()" ng-disabled="cantPageBackward()" title="{{i18n.ngPagerFirstTitle}}"><div class="ngPagerFirstTriangle"><div class="ngPagerFirstBar"></div></div></button>            <button class="ngPagerButton" ng-click="pageBackward()" ng-disabled="cantPageBackward()" title="{{i18n.ngPagerPrevTitle}}"><div class="ngPagerFirstTriangle ngPagerPrevTriangle"></div></button>            <input class="ngPagerCurrent" min="1" max="{{maxPages()}}" type="number" style="width:50px; height: 24px; margin-top: 1px; padding: 0 4px;" ng-model="pagingOptions.currentPage"/>            <button class="ngPagerButton" ng-click="pageForward()" ng-disabled="cantPageForward()" title="{{i18n.ngPagerNextTitle}}"><div class="ngPagerLastTriangle ngPagerNextTriangle"></div></button>            <button class="ngPagerButton" ng-click="pageToLast()" ng-disabled="cantPageToLast()" title="{{i18n.ngPagerLastTitle}}"><div class="ngPagerLastTriangle"><div class="ngPagerLastBar"></div></div></button>        </div>    </div></div>'),
            e.put('gridTemplate.html', '<div class="ngTopPanel" ng-class="{\'ui-widget-header\':jqueryUITheme, \'ui-corner-top\': jqueryUITheme}" ng-style="topPanelStyle()">    <div class="ngGroupPanel" ng-show="showGroupPanel()" ng-style="groupPanelStyle()">        <div class="ngGroupPanelDescription" ng-show="configGroups.length == 0">{{i18n.ngGroupPanelDescription}}</div>        <ul ng-show="configGroups.length > 0" class="ngGroupList">            <li class="ngGroupItem" ng-repeat="group in configGroups">                <span class="ngGroupElement">                    <span class="ngGroupName">{{group.displayName}}                        <span ng-click="removeGroup($index)" class="ngRemoveGroup">x</span>                    </span>                    <span ng-hide="$last" class="ngGroupArrow"></span>                </span>            </li>        </ul>    </div>    <div class="ngHeaderContainer" ng-style="headerStyle()">        <div class="ngHeaderScroller" ng-style="headerScrollerStyle()" ng-include="gridId + \'headerRowTemplate.html\'"></div>    </div>    <div ng-grid-menu></div></div><div class="ngViewport" unselectable="on" ng-viewport ng-class="{\'ui-widget-content\': jqueryUITheme}" ng-style="viewportStyle()">    <div class="ngCanvas" ng-style="canvasStyle()">        <div ng-style="rowStyle(row)" ng-repeat="row in renderedRows" ng-click="row.toggleSelected($event)" ng-class="row.alternatingRowClass()" ng-row></div>    </div></div><div ng-grid-footer></div>'),
            e.put('headerCellTemplate.html', '<div class="ngHeaderSortColumn {{col.headerClass}}" ng-style="{\'cursor\': col.cursor}" ng-class="{ \'ngSorted\': !noSortVisible }">    <div ng-click="col.sort($event)" ng-class="\'colt\' + col.index" class="ngHeaderText">{{col.displayName}}</div>    <div class="ngSortButtonDown" ng-show="col.showSortButtonDown()"></div>    <div class="ngSortButtonUp" ng-show="col.showSortButtonUp()"></div>    <div class="ngSortPriority">{{col.sortPriority}}</div>    <div ng-class="{ ngPinnedIcon: col.pinned, ngUnPinnedIcon: !col.pinned }" ng-click="togglePin(col)" ng-show="col.pinnable"></div></div><div ng-show="col.resizable" class="ngHeaderGrip" ng-click="col.gripClick($event)" ng-mousedown="col.gripOnMouseDown($event)"></div>'),
            e.put('headerRowTemplate.html', '<div ng-style="{ height: col.headerRowHeight }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngHeaderCell">\t<div class="ngVerticalBar" ng-style="{height: col.headerRowHeight}" ng-class="{ ngVerticalBarVisible: !$last }">&nbsp;</div>\t<div ng-header-cell></div></div>'),
            e.put('menuTemplate.html', '<div ng-show="showColumnMenu || showFilter"  class="ngHeaderButton" ng-click="toggleShowMenu()">    <div class="ngHeaderButtonArrow"></div></div><div ng-show="showMenu" class="ngColMenu">    <div ng-show="showFilter">        <input placeholder="{{i18n.ngSearchPlaceHolder}}" type="text" ng-model="filterText"/>    </div>    <div ng-show="showColumnMenu">        <span class="ngMenuText">{{i18n.ngMenuText}}</span>        <ul class="ngColList">            <li class="ngColListItem" ng-repeat="col in columns | ngColumns">                <label><input ng-disabled="col.pinned" type="checkbox" class="ngColListCheckbox" ng-model="col.visible"/>{{col.displayName}}</label>\t\t\t\t<a title="Group By" ng-class="col.groupedByClass()" ng-show="col.groupable && col.visible" ng-click="groupBy(col)"></a>\t\t\t\t<span class="ngGroupingNumber" ng-show="col.groupIndex > 0">{{col.groupIndex}}</span>                      </li>        </ul>    </div></div>'),
            e.put('rowTemplate.html', '<div ng-style="{ \'cursor\': row.cursor }" ng-repeat="col in renderedColumns" ng-class="col.colIndex()" class="ngCell {{col.cellClass}}">\t<div class="ngVerticalBar" ng-style="{height: rowHeight}" ng-class="{ ngVerticalBarVisible: !$last }">&nbsp;</div>\t<div ng-cell></div></div>')
          }
          ])
        }(window, jQuery), function (e) {
          (jQuery.browser = jQuery.browser || {
          }).mobile = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0, 4))
        }(navigator.userAgent || navigator.vendor || window.opera); var k; k = l.prototype, k.R = 'http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/images/m', k.Q = 'png', k.extend = function (e, n) {
          return function (e) {
            for (var n in e.prototype) this.prototype[n] = e.prototype[n];
            return this
          }.apply(e, [
            n
          ])
        }, k.onAdd = function () {
          this.A || (this.A = !0, p(this))
        }, k.draw = function () {
        }, k.T = function () {
          for (var e, n = this.o(), a = new google.maps.LatLngBounds, t = 0; e = n[t]; t++) a.extend(e.getPosition());
          this.b.fitBounds(a)
        }, k.w = f('j'), k.o = f('a'), k.W = function () {
          return this.a.length
        }, k.ca = d('K'), k.J = f('K'), k.G = function (e, n) {
          for (var a = 0, t = e.length, i = t; 0 !== i; ) i = parseInt(i / 10, 10),
          a++;
          return a = Math.min(a, n),
          {
            text: t,
            index: a
          }
        }, k.aa = d('G'), k.H = f('G'), k.C = function (e, n) {
          if (e.length) for (var a, t = 0; a = e[t]; t++) s(this, a);
           else if (Object.keys(e).length) for (a in e) s(this, e[a]);
          n || this.i()
        }, k.q = function (e, n) {
          s(this, e),
          n || this.i()
        }, k.Z = function (e, n) {
          var a = t(this, e);
          return !n && a ? (this.m(), this.i(), !0)  : !1
        }, k.$ = function (e, n) {
          for (var a, i = !1, r = 0; a = e[r]; r++) a = t(this, a),
          i = i || a;
          return !n && i ? (this.m(), this.i(), !0)  : void 0
        }, k.V = function () {
          return this.f.length
        }, k.getMap = f('b'), k.setMap = d('b'), k.I = f('g'), k.ba = d('g'), k.v = function (e) {
          var n = this.getProjection(),
          a = new google.maps.LatLng(e.getNorthEast().lat(), e.getNorthEast().lng()),
          t = new google.maps.LatLng(e.getSouthWest().lat(), e.getSouthWest().lng()),
          a = n.fromLatLngToDivPixel(a);
          return a.x += this.g,
          a.y -= this.g,
          t = n.fromLatLngToDivPixel(t),
          t.x -= this.g,
          t.y += this.g,
          a = n.fromDivPixelToLatLng(a),
          n = n.fromDivPixelToLatLng(t),
          e.extend(a),
          e.extend(n),
          e
        }, k.S = function () {
          this.m(!0),
          this.a = [
          ]
        }, k.m = function (e) {
          for (var n, a = 0; n = this.f[a]; a++) n.remove();
          for (a = 0; n = this.a[a]; a++) n.s = !1,
          e && n.setMap(null);
          this.f = [
          ]
        }, k.M = function () {
          var e = this.f.slice();
          this.f.length = 0,
          this.m(),
          this.i(),
          window.setTimeout(function () {
            for (var n, a = 0; n = e[a]; a++) n.remove()
          }, 0)
        }, k.i = function () {
          p(this)
        }, k = v.prototype, k.q = function (e) {
          var n;
          e: if (this.a.indexOf) n = - 1 != this.a.indexOf(e);
           else {
            n = 0;
            for (var a; a = this.a[n]; n++) if (a == e) {
              n = !0;
              break e
            }
            n = !1
          }
          if (n) return !1;
          if (this.d ? this.r && (a = this.a.length + 1, n = (this.d.lat() * (a - 1) + e.getPosition().lat()) / a, a = (this.d.lng() * (a - 1) + e.getPosition().lng()) / a, this.d = new google.maps.LatLng(n, a), A(this))  : (this.d = e.getPosition(), A(this)), e.s = !0, this.a.push(e), n = this.a.length, n < this.l && e.getMap() != this.b && e.setMap(this.b), n == this.l) for (a = 0; n > a; a++) this.a[a].setMap(null);
          if (n >= this.l && e.setMap(null), e = this.b.getZoom(), (n = this.k.J()) && e > n) for (e = 0; n = this.a[e]; e++) n.setMap(this.b);
           else this.a.length < this.l ? B(this.n)  : (n = this.k.H() (this.a, this.k.w().length), this.n.setCenter(this.d), e = this.n, e.B = n, e.c && (e.c.innerHTML = n.text), n = Math.max(0, e.B.index - 1), n = Math.min(e.j.length - 1, n), n = e.j[n], e.ea = n.url, e.h = n.height, e.p = n.width, e.N = n.textColor, e.e = n.anchor, e.O = n.textSize, e.D = n.backgroundPosition, this.n.show());
          return !0
        }, k.getBounds = function () {
          for (var e, n = new google.maps.LatLngBounds(this.d, this.d), a = this.o(), t = 0; e = a[t]; t++) n.extend(e.getPosition());
          return n
        }, k.remove = function () {
          this.n.remove(),
          this.a.length = 0,
          delete this.a
        }, k.U = function () {
          return this.a.length
        }, k.o = f('a'), k.getCenter = f('d'), k.getMap = f('b'), k = w.prototype, k.onAdd = function () {
          if (this.c = document.createElement('DIV'), this.t) {
            var e = C(this, this.d);
            this.c.style.cssText = D(this, e),
            this.c.innerHTML = this.B.text
          }
          this.getPanes().overlayMouseTarget.appendChild(this.c);
          var n = this;
          google.maps.event.addDomListener(this.c, 'click', function () {
            var e = n.u.k;
            google.maps.event.trigger(e, 'clusterclick', n.u),
            e.P && n.b.fitBounds(n.u.getBounds())
          })
        }, k.draw = function () {
          if (this.t) {
            var e = C(this, this.d);
            this.c.style.top = e.y + 'px',
            this.c.style.left = e.x + 'px'
          }
        }, k.show = function () {
          if (this.c) {
            var e = C(this, this.d);
            this.c.style.cssText = D(this, e),
            this.c.style.display = ''
          }
          this.t = !0
        }, k.remove = function () {
          this.setMap(null)
        }, k.onRemove = function () {
          this.c && this.c.parentNode && (B(this), this.c.parentNode.removeChild(this.c), this.c = null)
        }, k.setCenter = d('d'), window.MarkerClusterer = l, l.prototype.addMarker = l.prototype.q, l.prototype.addMarkers = l.prototype.C, l.prototype.clearMarkers = l.prototype.S, l.prototype.fitMapToMarkers = l.prototype.T, l.prototype.getCalculator = l.prototype.H, l.prototype.getGridSize = l.prototype.I, l.prototype.getExtendedBounds = l.prototype.v, l.prototype.getMap = l.prototype.getMap, l.prototype.getMarkers = l.prototype.o, l.prototype.getMaxZoom = l.prototype.J, l.prototype.getStyles = l.prototype.w, l.prototype.getTotalClusters = l.prototype.V, l.prototype.getTotalMarkers = l.prototype.W, l.prototype.redraw = l.prototype.i, l.prototype.removeMarker = l.prototype.Z, l.prototype.removeMarkers = l.prototype.$, l.prototype.resetViewport = l.prototype.m, l.prototype.repaint = l.prototype.M, l.prototype.setCalculator = l.prototype.aa, l.prototype.setGridSize = l.prototype.ba, l.prototype.setMaxZoom = l.prototype.ca, l.prototype.onAdd = l.prototype.onAdd, l.prototype.draw = l.prototype.draw, v.prototype.getCenter = v.prototype.getCenter, v.prototype.getSize = v.prototype.U, v.prototype.getMarkers = v.prototype.o, w.prototype.onAdd = w.prototype.onAdd, w.prototype.draw = w.prototype.draw, w.prototype.onRemove = w.prototype.onRemove, Object.keys = Object.keys || function (e) {
          var n,
          a = [
          ];
          for (n in e) e.hasOwnProperty(n) && a.push(n);
          return a
        }, function (e, n, a) {
          'use strict';
          n.module('ngAnimate', [
            'ng'
          ]).directive('ngAnimateChildren', function () {
            var e = '$$ngAnimateChildren';
            return function (a, t, i) {
              var r = i.ngAnimateChildren;
              n.isString(r) && 0 === r.length ? t.data(e, !0)  : a.$watch(r, function (n) {
                t.data(e, !!n)
              })
            }
          }).factory('$$animateReflow', [
            '$$rAF',
            '$document',
            function (e, n) {
              var a = n[0].body;
              return function (n) {
                return e(function () {
                  a.offsetWidth + 1;
                  n()
                })
              }
            }
          ]).config(['$provide',
          '$animateProvider',
          function (t, i) {
            function r(e) {
              for (var n = 0; n < e.length; n++) {
                var a = e[n];
                if (a.nodeType == m) return a
              }
            }
            function o(e) {
              return e && n.element(e)
            }
            function s(e) {
              return n.element(r(e))
            }
            function l(e, n) {
              return r(e) == r(n)
            }
            var c = n.noop,
            u = n.forEach,
            d = i.$$selectors,
            m = 1,
            h = '$$ngAnimateState',
            p = '$$ngAnimateChildren',
            v = 'ng-animate',
            g = {
              running: !0
            };
            t.decorator('$animate', [
              '$delegate',
              '$injector',
              '$sniffer',
              '$rootElement',
              '$$asyncCallback',
              '$rootScope',
              '$document',
              function (e, a, t, m, f, _) {
                function b(e) {
                  var n = e.data(h) || {
                  };
                  n.running = !0,
                  e.data(h, n)
                }
                function y(e) {
                  if (e) {
                    var n = [
                    ],
                    i = {
                    },
                    r = e.substr(1).split('.');
                    (t.transitions || t.animations) && n.push(a.get(d['']));
                    for (var o = 0; o < r.length; o++) {
                      var s = r[o],
                      l = d[s];
                      l && !i[s] && (n.push(a.get(l)), i[s] = !0)
                    }
                    return n
                  }
                }
                function w(e, a, t) {
                  function i(e, n) {
                    var a = e[n],
                    t = e['before' + n.charAt(0).toUpperCase() + n.substr(1)];
                    return a || t ? ('leave' == n && (t = a, a = null), w.push({
                      event: n,
                      fn: a
                    }), f.push({
                      event: n,
                      fn: t
                    }), !0)  : void 0
                  }
                  function r(n, a, i) {
                    function r(e) {
                      if (a) {
                        if ((a[e] || c) (), ++d < o.length) return;
                        a = null
                      }
                      i()
                    }
                    var o = [
                    ];
                    u(n, function (e) {
                      e.fn && o.push(e)
                    });
                    var d = 0;
                    u(o, function (n, i) {
                      var o = function () {
                        r(i)
                      };
                      switch (n.event) {
                        case 'setClass':
                          a.push(n.fn(e, s, l, o));
                          break;
                        case 'addClass':
                          a.push(n.fn(e, s || t, o));
                          break;
                        case 'removeClass':
                          a.push(n.fn(e, l || t, o));
                          break;
                        default:
                          a.push(n.fn(e, o))
                      }
                    }), a && 0 === a.length && i()
                  }
                  var o = e[0];
                  if (o) {
                    var s,
                    l,
                    d = 'setClass' == a,
                    m = d || 'addClass' == a || 'removeClass' == a;
                    n.isArray(t) && (s = t[0], l = t[1], t = s + ' ' + l);
                    var h = e.attr('class'),
                    p = h + ' ' + t;
                    if (z(p)) {
                      var v = c,
                      g = [
                      ],
                      f = [
                      ],
                      _ = c,
                      b = [
                      ],
                      w = [
                      ],
                      k = (' ' + p).replace(/\s+/g, '.');
                      return u(y(k), function (e) {
                        var n = i(e, a);
                        !n && d && (i(e, 'addClass'), i(e, 'removeClass'))
                      }),
                      {
                        node: o,
                        event: a,
                        className: t,
                        isClassBased: m,
                        isSetClassOperation: d,
                        before: function (e) {
                          v = e,
                          r(f, g, function () {
                            v = c,
                            e()
                          })
                        },
                        after: function (e) {
                          _ = e,
                          r(w, b, function () {
                            _ = c,
                            e()
                          })
                        },
                        cancel: function () {
                          g && (u(g, function (e) {
                            (e || c) (!0)
                          }), v(!0)),
                          b && (u(b, function (e) {
                            (e || c) (!0)
                          }), _(!0))
                        }
                      }
                    }
                  }
                }
                function k(e, a, t, i, r, o, s) {
                  function l(n) {
                    var i = '$animate:' + n;
                    b && b[i] && b[i].length > 0 && f(function () {
                      t.triggerHandler(i, {
                        event: e,
                        className: a
                      })
                    })
                  }
                  function c() {
                    l('before')
                  }
                  function d() {
                    l('after')
                  }
                  function m() {
                    l('close'),
                    s && f(function () {
                      s()
                    })
                  }
                  function p() {
                    p.hasBeenRun || (p.hasBeenRun = !0, o())
                  }
                  function g() {
                    if (!g.hasBeenRun) {
                      g.hasBeenRun = !0;
                      var n = t.data(h);
                      n && (_ && _.isClassBased ? A(t, a)  : (f(function () {
                        var n = t.data(h) || {
                        };
                        $ == n.index && A(t, a, e)
                      }), t.data(h, n))),
                      m()
                    }
                  }
                  var _ = w(t, e, a);
                  if (!_) return p(),
                  c(),
                  d(),
                  void g();
                  a = _.className;
                  var b = n.element._data(_.node);
                  b = b && b.events,
                  i || (i = r ? r.parent()  : t.parent());
                  var y,
                  k = t.data(h) || {
                  },
                  S = k.active || {
                  },
                  C = k.totalActive || 0,
                  z = k.last;
                  if (_.isClassBased && (y = k.running || k.disabled || z && !z.isClassBased), y || M(t, i)) return p(),
                  c(),
                  d(),
                  void g();
                  var P = !1;
                  if (C > 0) {
                    var T = [
                    ];
                    if (_.isClassBased) {
                      if ('setClass' == z.event) T.push(z),
                      A(t, a);
                       else if (S[a]) {
                        var D = S[a];
                        D.event == e ? P = !0 : (T.push(D), A(t, a))
                      }
                    } else if ('leave' == e && S['ng-leave']) P = !0;
                     else {
                      for (var E in S) T.push(S[E]),
                      A(t, E);
                      S = {
                      },
                      C = 0
                    }
                    T.length > 0 && u(T, function (e) {
                      e.cancel()
                    })
                  }
                  if (!_.isClassBased || _.isSetClassOperation || P || (P = 'addClass' == e == t.hasClass(a)), P) return p(),
                  c(),
                  d(),
                  void m();
                  'leave' == e && t.one('$destroy', function () {
                    var e = n.element(this),
                    a = e.data(h);
                    if (a) {
                      var t = a.active['ng-leave'];
                      t && (t.cancel(), A(e, 'ng-leave'))
                    }
                  }),
                  t.addClass(v);
                  var $ = x++;
                  C++,
                  S[a] = _,
                  t.data(h, {
                    last: _,
                    active: S,
                    index: $,
                    totalActive: C
                  }),
                  c(),
                  _.before(function (n) {
                    var i = t.data(h);
                    n = n || !i || !i.active[a] || _.isClassBased && i.active[a].event != e,
                    p(),
                    n === !0 ? g()  : (d(), _.after(g))
                  })
                }
                function S(e) {
                  var a = r(e);
                  if (a) {
                    var t = n.isFunction(a.getElementsByClassName) ? a.getElementsByClassName(v)  : a.querySelectorAll('.' + v);
                    u(t, function (e) {
                      e = n.element(e);
                      var a = e.data(h);
                      a && a.active && u(a.active, function (e) {
                        e.cancel()
                      })
                    })
                  }
                }
                function A(e, n) {
                  if (l(e, m)) g.disabled || (g.running = !1, g.structural = !1);
                   else if (n) {
                    var a = e.data(h) || {
                    },
                    t = n === !0;
                    !t && a.active && a.active[n] && (a.totalActive--, delete a.active[n]),
                    (t || !a.totalActive) && (e.removeClass(v), e.removeData(h))
                  }
                }
                function M(e, a) {
                  if (g.disabled) return !0;
                  if (l(e, m)) return g.running;
                  var t,
                  i,
                  r;
                  do {
                    if (0 === a.length) break;
                    var o = l(a, m),
                    s = o ? g : a.data(h) || {
                    };
                    if (s.disabled) return !0;
                    if (o && (r = !0), t !== !1) {
                      var c = a.data(p);
                      n.isDefined(c) && (t = c)
                    }
                    i = i || s.running || s.last && !s.last.isClassBased
                  } while (a = a.parent());
                  return !r || !t && i
                }
                var x = 0;
                m.data(h, g),
                _.$$postDigest(function () {
                  _.$$postDigest(function () {
                    g.running = !1
                  })
                });
                var C = i.classNameFilter(),
                z = C ? function (e) {
                  return C.test(e)
                }
                 : function () {
                  return !0
                };
                return {
                  enter: function (a, t, i, r) {
                    a = n.element(a),
                    t = o(t),
                    i = o(i),
                    b(a),
                    e.enter(a, t, i),
                    _.$$postDigest(function () {
                      a = s(a),
                      k('enter', 'ng-enter', a, t, i, c, r)
                    })
                  },
                  leave: function (a, t) {
                    a = n.element(a),
                    S(a),
                    b(a),
                    _.$$postDigest(function () {
                      k('leave', 'ng-leave', s(a), null, null, function () {
                        e.leave(a)
                      }, t)
                    })
                  },
                  move: function (a, t, i, r) {
                    a = n.element(a),
                    t = o(t),
                    i = o(i),
                    S(a),
                    b(a),
                    e.move(a, t, i),
                    _.$$postDigest(function () {
                      a = s(a),
                      k('move', 'ng-move', a, t, i, c, r)
                    })
                  },
                  addClass: function (a, t, i) {
                    a = n.element(a),
                    a = s(a),
                    k('addClass', t, a, null, null, function () {
                      e.addClass(a, t)
                    }, i)
                  },
                  removeClass: function (a, t, i) {
                    a = n.element(a),
                    a = s(a),
                    k('removeClass', t, a, null, null, function () {
                      e.removeClass(a, t)
                    }, i)
                  },
                  setClass: function (a, t, i, r) {
                    a = n.element(a),
                    a = s(a),
                    k('setClass', [
                      t,
                      i
                    ], a, null, null, function () {
                      e.setClass(a, t, i)
                    }, r)
                  },
                  enabled: function (e, n) {
                    switch (arguments.length) {
                      case 2:
                        if (e) A(n);
                         else {
                          var a = n.data(h) || {
                          };
                          a.disabled = !0,
                          n.data(h, a)
                        }
                        break;
                      case 1:
                        g.disabled = !e;
                        break;
                      default:
                        e = !g.disabled
                    }
                    return !!e
                  }
                }
              }
              ]),
              i.register('', [
                '$window',
                '$sniffer',
                '$timeout',
                '$$animateReflow',
                function (t, i, o, s) {
                  function l(e, n) {
                    L && L(),
                    V.push(n),
                    L = s(function () {
                      u(V, function (e) {
                        e()
                      }),
                      V = [
                      ],
                      L = null,
                      W = {
                      }
                    })
                  }
                  function d(e, a) {
                    var t = r(e);
                    e = n.element(t),
                    Y.push(e);
                    var i = Date.now() + a;
                    Z >= i || (o.cancel(U), Z = i, U = o(function () {
                      h(Y),
                      Y = [
                      ]
                    }, a, !1))
                  }
                  function h(e) {
                    u(e, function (e) {
                      var n = e.data(F);
                      n && (n.closeAnimationFn || c) ()
                    })
                  }
                  function p(e, n) {
                    var a = n ? W[n] : null;
                    if (!a) {
                      var i,
                      r,
                      o,
                      s,
                      l = 0,
                      c = 0,
                      d = 0,
                      h = 0;
                      u(e, function (e) {
                        if (e.nodeType == m) {
                          var n = t.getComputedStyle(e) || {
                          };
                          o = n[T + B],
                          l = Math.max(v(o), l),
                          s = n[T + N],
                          i = n[T + R],
                          c = Math.max(v(i), c),
                          r = n[E + R],
                          h = Math.max(v(r), h);
                          var a = v(n[E + B]);
                          a > 0 && (a *= parseInt(n[E + j], 10) || 1),
                          d = Math.max(a, d)
                        }
                      }),
                      a = {
                        total: 0,
                        transitionPropertyStyle: s,
                        transitionDurationStyle: o,
                        transitionDelayStyle: i,
                        transitionDelay: c,
                        transitionDuration: l,
                        animationDelayStyle: r,
                        animationDelay: h,
                        animationDuration: d
                      },
                      n && (W[n] = a)
                    }
                    return a
                  }
                  function v(e) {
                    var a = 0,
                    t = n.isString(e) ? e.split(/\s*,\s*/)  : [
                    ];
                    return u(t, function (e) {
                      a = Math.max(parseFloat(e) || 0, a)
                    }),
                    a
                  }
                  function g(e) {
                    var n = e.parent(),
                    a = n.data(K);
                    return a || (n.data(K, ++J), a = J),
                    a + '-' + r(e).getAttribute('class')
                  }
                  function f(e, n, a, t) {
                    var i = g(n),
                    r = i + ' ' + a,
                    o = W[r] ? ++W[r].total : 0,
                    s = {
                    };
                    if (o > 0) {
                      var l = a + '-stagger',
                      u = i + ' ' + l,
                      d = !W[u];
                      d && n.addClass(l),
                      s = p(n, u),
                      d && n.removeClass(l)
                    }
                    t = t || function (e) {
                      return e()
                    },
                    n.addClass(a);
                    var m = n.data(F) || {
                    },
                    h = t(function () {
                      return p(n, r)
                    }),
                    v = h.transitionDuration,
                    f = h.animationDuration;
                    if (0 === v && 0 === f) return n.removeClass(a),
                    !1;
                    n.data(F, {
                      running: m.running || 0,
                      itemIndex: o,
                      stagger: s,
                      timings: h,
                      closeAnimationFn: c
                    });
                    var _ = m.running > 0 || 'setClass' == e;
                    return v > 0 && b(n, a, _),
                    f > 0 && s.animationDelay > 0 && 0 === s.animationDuration && y(n),
                    !0
                  }
                  function _(e) {
                    return 'ng-enter' == e || 'ng-move' == e || 'ng-leave' == e
                  }
                  function b(e, n, a) {
                    _(n) || !a ? r(e).style[T + N] = 'none' : e.addClass(H)
                  }
                  function y(e) {
                    r(e).style[E] = 'none 0s'
                  }
                  function w(e) {
                    var n = T + N,
                    a = r(e);
                    a.style[n] && a.style[n].length > 0 && (a.style[n] = ''),
                    e.removeClass(H)
                  }
                  function k(e) {
                    var n = E,
                    a = r(e);
                    a.style[n] && a.style[n].length > 0 && (a.style[n] = '')
                  }
                  function S(e, n, a, t) {
                    function i() {
                      n.off(b, o),
                      n.removeClass(c),
                      z(n, a);
                      var e = r(n);
                      for (var t in w) e.style.removeProperty(w[t])
                    }
                    function o(e) {
                      e.stopPropagation();
                      var n = e.originalEvent || e,
                      a = n.$manualTimeStamp || n.timeStamp || Date.now(),
                      i = parseFloat(n.elapsedTime.toFixed(G));
                      Math.max(a - _, 0) >= f && i >= v && t()
                    }
                    var s = r(n),
                    l = n.data(F);
                    if ( - 1 == s.getAttribute('class').indexOf(a) || !l) return void t();
                    var c = '';
                    u(a.split(' '), function (e, n) {
                      c += (n > 0 ? ' ' : '') + e + '-active'
                    });
                    var m = l.stagger,
                    h = l.timings,
                    p = l.itemIndex,
                    v = Math.max(h.transitionDuration, h.animationDuration),
                    g = Math.max(h.transitionDelay, h.animationDelay),
                    f = g * q,
                    _ = Date.now(),
                    b = $ + ' ' + D,
                    y = '',
                    w = [
                    ];
                    if (h.transitionDuration > 0) {
                      var k = h.transitionPropertyStyle;
                      - 1 == k.indexOf('all') && (y += I + 'transition-property: ' + k + ';', y += I + 'transition-duration: ' + h.transitionDurationStyle + ';', w.push(I + 'transition-property'), w.push(I + 'transition-duration'))
                    }
                    if (p > 0) {
                      if (m.transitionDelay > 0 && 0 === m.transitionDuration) {
                        var S = h.transitionDelayStyle;
                        y += I + 'transition-delay: ' + A(S, m.transitionDelay, p) + '; ',
                        w.push(I + 'transition-delay')
                      }
                      m.animationDelay > 0 && 0 === m.animationDuration && (y += I + 'animation-delay: ' + A(h.animationDelayStyle, m.animationDelay, p) + '; ', w.push(I + 'animation-delay'))
                    }
                    if (w.length > 0) {
                      var M = s.getAttribute('style') || '';
                      s.setAttribute('style', M + '; ' + y)
                    }
                    n.on(b, o),
                    n.addClass(c),
                    l.closeAnimationFn = function () {
                      i(),
                      t()
                    };
                    var x = p * (Math.max(m.animationDelay, m.transitionDelay) || 0),
                    C = (g + v) * O,
                    P = (x + C) * q;
                    return l.running++,
                    d(n, P),
                    i
                  }
                  function A(e, n, a) {
                    var t = '';
                    return u(e.split(','), function (e, i) {
                      t += (i > 0 ? ',' : '') + (a * n + parseInt(e, 10)) + 's'
                    }),
                    t
                  }
                  function M(e, n, a, t) {
                    return f(e, n, a, t) ? function (e) {
                      e && z(n, a)
                    }
                     : void 0
                  }
                  function x(e, n, a, t) {
                    return n.data(F) ? S(e, n, a, t)  : (z(n, a), void t())
                  }
                  function C(e, n, a, t) {
                    var i = M(e, n, a);
                    if (!i) return void t();
                    var r = i;
                    return l(n, function () {
                      w(n, a),
                      k(n),
                      r = x(e, n, a, t)
                    }),
                    function (e) {
                      (r || c) (e)
                    }
                  }
                  function z(e, n) {
                    e.removeClass(n);
                    var a = e.data(F);
                    a && (a.running && a.running--, a.running && 0 !== a.running || e.removeData(F))
                  }
                  function P(e, a) {
                    var t = '';
                    return e = n.isArray(e) ? e : e.split(/\s+/),
                    u(e, function (e, n) {
                      e && e.length > 0 && (t += (n > 0 ? ' ' : '') + e + a)
                    }),
                    t
                  }
                  var T,
                  D,
                  E,
                  $,
                  I = '';
                  e.ontransitionend === a && e.onwebkittransitionend !== a ? (I = '-webkit-', T = 'WebkitTransition', D = 'webkitTransitionEnd transitionend')  : (T = 'transition', D = 'transitionend'),
                  e.onanimationend === a && e.onwebkitanimationend !== a ? (I = '-webkit-', E = 'WebkitAnimation', $ = 'webkitAnimationEnd animationend')  : (E = 'animation', $ = 'animationend');
                  var L,
                  B = 'Duration',
                  N = 'Property',
                  R = 'Delay',
                  j = 'IterationCount',
                  K = '$$ngAnimateKey',
                  F = '$$ngAnimateCSS3Data',
                  H = 'ng-animate-block-transitions',
                  G = 3,
                  O = 1.5,
                  q = 1000,
                  W = {
                  },
                  J = 0,
                  V = [
                  ],
                  U = null,
                  Z = 0,
                  Y = [
                  ];
                  return {
                    enter: function (e, n) {
                      return C('enter', e, 'ng-enter', n)
                    },
                    leave: function (e, n) {
                      return C('leave', e, 'ng-leave', n)
                    },
                    move: function (e, n) {
                      return C('move', e, 'ng-move', n)
                    },
                    beforeSetClass: function (e, n, a, t) {
                      var i = P(a, '-remove') + ' ' + P(n, '-add'),
                      r = M('setClass', e, i, function (t) {
                        var i = e.attr('class');
                        e.removeClass(a),
                        e.addClass(n);
                        var r = t();
                        return e.attr('class', i),
                        r
                      });
                      return r ? (l(e, function () {
                        w(e, i),
                        k(e),
                        t()
                      }), r)  : void t()
                    },
                    beforeAddClass: function (e, n, a) {
                      var t = M('addClass', e, P(n, '-add'), function (a) {
                        e.addClass(n);
                        var t = a();
                        return e.removeClass(n),
                        t
                      });
                      return t ? (l(e, function () {
                        w(e, n),
                        k(e),
                        a()
                      }), t)  : void a()
                    },
                    setClass: function (e, n, a, t) {
                      a = P(a, '-remove'),
                      n = P(n, '-add');
                      var i = a + ' ' + n;
                      return x('setClass', e, i, t)
                    },
                    addClass: function (e, n, a) {
                      return x('addClass', e, P(n, '-add'), a)
                    },
                    beforeRemoveClass: function (e, n, a) {
                      var t = M('removeClass', e, P(n, '-remove'), function (a) {
                        var t = e.attr('class');
                        e.removeClass(n);
                        var i = a();
                        return e.attr('class', t),
                        i
                      });
                      return t ? (l(e, function () {
                        w(e, n),
                        k(e),
                        a()
                      }), t)  : void a()
                    },
                    removeClass: function (e, n, a) {
                      return x('removeClass', e, P(n, '-remove'), a)
                    }
                  }
                }
              ])
            }
            ])
          }(window, window.angular), angular.module('angular-carousel', [
            'ngTouch',
            'angular-carousel.shifty'
          ]), angular.module('angular-carousel').directive('rnCarouselAutoSlide', [
            '$timeout',
            function (e) {
              return {
                restrict: 'A',
                link: function (n, a, t) {
                  var i = Math.round(1000 * parseFloat(t.rnCarouselAutoSlide)),
                  r = increment = !1,
                  o = a.children().length;
                  n.carouselExposedIndex || (n.carouselExposedIndex = 0),
                  stopAutoplay = function () {
                    angular.isDefined(r) && e.cancel(r),
                    r = void 0
                  },
                  increment = function () {
                    n.carouselExposedIndex = n.carouselExposedIndex < o - 1 ? n.carouselExposedIndex + 1 : 0
                  },
                  restartTimer = function () {
                    stopAutoplay(),
                    r = e(increment, i)
                  },
                  n.$watch('carouselIndex', function () {
                    restartTimer()
                  }),
                  restartTimer(),
                  t.rnCarouselPauseOnHover && 'false' != t.rnCarouselPauseOnHover && (a.on('mouseenter', stopAutoplay), a.on('mouseleave', restartTimer)),
                  n.$on('$destroy', function () {
                    stopAutoplay(),
                    a.off('mouseenter', stopAutoplay),
                    a.off('mouseleave', restartTimer)
                  })
                }
              }
            }
          ]), angular.module('angular-carousel').directive('rnCarouselIndicators', [
            '$parse',
            function (e) {
              return {
                restrict: 'A',
                scope: {
                  slides: '=',
                  index: '=rnCarouselIndex'
                },
                templateUrl: 'carousel-indicators.html',
                link: function (n, a, t) {
                  var i = e(t.rnCarouselIndex);
                  n.goToSlide = function (e) {
                    i.assign(n.$parent.$parent, e)
                  }
                }
              }
            }
          ]), angular.module('angular-carousel').run(['$templateCache',
          function (e) {
            e.put('carousel-indicators.html', '<div class="rn-carousel-indicator">\n<span ng-repeat="slide in slides" ng-class="{active: $index==index}" ng-click="goToSlide($index)">●</span></div>')
          }
          ]), function () {
            'use strict';
            angular.module('angular-carousel').service('DeviceCapabilities', function () {
              function e() {
                var e = 'transform',
                n = 'webkitTransform';
                return 'undefined' != typeof document.body.style[e] ? [
                  'webkit',
                  'moz',
                  'o',
                  'ms'
                ].every(function (n) {
                  var a = '-' + n + '-transform';
                  return 'undefined' != typeof document.body.style[a] ? (e = a, !1)  : !0
                })  : e = 'undefined' != typeof document.body.style[n] ? '-webkit-transform' : void 0,
                e
              }
              function n() {
                var e,
                n = document.createElement('p'),
                a = {
                  webkitTransform: '-webkit-transform',
                  msTransform: '-ms-transform',
                  transform: 'transform'
                };
                document.body.insertBefore(n, null);
                for (var t in a) void 0 !== n.style[t] && (n.style[t] = 'translate3d(1px,1px,1px)', e = window.getComputedStyle(n).getPropertyValue(a[t]));
                return document.body.removeChild(n),
                void 0 !== e && e.length > 0 && 'none' !== e
              }
              return {
                has3d: n(),
                transformProperty: e()
              }
            }).service('computeCarouselSlideStyle', [
              'DeviceCapabilities',
              function (e) {
                return function (n, a, t) {
                  var i,
                  r = {
                    display: 'inline-block'
                  },
                  o = 100 * n + a,
                  s = e.has3d ? 'translate3d(' + o + '%, 0, 0)' : 'translate3d(' + o + '%, 0)',
                  l = (100 - Math.abs(o)) / 100;
                  if (e.transformProperty) if ('fadeAndSlide' == t) r[e.transformProperty] = s,
                  i = 0,
                  Math.abs(o) < 100 && (i = 0.3 + 0.7 * l),
                  r.opacity = i;
                   else if ('hexagon' == t) {
                    var c = 100,
                    u = 0,
                    d = 60 * (l - 1);
                    c = - 100 * n > a ? 100 : 0,
                    u = - 100 * n > a ? d : - d,
                    r[e.transformProperty] = s + ' rotateY(' + u + 'deg)',
                    r[e.transformProperty + '-origin'] = c + '% 50%'
                  } else if ('zoom' == t) {
                    r[e.transformProperty] = s;
                    var m = 1;
                    Math.abs(o) < 100 && (m = 1 + 2 * (1 - l)),
                    r[e.transformProperty] += ' scale(' + m + ')',
                    r[e.transformProperty + '-origin'] = '50% 50%',
                    i = 0,
                    Math.abs(o) < 100 && (i = 0.3 + 0.7 * l),
                    r.opacity = i
                  } else r[e.transformProperty] = s;
                   else r['margin-left'] = o + '%';
                  return r
                }
              }
            ]).service('createStyleString', function () {
              return function (e) {
                var n = [
                ];
                return angular.forEach(e, function (e, a) {
                  n.push(a + ':' + e)
                }),
                n.join(';')
              }
            }).directive('rnCarousel', [
              '$swipe',
              '$window',
              '$document',
              '$parse',
              '$compile',
              '$timeout',
              '$interval',
              'computeCarouselSlideStyle',
              'createStyleString',
              'Tweenable',
              function (e, n, a, t, i, r, o, s, l, c) {
                function u(e, n, a) {
                  var t = a;
                  return e.every(function (e, a) {
                    return angular.equals(e, n) ? (t = a, !1)  : !0
                  }),
                  t
                }
                {
                  var d = 0;
                  n.requestAnimationFrame || n.webkitRequestAnimationFrame || n.mozRequestAnimationFrame
                }
                return {
                  restrict: 'A',
                  scope: !0,
                  compile: function (m, h) {
                    var p,
                    v,
                    g = m[0].querySelector('li'),
                    f = g ? g.attributes : [
                    ],
                    _ = !1,
                    b = !1;
                    return ['ng-repeat',
                    'data-ng-repeat',
                    'ng:repeat',
                    'x-ng-repeat'].every(function (e) {
                      var n = f[e];
                      if (angular.isDefined(n)) {
                        var a = n.value.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),
                        t = a[3];
                        if (p = a[1], v = a[2], p) return angular.isDefined(h.rnCarouselBuffered) && (b = !0, n.value = p + ' in ' + v + '|carouselSlice:carouselBufferIndex:carouselBufferSize', t && (n.value += ' track by ' + t)),
                        _ = !0,
                        !1
                      }
                      return !0
                    }),
                    function (m, h, p) {
                      function g() {
                        return h[0].querySelectorAll('ul[rn-carousel] > li')
                      }
                      function f(e) {
                        N = !0,
                        x({
                          x: e.clientX,
                          y: e.clientY
                        }, e)
                      }
                      function y(e) {
                        var n = 100 * m.carouselBufferIndex + e;
                        angular.forEach(g(), function (e, a) {
                          e.style.cssText = l(s(a, n, I.transitionType))
                        })
                      }
                      function w(e, n) {
                        if (void 0 === e && (e = m.carouselIndex), n = n || {
                        }, n.animate === !1 || 'none' === I.transitionType) return K = !1,
                        B = - 100 * e,
                        m.carouselIndex = e,
                        void C();
                        K = !0;
                        var a = new c;
                        a.tween({
                          from: {
                            x: B
                          },
                          to: {
                            x: - 100 * e
                          },
                          duration: I.transitionDuration,
                          easing: I.transitionEasing,
                          step: function (e) {
                            y(e.x)
                          },
                          finish: function () {
                            K = !1,
                            m.$apply(function () {
                              m.carouselIndex = e,
                              B = - 100 * e,
                              C()
                            })
                          }
                        })
                      }
                      function k() {
                        var e = h[0].getBoundingClientRect();
                        return e.width ? e.width : e.right - e.left
                      }
                      function S() {
                        R = k()
                      }
                      function A(e) {
                        return a.bind('mouseup', f),
                        S(),
                        j = h[0].querySelector('li').getBoundingClientRect().left,
                        P = !0,
                        T = e.x,
                        !1
                      }
                      function M(e) {
                        if (!K) {
                          var n,
                          a;
                          if (P && (n = e.x, a = T - n, a > 2 || - 2 > a)) {
                            N = !0;
                            var t = B + 100 * - a / R;
                            y(t)
                          }
                          return !1
                        }
                      }
                      function x(e, n) {
                        if ((!n || N) && (a.unbind('mouseup', f), P = !1, N = !1, D = T - e.x, 0 !== D && !K)) if (B += 100 * - D / R, I.isSequential) {
                          var t = I.moveTreshold * R,
                          i = - D,
                          r = - Math[i >= 0 ? 'ceil' : 'floor'](i / R),
                          o = Math.abs(i) > t;
                          E && r + m.carouselIndex >= E.length && (r = E.length - 1 - m.carouselIndex),
                          r + m.carouselIndex < 0 && (r = - m.carouselIndex);
                          var s = o ? r : 0;
                          D = m.carouselIndex + s,
                          w(D)
                        } else m.$apply(function () {
                          m.carouselIndex = parseInt( - B / 100, 10),
                          C()
                        })
                      }
                      function C() {
                        var e = 0,
                        n = (m.carouselBufferSize - 1) / 2;
                        b ? (e = m.carouselIndex <= n ? 0 : E && E.length < m.carouselBufferSize ? 0 : E && m.carouselIndex > E.length - m.carouselBufferSize ? E.length - m.carouselBufferSize : m.carouselIndex - n, m.carouselBufferIndex = e, r(function () {
                          y(B)
                        }, 0, !1))  : r(function () {
                          y(B)
                        }, 0, !1)
                      }
                      function z() {
                        S(),
                        w()
                      }
                      d++;
                      var P,
                      T,
                      D,
                      E,
                      $ = {
                        transitionType: p.rnCarouselTransition || 'slide',
                        transitionEasing: 'easeTo',
                        transitionDuration: 300,
                        isSequential: !0,
                        autoSlideDuration: 3,
                        bufferSize: 5,
                        moveTreshold: 0.1
                      },
                      I = angular.extend({
                      }, $),
                      L = !1,
                      B = 0,
                      N = !1,
                      R = null,
                      j = null,
                      K = !1;
                      if (void 0 !== p.rnCarouselControls) {
                        var F = '<div class="rn-carousel-controls">\n  <span class="rn-carousel-control rn-carousel-control-prev" ng-click="prevSlide()" ng-if="carouselIndex > 0"></span>\n  <span class="rn-carousel-control rn-carousel-control-next" ng-click="nextSlide()" ng-if="carouselIndex < ' + v + '.length - 1"></span>\n</div>';
                        h.append(i(angular.element(F)) (m))
                      }
                      e.bind(h, {
                        start: A,
                        move: M,
                        end: x,
                        cancel: function (e) {
                          x({
                          }, e)
                        }
                      }),
                      m.nextSlide = function (e) {
                        var n = m.carouselIndex + 1;
                        n > E.length - 1 && (n = 0),
                        K || w(n, e)
                      },
                      m.prevSlide = function (e) {
                        var n = m.carouselIndex - 1;
                        0 > n && (n = E.length - 1),
                        w(n, e)
                      };
                      var H = !0;
                      m.carouselIndex = 0,
                      _ || (E = [
                      ], angular.forEach(g(), function (e, n) {
                        E.push({
                          id: n
                        })
                      }));
                      var G;
                      if (void 0 !== p.rnCarouselAutoSlide) {
                        var O = parseInt(p.rnCarouselAutoSlide, 10) || I.autoSlideDuration;
                        G = o(function () {
                          K || P || m.nextSlide()
                        }, 1000 * O)
                      }
                      if (p.rnCarouselIndex) {
                        var q = function (e) {
                          W.assign(m.$parent, e)
                        },
                        W = t(p.rnCarouselIndex);
                        angular.isFunction(W.assign) ? (m.$watch('carouselIndex', function (e) {
                          K || q(e)
                        }), m.$parent.$watch(W, function (e) {
                          void 0 !== e && null !== e && (E && e >= E.length ? (e = E.length - 1, q(e))  : E && 0 > e && (e = 0, q(e)), K || w(e, {
                            animate: !H
                          }), H = !1)
                        }), L = !0)  : isNaN(p.rnCarouselIndex) || w(parseInt(p.rnCarouselIndex, 10), {
                          animate: !1
                        })
                      } else w(0, {
                        animate: !H
                      }),
                      H = !1;
                      if (p.rnCarouselLocked && m.$watch(p.rnCarouselLocked, function (e) {
                        K = e === !0 ? !0 : !1
                      }), _) {
                        var J = void 0 !== p.rnCarouselDeepWatch;
                        m[J ? '$watch' : '$watchCollection'](v, function (e, n) {
                          (E || e).slice();
                          if (E = e, J && angular.isArray(e)) {
                            var a = n[m.carouselIndex],
                            t = u(e, a, m.carouselIndex);
                            w(t, {
                              animate: !1
                            })
                          } else w(m.carouselIndex, {
                            animate: !1
                          })
                        }, !0)
                      }
                      m.$on('$destroy', function () {
                        a.unbind('mouseup', f)
                      }),
                      m.carouselBufferIndex = 0,
                      m.carouselBufferSize = I.bufferSize;
                      var V = angular.element(n);
                      V.bind('orientationchange', z),
                      V.bind('resize', z),
                      m.$on('$destroy', function () {
                        a.unbind('mouseup', f),
                        V.unbind('orientationchange', z),
                        V.unbind('resize', z)
                      })
                    }
                  }
                }
              }
            ])
          }(), angular.module('angular-carousel.shifty', [
          ]).factory('Tweenable', function () {
            return function (e) {
              var n = function () {
                'use strict';
                function n() {
                }
                function a(e, n) {
                  var a;
                  for (a in e) Object.hasOwnProperty.call(e, a) && n(a)
                }
                function t(e, n) {
                  return a(n, function (a) {
                    e[a] = n[a]
                  }),
                  e
                }
                function i(e, n) {
                  a(n, function (a) {
                    'undefined' == typeof e[a] && (e[a] = n[a])
                  })
                }
                function r(e, n, a, t, i, r, s) {
                  var l,
                  c = (e - r) / i;
                  for (l in n) n.hasOwnProperty(l) && (n[l] = o(a[l], t[l], d[s[l]], c));
                  return n
                }
                function o(e, n, a, t) {
                  return e + (n - e) * a(t)
                }
                function s(e, n) {
                  var t = u.prototype.filter,
                  i = e._filterArgs;
                  a(t, function (a) {
                    'undefined' != typeof t[a][n] && t[a][n].apply(e, i)
                  })
                }
                function l(e, n, a, t, i, o, l, c, u) {
                  _ = n + a,
                  b = Math.min(f(), _),
                  y = b >= _,
                  w = a - (_ - b),
                  e.isPlaying() && !y ? (e._scheduleId = u(e._timeoutHandler, v), s(e, 'beforeTween'), r(b, t, i, o, a, n, l), s(e, 'afterTween'), c(t, e._attachment, w))  : y && (c(o, e._attachment, w), e.stop(!0))
                }
                function c(e, n) {
                  var t = {
                  };
                  return 'string' == typeof n ? a(e, function (e) {
                    t[e] = n
                  })  : a(e, function (e) {
                    t[e] || (t[e] = n[e] || h)
                  }),
                  t
                }
                function u(e, n) {
                  this._currentState = e || {
                  },
                  this._configured = !1,
                  this._scheduleFunction = m,
                  'undefined' != typeof n && this.setConfig(n)
                }
                var d,
                m,
                h = 'linear',
                p = 500,
                v = 1000 / 60,
                g = Date.now ? Date.now : function () {
                  return + new Date
                },
                f = 'undefined' != typeof SHIFTY_DEBUG_NOW ? SHIFTY_DEBUG_NOW : g;
                m = 'undefined' != typeof window ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || window.mozCancelRequestAnimationFrame && window.mozRequestAnimationFrame || setTimeout : setTimeout;
                var _,
                b,
                y,
                w;
                return u.prototype.tween = function (e) {
                  return this._isTweening ? this : (void 0 === e && this._configured || this.setConfig(e), this._timestamp = f(), this._start(this.get(), this._attachment), this.resume())
                },
                u.prototype.setConfig = function (e) {
                  e = e || {
                  },
                  this._configured = !0,
                  this._attachment = e.attachment,
                  this._pausedAtTime = null,
                  this._scheduleId = null,
                  this._start = e.start || n,
                  this._step = e.step || n,
                  this._finish = e.finish || n,
                  this._duration = e.duration || p,
                  this._currentState = e.from || this.get(),
                  this._originalState = this.get(),
                  this._targetState = e.to || this.get();
                  var a = this._currentState,
                  t = this._targetState;
                  return i(t, a),
                  this._easing = c(a, e.easing || h),
                  this._filterArgs = [
                    a,
                    this._originalState,
                    t,
                    this._easing
                  ],
                  s(this, 'tweenCreated'),
                  this
                },
                u.prototype.get = function () {
                  return t({
                  }, this._currentState)
                },
                u.prototype.set = function (e) {
                  this._currentState = e
                },
                u.prototype.pause = function () {
                  return this._pausedAtTime = f(),
                  this._isPaused = !0,
                  this
                },
                u.prototype.resume = function () {
                  this._isPaused && (this._timestamp += f() - this._pausedAtTime),
                  this._isPaused = !1,
                  this._isTweening = !0;
                  var e = this;
                  return this._timeoutHandler = function () {
                    l(e, e._timestamp, e._duration, e._currentState, e._originalState, e._targetState, e._easing, e._step, e._scheduleFunction)
                  },
                  this._timeoutHandler(),
                  this
                },
                u.prototype.seek = function (e) {
                  return this._timestamp = f() - e,
                  this.isPlaying() || (this._isTweening = !0, this._isPaused = !1, l(this, this._timestamp, this._duration, this._currentState, this._originalState, this._targetState, this._easing, this._step, this._scheduleFunction), this._timeoutHandler(), this.pause()),
                  this
                },
                u.prototype.stop = function (a) {
                  return this._isTweening = !1,
                  this._isPaused = !1,
                  this._timeoutHandler = n,
                  (e.cancelAnimationFrame || e.webkitCancelAnimationFrame || e.oCancelAnimationFrame || e.msCancelAnimationFrame || e.mozCancelRequestAnimationFrame || e.clearTimeout) (this._scheduleId),
                  a && (t(this._currentState, this._targetState), s(this, 'afterTweenEnd'), this._finish.call(this, this._currentState, this._attachment)),
                  this
                },
                u.prototype.isPlaying = function () {
                  return this._isTweening && !this._isPaused
                },
                u.prototype.setScheduleFunction = function (e) {
                  this._scheduleFunction = e
                },
                u.prototype.dispose = function () {
                  var e;
                  for (e in this) this.hasOwnProperty(e) && delete this[e]
                },
                u.prototype.filter = {
                },
                u.prototype.formula = {
                  linear: function (e) {
                    return e
                  }
                },
                d = u.prototype.formula,
                t(u, {
                  now: f,
                  each: a,
                  tweenProps: r,
                  tweenProp: o,
                  applyFilter: s,
                  shallowCopy: t,
                  defaults: i,
                  composeEasingObject: c
                }),
                'function' == typeof SHIFTY_DEBUG_NOW && (e.timeoutHandler = l),
                'object' == typeof exports ? module.exports = u : 'function' == typeof define && define.amd ? define(function () {
                  return u
                })  : 'undefined' == typeof e.Tweenable && (e.Tweenable = u),
                u
              }();
              !function () {
                n.shallowCopy(n.prototype.formula, {
                  easeInQuad: function (e) {
                    return Math.pow(e, 2)
                  },
                  easeOutQuad: function (e) {
                    return - (Math.pow(e - 1, 2) - 1)
                  },
                  easeInOutQuad: function (e) {
                    return (e /= 0.5) < 1 ? 0.5 * Math.pow(e, 2)  : - 0.5 * ((e -= 2) * e - 2)
                  },
                  easeInCubic: function (e) {
                    return Math.pow(e, 3)
                  },
                  easeOutCubic: function (e) {
                    return Math.pow(e - 1, 3) + 1
                  },
                  easeInOutCubic: function (e) {
                    return (e /= 0.5) < 1 ? 0.5 * Math.pow(e, 3)  : 0.5 * (Math.pow(e - 2, 3) + 2)
                  },
                  easeInQuart: function (e) {
                    return Math.pow(e, 4)
                  },
                  easeOutQuart: function (e) {
                    return - (Math.pow(e - 1, 4) - 1)
                  },
                  easeInOutQuart: function (e) {
                    return (e /= 0.5) < 1 ? 0.5 * Math.pow(e, 4)  : - 0.5 * ((e -= 2) * Math.pow(e, 3) - 2)
                  },
                  easeInQuint: function (e) {
                    return Math.pow(e, 5)
                  },
                  easeOutQuint: function (e) {
                    return Math.pow(e - 1, 5) + 1
                  },
                  easeInOutQuint: function (e) {
                    return (e /= 0.5) < 1 ? 0.5 * Math.pow(e, 5)  : 0.5 * (Math.pow(e - 2, 5) + 2)
                  },
                  easeInSine: function (e) {
                    return - Math.cos(e * (Math.PI / 2)) + 1
                  },
                  easeOutSine: function (e) {
                    return Math.sin(e * (Math.PI / 2))
                  },
                  easeInOutSine: function (e) {
                    return - 0.5 * (Math.cos(Math.PI * e) - 1)
                  },
                  easeInExpo: function (e) {
                    return 0 === e ? 0 : Math.pow(2, 10 * (e - 1))
                  },
                  easeOutExpo: function (e) {
                    return 1 === e ? 1 : - Math.pow(2, - 10 * e) + 1
                  },
                  easeInOutExpo: function (e) {
                    return 0 === e ? 0 : 1 === e ? 1 : (e /= 0.5) < 1 ? 0.5 * Math.pow(2, 10 * (e - 1))  : 0.5 * ( - Math.pow(2, - 10 * --e) + 2)
                  },
                  easeInCirc: function (e) {
                    return - (Math.sqrt(1 - e * e) - 1)
                  },
                  easeOutCirc: function (e) {
                    return Math.sqrt(1 - Math.pow(e - 1, 2))
                  },
                  easeInOutCirc: function (e) {
                    return (e /= 0.5) < 1 ? - 0.5 * (Math.sqrt(1 - e * e) - 1)  : 0.5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
                  },
                  easeOutBounce: function (e) {
                    return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375 : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375
                  },
                  easeInBack: function (e) {
                    var n = 1.70158;
                    return e * e * ((n + 1) * e - n)
                  },
                  easeOutBack: function (e) {
                    var n = 1.70158;
                    return (e -= 1) * e * ((n + 1) * e + n) + 1
                  },
                  easeInOutBack: function (e) {
                    var n = 1.70158;
                    return (e /= 0.5) < 1 ? 0.5 * e * e * (((n *= 1.525) + 1) * e - n)  : 0.5 * ((e -= 2) * e * (((n *= 1.525) + 1) * e + n) + 2)
                  },
                  elastic: function (e) {
                    return - 1 * Math.pow(4, - 8 * e) * Math.sin(2 * (6 * e - 1) * Math.PI / 2) + 1
                  },
                  swingFromTo: function (e) {
                    var n = 1.70158;
                    return (e /= 0.5) < 1 ? 0.5 * e * e * (((n *= 1.525) + 1) * e - n)  : 0.5 * ((e -= 2) * e * (((n *= 1.525) + 1) * e + n) + 2)
                  },
                  swingFrom: function (e) {
                    var n = 1.70158;
                    return e * e * ((n + 1) * e - n)
                  },
                  swingTo: function (e) {
                    var n = 1.70158;
                    return (e -= 1) * e * ((n + 1) * e + n) + 1
                  },
                  bounce: function (e) {
                    return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + 0.75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + 0.9375 : 7.5625 * (e -= 2.625 / 2.75) * e + 0.984375
                  },
                  bouncePast: function (e) {
                    return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 2 - (7.5625 * (e -= 1.5 / 2.75) * e + 0.75)  : 2.5 / 2.75 > e ? 2 - (7.5625 * (e -= 2.25 / 2.75) * e + 0.9375)  : 2 - (7.5625 * (e -= 2.625 / 2.75) * e + 0.984375)
                  },
                  easeFromTo: function (e) {
                    return (e /= 0.5) < 1 ? 0.5 * Math.pow(e, 4)  : - 0.5 * ((e -= 2) * Math.pow(e, 3) - 2)
                  },
                  easeFrom: function (e) {
                    return Math.pow(e, 4)
                  },
                  easeTo: function (e) {
                    return Math.pow(e, 0.25)
                  }
                })
              }(),
              function () {
                function e(e, n, a, t, i, r) {
                  function o(e) {
                    return ((h * e + p) * e + v) * e
                  }
                  function s(e) {
                    return ((g * e + f) * e + _) * e
                  }
                  function l(e) {
                    return (3 * h * e + 2 * p) * e + v
                  }
                  function c(e) {
                    return 1 / (200 * e)
                  }
                  function u(e, n) {
                    return s(m(e, n))
                  }
                  function d(e) {
                    return e >= 0 ? e : 0 - e
                  }
                  function m(e, n) {
                    var a,
                    t,
                    i,
                    r,
                    s,
                    c;
                    for (i = e, c = 0; 8 > c; c++) {
                      if (r = o(i) - e, d(r) < n) return i;
                      if (s = l(i), d(s) < 0.000001) break;
                      i -= r / s
                    }
                    if (a = 0, t = 1, i = e, a > i) return a;
                    if (i > t) return t;
                    for (; t > a; ) {
                      if (r = o(i), d(r - e) < n) return i;
                      e > r ? a = i : t = i,
                      i = 0.5 * (t - a) + a
                    }
                    return i
                  }
                  var h = 0,
                  p = 0,
                  v = 0,
                  g = 0,
                  f = 0,
                  _ = 0;
                  return v = 3 * n,
                  p = 3 * (t - n) - v,
                  h = 1 - v - p,
                  _ = 3 * a,
                  f = 3 * (i - a) - _,
                  g = 1 - _ - f,
                  u(e, c(r))
                }
                function a(n, a, t, i) {
                  return function (r) {
                    return e(r, n, a, t, i, 1)
                  }
                }
                n.setBezierFunction = function (e, t, i, r, o) {
                  var s = a(t, i, r, o);
                  return s.x1 = t,
                  s.y1 = i,
                  s.x2 = r,
                  s.y2 = o,
                  n.prototype.formula[e] = s
                },
                n.unsetBezierFunction = function (e) {
                  delete n.prototype.formula[e]
                }
              }(),
              function () {
                function e(e, a, t, i, r) {
                  return n.tweenProps(i, a, e, t, 1, 0, r)
                }
                var a = new n;
                a._filterArgs = [
                ],
                n.interpolate = function (t, i, r, o) {
                  var s = n.shallowCopy({
                  }, t),
                  l = n.composeEasingObject(t, o || 'linear');
                  a.set({
                  });
                  var c = a._filterArgs;
                  c.length = 0,
                  c[0] = s,
                  c[1] = t,
                  c[2] = i,
                  c[3] = l,
                  n.applyFilter(a, 'tweenCreated'),
                  n.applyFilter(a, 'beforeTween');
                  var u = e(t, s, i, r, l);
                  return n.applyFilter(a, 'afterTween'),
                  u
                }
              }(),
              function (e) {
                function n(e, n) {
                  C.length = 0;
                  var a,
                  t = e.length;
                  for (a = 0; t > a; a++) C.push('_' + n + '_' + a);
                  return C
                }
                function a(e) {
                  var n = e.match(w);
                  return n ? (1 === n.length || e[0].match(y)) && n.unshift('')  : n = [
                    '',
                    ''
                  ],
                  n.join(x)
                }
                function t(n) {
                  e.each(n, function (e) {
                    var a = n[e];
                    'string' == typeof a && a.match(M) && (n[e] = i(a))
                  })
                }
                function i(e) {
                  return l(M, e, r)
                }
                function r(e) {
                  var n = o(e);
                  return 'rgb(' + n[0] + ',' + n[1] + ',' + n[2] + ')'
                }
                function o(e) {
                  return e = e.replace(/#/, ''),
                  3 === e.length && (e = e.split(''), e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]),
                  z[0] = s(e.substr(0, 2)),
                  z[1] = s(e.substr(2, 2)),
                  z[2] = s(e.substr(4, 2)),
                  z
                }
                function s(e) {
                  return parseInt(e, 16)
                }
                function l(e, n, a) {
                  var t = n.match(e),
                  i = n.replace(e, x);
                  if (t) for (var r, o = t.length, s = 0; o > s; s++) r = t.shift(),
                  i = i.replace(x, a(r));
                  return i
                }
                function c(e) {
                  return l(S, e, u)
                }
                function u(e) {
                  for (var n = e.match(k), a = n.length, t = e.match(A) [0], i = 0; a > i; i++) t += parseInt(n[i], 10) + ',';
                  return t = t.slice(0, - 1) + ')'
                }
                function d(t) {
                  var i = {
                  };
                  return e.each(t, function (e) {
                    var r = t[e];
                    if ('string' == typeof r) {
                      var o = f(r);
                      i[e] = {
                        formatString: a(r),
                        chunkNames: n(o, e)
                      }
                    }
                  }),
                  i
                }
                function m(n, a) {
                  e.each(a, function (e) {
                    for (var t = n[e], i = f(t), r = i.length, o = 0; r > o; o++) n[a[e].chunkNames[o]] = + i[o];
                    delete n[e]
                  })
                }
                function h(n, a) {
                  e.each(a, function (e) {
                    var t = n[e],
                    i = p(n, a[e].chunkNames),
                    r = v(i, a[e].chunkNames);
                    t = g(a[e].formatString, r),
                    n[e] = c(t)
                  })
                }
                function p(e, n) {
                  for (var a, t = {
                  }, i = n.length, r = 0; i > r; r++) a = n[r],
                  t[a] = e[a],
                  delete e[a];
                  return t
                }
                function v(e, n) {
                  P.length = 0;
                  for (var a = n.length, t = 0; a > t; t++) P.push(e[n[t]]);
                  return P
                }
                function g(e, n) {
                  for (var a = e, t = n.length, i = 0; t > i; i++) a = a.replace(x, + n[i].toFixed(4));
                  return a
                }
                function f(e) {
                  return e.match(k)
                }
                function _(n, a) {
                  e.each(a, function (e) {
                    for (var t = a[e], i = t.chunkNames, r = i.length, o = n[e].split(' '), s = o[o.length - 1], l = 0; r > l; l++) n[i[l]] = o[l] || s;
                    delete n[e]
                  })
                }
                function b(n, a) {
                  e.each(a, function (e) {
                    for (var t = a[e], i = t.chunkNames, r = i.length, o = '', s = 0; r > s; s++) o += ' ' + n[i[s]],
                    delete n[i[s]];
                    n[e] = o.substr(1)
                  })
                }
                var y = /(\d|\-|\.)/,
                w = /([^\-0-9\.]+)/g,
                k = /[0-9.\-]+/g,
                S = new RegExp('rgb\\(' + k.source + /,\s*/.source + k.source + /,\s*/.source + k.source + '\\)', 'g'),
                A = /^.*\(/,
                M = /#([0-9]|[a-f]){3,6}/gi,
                x = 'VAL',
                C = [
                ],
                z = [
                ],
                P = [
                ];
                e.prototype.filter.token = {
                  tweenCreated: function (e, n, a) {
                    t(e),
                    t(n),
                    t(a),
                    this._tokenData = d(e)
                  },
                  beforeTween: function (e, n, a, t) {
                    _(t, this._tokenData),
                    m(e, this._tokenData),
                    m(n, this._tokenData),
                    m(a, this._tokenData)
                  },
                  afterTween: function (e, n, a, t) {
                    h(e, this._tokenData),
                    h(n, this._tokenData),
                    h(a, this._tokenData),
                    b(t, this._tokenData)
                  }
                }
              }(n)
            }(window),
            window.Tweenable
          }), function () {
            'use strict';
            angular.module('angular-carousel').filter('carouselSlice', function () {
              return function (e, n, a) {
                return angular.isArray(e) ? e.slice(n, n + a)  : angular.isObject(e) ? e : void 0
              }
            })
          }(), function (e, n) {
            'use strict';
            var a = n.module('ngDropdowns', [
            ]);
            a.run(['$templateCache',
            function (e) {
              e.put('ngDropdowns/templates/dropdownSelect.html', [
                '<div class="wrap-dd-select">',
                '<span class="selected" ng-bind-html="dropdownModel[labelField]"></span>',
                '<ul class="dropdown">',
                '<li ng-repeat="item in dropdownSelect"',
                ' class="dropdown-item"',
                ' dropdown-select-item="item"',
                ' dropdown-item-label="labelField">',
                '</li>',
                '</ul>',
                '</div>'
              ].join('')),
              e.put('ngDropdowns/templates/dropdownSelectItem.html', [
                '<li ng-class="{divider: dropdownSelectItem.divider}">',
                '<a href="" class="dropdown-item"',
                ' ng-if="!dropdownSelectItem.divider"',
                ' ng-href="{{dropdownSelectItem.href}}"',
                ' ng-click="selectItem()"',
                ' ng-bind-html="dropdownSelectItem[dropdownItemLabel]">',
                '</a>',
                '</li>'
              ].join('')),
              e.put('ngDropdowns/templates/dropdownMenu.html', [
                '<ul class="dropdown">',
                '<li ng-repeat="item in dropdownMenu"',
                ' class="dropdown-item"',
                ' dropdown-item-label="labelField"',
                ' dropdown-menu-item="item">',
                '</li>',
                '</ul>'
              ].join('')),
              e.put('ngDropdowns/templates/dropdownMenuItem.html', [
                '<li ng-class="{divider: dropdownMenuItem.divider}">',
                '<a href="" class="dropdown-item"',
                ' ng-if="!dropdownMenuItem.divider"',
                ' ng-href="{{dropdownMenuItem.href}}"',
                ' ng-click="selectItem()">',
                '{{dropdownMenuItem[dropdownItemLabel]}}',
                '</a>',
                '</li>'
              ].join(''))
            }
            ]),
            a.directive('dropdownSelect', [
              'DropdownService',
              function (e) {
                return {
                  restrict: 'A',
                  replace: !0,
                  scope: {
                    dropdownSelect: '=',
                    dropdownModel: '=',
                    dropdownOnchange: '&'
                  },
                  controller: [
                    '$scope',
                    '$element',
                    '$attrs',
                    function (a, t, i) {
                      a.labelField = i.dropdownItemLabel || 'text',
                      e.register(t),
                      this.select = function (e) {
                        e !== a.dropdownModel && n.copy(e, a.dropdownModel),
                        a.dropdownOnchange({
                          selected: e
                        })
                      },
                      t.bind('click', function (n) {
                        n.stopPropagation(),
                        e.toggleActive(t)
                      }),
                      a.$on('$destroy', function () {
                        e.unregister(t)
                      })
                    }
                  ],
                  templateUrl: 'ngDropdowns/templates/dropdownSelect.html'
                }
              }
            ]),
            a.directive('dropdownSelectItem', [
              function () {
                return {
                  require: '^dropdownSelect',
                  replace: !0,
                  scope: {
                    dropdownItemLabel: '=',
                    dropdownSelectItem: '='
                  },
                  link: function (e, n, a, t) {
                    e.selectItem = function () {
                      e.dropdownSelectItem.href || t.select(e.dropdownSelectItem)
                    }
                  },
                  templateUrl: 'ngDropdowns/templates/dropdownSelectItem.html'
                }
              }
            ]),
            a.directive('dropdownMenu', [
              '$parse',
              '$compile',
              'DropdownService',
              '$templateCache',
              function (e, a, t, i) {
                return {
                  restrict: 'A',
                  replace: !1,
                  scope: {
                    dropdownMenu: '=',
                    dropdownModel: '=',
                    dropdownOnchange: '&'
                  },
                  controller: [
                    '$scope',
                    '$element',
                    '$attrs',
                    function (e, r, o) {
                      e.labelField = o.dropdownItemLabel || 'text';
                      var s = n.element(i.get('ngDropdowns/templates/dropdownMenu.html'));
                      s.data('$dropdownMenuController', this);
                      var l = a(s) (e),
                      c = n.element('<div class="wrap-dd-menu"></div>');
                      r.replaceWith(c),
                      c.append(r),
                      c.append(l),
                      t.register(l),
                      this.select = function (a) {
                        a !== e.dropdownModel && n.copy(a, e.dropdownModel),
                        e.dropdownOnchange({
                          selected: a
                        })
                      },
                      r.bind('click', function (e) {
                        e.stopPropagation(),
                        t.toggleActive(l)
                      }),
                      e.$on('$destroy', function () {
                        t.unregister(l)
                      })
                    }
                  ]
                }
              }
            ]),
            a.directive('dropdownMenuItem', [
              function () {
                return {
                  require: '^dropdownMenu',
                  replace: !0,
                  scope: {
                    dropdownMenuItem: '=',
                    dropdownItemLabel: '='
                  },
                  link: function (e, n, a, t) {
                    e.selectItem = function () {
                      e.dropdownMenuItem.href || t.select(e.dropdownMenuItem)
                    }
                  },
                  templateUrl: 'ngDropdowns/templates/dropdownMenuItem.html'
                }
              }
            ]),
            a.factory('DropdownService', [
              '$document',
              function (e) {
                var a = e.find('body'),
                t = {
                },
                i = [
                ];
                return a.bind('click', function () {
                  n.forEach(i, function (e) {
                    e.removeClass('active')
                  })
                }),
                t.register = function (e) {
                  i.push(e)
                },
                t.unregister = function (e) {
                  var n;
                  n = i.indexOf(e),
                  n > - 1 && i.splice(n, 1)
                },
                t.toggleActive = function (e) {
                  n.forEach(i, function (n) {
                    n !== e && n.removeClass('active')
                  }),
                  e.toggleClass('active')
                },
                t
              }
            ])
          }(window, window.angular), function (e, n) {
            'use strict';
            function a() {
              this.$get = [
                '$$sanitizeUri',
                function (e) {
                  return function (n) {
                    var a = [
                    ];
                    return r(n, l(a, function (n, a) {
                      return !/^unsafe/.test(e(n, a))
                    })),
                    a.join('')
                  }
                }
              ]
            }
            function t(e) {
              var a = [
              ],
              t = l(a, n.noop);
              return t.chars(e),
              a.join('')
            }
            function i(e) {
              var n,
              a = {
              },
              t = e.split(',');
              for (n = 0; n < t.length; n++) a[t[n]] = !0;
              return a
            }
            function r(e, a) {
              function t(e, t, r, s) {
                if (t = n.lowercase(t), A[t]) for (; b.last() && M[b.last()]; ) i('', b.last());
                S[t] && b.last() == t && i('', t),
                s = y[t] || !!s,
                s || b.push(t);
                var l = {
                };
                r.replace(m, function (e, n, a, t, i) {
                  var r = a || t || i || '';
                  l[n] = o(r)
                }),
                a.start && a.start(t, l, s)
              }
              function i(e, t) {
                var i,
                r = 0;
                if (t = n.lowercase(t)) for (r = b.length - 1; r >= 0 && b[r] != t; r--);
                if (r >= 0) {
                  for (i = b.length - 1; i >= r; i--) a.end && a.end(b[i]);
                  b.length = r
                }
              }
              'string' != typeof e && (e = null === e || 'undefined' == typeof e ? '' : '' + e);
              var r,
              s,
              l,
              _,
              b = [
              ],
              w = e;
              for (b.last = function () {
                return b[b.length - 1]
              }; e; ) {
                if (_ = '', s = !0, b.last() && C[b.last()] ? (e = e.replace(new RegExp('(.*)<\\s*\\/\\s*' + b.last() + '[^>]*>', 'i'), function (e, n) {
                  return n = n.replace(v, '$1').replace(f, '$1'),
                  a.chars && a.chars(o(n)),
                  ''
                }), i('', b.last()))  : (0 === e.indexOf('<!--') ? (r = e.indexOf('--', 4), r >= 0 && e.lastIndexOf('-->', r) === r && (a.comment && a.comment(e.substring(4, r)), e = e.substring(r + 3), s = !1))  : g.test(e) ? (l = e.match(g), l && (e = e.replace(l[0], ''), s = !1))  : p.test(e) ? (l = e.match(d), l && (e = e.substring(l[0].length), l[0].replace(d, i), s = !1))  : h.test(e) && (l = e.match(u), l ? (l[4] && (e = e.substring(l[0].length), l[0].replace(u, t)), s = !1)  : (_ += '<', e = e.substring(1))), s && (r = e.indexOf('<'), _ += 0 > r ? e : e.substring(0, r), e = 0 > r ? '' : e.substring(r), a.chars && a.chars(o(_)))), e == w) throw c('badparse', 'The sanitizer was unable to parse the following block of html: {0}', e);
                w = e
              }
              i()
            }
            function o(e) {
              if (!e) return '';
              var n = I.exec(e),
              a = n[1],
              t = n[3],
              i = n[2];
              return i && ($.innerHTML = i.replace(/</g, '&lt;'), i = 'textContent' in $ ? $.textContent : $.innerText),
              a + i + t
            }
            function s(e) {
              return e.replace(/&/g, '&amp;').replace(_, function (e) {
                var n = e.charCodeAt(0),
                a = e.charCodeAt(1);
                return '&#' + (1024 * (n - 55296) + (a - 56320) + 65536) + ';'
              }).replace(b, function (e) {
                return '&#' + e.charCodeAt(0) + ';'
              }).replace(/</g, '&lt;').replace(/>/g, '&gt;')
            }
            function l(e, a) {
              var t = !1,
              i = n.bind(e, e.push);
              return {
                start: function (e, r, o) {
                  e = n.lowercase(e),
                  !t && C[e] && (t = e),
                  t || z[e] !== !0 || (i('<'), i(e), n.forEach(r, function (t, r) {
                    var o = n.lowercase(r),
                    l = 'img' === e && 'src' === o || 'background' === o;
                    E[o] !== !0 || P[o] === !0 && !a(t, l) || (i(' '), i(r), i('="'), i(s(t)), i('"'))
                  }), i(o ? '/>' : '>'))
                },
                end: function (e) {
                  e = n.lowercase(e),
                  t || z[e] !== !0 || (i('</'), i(e), i('>')),
                  e == t && (t = !1)
                },
                chars: function (e) {
                  t || i(s(e))
                }
              }
            }
            var c = n.$$minErr('$sanitize'),
            u = /^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/,
            d = /^<\/\s*([\w:-]+)[^>]*>/,
            m = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,
            h = /^</,
            p = /^<\//,
            v = /<!--(.*?)-->/g,
            g = /<!DOCTYPE([^>]*?)>/i,
            f = /<!\[CDATA\[(.*?)]]>/g,
            _ = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
            b = /([^\#-~| |!])/g,
            y = i('area,br,col,hr,img,wbr'),
            w = i('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
            k = i('rp,rt'),
            S = n.extend({
            }, k, w),
            A = n.extend({
            }, w, i('address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul')),
            M = n.extend({
            }, k, i('a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var')),
            x = i('animate,animateColor,animateMotion,animateTransform,circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,set,stop,svg,switch,text,title,tspan,use'),
            C = i('script,style'),
            z = n.extend({
            }, y, A, M, S, x),
            P = i('background,cite,href,longdesc,src,usemap,xlink:href'),
            T = i('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,target,title,type,valign,value,vspace,width'),
            D = i('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,attributeName,attributeType,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan'),
            E = n.extend({
            }, P, D, T),
            $ = document.createElement('pre'),
            I = /^(\s*)([\s\S]*?)(\s*)$/;
            n.module('ngSanitize', [
            ]).provider('$sanitize', a),
            n.module('ngSanitize').filter('linky', [
              '$sanitize',
              function (e) {
                var a = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/,
                i = /^mailto:/;
                return function (r, o) {
                  function s(e) {
                    e && h.push(t(e))
                  }
                  function l(e, a) {
                    h.push('<a '),
                    n.isDefined(o) && h.push('target="', o, '" '),
                    h.push('href="', e.replace(/"/g, '&quot;'), '">'),
                    s(a),
                    h.push('</a>')
                  }
                  if (!r) return r;
                  for (var c, u, d, m = r, h = [
                  ]; c = m.match(a); ) u = c[0],
                  c[2] || c[4] || (u = (c[3] ? 'http://' : 'mailto:') + u),
                  d = c.index,
                  s(m.substr(0, d)),
                  l(u, c[0].replace(i, '')),
                  m = m.substring(d + c[0].length);
                  return s(m),
                  e(h.join(''))
                }
              }
            ])
          }(window, window.angular), function (e, n) {
            'use strict';
            function a(e, n, a) {
              t.directive(e, [
                '$parse',
                '$swipe',
                function (t, i) {
                  var r = 75,
                  o = 0.3,
                  s = 30;
                  return function (l, c, u) {
                    function d(e) {
                      if (!m) return !1;
                      var a = Math.abs(e.y - m.y),
                      t = (e.x - m.x) * n;
                      return h && r > a && t > 0 && t > s && o > a / t
                    }
                    var m,
                    h,
                    p = t(u[e]);
                    i.bind(c, {
                      start: function (e) {
                        m = e,
                        h = !0
                      },
                      cancel: function () {
                        h = !1
                      },
                      end: function (e, n) {
                        d(e) && l.$apply(function () {
                          c.triggerHandler(a),
                          p(l, {
                            $event: n
                          })
                        })
                      }
                    })
                  }
                }
              ])
            }
            var t = n.module('ngTouch', [
            ]);
            t.factory('$swipe', [
              function () {
                function e(e) {
                  var n = e.touches && e.touches.length ? e.touches : [
                    e
                  ],
                  a = e.changedTouches && e.changedTouches[0] || e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] || n[0].originalEvent || n[0];
                  return {
                    x: a.clientX,
                    y: a.clientY
                  }
                }
                var n = 10;
                return {
                  bind: function (a, t) {
                    var i,
                    r,
                    o,
                    s,
                    l = !1;
                    a.on('touchstart mousedown', function (n) {
                      o = e(n),
                      l = !0,
                      i = 0,
                      r = 0,
                      s = o,
                      t.start && t.start(o, n)
                    }),
                    a.on('touchcancel', function (e) {
                      l = !1,
                      t.cancel && t.cancel(e)
                    }),
                    a.on('touchmove mousemove', function (a) {
                      if (l && o) {
                        var c = e(a);
                        if (i += Math.abs(c.x - s.x), r += Math.abs(c.y - s.y), s = c, !(n > i && n > r)) return r > i ? (l = !1, void (t.cancel && t.cancel(a)))  : (a.preventDefault(), void (t.move && t.move(c, a)))
                      }
                    }),
                    a.on('touchend mouseup', function (n) {
                      l && (l = !1, t.end && t.end(e(n), n))
                    })
                  }
                }
              }
            ]),
            t.config(['$provide',
            function (e) {
              e.decorator('ngClickDirective', [
                '$delegate',
                function (e) {
                  return e.shift(),
                  e
                }
              ])
            }
            ]),
            t.directive('ngClick', [
              '$parse',
              '$timeout',
              '$rootElement',
              function (e, a, t) {
                function i(e, n, a, t) {
                  return Math.abs(e - a) < v && Math.abs(n - t) < v
                }
                function r(e, n, a) {
                  for (var t = 0; t < e.length; t += 2) if (i(e[t], e[t + 1], n, a)) return e.splice(t, t + 2),
                  !0;
                  return !1
                }
                function o(e) {
                  if (!(Date.now() - c > p)) {
                    var n = e.touches && e.touches.length ? e.touches : [
                      e
                    ],
                    a = n[0].clientX,
                    t = n[0].clientY;
                    1 > a && 1 > t || d && d[0] === a && d[1] === t || (d && (d = null), 'label' === e.target.tagName.toLowerCase() && (d = [
                      a,
                      t
                    ]), r(u, a, t) || (e.stopPropagation(), e.preventDefault(), e.target && e.target.blur()))
                  }
                }
                function s(e) {
                  var n = e.touches && e.touches.length ? e.touches : [
                    e
                  ],
                  t = n[0].clientX,
                  i = n[0].clientY;
                  u.push(t, i),
                  a(function () {
                    for (var e = 0; e < u.length; e += 2) if (u[e] == t && u[e + 1] == i) return void u.splice(e, e + 2)
                  }, p, !1)
                }
                function l(e, n) {
                  u || (t[0].addEventListener('click', o, !0), t[0].addEventListener('touchstart', s, !0), u = [
                  ]),
                  c = Date.now(),
                  r(u, e, n)
                }
                var c,
                u,
                d,
                m = 750,
                h = 12,
                p = 2500,
                v = 25,
                g = 'ng-click-active';
                return function (a, t, i) {
                  function r() {
                    p = !1,
                    t.removeClass(g)
                  }
                  var o,
                  s,
                  c,
                  u,
                  d = e(i.ngClick),
                  p = !1;
                  t.on('touchstart', function (e) {
                    p = !0,
                    o = e.target ? e.target : e.srcElement,
                    3 == o.nodeType && (o = o.parentNode),
                    t.addClass(g),
                    s = Date.now();
                    var n = e.touches && e.touches.length ? e.touches : [
                      e
                    ],
                    a = n[0].originalEvent || n[0];
                    c = a.clientX,
                    u = a.clientY
                  }),
                  t.on('touchmove', function () {
                    r()
                  }),
                  t.on('touchcancel', function () {
                    r()
                  }),
                  t.on('touchend', function (e) {
                    var a = Date.now() - s,
                    d = e.changedTouches && e.changedTouches.length ? e.changedTouches : e.touches && e.touches.length ? e.touches : [
                      e
                    ],
                    v = d[0].originalEvent || d[0],
                    g = v.clientX,
                    f = v.clientY,
                    _ = Math.sqrt(Math.pow(g - c, 2) + Math.pow(f - u, 2));
                    p && m > a && h > _ && (l(g, f), o && o.blur(), n.isDefined(i.disabled) && i.disabled !== !1 || t.triggerHandler('click', [
                      e
                    ])),
                    r()
                  }),
                  t.onclick = function () {
                  },
                  t.on('click', function (e, n) {
                    a.$apply(function () {
                      d(a, {
                        $event: n || e
                      })
                    })
                  }),
                  t.on('mousedown', function () {
                    t.addClass(g)
                  }),
                  t.on('mousemove mouseup', function () {
                    t.removeClass(g)
                  })
                }
              }
            ]),
            a('ngSwipeLeft', - 1, 'swipeleft'),
            a('ngSwipeRight', 1, 'swiperight')
          }(window, window.angular), 'undefined' != typeof module && 'undefined' != typeof exports && module.exports === exports && (module.exports = 'ui.router'), function (e, n, a) {
            'use strict';
            function t(e, n) {
              return L(new (L(function () {
              }, {
                prototype: e
              })), n)
            }
            function i(e) {
              return I(arguments, function (n) {
                n !== e && I(n, function (n, a) {
                  e.hasOwnProperty(a) || (e[a] = n)
                })
              }),
              e
            }
            function r(e, n) {
              var a = [
              ];
              for (var t in e.path) {
                if (e.path[t] !== n.path[t]) break;
                a.push(e.path[t])
              }
              return a
            }
            function o(e) {
              if (Object.keys) return Object.keys(e);
              var a = [
              ];
              return n.forEach(e, function (e, n) {
                a.push(n)
              }),
              a
            }
            function s(e, n) {
              if (Array.prototype.indexOf) return e.indexOf(n, Number(arguments[2]) || 0);
              var a = e.length >>> 0,
              t = Number(arguments[2]) || 0;
              for (t = 0 > t ? Math.ceil(t)  : Math.floor(t), 0 > t && (t += a); a > t; t++) if (t in e && e[t] === n) return t;
              return - 1
            }
            function l(e, n, a, t) {
              var i,
              l = r(a, t),
              c = {
              },
              u = [
              ];
              for (var d in l) if (l[d].params && (i = o(l[d].params), i.length)) for (var m in i) s(u, i[m]) >= 0 || (u.push(i[m]), c[i[m]] = e[i[m]]);
              return L({
              }, c, n)
            }
            function c(e, n, a) {
              if (!a) {
                a = [
                ];
                for (var t in e) a.push(t)
              }
              for (var i = 0; i < a.length; i++) {
                var r = a[i];
                if (e[r] != n[r]) return !1
              }
              return !0
            }
            function u(e, n) {
              var a = {
              };
              return I(e, function (e) {
                a[e] = n[e]
              }),
              a
            }
            function d(e, n) {
              var t = 1,
              r = 2,
              o = {
              },
              s = [
              ],
              l = o,
              c = L(e.when(o), {
                $$promises: o,
                $$values: o
              });
              this.study = function (o) {
                function u(e, a) {
                  if (p[a] !== r) {
                    if (h.push(a), p[a] === t) throw h.splice(0, h.indexOf(a)),
                    new Error('Cyclic dependency: ' + h.join(' -> '));
                    if (p[a] = t, D(e)) m.push(a, [
                      function () {
                        return n.get(e)
                      }
                    ], s);
                     else {
                      var i = n.annotate(e);
                      I(i, function (e) {
                        e !== a && o.hasOwnProperty(e) && u(o[e], e)
                      }),
                      m.push(a, e, i)
                    }
                    h.pop(),
                    p[a] = r
                  }
                }
                function d(e) {
                  return E(e) && e.then && e.$$promises
                }
                if (!E(o)) throw new Error('\'invocables\' must be an object');
                var m = [
                ],
                h = [
                ],
                p = {
                };
                return I(o, u),
                o = h = p = null,
                function (t, r, o) {
                  function s() {
                    --_ || (b || i(f, r.$$values), v.$$values = f, v.$$promises = !0, delete v.$$inheritedValues, p.resolve(f))
                  }
                  function u(e) {
                    v.$$failure = e,
                    p.reject(e)
                  }
                  function h(a, i, r) {
                    function l(e) {
                      d.reject(e),
                      u(e)
                    }
                    function c() {
                      if (!P(v.$$failure)) try {
                        d.resolve(n.invoke(i, o, f)),
                        d.promise.then(function (e) {
                          f[a] = e,
                          s()
                        }, l)
                      } catch (e) {
                        l(e)
                      }
                    }
                    var d = e.defer(),
                    m = 0;
                    I(r, function (e) {
                      g.hasOwnProperty(e) && !t.hasOwnProperty(e) && (m++, g[e].then(function (n) {
                        f[e] = n,
                        --m || c()
                      }, l))
                    }),
                    m || c(),
                    g[a] = d.promise
                  }
                  if (d(t) && o === a && (o = r, r = t, t = null), t) {
                    if (!E(t)) throw new Error('\'locals\' must be an object')
                  } else t = l;
                  if (r) {
                    if (!d(r)) throw new Error('\'parent\' must be a promise returned by $resolve.resolve()')
                  } else r = c;
                  var p = e.defer(),
                  v = p.promise,
                  g = v.$$promises = {
                  },
                  f = L({
                  }, t),
                  _ = 1 + m.length / 3,
                  b = !1;
                  if (P(r.$$failure)) return u(r.$$failure),
                  v;
                  r.$$inheritedValues && i(f, r.$$inheritedValues),
                  r.$$values ? (b = i(f, r.$$values), v.$$inheritedValues = r.$$values, s())  : (r.$$inheritedValues && (v.$$inheritedValues = r.$$inheritedValues), L(g, r.$$promises), r.then(s, u));
                  for (var y = 0, w = m.length; w > y; y += 3) t.hasOwnProperty(m[y]) ? s()  : h(m[y], m[y + 1], m[y + 2]);
                  return v
                }
              },
              this.resolve = function (e, n, a, t) {
                return this.study(e) (n, a, t)
              }
            }
            function m(e, n, a) {
              this.fromConfig = function (e, n, a) {
                return P(e.template) ? this.fromString(e.template, n)  : P(e.templateUrl) ? this.fromUrl(e.templateUrl, n)  : P(e.templateProvider) ? this.fromProvider(e.templateProvider, n, a)  : null
              },
              this.fromString = function (e, n) {
                return T(e) ? e(n)  : e
              },
              this.fromUrl = function (a, t) {
                return T(a) && (a = a(t)),
                null == a ? null : e.get(a, {
                  cache: n
                }).then(function (e) {
                  return e.data
                })
              },
              this.fromProvider = function (e, n, t) {
                return a.invoke(e, null, t || {
                  params: n
                })
              }
            }
            function h(e, t) {
              function i(e) {
                return P(e) ? this.type.decode(e)  : v.$$getDefaultValue(this)
              }
              function r(n, a, t) {
                if (!/^\w+(-+\w+)*$/.test(n)) throw new Error('Invalid parameter name \'' + n + '\' in pattern \'' + e + '\'');
                if (h[n]) throw new Error('Duplicate parameter name \'' + n + '\' in pattern \'' + e + '\'');
                h[n] = L({
                  type: a || new p,
                  $value: i
                }, t)
              }
              function o(e, n, a) {
                var t = e.replace(/[\\\[\]\^$*+?.()|{}]/g, '\\$&');
                if (!n) return t;
                var i = a ? '?' : '';
                return t + i + '(' + n + ')' + i
              }
              function s(e) {
                if (!t.params || !t.params[e]) return {
                };
                var n = t.params[e];
                return E(n) ? n : {
                  value: n
                }
              }
              t = n.isObject(t) ? t : {
              };
              var l,
              c = /([:*])(\w+)|\{(\w+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
              u = '^',
              d = 0,
              m = this.segments = [
              ],
              h = this.params = {
              };
              this.source = e;
              for (var g, f, _, b, y; (l = c.exec(e)) && (g = l[2] || l[3], f = l[4] || ('*' == l[1] ? '.*' : '[^/]*'), _ = e.substring(d, l.index), b = this.$types[f] || new p({
                pattern: new RegExp(f)
              }), y = s(g), !(_.indexOf('?') >= 0)); ) u += o(_, b.$subPattern(), P(y.value)),
              r(g, b, y),
              m.push(_),
              d = c.lastIndex;
              _ = e.substring(d);
              var w = _.indexOf('?');
              if (w >= 0) {
                var k = this.sourceSearch = _.substring(w);
                _ = _.substring(0, w),
                this.sourcePath = e.substring(0, d + w),
                I(k.substring(1).split(/[&?]/), function (e) {
                  r(e, null, s(e))
                })
              } else this.sourcePath = e,
              this.sourceSearch = '';
              u += o(_) + (t.strict === !1 ? '/?' : '') + '$',
              m.push(_),
              this.regexp = new RegExp(u, t.caseInsensitive ? 'i' : a),
              this.prefix = m[0]
            }
            function p(e) {
              L(this, e)
            }
            function v() {
              function e() {
                return {
                  strict: r,
                  caseInsensitive: i
                }
              }
              function n(e) {
                return T(e) || $(e) && T(e[e.length - 1])
              }
              function a() {
                I(s, function (e) {
                  if (h.prototype.$types[e.name]) throw new Error('A type named \'' + e.name + '\' has already been defined.');
                  var a = new p(n(e.def) ? t.invoke(e.def)  : e.def);
                  h.prototype.$types[e.name] = a
                })
              }
              var t,
              i = !1,
              r = !0,
              o = !0,
              s = [
              ],
              l = {
                'int': {
                  decode: function (e) {
                    return parseInt(e, 10)
                  },
                  is: function (e) {
                    return P(e) ? this.decode(e.toString()) === e : !1
                  },
                  pattern: /\d+/
                },
                bool: {
                  encode: function (e) {
                    return e ? 1 : 0
                  },
                  decode: function (e) {
                    return 0 === parseInt(e, 10) ? !1 : !0
                  },
                  is: function (e) {
                    return e === !0 || e === !1
                  },
                  pattern: /0|1/
                },
                string: {
                  pattern: /[^\/]*/
                },
                date: {
                  equals: function (e, n) {
                    return e.toISOString() === n.toISOString()
                  },
                  decode: function (e) {
                    return new Date(e)
                  },
                  encode: function (e) {
                    return [e.getFullYear(),
                    ('0' + (e.getMonth() + 1)).slice( - 2),
                    ('0' + e.getDate()).slice( - 2)].join('-')
                  },
                  pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/
                }
              };
              v.$$getDefaultValue = function (e) {
                if (!n(e.value)) return e.value;
                if (!t) throw new Error('Injectable functions cannot be called at configuration time');
                return t.invoke(e.value)
              },
              this.caseInsensitive = function (e) {
                i = e
              },
              this.strictMode = function (e) {
                r = e
              },
              this.compile = function (n, a) {
                return new h(n, L(e(), a))
              },
              this.isMatcher = function (e) {
                if (!E(e)) return !1;
                var n = !0;
                return I(h.prototype, function (a, t) {
                  T(a) && (n = n && P(e[t]) && T(e[t]))
                }),
                n
              },
              this.type = function (e, n) {
                return P(n) ? (s.push({
                  name: e,
                  def: n
                }), o || a(), this)  : h.prototype.$types[e]
              },
              this.$get = [
                '$injector',
                function (e) {
                  return t = e,
                  o = !1,
                  h.prototype.$types = {
                  },
                  a(),
                  I(l, function (e, n) {
                    h.prototype.$types[n] || (h.prototype.$types[n] = new p(e))
                  }),
                  this
                }
              ]
            }
            function g(e, n) {
              function t(e) {
                var n = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(e.source);
                return null != n ? n[1].replace(/\\(.)/g, '$1')  : ''
              }
              function i(e, n) {
                return e.replace(/\$(\$|\d{1,2})/, function (e, a) {
                  return n['$' === a ? 0 : Number(a)]
                })
              }
              function r(e, n, a) {
                if (!a) return !1;
                var t = e.invoke(n, n, {
                  $match: a
                });
                return P(t) ? t : !0
              }
              function o(n, a, t, i) {
                function r(e, n, a) {
                  return '/' === m ? e : n ? m.slice(0, - 1) + e : a ? m.slice(1) + e : e
                }
                function o(e) {
                  function a(e) {
                    var a = e(t, n);
                    return a ? (D(a) && n.replace().url(a), !0)  : !1
                  }
                  if (!e || !e.defaultPrevented) {
                    var i,
                    r = l.length;
                    for (i = 0; r > i; i++) if (a(l[i])) return;
                    c && a(c)
                  }
                }
                function d() {
                  return s = s || a.$on('$locationChangeSuccess', o)
                }
                var m = i.baseHref(),
                h = n.url();
                return u || d(),
                {
                  sync: function () {
                    o()
                  },
                  listen: function () {
                    return d()
                  },
                  update: function (e) {
                    return e ? void (h = n.url())  : void (n.url() !== h && (n.url(h), n.replace()))
                  },
                  push: function (e, a, t) {
                    n.url(e.format(a || {
                    })),
                    t && t.replace && n.replace()
                  },
                  href: function (a, t, i) {
                    if (!a.validates(t)) return null;
                    var o = e.html5Mode(),
                    s = a.format(t);
                    if (i = i || {
                    }, o || null === s || (s = '#' + e.hashPrefix() + s), s = r(s, o, i.absolute), !i.absolute || !s) return s;
                    var l = !o && s ? '/' : '',
                    c = n.port();
                    return c = 80 === c || 443 === c ? '' : ':' + c,
                    [
                      n.protocol(),
                      '://',
                      n.host(),
                      c,
                      l,
                      s
                    ].join('')
                  }
                }
              }
              var s,
              l = [
              ],
              c = null,
              u = !1;
              this.rule = function (e) {
                if (!T(e)) throw new Error('\'rule\' must be a function');
                return l.push(e),
                this
              },
              this.otherwise = function (e) {
                if (D(e)) {
                  var n = e;
                  e = function () {
                    return n
                  }
                } else if (!T(e)) throw new Error('\'rule\' must be a function');
                return c = e,
                this
              },
              this.when = function (e, a) {
                var o,
                s = D(a);
                if (D(e) && (e = n.compile(e)), !s && !T(a) && !$(a)) throw new Error('invalid \'handler\' in when()');
                var l = {
                  matcher: function (e, a) {
                    return s && (o = n.compile(a), a = [
                      '$match',
                      function (e) {
                        return o.format(e)
                      }
                    ]),
                    L(function (n, t) {
                      return r(n, a, e.exec(t.path(), t.search()))
                    }, {
                      prefix: D(e.prefix) ? e.prefix : ''
                    })
                  },
                  regex: function (e, n) {
                    if (e.global || e.sticky) throw new Error('when() RegExp must not be global or sticky');
                    return s && (o = n, n = [
                      '$match',
                      function (e) {
                        return i(o, e)
                      }
                    ]),
                    L(function (a, t) {
                      return r(a, n, e.exec(t.path()))
                    }, {
                      prefix: t(e)
                    })
                  }
                },
                c = {
                  matcher: n.isMatcher(e),
                  regex: e instanceof RegExp
                };
                for (var u in c) if (c[u]) return this.rule(l[u](e, a));
                throw new Error('invalid \'what\' in when()')
              },
              this.deferIntercept = function (e) {
                e === a && (e = !0),
                u = e
              },
              this.$get = o,
              o.$inject = [
                '$location',
                '$rootScope',
                '$injector',
                '$browser'
              ]
            }
            function f(e, i) {
              function r(e) {
                return 0 === e.indexOf('.') || 0 === e.indexOf('^')
              }
              function s(e, n) {
                if (!e) return a;
                var t = D(e),
                i = t ? e : e.name,
                o = r(i);
                if (o) {
                  if (!n) throw new Error('No reference point given for path \'' + i + '\'');
                  for (var s = i.split('.'), l = 0, c = s.length, u = n; c > l; l++) if ('' !== s[l] || 0 !== l) {
                    if ('^' !== s[l]) break;
                    if (!u.parent) throw new Error('Path \'' + i + '\' not valid for state \'' + n.name + '\'');
                    u = u.parent
                  } else u = n;
                  s = s.slice(l).join('.'),
                  i = u.name + (u.name && s ? '.' : '') + s
                }
                var d = w[i];
                return !d || !t && (t || d !== e && d.self !== e) ? a : d
              }
              function d(e, n) {
                k[e] || (k[e] = [
                ]),
                k[e].push(n)
              }
              function m(n) {
                n = t(n, {
                  self: n,
                  resolve: n.resolve || {
                  },
                  toString: function () {
                    return this.name
                  }
                });
                var a = n.name;
                if (!D(a) || a.indexOf('@') >= 0) throw new Error('State must have a valid name');
                if (w.hasOwnProperty(a)) throw new Error('State \'' + a + '\'\' is already defined');
                var i = - 1 !== a.indexOf('.') ? a.substring(0, a.lastIndexOf('.'))  : D(n.parent) ? n.parent : '';
                if (i && !w[i]) return d(i, n.self);
                for (var r in A) T(A[r]) && (n[r] = A[r](n, A.$delegates[r]));
                if (w[a] = n, !n[S] && n.url && e.when(n.url, [
                  '$match',
                  '$stateParams',
                  function (e, a) {
                    y.$current.navigable == n && c(e, a) || y.transitionTo(n, e, {
                      location: !1
                    })
                  }
                ]), k[a]) for (var o = 0; o < k[a].length; o++) m(k[a][o]);
                return n
              }
              function h(e) {
                return e.indexOf('*') > - 1
              }
              function p(e) {
                var n = e.split('.'),
                a = y.$current.name.split('.');
                if ('**' === n[0] && (a = a.slice(a.indexOf(n[1])), a.unshift('**')), '**' === n[n.length - 1] && (a.splice(a.indexOf(n[n.length - 2]) + 1, Number.MAX_VALUE), a.push('**')), n.length != a.length) return !1;
                for (var t = 0, i = n.length; i > t; t++) '*' === n[t] && (a[t] = '*');
                return a.join('') === n.join('')
              }
              function v(e, n) {
                return D(e) && !P(n) ? A[e] : T(n) && D(e) ? (A[e] && !A.$delegates[e] && (A.$delegates[e] = A[e]), A[e] = n, this)  : this
              }
              function g(e, n) {
                return E(e) ? n = e : n.name = e,
                m(n),
                this
              }
              function f(e, i, r, d, m, v, g) {
                function f(n, a, t, r) {
                  var o = e.$broadcast('$stateNotFound', n, a, t);
                  if (o.defaultPrevented) return g.update(),
                  x;
                  if (!o.retry) return null;
                  if (r.$retry) return g.update(),
                  C;
                  var s = y.transition = i.when(o.retry);
                  return s.then(function () {
                    return s !== y.transition ? A : (n.options.$retry = !0, y.transitionTo(n.to, n.toParams, n.options))
                  }, function () {
                    return x
                  }),
                  g.update(),
                  s
                }
                function k(e, a, t, s, l) {
                  var c = t ? a : u(o(e.params), a),
                  h = {
                    $stateParams: c
                  };
                  l.resolve = m.resolve(e.resolve, h, l.resolve, e);
                  var p = [
                    l.resolve.then(function (e) {
                      l.globals = e
                    })
                  ];
                  return s && p.push(s),
                  I(e.views, function (a, t) {
                    var i = a.resolve && a.resolve !== e.resolve ? a.resolve : {
                    };
                    i.$template = [
                      function () {
                        return r.load(t, {
                          view: a,
                          locals: h,
                          params: c
                        }) || ''
                      }
                    ],
                    p.push(m.resolve(i, h, l.resolve, e).then(function (r) {
                      if (T(a.controllerProvider) || $(a.controllerProvider)) {
                        var o = n.extend({
                        }, i, h);
                        r.$$controller = d.invoke(a.controllerProvider, null, o)
                      } else r.$$controller = a.controller;
                      r.$$state = e,
                      r.$$controllerAs = a.controllerAs,
                      l[t] = r
                    }))
                  }),
                  i.all(p).then(function () {
                    return l
                  })
                }
                var A = i.reject(new Error('transition superseded')),
                M = i.reject(new Error('transition prevented')),
                x = i.reject(new Error('transition aborted')),
                C = i.reject(new Error('transition failed'));
                return b.locals = {
                  resolve: null,
                  globals: {
                    $stateParams: {
                    }
                  }
                },
                y = {
                  params: {
                  },
                  current: b.self,
                  $current: b,
                  transition: null
                },
                y.reload = function () {
                  y.transitionTo(y.current, v, {
                    reload: !0,
                    inherit: !1,
                    notify: !1
                  })
                },
                y.go = function (e, n, a) {
                  return y.transitionTo(e, n, L({
                    inherit: !0,
                    relative: y.$current
                  }, a))
                },
                y.transitionTo = function (n, a, r) {
                  a = a || {
                  },
                  r = L({
                    location: !0,
                    inherit: !1,
                    relative: null,
                    notify: !0,
                    reload: !1,
                    $retry: !1
                  }, r || {
                  });
                  var m,
                  h = y.$current,
                  p = y.params,
                  w = h.path,
                  x = s(n, r.relative);
                  if (!P(x)) {
                    var C = {
                      to: n,
                      toParams: a,
                      options: r
                    },
                    z = f(C, h.self, p, r);
                    if (z) return z;
                    if (n = C.to, a = C.toParams, r = C.options, x = s(n, r.relative), !P(x)) {
                      if (!r.relative) throw new Error('No such state \'' + n + '\'');
                      throw new Error('Could not resolve \'' + n + '\' from state \'' + r.relative + '\'')
                    }
                  }
                  if (x[S]) throw new Error('Cannot transition to abstract state \'' + n + '\'');
                  r.inherit && (a = l(v, a || {
                  }, y.$current, x)),
                  n = x;
                  var T = n.path,
                  D = 0,
                  E = T[D],
                  $ = b.locals,
                  I = [
                  ];
                  if (!r.reload) for (; E && E === w[D] && c(a, p, E.ownParams); ) $ = I[D] = E.locals,
                  D++,
                  E = T[D];
                  if (_(n, h, $, r)) return n.self.reloadOnSearch !== !1 && g.update(),
                  y.transition = null,
                  i.when(y.current);
                  if (a = u(o(n.params), a || {
                  }), r.notify && e.$broadcast('$stateChangeStart', n.self, a, h.self, p).defaultPrevented) return g.update(),
                  M;
                  for (var N = i.when($), R = D; R < T.length; R++, E = T[R]) $ = I[R] = t($),
                  N = k(E, a, E === n, N, $);
                  var j = y.transition = N.then(function () {
                    var t,
                    i,
                    o;
                    if (y.transition !== j) return A;
                    for (t = w.length - 1; t >= D; t--) o = w[t],
                    o.self.onExit && d.invoke(o.self.onExit, o.self, o.locals.globals),
                    o.locals = null;
                    for (t = D; t < T.length; t++) i = T[t],
                    i.locals = I[t],
                    i.self.onEnter && d.invoke(i.self.onEnter, i.self, i.locals.globals);
                    return y.transition !== j ? A : (y.$current = n, y.current = n.self, y.params = a, B(y.params, v), y.transition = null, r.location && n.navigable && g.push(n.navigable.url, n.navigable.locals.globals.$stateParams, {
                      replace: 'replace' === r.location
                    }), r.notify && e.$broadcast('$stateChangeSuccess', n.self, a, h.self, p), g.update(!0), y.current)
                  }, function (t) {
                    return y.transition !== j ? A : (y.transition = null, m = e.$broadcast('$stateChangeError', n.self, a, h.self, p, t), m.defaultPrevented || g.update(), i.reject(t))
                  });
                  return j
                },
                y.is = function (e, t) {
                  var i = s(e);
                  return P(i) ? y.$current !== i ? !1 : P(t) && null !== t ? n.equals(v, t)  : !0 : a
                },
                y.includes = function (e, n) {
                  if (D(e) && h(e)) {
                    if (!p(e)) return !1;
                    e = y.$current.name
                  }
                  var t = s(e);
                  return P(t) ? P(y.$current.includes[t.name]) ? c(n, v)  : !1 : a
                },
                y.href = function (e, n, a) {
                  a = L({
                    lossy: !0,
                    inherit: !0,
                    absolute: !1,
                    relative: y.$current
                  }, a || {
                  });
                  var t = s(e, a.relative);
                  if (!P(t)) return null;
                  a.inherit && (n = l(v, n || {
                  }, y.$current, t));
                  var i = t && a.lossy ? t.navigable : t;
                  return i && i.url ? g.href(i.url, u(o(t.params), n || {
                  }), {
                    absolute: a.absolute
                  })  : null
                },
                y.get = function (e, n) {
                  if (0 === arguments.length) return o(w).map(function (e) {
                    return w[e].self
                  });
                  var a = s(e, n);
                  return a && a.self ? a.self : null
                },
                y
              }
              function _(e, n, a, t) {
                return e !== n || (a !== n.locals || t.reload) && e.self.reloadOnSearch !== !1 ? void 0 : !0
              }
              var b,
              y,
              w = {
              },
              k = {
              },
              S = 'abstract',
              A = {
                parent: function (e) {
                  if (P(e.parent) && e.parent) return s(e.parent);
                  var n = /^(.+)\.[^.]+$/.exec(e.name);
                  return n ? s(n[1])  : b
                },
                data: function (e) {
                  return e.parent && e.parent.data && (e.data = e.self.data = L({
                  }, e.parent.data, e.data)),
                  e.data
                },
                url: function (e) {
                  var n = e.url,
                  a = {
                    params: e.params || {
                    }
                  };
                  if (D(n)) return '^' == n.charAt(0) ? i.compile(n.substring(1), a)  : (e.parent.navigable || b).url.concat(n, a);
                  if (!n || i.isMatcher(n)) return n;
                  throw new Error('Invalid url \'' + n + '\' in state \'' + e + '\'')
                },
                navigable: function (e) {
                  return e.url ? e : e.parent ? e.parent.navigable : null
                },
                params: function (e) {
                  return e.params ? e.params : e.url ? e.url.params : e.parent.params
                },
                views: function (e) {
                  var n = {
                  };
                  return I(P(e.views) ? e.views : {
                    '': e
                  }, function (a, t) {
                    t.indexOf('@') < 0 && (t += '@' + e.parent.name),
                    n[t] = a
                  }),
                  n
                },
                ownParams: function (e) {
                  if (e.params = e.params || {
                  }, !e.parent) return o(e.params);
                  var n = {
                  };
                  I(e.params, function (e, a) {
                    n[a] = !0
                  }),
                  I(e.parent.params, function (a, t) {
                    if (!n[t]) throw new Error('Missing required parameter \'' + t + '\' in state \'' + e.name + '\'');
                    n[t] = !1
                  });
                  var a = [
                  ];
                  return I(n, function (e, n) {
                    e && a.push(n)
                  }),
                  a
                },
                path: function (e) {
                  return e.parent ? e.parent.path.concat(e)  : [
                  ]
                },
                includes: function (e) {
                  var n = e.parent ? L({
                  }, e.parent.includes)  : {
                  };
                  return n[e.name] = !0,
                  n
                },
                $delegates: {
                }
              };
              b = m({
                name: '',
                url: '^',
                views: null,
                'abstract': !0
              }),
              b.navigable = null,
              this.decorator = v,
              this.state = g,
              this.$get = f,
              f.$inject = [
                '$rootScope',
                '$q',
                '$view',
                '$injector',
                '$resolve',
                '$stateParams',
                '$urlRouter'
              ]
            }
            function _() {
              function e(e, n) {
                return {
                  load: function (a, t) {
                    var i,
                    r = {
                      template: null,
                      controller: null,
                      view: null,
                      locals: null,
                      notify: !0,
                      async: !0,
                      params: {
                      }
                    };
                    return t = L(r, t),
                    t.view && (i = n.fromConfig(t.view, t.params, t.locals)),
                    i && t.notify && e.$broadcast('$viewContentLoading', t),
                    i
                  }
                }
              }
              this.$get = e,
              e.$inject = [
                '$rootScope',
                '$templateFactory'
              ]
            }
            function b() {
              var e = !1;
              this.useAnchorScroll = function () {
                e = !0
              },
              this.$get = [
                '$anchorScroll',
                '$timeout',
                function (n, a) {
                  return e ? n : function (e) {
                    a(function () {
                      e[0].scrollIntoView()
                    }, 0, !1)
                  }
                }
              ]
            }
            function y(e, a, t) {
              function i() {
                return a.has ? function (e) {
                  return a.has(e) ? a.get(e)  : null
                }
                 : function (e) {
                  try {
                    return a.get(e)
                  } catch (n) {
                    return null
                  }
                }
              }
              function r(e, n) {
                var a = function () {
                  return {
                    enter: function (e, n, a) {
                      n.after(e),
                      a()
                    },
                    leave: function (e, n) {
                      e.remove(),
                      n()
                    }
                  }
                };
                if (l) return {
                  enter: function (e, n, a) {
                    l.enter(e, null, n, a)
                  },
                  leave: function (e, n) {
                    l.leave(e, n)
                  }
                };
                if (s) {
                  var t = s && s(n, e);
                  return {
                    enter: function (e, n, a) {
                      t.enter(e, null, n),
                      a()
                    },
                    leave: function (e, n) {
                      t.leave(e),
                      n()
                    }
                  }
                }
                return a()
              }
              var o = i(),
              s = o('$animator'),
              l = o('$animate'),
              c = {
                restrict: 'ECA',
                terminal: !0,
                priority: 400,
                transclude: 'element',
                compile: function (a, i, o) {
                  return function (a, i, s) {
                    function l() {
                      u && (u.remove(), u = null),
                      m && (m.$destroy(), m = null),
                      d && (g.leave(d, function () {
                        u = null
                      }), u = d, d = null)
                    }
                    function c(r) {
                      var c,
                      u = k(s, i.inheritedData('$uiView')),
                      f = u && e.$current && e.$current.locals[u];
                      if (r || f !== h) {
                        c = a.$new(),
                        h = e.$current.locals[u];
                        var _ = o(c, function (e) {
                          g.enter(e, i, function () {
                            (n.isDefined(v) && !v || a.$eval(v)) && t(e)
                          }),
                          l()
                        });
                        d = _,
                        m = c,
                        m.$emit('$viewContentLoaded'),
                        m.$eval(p)
                      }
                    }
                    var u,
                    d,
                    m,
                    h,
                    p = s.onload || '',
                    v = s.autoscroll,
                    g = r(s, a);
                    a.$on('$stateChangeSuccess', function () {
                      c(!1)
                    }),
                    a.$on('$viewContentLoading', function () {
                      c(!1)
                    }),
                    c(!0)
                  }
                }
              };
              return c
            }
            function w(e, n, a) {
              return {
                restrict: 'ECA',
                priority: - 400,
                compile: function (t) {
                  var i = t.html();
                  return function (t, r, o) {
                    var s = a.$current,
                    l = k(o, r.inheritedData('$uiView')),
                    c = s && s.locals[l];
                    if (c) {
                      r.data('$uiView', {
                        name: l,
                        state: c.$$state
                      }),
                      r.html(c.$template ? c.$template : i);
                      var u = e(r.contents());
                      if (c.$$controller) {
                        c.$scope = t;
                        var d = n(c.$$controller, c);
                        c.$$controllerAs && (t[c.$$controllerAs] = d),
                        r.data('$ngControllerController', d),
                        r.children().data('$ngControllerController', d)
                      }
                      u(t)
                    }
                  }
                }
              }
            }
            function k(e, n) {
              var a = e.uiView || e.name || '';
              return a.indexOf('@') >= 0 ? a : a + '@' + (n ? n.state.name : '')
            }
            function S(e, n) {
              var a,
              t = e.match(/^\s*({[^}]*})\s*$/);
              if (t && (e = n + '(' + t[1] + ')'), a = e.replace(/\n/g, ' ').match(/^([^(]+?)\s*(\((.*)\))?$/), !a || 4 !== a.length) throw new Error('Invalid state ref \'' + e + '\'');
              return {
                state: a[1],
                paramExpr: a[3] || null
              }
            }
            function A(e) {
              var n = e.parent().inheritedData('$uiView');
              return n && n.state && n.state.name ? n.state : void 0
            }
            function M(e, a) {
              var t = [
                'location',
                'inherit',
                'reload'
              ];
              return {
                restrict: 'A',
                require: [
                  '?^uiSrefActive',
                  '?^uiSrefActiveEq'
                ],
                link: function (i, r, o, s) {
                  var l = S(o.uiSref, e.current.name),
                  c = null,
                  u = A(r) || e.$current,
                  d = 'FORM' === r[0].nodeName,
                  m = d ? 'action' : 'href',
                  h = !0,
                  p = {
                    relative: u,
                    inherit: !0
                  },
                  v = i.$eval(o.uiSrefOpts) || {
                  };
                  n.forEach(t, function (e) {
                    e in v && (p[e] = v[e])
                  });
                  var g = function (n) {
                    if (n && (c = n), h) {
                      var a = e.href(l.state, c, p),
                      t = s[1] || s[0];
                      return t && t.$$setStateInfo(l.state, c),
                      null === a ? (h = !1, !1)  : void (r[0][m] = a)
                    }
                  };
                  l.paramExpr && (i.$watch(l.paramExpr, function (e) {
                    e !== c && g(e)
                  }, !0), c = i.$eval(l.paramExpr)),
                  g(),
                  d || r.bind('click', function (n) {
                    var t = n.which || n.button;
                    if (!(t > 1 || n.ctrlKey || n.metaKey || n.shiftKey || r.attr('target'))) {
                      var i = a(function () {
                        e.go(l.state, c, p)
                      });
                      n.preventDefault(),
                      n.preventDefault = function () {
                        a.cancel(i)
                      }
                    }
                  })
                }
              }
            }
            function x(e, n, a) {
              return {
                restrict: 'A',
                controller: [
                  '$scope',
                  '$element',
                  '$attrs',
                  function (t, i, r) {
                    function o() {
                      s() ? i.addClass(m)  : i.removeClass(m)
                    }
                    function s() {
                      return 'undefined' != typeof r.uiSrefActiveEq ? e.$current.self === u && l()  : e.includes(u.name) && l()
                    }
                    function l() {
                      return !d || c(d, n)
                    }
                    var u,
                    d,
                    m;
                    m = a(r.uiSrefActiveEq || r.uiSrefActive || '', !1) (t),
                    this.$$setStateInfo = function (n, a) {
                      u = e.get(n, A(i)),
                      d = a,
                      o()
                    },
                    t.$on('$stateChangeSuccess', o)
                  }
                ]
              }
            }
            function C(e) {
              return function (n) {
                return e.is(n)
              }
            }
            function z(e) {
              return function (n) {
                return e.includes(n)
              }
            }
            var P = n.isDefined,
            T = n.isFunction,
            D = n.isString,
            E = n.isObject,
            $ = n.isArray,
            I = n.forEach,
            L = n.extend,
            B = n.copy;
            n.module('ui.router.util', [
              'ng'
            ]),
            n.module('ui.router.router', [
              'ui.router.util'
            ]),
            n.module('ui.router.state', [
              'ui.router.router',
              'ui.router.util'
            ]),
            n.module('ui.router', [
              'ui.router.state'
            ]),
            n.module('ui.router.compat', [
              'ui.router'
            ]),
            d.$inject = [
              '$q',
              '$injector'
            ],
            n.module('ui.router.util').service('$resolve', d),
            m.$inject = [
              '$http',
              '$templateCache',
              '$injector'
            ],
            n.module('ui.router.util').service('$templateFactory', m),
            h.prototype.concat = function (e, n) {
              return new h(this.sourcePath + e + this.sourceSearch, n)
            },
            h.prototype.toString = function () {
              return this.source
            },
            h.prototype.exec = function (e, n) {
              var a = this.regexp.exec(e);
              if (!a) return null;
              n = n || {
              };
              var t,
              i,
              r,
              o = this.parameters(),
              s = o.length,
              l = this.segments.length - 1,
              c = {
              };
              if (l !== a.length - 1) throw new Error('Unbalanced capture group in route \'' + this.source + '\'');
              for (t = 0; l > t; t++) r = o[t],
              i = this.params[r],
              c[r] = i.$value(a[t + 1]);
              for (; s > t; t++) r = o[t],
              i = this.params[r],
              c[r] = i.$value(n[r]);
              return c
            },
            h.prototype.parameters = function (e) {
              return P(e) ? this.params[e] || null : o(this.params)
            },
            h.prototype.validates = function (e) {
              var n,
              a,
              t = !0,
              i = this;
              return I(e, function (e, r) {
                i.params[r] && (a = i.params[r], n = !e && P(a.value), t = t && (n || a.type.is(e)))
              }),
              t
            },
            h.prototype.format = function (e) {
              var n = this.segments,
              a = this.parameters();
              if (!e) return n.join('').replace('//', '/');
              var t,
              i,
              r,
              o,
              s,
              l,
              c = n.length - 1,
              u = a.length,
              d = n[0];
              if (!this.validates(e)) return null;
              for (t = 0; c > t; t++) o = a[t],
              r = e[o],
              s = this.params[o],
              (P(r) || '/' !== n[t] && '/' !== n[t + 1]) && (null != r && (d += encodeURIComponent(s.type.encode(r))), d += n[t + 1]);
              for (; u > t; t++) o = a[t],
              r = e[o],
              null != r && (l = $(r), l && (r = r.map(encodeURIComponent).join('&' + o + '=')), d += (i ? '&' : '?') + o + '=' + (l ? r : encodeURIComponent(r)), i = !0);
              return d
            },
            h.prototype.$types = {
            },
            p.prototype.is = function () {
              return !0
            },
            p.prototype.encode = function (e) {
              return e
            },
            p.prototype.decode = function (e) {
              return e
            },
            p.prototype.equals = function (e, n) {
              return e == n
            },
            p.prototype.$subPattern = function () {
              var e = this.pattern.toString();
              return e.substr(1, e.length - 2)
            },
            p.prototype.pattern = /.*/,
            n.module('ui.router.util').provider('$urlMatcherFactory', v),
            g.$inject = [
              '$locationProvider',
              '$urlMatcherFactoryProvider'
            ],
            n.module('ui.router.router').provider('$urlRouter', g),
            f.$inject = [
              '$urlRouterProvider',
              '$urlMatcherFactoryProvider'
            ],
            n.module('ui.router.state').value('$stateParams', {
            }).provider('$state', f),
            _.$inject = [
            ],
            n.module('ui.router.state').provider('$view', _),
            n.module('ui.router.state').provider('$uiViewScroll', b),
            y.$inject = [
              '$state',
              '$injector',
              '$uiViewScroll'
            ],
            w.$inject = [
              '$compile',
              '$controller',
              '$state'
            ],
            n.module('ui.router.state').directive('uiView', y),
            n.module('ui.router.state').directive('uiView', w),
            M.$inject = [
              '$state',
              '$timeout'
            ],
            x.$inject = [
              '$state',
              '$stateParams',
              '$interpolate'
            ],
            n.module('ui.router.state').directive('uiSref', M).directive('uiSrefActive', x).directive('uiSrefActiveEq', x),
            C.$inject = [
              '$state'
            ],
            z.$inject = [
              '$state'
            ],
            n.module('ui.router.state').filter('isState', C).filter('includedByState', z)
          }(window, window.angular), angular.module('filters', [
          ]).filter('location', function () {
            return function (e, n) {
              if (null != e) {
                var a = e.split(',');
                if (a.length > 1) {
                  if ('city' === n) return a[0];
                  if ('country' == n) {
                    var t = a.length - 1;
                    return a[t]
                  }
                  if ('lessCity' === n) return a.splice(0, 1),
                  '(' + a.join(', ') + ')'
                }
              }
              return ''
            }
          }), multimarca_dependencies = [
            'ui.router',
            'LocalStorageModule',
            'ngAnimate',
            'ngSanitize',
            'ngDropdowns',
            'filters',
            'angular-carousel'
          ], __eolo = 'undefined' != typeof __eolo, template_path = '', url_path = '', websocket_test_path = 'localhost:3002/websocket', environment = '', __eolo ? (template_path = './templates/', url_path = 'https://dkn.airzonecloud.com/', check_status_url_path = 'https://logging.airzonecloud.com:8443/api/v1/app_manager/', environment = 'production')  : (multimarca_dependencies.push('angularFileUpload'), multimarca_dependencies.push('templates'), multimarca_dependencies.push('ngGrid'), environment = gon.environment), Multimarca = angular.module('Multimarca', multimarca_dependencies), Multimarca.constant('URL_PATH', url_path), Multimarca.constant('VERSION_APP', '189'), Multimarca.config(['$stateProvider',
          '$urlRouterProvider',
          function (e, n) {
            n.otherwise(__eolo ? '/splash' : '/home/installations'),
            e.state('init', {
              'abstract': !0,
              url: '/init',
              templateUrl: template_path + 'init.html',
              controller: 'initController'
            }).state('splash', {
              url: '/splash',
              templateUrl: template_path + 'splash.html',
              resolve: {
                checkVersion: [
                  '$http',
                  '$state',
                  '$rootScope',
                  'VERSION_APP',
                  function (e, n, a, t) {
                    return e.get(check_status_url_path + 'check_status/dkn?version=' + t).catch (function (e) {
                      e && 503 == e.status ? n.go('init.maintenance')  : e && 403 == e.status && n.go('init.update_app')
                    })
                  }
                ]
              },
              controller: function (e, n, a, t) {
                a.version_app_string = String(t),
                a.version_app = a.version_app_string[0] + '.' + a.version_app_string[1] + '.' + a.version_app_string[2],
                setTimeout(function () {
                  e.go('home.installations')
                }, 3000)
              }
            }).state('association', {
              url: '/association',
              templateUrl: template_path + 'association.html',
              controller: 'associationController'
            }).state('init.login', {
              url: '/login?email_confirmed',
              templateUrl: template_path + 'login.html',
              controller: 'loginController'
            }).state('init.register', {
              url: '/register?info_hide',
              templateUrl: template_path + 'register.html',
              controller: 'registerController'
            }).state('init.complete', {
              url: '/complete_registration?reset_password_token&email&name&surname',
              templateUrl: template_path + 'complete_registration.html',
              controller: 'completeRegistrationController'
            }).state('init.password', {
              url: '/password?reset_password_token',
              templateUrl: template_path + 'password.html',
              controller: 'passwordController'
            }).state('init.confirmation', {
              url: '/confirmation?invalid_token',
              templateUrl: template_path + 'confirmation.html',
              controller: 'confirmationController'
            }).state('home', {
              url: '/home',
              'abstract': !0,
              templateUrl: template_path + 'home.html',
              controller: 'homeController',
              resolve: {
                checkLogin: [
                  'sessionService',
                  '$q',
                  'websocketsService',
                  function (e, n, a) {
                    return e.user().then(function () {
                      a.init()
                    }, function () {
                      return n.reject()
                    })
                  }
                ]
              }
            }).state('home.installations', {
              url: '/installations',
              templateUrl: template_path + 'user_installations.html',
              controller: 'userInstallationsController'
            }).state('home.installation', {
              url: '/installation?id',
              templateUrl: template_path + 'user_installation.html',
              controller: 'userInstallationController'
            }).state('home.users', {
              url: '/users?installation_id&permission_relation_id',
              templateUrl: template_path + 'device_users.html',
              controller: 'deviceUsersController'
            }).state('home.addUserDevice', {
              url: '/add_user_device',
              templateUrl: template_path + 'add_user_device.html',
              controller: 'addDeviceController'
            }).state('home.editInstallation', {
              url: '/edit_installation?ir',
              templateUrl: template_path + 'edit_installation.html',
              controller: 'editInstallationController'
            }).state('home.support', {
              url: '/support',
              templateUrl: template_path + 'support.html',
              controller: 'supportController'
            }).state('home.device', {
              url: '/device?id&installation_id',
              templateUrl: template_path + 'device.html',
              controller: 'deviceController',
              onEnter: [
                '$rootScope',
                function (e) {
                  e.deviceView = !0
                }
              ],
              onExit: [
                '$rootScope',
                function (e) {
                  e.deviceView = !1
                }
              ]
            }).state('init.browsers', {
              url: '/browsers',
              templateUrl: template_path + 'unsupported_browser.html'
            }).state('init.403', {
              url: '/403',
              templateUrl: template_path + '403.html'
            }).state('init.404', {
              url: '/404',
              templateUrl: template_path + '404.html'
            }).state('home.adjust', {
              url: '/adjust',
              templateUrl: template_path + 'adjust.html',
              controller: 'adjustController'
            }).state('home.help', {
              url: '/help',
              templateUrl: template_path + 'help.html'
            }),
            __eolo || e.state('home.addServer', {
              url: '/admin_add_server',
              templateUrl: template_path + 'admin_add_server.html',
              controller: 'adminAddServerController'
            }).state('home.adminAdjust', {
              url: '/admin_adjust',
              templateUrl: template_path + 'admin_adjust.html',
              controller: 'adminAdjustController'
            }).state('home.admin', {
              url: '/admin_servers',
              templateUrl: template_path + 'admin_servers.html',
              controller: 'adminListController'
            }).state('home.admin_users', {
              url: '/admin_users',
              templateUrl: template_path + 'admin_users.html',
              controller: 'adminUsersController'
            }).state('home.map', {
              url: '/admin_map',
              templateUrl: template_path + 'admin_map.html',
              controller: 'adminMapController'
            }).state('home.adminFirmware', {
              url: '/admin_firmware',
              templateUrl: template_path + 'admin_firmware.html',
              controller: 'adminFirmwareController'
            }).state('home.adminExport', {
              url: '/admin_export',
              templateUrl: template_path + 'admin_export.html',
              controller: 'adminExportController'
            })
          }
          ]), Multimarca.config(['localStorageServiceProvider',
          function (e) {
            e.setPrefix('Multimarca')
          }
          ]), Multimarca.config(['$httpProvider',
          function (e) {
            e.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest',
            __eolo && e.interceptors.push(__eolo.interceptor)
          }
          ]), Multimarca.run(['$rootScope',
          'sessionService',
          function (e, n) {
            e.menuTrigger = !1,
            e.showMenuBtn = !1,
            e.checkPermissions = function (a) {
              adminSites = [
                'home',
                'home.admin',
                'home.addServer',
                'home.map',
                'home.adminAdjust',
                'home.admin_users',
                'home.adminFirmware',
                'home.adminExport'
              ],
              basicSites = [
                'home',
                'home.installations',
                'home.addUserDevice',
                'home.adjust',
                'home.help',
                'home.installation',
                'home.users',
                'home.editInstallation',
                'home.device',
                'home.support'
              ];
              var t = n.role();
              return 'demo' == t && (e.demo = !0),
              'admin' == t || 'super_admin' == t ? - 1 != $.inArray(a.name, adminSites)  : 'basic' == t || 'demo' == t ? - 1 != $.inArray(a.name, basicSites)  : !1
            },
            e.$on('$stateChangeStart', function (a, t) {
              'init' != t.name.split('.') [0] && 'association' != t.name.split('.') [0] && (n.checkSession() && n.checkUser() ? e.checkPermissions(t) ? e.loader = !0 : (a.preventDefault(), n.unauthorize())  : n.checkSession() && n.user().catch (function () {
                a.preventDefault(),
                n.unauthorize()
              }))
            }),
            e.$on('$stateChangeSuccess', function (n, a) {
              e.menuTrigger = !1,
              e.loader = !1,
              e.showMenuBtn = 'home.device' == a.name ? !1 : !0
            }),
            e.$on('$stateChangeError', function (e) {
              e.preventDefault(),
              n.unauthorize()
            }),
            e.isMobile = $.browser.mobile,
            e.modalShow = !1,
            e.deviceView = !1,
            e.environment = environment,
            e.demo = n.typeUser('demo'),
            e.show_edit_servers_btn,
            e.show_climate_info,
            e.show_climate = !1,
            e.velocity_target,
            e.mode_target,
            e.vertical_target,
            e.horizontal_target,
            e.scenary_target,
            e.last_zone_number,
            e.installation_config_target,
            e.device_config_target,
            e.device_alert_installer,
            e.devices,
            e.editServer,
            e.disconnection,
            e.user,
            e.disconnected_device,
            e.show_disconnected_device,
            e.machine_ready_error,
            e.not_machine_ready,
            e.error_device,
            e.show_backend_error,
            e.update_schedules,
            e.server_updated,
            e.browser_continue = !1,
            e.detectLanguage = function () {
              if (n.checkUser() && !e.demo) e.language = n.language();
               else {
                var a = navigator.language || navigator.userLanguage;
                e.language = a.indexOf('es') > - 1 ? 'es' : a.indexOf('fr') > - 1 ? 'fr' : a.indexOf('it') > - 1 ? 'it' : a.indexOf('pt') > - 1 ? 'pt' : a.indexOf('de') > - 1 ? 'de' : 'en'
              }
            },
            e.detectLanguage(),
            e.i18n = function (a) {
              return I18n.t(a, {
                locale: n.language() || e.language || 'es'
              })
            }
          }
          ]), Multimarca.controller('addDeviceController', [
            '$scope',
            '$http',
            'sessionService',
            'installationService',
            'installationRelationService',
            'deviceService',
            '$state',
            function (e, n, a, t, i, r, o) {
              function s() {
                e.loader_installations = !0,
                t.getInstallations(!0).then(function (n) {
                  e.installations = n,
                  e.showNewInstallation(!1),
                  e.loader_installations = !1
                }).catch (function (e) {
                  console.log('Error to get the installations data:', e),
                  $rootScope.show_backend_error = !0
                })
              }
              e.show_error = !1,
              e.show_success = !1,
              e.taken_error = !1,
              e.mac_error = !1,
              e.pin_error = !1,
              e.device = null,
              e.installations = [
              ],
              e.installation = null,
              e.installation_selected = null,
              e.installation_relation = null,
              e.show_new_installation = !1,
              e.loader_installations = !0,
              e.show_types = !1,
              e.show_confirm = !1,
              e.buttons = {
                saveDevice: !1,
                saveInstallation: !1
              },
              s(),
              e.showNewInstallation = function (n) {
                e.addInstallationForm.$pristine = !0,
                e.installation = {
                },
                e.show_types = !1,
                e.installation.type = 'home',
                e.show_new_installation = n
              },
              e.selectInstallationType = function (n) {
                e.installation.type = n,
                e.show_types = !1
              },
              e.submitInstallationForm = function () {
                if (e.installation.spot_google_id || (e.installation.location = '', e.addInstallationForm.location.$setValidity('required', !1)), e.addInstallationForm.$valid) {
                  e.buttons.saveInstallation = !0;
                  var n = {
                    installation: {
                      owner_id: a.id(),
                      name: e.installation.name,
                      icon: e.installation.icon,
                      spot_location: e.installation.spot_location,
                      spot_complete_name: e.installation.spot_complete_name,
                      spot_google_id: e.installation.spot_google_id,
                      spot_google_reference: e.installation.spot_google_reference,
                      spot_country_code: e.installation.spot_country_code,
                      type: e.installation.type,
                      postal_code: e.installation.postal_code
                    }
                  };
                  t.createInstallation(n).then(function () {
                    e.buttons.saveInstallation = !1,
                    s()
                  }).catch (function (n) {
                    console.log('Error to create the isntallation:', n),
                    $rootScope.show_backend_error = !0,
                    e.buttons.saveInstallation = !1
                  })
                } else e.addInstallationForm.invalid = !0
              },
              e.selectInstallation = function (n) {
                e.installation_selected = n
              },
              e.submitAddDeviceForm = function () {
                if (null == e.installation_selected && (e.addDeviceForm.invalid = !0), e.addDeviceForm.$valid && null != e.installation_selected) {
                  e.buttons.saveDevice = !0;
                  var n = {
                    installation_relation: {
                      user_id: a.id(),
                      installation_id: e.installation_selected.id,
                      type: 'advanced',
                      brand: e.device.model_device,
                      name: e.device.name,
                      mac: e.device.mac,
                      pin: e.device.pin
                    }
                  };
                  i.createInstallationRelation(n).then(function () {
                    e.show_success = !0,
                    e.buttons.saveDevice = !1
                  }).catch (function (n) {
                    e.buttons.saveDevice = !1,
                    e.addDeviceForm.invalid = !0,
                    e.show_error = !0,
                    n.errors.device_id ? n.errors.device_id.indexOf('taken') > - 1 ? e.taken_error = !0 : n.errors.device_id.indexOf('sleeping') > - 1 && (e.sleeping_error = !0)  : n.errors.mac ? e.mac_error = !0 : n.errors.pin ? e.pin_error = !0 : n.errors.user_id && n.errors.user_id.indexOf('taken') > - 1 && (e.taken_error = !0)
                  })
                } else e.addDeviceForm.invalid = !0
              },
              e.acceptError = function () {
                e.show_error = !1,
                e.taken_error = !1,
                e.mac_error = !1,
                e.pin_error = !1,
                e.sleeping_error = !1
              },
              e.macPattern = function () {
                var e = /^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/;
                return {
                  test: function (n) {
                    return e.test(n)
                  }
                }
              }(),
              e.check_remove_installation = function () {
                o.go('home.installations', {
                }, {
                  reload: !0
                })
              },
              e.cancelConfirm = function () {
                e.show_confirm = !1
              }
            }
          ]), Multimarca.controller('adjustController', [
            '$scope',
            '$rootScope',
            '$http',
            '$state',
            'sessionService',
            'userService',
            function (e, n, a, t, i, r) {
              function o() {
                i.user().then(function (a) {
                  e.user = a,
                  n.isMobile && (e.languageDefault = e.user.language || __eolo.default_language),
                  e.languages.forEach(function (n) {
                    n.value == e.user.language && (e.languageDefault = JSON.parse(JSON.stringify(n)), e.languageDefaultMobile = JSON.parse(JSON.stringify(n)).value, e.user.language = n.value)
                  })
                })
              }
              e.languageDefault = null,
              e.languageDefaultMobile = null,
              e.changePass = !1,
              e.invalid = !1,
              e.buttons = {
                save: !1
              },
              e.passUser = {
                pass: '',
                repass: '',
                repass2: ''
              },
              e.languages = [
                {
                  text: n.i18n('adjust.spanish'),
                  value: 'es'
                },
                {
                  text: n.i18n('adjust.english'),
                  value: 'en'
                },
                {
                  text: n.i18n('adjust.french'),
                  value: 'fr'
                },
                {
                  text: n.i18n('adjust.italian'),
                  value: 'it'
                },
                {
                  text: n.i18n('adjust.portuguese'),
                  value: 'pt'
                },
                {
                  text: n.i18n('adjust.german'),
                  value: 'de'
                }
              ],
              e.message = !1,
              o(),
              e.changeLanguage = function (a) {
                e.user.language = a.value,
                n.language_changed = !0
              },
              __eolo && $('#language_select').change(function () {
                e.user.language = $(this).val(),
                n.language_changed = !0
              }),
              e.saveUserSettings = function () {
                if (e.editUserForm.$valid) {
                  e.buttons.save = !0;
                  var a = {
                    user_token: i.token(),
                    user_email: i.email(),
                    user: {
                      name: e.user.name,
                      surname: e.user.surname,
                      language: e.user.language,
                      advanced_adjust: e.user.advanced_adjust,
                      unit_format: e.user.unit_format
                    }
                  };
                  r.updateUser(e.user.id, a).then(function () {
                    i.requestUserData().then(function () {
                      e.message = 'saveSuccess',
                      n.language = e.user.language
                    }).catch (function (n) {
                      console.log('Error get the user data:', n),
                      e.message = 'errorServer'
                    })
                  }).catch (function (e) {
                    console.log('Error to update the user data:', e),
                    n.show_backend_error = !0
                  })
                } else e.editUserForm.invalid = !0
              },
              e.deleteUserConfirmation = function () {
                return i.destroyUser().then(function () {
                  e.message = 'deleteUserSuccess'
                }).catch (function (n) {
                  e.message = 'errorServer',
                  console.log('Error to get the user data:', n)
                })
              },
              e.exitUser = function () {
                i.unauthorize()
              },
              e.reloadAdjust = function () {
                t.go('home.adjust', {
                }, {
                  reload: !0
                })
              },
              e.showMessageConfirm = function () {
                e.message = 'deleteUserConfirm'
              },
              e.tooglePassView = function () {
                e.passUser = {
                  pass: '',
                  repass: '',
                  repass2: ''
                },
                e.changePassUserForm.invalid = !1,
                e.invalid_password = !1,
                e.changePass = !e.changePass
              },
              e.changePassUser = function () {
                e.invalid_password = !1,
                e.changePassUserForm.$valid ? (params = {
                  user_token: i.token(),
                  user_email: i.email(),
                  user: {
                    old_password: e.passUser.pass,
                    password: e.passUser.repass,
                    password_confirmation: e.passUser.repass
                  }
                }, r.updateUser(e.user.id, params).then(function () {
                  i.requestUserData().then(function () {
                    e.message = 'saveSuccess',
                    e.tooglePassView()
                  }).catch (function () {
                    e.changePassUserForm.invalid = !0,
                    e.invalid_password = !0
                  })
                }).catch (function (e) {
                  console.log('Error to update the user data:', e),
                  n.show_backend_error = !0
                }))  : e.changePassUserForm.invalid = !0
              },
              e.toggleUnitForm = function () {
                e.user.unit_format = 'celsius' == e.user.unit_format ? 'fahrenheit' : 'celsius'
              }
            }
          ]), Multimarca.controller('adminExportController', [
            '$scope',
            '$rootScope',
            function () {
            }
          ]), Multimarca.controller('adminAddServerController', [
            '$scope',
            'deviceService',
            '$state',
            '$http',
            '$upload',
            'sessionService',
            function (e, n, a, t, i, r) {
              e.success_devices = 0,
              e.failure_devices = 0,
              e.already_register_mac = !1,
              e.loader = !1,
              e.file_error = !1,
              e.erroneous_devices = [
              ],
              e.submitAddServerFileForm = function () {
                e.file_error = !1,
                e.addServerFileForm.$valid ? n.createDevicesFile(e.file).then(function (n) {
                  e.loader = !0,
                  e.import_device_id = n.import_devices.id,
                  interval = setInterval(function () {
                    t({
                      method: 'get',
                      url: url_path + 'import_devices/' + e.import_device_id,
                      params: {
                        user_email: r.email(),
                        user_token: r.token(),
                        format: 'json'
                      }
                    }).then(function (n) {
                      'finished' == n.import_devices.state && (clearInterval(interval), e.erroneous_devices = n.import_devices.failure_devices, e.success_devices = n.import_devices.success_devices.length, e.failure_devices = n.import_devices.failure_devices.length, e.loader = !1)
                    }).catch (function (e, n) {
                      401 == n ? r.unauthorize()  : 403 == n ? a.go('init.403')  : 404 == n ? a.go('init.404')  : (console.log('Error to import the devices with file:', error), $rootScope.show_backend_error = !0)
                    })
                  }, 1000)
                }).catch (function () {
                  e.addServerFileForm.invalid = !0,
                  e.file_error = !0
                })  : e.addServerFileForm.invalid = !0
              },
              e.submitAddServerForm = function () {
                e.already_register_mac = !1,
                e.addServerForm.$valid ? n.createDevice(e.server.mac, e.server.pin).then(function () {
                  e.show_success = !0
                }).catch (function () {
                  e.addServerForm.invalid = !0,
                  e.already_register_mac = !0
                })  : e.addServerForm.invalid = !0
              },
              e.onFileSelect = function (n) {
                e.file = n[0],
                $('input[name=file]').attr('title', e.file.name)
              },
              e.macPattern = function () {
                var e = /^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/;
                return {
                  test: function (n) {
                    return e.test(n)
                  }
                }
              }(),
              e.reloadPage = function () {
                a.go('home.addServer', {
                }, {
                  reload: !0
                })
              }
            }
          ]), Multimarca.controller('adminAdjustController', [
            '$scope',
            '$rootScope',
            'sessionService',
            function (e, n, a) {
              a.user().then(function (n) {
                e.user = n
              }).catch (function (e) {
                console.log('Error to get the user data:', e),
                n.show_backend_error = !0
              })
            }
          ]), Multimarca.controller('adminFirmwareController', [
            '$scope',
            '$rootScope',
            function () {
            }
          ]), Multimarca.controller('adminListController', [
            '$scope',
            '$rootScope',
            '$http',
            'sessionService',
            '$state',
            'userService',
            'eventsService',
            function (e, n, a, t, i, r, o) {
              e.show_modal = !1,
              e.modal_status = 'info',
              e.current_page = 1,
              e.total_pages = 1,
              e.total_devices = 0,
              e.accordion = 0,
              e.update_success = !1,
              e.first_time = !0,
              e.macErrorMessage = !1,
              e.locationErrorMessage = !1,
              e.pagination = !1,
              e.statusList = [
                {
                  text: n.i18n('all'),
                  value: ''
                },
                {
                  text: n.i18n('sleeping'),
                  value: 'sleeping'
                },
                {
                  text: n.i18n('connected'),
                  value: 'connected'
                },
                {
                  text: n.i18n('activated'),
                  value: 'activated'
                }
              ],
              e.filterStatus = {
                text: n.i18n('all'),
                value: ''
              },
              e.getDevices = function () {
                e.macErrorMessage = !1,
                e.locationErrorMessage = !1,
                params = {
                  user_token: t.token(),
                  user_email: t.email(),
                  limit: 10,
                  page: e.current_page
                },
                e.filterMac && e.filterMac.length > 4 ? params.mac = e.filterMac : !e.first_time && e.filterMac && (e.macErrorMessage = !0, console.log('Debe tener mínimo 4 dígitos')),
                e.filterStatus && e.filterStatus.value.length > 0 && (params.status = e.filterStatus.value),
                e.filterLocation && e.filterLocation.length > 2 ? params.location = e.filterLocation : !e.first_time && e.filterLocation && (e.locationErrorMessage = !0, console.log('Debe tener mínimo 3 caracteres')),
                e.orderBy && (params.order_by = e.orderBy, params.order = e.orderAsc ? 'asc' : 'desc'),
                (e.first_time || e.pagination || params.status || params.mac || params.location) && (e.first_time = !1, e.pagination = !1, a({
                  method: 'GET',
                  url: url_path + 'devices',
                  params: params,
                  data: {
                  }
                }).then(function (n) {
                  n = n.data,
                  e.servers = n.devices,
                  e.total_pages = n.total_pages,
                  e.total_devices = n.count
                }).catch (function (e, a) {
                  401 == a ? t.unauthorize()  : 403 == a ? i.go('init.403')  : 404 == a ? i.go('init.404')  : (console.log('Error to get the list of devices:', e), n.show_backend_error = !0)
                }))
              },
              e.getDevices(),
              e.showServerInfo = function (i) {
                e.show_modal = !0,
                n.modalShow = !0,
                e.accordion = 0,
                e.server = i,
                r.getInstallationUsers(e.server.installation_id).then(function (n) {
                  e.users = n.users
                }).catch (function (e) {
                  console.log('Error to get the installations of the users:', e),
                  n.show_backend_error = !0
                }),
                e.listener = e.$watch('server.enabled', function (i, r) {
                  i !== r && a({
                    method: 'PUT',
                    url: url_path + 'devices/' + e.server.id,
                    data: {
                      user_email: t.email(),
                      user_token: t.token(),
                      device: {
                        enabled: e.server.enabled
                      }
                    }
                  }).then(function () {
                  }).catch (function (e) {
                    console.log('Error to update device:', e),
                    n.show_backend_error = !0
                  })
                })
              },
              e.removeDevice = function () {
                a({
                  method: 'DELETE',
                  url: url_path + 'devices/' + e.server.id,
                  params: {
                    user_token: t.token(),
                    user_email: t.email()
                  }
                }).then(function () {
                  var n = e.servers.indexOf(e.server);
                  e.servers.splice(n, 1),
                  e.modal_status = 'remove_success'
                }).catch (function (e) {
                  console.log('Error to delete device:', e),
                  n.show_backend_error = !0
                })
              },
              e.goToList = function () {
                e.show_modal = !1,
                n.modalShow = !1,
                e.modal_status = 'info',
                e.listener()
              },
              e.restoreToFactory = function () {
                a({
                  method: 'PUT',
                  url: url_path + 'devices/' + e.server.id,
                  data: {
                    user_email: t.email(),
                    user_token: t.token(),
                    device: {
                      status: 'sleeping'
                    }
                  }
                }).then(function () {
                  e.modal_status = 'restore_success',
                  e.server.status = 'sleeping'
                }).catch (function (e) {
                  console.log('Error to restore the device to factory status:', e),
                  n.show_backend_error = !0
                })
              },
              e.setModalStatus = function (n) {
                e.modal_status = n
              },
              e.changeAccordion = function (n) {
                e.accordion = e.accordion == n ? - 1 : n
              },
              e.updateDevice = function (n) {
                o.createEvent('UPDATE', n, '', '').then(function () {
                  e.update_success = !0
                })
              },
              e.closeMessage = function () {
                e.update_success = !1
              }
            }
          ]), Multimarca.controller('adminMapController', [
            '$rootScope',
            '$scope',
            '$http',
            'sessionService',
            '$state',
            function (e, n, a, t, i) {
              function r() {
                params = {
                  user_token: t.token(),
                  user_email: t.email(),
                  template: 'map'
                },
                a({
                  method: 'GET',
                  url: url_path + 'devices',
                  params: params,
                  data: {
                  }
                }).then(function (e) {
                  o(),
                  console.log(e);
                  var a = e.data;
                  a.devices.forEach(function (e) {
                    n.markers.push(s(e))
                  }),
                  n.clusterer.addMarkers(n.markers)
                }).catch (function (n, a) {
                  401 == a ? sessionService.unauthorize()  : 403 == a ? i.go('init.403')  : 404 == a ? i.go('init.404')  : (console.log('Error to create :', n), e.show_backend_error = !0)
                })
              }
              function o() {
                n.markers.forEach(function (e) {
                  e.setMap(void 0)
                }),
                n.clusterer.clearMarkers(),
                n.markers = [
                ]
              }
              function s(e) {
                return e.location ? new google.maps.Marker({
                  map: n.map,
                  position: new google.maps.LatLng(e.location.latitude, e.location.longitude),
                  title: e.mac,
                  icon: 'assets/marker.png'
                })  : void 0
              }
              var l = [
                {
                  featureType: 'water',
                  elementType: 'geometry.fill',
                  stylers: [
                    {
                      color: '#1f2326'
                    }
                  ]
                },
                {
                  featureType: 'landscape.natural',
                  stylers: [
                    {
                      color: '#2c3033'
                    }
                  ]
                },
                {
                  featureType: 'landscape.man_made',
                  stylers: [
                    {
                      color: '#2c3033'
                    },
                    {
                      lightness: 6
                    }
                  ]
                },
                {
                  featureType: 'poi',
                  stylers: [
                    {
                      visibility: 'simplified'
                    },
                    {
                      color: '#2c3033'
                    },
                    {
                      lightness: 13
                    }
                  ]
                },
                {
                  featureType: 'road',
                  elementType: 'geometry',
                  stylers: [
                    {
                      color: '#2c3033'
                    },
                    {
                      lightness: 25
                    }
                  ]
                },
                {
                  featureType: 'transit',
                  elementType: 'geometry',
                  stylers: [
                    {
                      visibility: 'simplified'
                    },
                    {
                      color: '#2c3033'
                    },
                    {
                      lightness: - 10
                    }
                  ]
                },
                {
                  elementType: 'labels.icon',
                  stylers: [
                    {
                      visibility: 'off'
                    }
                  ]
                },
                {
                  elementType: 'labels.text.fill',
                  stylers: [
                    {
                      color: '#adb6bd'
                    },
                    {
                      lightness: - 20
                    }
                  ]
                },
                {
                  elementType: 'labels.text.stroke',
                  stylers: [
                    {
                      color: '#1f2326'
                    },
                    {
                      weight: 2.4
                    }
                  ]
                },
                {
                  featureType: 'administrative',
                  elementType: 'geometry',
                  stylers: [
                    {
                      visibility: 'on'
                    },
                    {
                      color: '#2c3033'
                    },
                    {
                      weight: 1.5
                    },
                    {
                      lightness: - 20
                    }
                  ]
                }
              ],
              c = [
                {
                  textColor: '#2c3033',
                  url: 'assets/cluster.png',
                  height: 30,
                  width: 30
                },
                {
                  textColor: '#2c3033',
                  url: 'assets/cluster.png',
                  height: 30,
                  width: 30
                },
                {
                  textColor: '#2c3033',
                  url: 'assets/cluster.png',
                  height: 30,
                  width: 30
                }
              ],
              u = {
                zoom: 4,
                center: new google.maps.LatLng(40.427505, - 3.69121),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                streetViewControl: !1,
                overviewMapControl: !1,
                panControl: !1,
                scaleControl: !1,
                zoomControlOptions: {
                  style: google.maps.ZoomControlStyle.SMALL
                },
                styles: l
              },
              d = {
                styles: c
              };
              n.map = new google.maps.Map(document.getElementById('map'), u),
              n.markers = [
              ],
              n.clusterer = new MarkerClusterer(n.map, n.markers, d),
              n.status_filter = void 0,
              r()
            }
          ]), Multimarca.controller('adminUsersController', [
            '$scope',
            '$rootScope',
            '$http',
            'sessionService',
            '$state',
            'userService',
            function (e, n, a, t, i, r) {
              e.show_modal = !1,
              e.modal_status = 'info',
              e.current_page = 1,
              e.total_pages = 1,
              e.total_devices = 0,
              e.accordion = 0,
              e.select_user = null,
              e.first_time = !0,
              e.emailErrorMessage = !1,
              e.filterStatus = {
                text: n.i18n('all'),
                value: ''
              },
              e.getUsers = function () {
                e.emailErrorMessage = !1,
                params = {
                  user_token: t.token(),
                  user_email: t.email(),
                  limit: 10,
                  page: e.current_page
                },
                e.filterEmail && e.filterEmail.length > 2 ? params.email = e.filterEmail : !e.first_time && e.filterEmail && (e.emailErrorMessage = !0, console.log('Debe tener mínimo 3 caracteres')),
                e.orderBy && (params.order_by = e.orderBy, params.order = e.orderAsc ? 'asc' : 'desc'),
                (e.first_time || params.email) && (e.first_time = !1, r.getUsers(params).then(function (n) {
                  e.users = n.users,
                  e.total_pages = n.total_pages,
                  e.total_devices = n.count
                }).catch (function (e) {
                  console.log('Error to get the list of users:', e),
                  n.show_backend_error = !0
                }))
              },
              e.getUsers(),
              e.showUserInfo = function (a) {
                e.show_modal = !0,
                n.modalShow = !0,
                e.select_user = e.users.filter(function (e) {
                  return e.id == a.id
                }),
                e.select_user && (e.select_user = e.select_user[0])
              },
              e.goToList = function () {
                e.show_modal = !1,
                n.modalShow = !1,
                e.select_user = null,
                e.modal_status = 'info'
              },
              e.setModalStatus = function (n) {
                e.modal_status = n
              }
            }
          ]), Multimarca.controller('associationController', [
            '$scope',
            '$rootScope',
            '$timeout',
            function (e, n, a) {
              function t() {
                var n = {
                  __SL_P_USD: e.router._name,
                  __SL_P_USE: e.router._seguridad,
                  __SL_P_USF: e.router._password,
                  __SL_P_USC: 'Add'
                };
                $.ajax({
                  type: 'post',
                  url: 'http://mydaikin.net',
                  crossDomain: !0,
                  data: n,
                  dataType: 'xml'
                }),
                a(function () {
                  e.loading2 = !1,
                  e.state = 8,
                  e.apply()
                }, 3000)
              }
              e.state = 1,
              e.old_states = [
              ],
              e.routers = [
              ],
              e.router = {
                _name: '',
                _seguridad: 2,
                _password: ''
              },
              e.error = !1,
              e.typeDhcp = !0,
              e.loading = !1,
              e.loading1 = !1,
              e.loading2 = !1,
              e.connection = {
                ip: '',
                port: '',
                masc: ''
              },
              e.show_advances = !1,
              e.manual_router = !1,
              e.low_signal_dialog = !1,
              e.option_security = {
                OPEN: '0',
                WEP: '1',
                'WPA/WPA2': '2'
              },
              e.setState = function (n) {
                e.old_states.push(e.state),
                e.state = n,
                5 == n && (e.loading1 = !0, e.getAccessPoints())
              },
              e.selectRouter = function (n) {
                'images/sigE.jpg' != n._rssi && 'images/sig1.jpg' != n._rssi ? (e.router = n, e.manual_router = !1, e.state = 6)  : e.low_signal_dialog = !0
              },
              e.goToPreviousState = function () {
                e.error = !1,
                e.state <= 5 && (e.routers = [
                ]),
                e.state > 1 && (e.state = e.old_states.pop())
              },
              e.getClassConnection = function (e) {
                return 'images/sigE' == e ? 'icon-signal-none' : 'images/sig1.jpg' == e ? 'icon-signal-low' : 'images/sig2.jpg' == e ? 'icon-signal-mean' : 'images/sig3.jpg' == e ? 'icon-signal-good' : 'icon-signal-excelent'
              },
              e.setConnectionType = function (n) {
                'dhcp' == n ? (e.typeDhcp = !0, e.connection = {
                  ip: '',
                  port: '',
                  masc: '',
                  dns: ''
                })  : (e.typeDhcp = !1, e.connection = {
                  ip: '',
                  port: '',
                  masc: '',
                  dns: ''
                })
              },
              e.getAccessPoints = function () {
                $.ajax({
                  type: 'get',
                  url: 'http://mydaikin.net/puntosdeacceso.cgi',
                  crossDomain: !0,
                  dataType: 'xml',
                  timeout: 20000
                }).success(function (n) {
                  e.loading1 = !1;
                  var a = new X2JS,
                  t = a.xml2json(n);
                  return e.routers = t.PuntosAcceso.Punto,
                  e.routers = e.routers.filter(function (e) {
                    return 'Unknown Token' != e._name
                  }),
                  e.routers.forEach(function (e) {
                    e._seguridad = '2'
                  }),
                  e.$apply(),
                  !0
                }).error(function () {
                  5 == e.state && (e.error = !0),
                  e.loading1 = !1,
                  e.$apply()
                })
              },
              e.toState5 = function () {
                a(function () {
                  e.state = 5,
                  e.loading = !1,
                  e.$apply()
                }, 10000)
              },
              e.setConnection = function () {
                e.loading2 = !0;
                var n = {
                };
                n = e.typeDhcp ? {
                  '__SL_P_N.D': 'Enable'
                }
                 : {
                  '__SL_P_N.A': e.connection.ip,
                  '__SL_P_N.B': e.connection.masc,
                  '__SL_P_N.C': e.connection.port,
                  '__SL_P_N.H': e.connection.dns,
                  '__SL_P_N.D': 'Disable'
                },
                $.ajax({
                  type: 'post',
                  url: 'http://mydaikin.net/sta_ip_config',
                  crossDomain: !0,
                  data: n,
                  dataType: 'xml'
                }).success(function () {
                  t()
                }).error(function () {
                  e.loading2 = !1,
                  e.error = !0,
                  e.$apply()
                })
              },
              e.retry = function () {
                5 == e.state && (e.loading1 = !0, e.getAccessPoints()),
                e.error = !1
              },
              e.toggleAdvanced = function () {
                e.show_advanced = !e.show_advanced,
                e.connection.port = ''
              },
              e.setManualRouter = function () {
                e.manual_router = !0,
                e.setState(6)
              },
              e.closeLowSignalDialog = function () {
                e.low_signal_dialog = !1
              }
            }
          ]), Multimarca.controller('completeRegistrationController', [
            '$scope',
            '$rootScope',
            '$http',
            '$state',
            '$stateParams',
            function (e, n, a, t, i) {
              if (e.register_error = !1, e.register_success = !1, e.register = {
              }, e.register.email = i.email, e.register.name = i.name, e.register.surname = i.surname, e.state = 'register', e.invalid = !1, e.htmlString = n.i18n('terms.body'), 'production' == n.environment) var r = '/terms.json';
               else var r = 'http://localhost:3000/terms.json';
              a.get(r).success(function (a) {
                var t = a[n.language];
                t || (t = a.en),
                e.terms = t
              }).catch (function (e) {
                console.log('Error to get legal terms links:', e),
                n.show_backend_error = !0
              }),
              e.submitRegisterForm = function () {
                e.registerForm.$valid ? a({
                  method: 'PUT',
                  url: 'users/password',
                  responseType: 'json',
                  data: {
                    user: {
                      name: e.register.name,
                      surname: e.register.surname,
                      email: i.email,
                      password: e.register.password,
                      password_confirmation: e.register.password_confirmation,
                      reset_password_token: i.reset_password_token,
                      autoconfirmation: !1,
                      tos: !0,
                      publicity: e.register.publicity
                    }
                  }
                }).success(function () {
                  e.state = 'register_success'
                }).error(function () {
                  e.registerForm.invalid = !0,
                  e.register_error = !0
                })  : e.registerForm.invalid = !0
              }
            }
          ]), Multimarca.controller('confirmationController', [
            '$scope',
            '$http',
            '$state',
            '$stateParams',
            'sessionService',
            function (e, n, a, t, i) {
              e.confirmation_error = !1,
              e.confirmation_success = !1,
              e.error_token = !1,
              e.error_from_server = '',
              e.emailFormat = /^[a-z]+[a-z0-9._-]+@[a-z]+\.[a-z.]{2,5}$/,
              t.invalid_token && (e.error_token = !0),
              e.submitConfirmationForm = function () {
                e.confirmationForm.$valid ? n({
                  method: 'POST',
                  url: url_path + 'users/confirmation',
                  responseType: 'json',
                  data: {
                    user: {
                      email: this.confirmation.email
                    }
                  }
                }).success(function () {
                  e.confirmation_success = !0
                }).error(function (n) {
                  e.confirmationForm.invalid = !0,
                  e.error_from_server = n.errors.email[0],
                  e.confirmation_error = !0
                })  : (e.confirmationForm.invalid = !0, 401 == status ? i.unauthorize()  : 403 == status ? a.go('init.403')  : 404 == status && a.go('init.404'))
              }
            }
          ]), Multimarca.controller('deviceController', [
            '$scope',
            '$rootScope',
            'deviceService',
            '$stateParams',
            '$state',
            'eventsService',
            '$timeout',
            'websocketsService',
            'weatherService',
            'sessionService',
            'scheduleService',
            function (e, n, a, t, i, r, o, s, l, c, u) {
              function d() {
                a.getDevicesFromInstallation(t.installation_id).then(function (a) {
                  if (e.device = a.filter(function (e) {
                    return e.id == t.id
                  }) [0], e.device.new_mode = '0', e.device.new_velocity = '-1', e.device.new_vertical = '0', e.device.new_horizontal = '0', e.device.new_scenary = '0', e.device.new_power = null, e.device.reject = !1, e.installation = e.device.installation, (1 == e.installation.device_ids.length && (n.language_changed || n.current_spot_name != e.installation.spot_name) || !n.requestWeatherTime || (n.date - n.requestWeatherTime % 86400000) % 3600000 / 60000 > 60) && e.initializeWheather(), n.error_devices.push(e.device.name), s.destroyChannels(), s.createServerChannel(e.device.id, f), b(), e.modes) for (var i = 0; i <= e.modes.length; i++) e.device.modes && 1 == e.device.modes[i] && e.available_modes.push(e.modes[i]);
                  e.device.show_error = !0,
                  u.getSchedules(e.device.id),
                  h(e.device),
                  y(),
                  e.device.updated || m(),
                  n.demo ? o(function () {
                    e.device.updated = !0
                  }, 1000)  : w()
                }).catch (function (e) {
                  console.log('Error to get devices of installation:', e)
                }),
                e.unit_format = c.unit_format()
              }
              function m() {
                r.createEvent('infomaquina', e.device, '', '').then(function () {
                  e.device.updated = !0
                }).catch (function (e) {
                  console.log('Error to create event of infomaquina:', e)
                })
              }
              function h(a) {
                a.machine_errors && 0 == a.machine_errors.indexOf('ERROR') && (e.error_type = e.device.machine_errors.substr(a.machine_errors.indexOf('ERROR') + 6, 2), n.machine_errors.push(e.device.name), n.not_machine_ready = !0)
              }
              function p(n) {
                for (var a = [
                  '0000',
                  '0001',
                  '0010',
                  '0011',
                  '0100',
                  '0111'
                ], t = [
                ], i = 0; i < parseInt(e.device.ver_position_slats); i++) t.push(a[i]);
                return t.push('0111'),
                - 1 != t.indexOf(n)
              }
              function v(n) {
                for (var a = [
                  '0000',
                  '0001',
                  '0010',
                  '0011',
                  '0100',
                  '0111'
                ], t = [
                ], i = 0; i < parseInt(e.device.hor_position_slats); i++) t.push(a[i]);
                return t.push('0111'),
                - 1 != t.indexOf(n)
              }
              function g(n) {
                return 1 == e.cold_modes[parseInt(n) - 1] ? 'cold' : 'heat'
              }
              function f(n) {
                if (null !== n) {
                  var a = !1;
                  (n.cold_consign != e.device.cold_consign || 'cold' === g(n.mode) && 'cold' !== g(e.device.mode)) && (a = !0),
                  (n.heat_consign != e.device.heat_consign || 'heat' === g(n.mode) && 'heat' !== g(e.device.mode)) && (a = !0),
                  Object.keys(n).forEach(function (a) {
                    e.device[a] = n[a]
                  }),
                  e.$apply(),
                  a && y()
                }
              }
              function _() {
                var n = [
                ],
                a = 1;
                b();
                for (var t = e.minTemp; t <= e.maxTemp; t += a) n.push(t);
                return n
              }
              function b() {
                'cold' == g(e.device.mode) ? e.canChangeTemp() ? (e.minTemp = parseFloat(e.device.min_limit_cold), e.maxTemp = parseFloat(e.device.max_limit_cold))  : (e.minTemp = parseFloat(e.device.cold_consign), e.maxTemp = parseFloat(e.device.cold_consign))  : e.canChangeTemp() ? (e.minTemp = parseFloat(e.device.min_limit_heat), e.maxTemp = parseFloat(e.device.max_limit_heat))  : (e.minTemp = parseFloat(e.device.heat_consign), e.maxTemp = parseFloat(e.device.heat_consign))
              }
              function y() {
                e.listTemp = _(),
                o(function () {
                  var n = '';
                  n = e.listTemp.indexOf('cold' == g(e.device.mode) ? parseFloat(e.device.cold_consign)  : parseFloat(e.device.heat_consign)),
                  0 > n && (n = 0),
                  e.tempIndex = n,
                  e.show_carrusel = !0
                }, 500)
              }
              function w() {
                e.update_timeout = setTimeout(function () {
                  e.device.reject || n.disconnected_device || n.machine_ready_error || m(),
                  w()
                }, 10000)
              }
              function k() {
                var a = new Date;
                if (n.time_zone) {
                  var t = 60 * parseFloat(n.time_zone[0].utcOffset) + a.getTimezoneOffset();
                  n.date = new Date(a.getTime() + 60 * t * 1000)
                }
                e.update_date = setTimeout(function () {
                  k()
                }, 10000)
              }
              e.eolo = __eolo,
              e.modes = [
                'cool',
                'heat',
                'ventilate',
                'heat-cold-auto',
                'dehumidify',
                'cool-air',
                'heat-air',
                'ventilate'
              ],
              e.velocities = [
                '1',
                '2',
                '3',
                '4',
                '5'
              ],
              e.cold_modes = [
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0
              ],
              e.heat_modes = [
                0,
                1,
                0,
                0,
                0,
                0,
                1,
                1
              ],
              e.device = {
              },
              e.device.new_mode = '0',
              e.device.new_velocity = '-1',
              e.device.new_vertical = '0',
              e.device.new_horizontal = '0',
              e.device.new_scenary = '0',
              e.device.manual_power = !1,
              e.minTemp,
              e.maxTemp,
              e.available_modes = [
              ],
              e.listTemp = [
                20
              ],
              e.tempIndex = !1,
              e.update_timeout,
              n.error_devices = [
              ],
              n.machine_errors = [
              ],
              n.date = new Date,
              n.show_climate_info = !0,
              n.hidden_overflow = !0,
              d(),
              e.toggleDevicePower = function () {
                e.device.new_power = '1' == e.device.power ? '0' : '1'
              },
              e.listenerPower = e.$watch('device.new_power', function (n, t) {
                n && n != t && (r.createEvent('modmaquina', e.device, 'P1', n).then(function () {
                  e.device.power = n
                }, function () {
                  e.device.power = t
                }), a.checkUnoccupiedScene(e.device), e.device.new_power = null)
              }),
              e.listenerMode = e.$watch('device.new_mode', function (n, t) {
                n !== t && 1 == e.device.modes[n - 1] && (r.createEvent('modmaquina', e.device, 'P2', n).then(function () {
                  e.device.mode = String(e.device.new_mode),
                  e.device.new_velocity = '-1',
                  y()
                }, function () {
                }), a.checkUnoccupiedScene(e.device), e.device.new_mode = String(e.device.new_mode))
              }),
              e.listenerVelocity = e.$watch('device.new_velocity', function (n, t) {
                n && t != n && parseInt(n) >= 0 && parseInt(n) <= parseInt(e.device.availables_speeds) && ('cold' == g(e.device.mode) ? r.createEvent('modmaquina', e.device, 'P3', n).then(function () {
                  e.device.cold_speed = String(e.device.new_velocity),
                  e.device.new_velocity = null
                }, function () {
                  e.device.new_velocity = null
                })  : 'heat' == g(e.device.mode) && r.createEvent('modmaquina', e.device, 'P4', n).then(function () {
                  e.device.heat_speed = String(e.device.new_velocity),
                  e.device.new_velocity = null
                }, function () {
                  e.device.new_velocity = null
                }), a.checkUnoccupiedScene(e.device))
              }),
              e.listenerVertical = e.$watch('device.new_vertical', function (n, t) {
                null != t && t != n && p(n) && ('cold' == g(e.device.mode) ? r.createEvent('modmaquina', e.device, 'P9', n).then(function () {
                  e.device.ver_cold_slats = String(e.device.new_vertical)
                }, function () {
                })  : 'heat' == g(e.device.mode) && r.createEvent('modmaquina', e.device, 'P10', n).then(function () {
                  e.device.ver_heat_slats = String(e.device.new_vertical)
                }, function () {
                }), a.checkUnoccupiedScene(e.device))
              }),
              e.listenerHorizontal = e.$watch('device.new_horizontal', function (n, t) {
                null != t && t != n && v(n) && ('cold' == g(e.device.mode) ? r.createEvent('modmaquina', e.device, 'P19', n).then(function () {
                  e.device.hor_cold_slats = String(e.device.new_horizontal)
                }, function () {
                })  : 'heat' == g(e.device.mode) && r.createEvent('modmaquina', e.device, 'P20', n).then(function () {
                  e.device.hor_heat_slats = String(e.device.new_horizontal)
                }, function () {
                }), a.checkUnoccupiedScene(e.device))
              }),
              e.listenerScenary = e.$watch('device.new_scenary', function (n, t) {
                if (n && n !== t) {
                  var i = {
                    device: {
                      scenary: n
                    }
                  };
                  a.updateDevice(e.device.id, i).then(function () {
                    e.device.scenary = n,
                    'vacant' == e.device.scenary && (parseFloat(e.device.max_temp_unoccupied) <= parseFloat(e.device.local_temp) || parseFloat(e.device.min_temp_unoccupied) >= parseFloat(e.device.local_temp) ? (e.device.power = '1', parseFloat(e.device.max_temp_unoccupied) <= parseFloat(e.device.local_temp) && '1' != e.device.mode && (e.device.mode = '1', y()), parseFloat(e.device.min_temp_unoccupied) >= parseFloat(e.device.local_temp) && '2' != e.device.mode && (e.device.mode = '2', y()))  : e.device.power = '0')
                  }, function () {
                  }),
                  e.device.new_scenary = null
                }
              }),
              e.listenerModal = n.$watch('modalShow', function (n, a) {
                n && !a ? (e.device.reject = !0, clearTimeout(e.update_timeout))  : !n && a && (e.device.reject = !1, w())
              }),
              e.getClassFromMode = function (n) {
                return e.modes[parseInt(n) - 1]
              },
              e.getVelocity = function () {
                return e.device ? 'cold' == g(e.device.mode) ? e.device.cold_speed : 'heat' == g(e.device.mode) ? e.device.heat_speed : null : void 0
              },
              e.goBack = function () {
                e.installation && 1 == e.installation.device_ids.length ? i.go('home.installations', {
                })  : i.go('home.installation', {
                  id: t.installation_id
                })
              },
              e.getSlatsIcon = function (n) {
                if (e.device) {
                  var a = '';
                  a = 'cold' == g(e.device.mode) ? 'vertical' == n ? e.device.ver_cold_slats : e.device.hor_cold_slats : 'vertical' == n ? e.device.ver_heat_slats : e.device.hor_heat_slats;
                  var t = 'vertical' == n ? 'v' : 'h';
                  switch (a) {
                    case '0000':
                      return t + '0';
                    case '0001':
                      return t + '1';
                    case '0010':
                      return t + '2';
                    case '0011':
                      return t + '3';
                    case '0100':
                      return t + '4';
                    case '0111':
                      return t + 'swing'
                  }
                }
              },
              e.canChangeTemp = function () {
                return e.device ? '3' == e.device.mode || '5' == e.device.mode || '8' == e.device.mode ? !1 : !0 : void 0
              },
              e.$watch('tempIndex', function (n, t) {
                parseInt(n) >= 0 && parseInt(t) >= 0 && n != t && (e.device.reject = !0, 'cold' == g(e.device.mode) ? e.device && e.device.cold_consign != e.listTemp[e.tempIndex] ? (e.device.cold_consign = parseFloat(e.listTemp[n]).toFixed(1), e.consign_timeout && clearTimeout(e.consign_timeout), e.consign_timeout = setTimeout(function () {
                  r.createEvent('modmaquina', e.device, 'P7', e.device.cold_consign),
                  e.device.reject = !1
                }, 2000), a.checkUnoccupiedScene(e.device))  : e.device.reject = !1 : e.device && e.device.heat_consign != e.listTemp[e.tempIndex] ? (e.device.heat_consign = parseFloat(e.listTemp[n]).toFixed(1), e.consign_timeout = setTimeout(function () {
                  r.createEvent('modmaquina', e.device, 'P8', e.device.heat_consign),
                  e.device.reject = !1
                }, 2000), a.checkUnoccupiedScene(e.device))  : e.device.reject = !1)
              }),
              e.hasWarning = function () {
                return null != e.device.machine_errors && '' != e.device.machine_errors && - 1 == e.device.machine_errors.indexOf('ERROR')
              },
              e.closeWarning = function () {
                e.device.show_error = !1
              },
              e.toggleMobileWarning = function () {
                e.device.show_error = !e.device.show_error
              },
              e.showAlertInstallerModal = function () {
                e.device.updated && (n.device_alert_installer_target = e.device)
              },
              e.getTemp = function () {
                return e.device && e.device.local_temp ? e.device.local_temp : void 0
              },
              e.showModeOptions = function () {
                e.device.updated && (n.mode_target = e.device)
              },
              e.showVelocityOptionsRow = function () {
                e.device.updated && (n.velocity_target = e.device)
              },
              e.showVerticalOptionsRow = function () {
                e.device.updated && (n.vertical_target = e.device)
              },
              e.showHorizontalOptionsRow = function () {
                e.device.updated && (n.horizontal_target = e.device)
              },
              e.showModalAdjust = function () {
                'advanced' == e.installation.role ? (n.click_modal_params_adjust = !0, n.device_config_target = e.device)  : n.not_permission = !0
              },
              e.showModalSchedules = function () {
                'advanced' == e.installation.role ? n.schedules_target = e.device : n.not_permission = !0
              },
              e.showScenaryModal = function () {
                e.device.updated && (n.scenary_target = e.device)
              },
              e.getColourCold = function () {
                return 'vacant' == e.device.scenary && 'cold' == g(e.device.mode)
              },
              e.getColourHeat = function () {
                return 'vacant' == e.device.scenary && 'heat' == g(e.device.mode)
              },
              e.initializeWheather = function () {
                n.language_changed && (n.language_changed = !1),
                l.getWeather(e.installation.location).then(function (a) {
                  if (a.data.error) n.show_climate_info = !1;
                   else {
                    if (n.requestWeatherTime = new Date, n.time_zone = a.data.time_zone, k(), n.current_spot_name = e.installation.spot_name, a.data.current_condition) {
                      n.current_weather_icon = e.weatherIcon(a.data.current_condition[0].weatherCode);
                      var t = c.language();
                      n.current_description = 'es' == t ? a.data.current_condition[0].lang_es[0].value : 'en' == t ? a.data.current_condition[0].weatherDesc[0].value : '',
                      n.current_temp = 'fahrenheit' == e.unit_format ? a.data.current_condition[0].temp_F : a.data.current_condition[0].temp_C
                    } else n.show_climate_info = !1;
                    if (a.data.weather) {
                      var i = Number(n.date.getHours()) / 3 + 1;
                      if (n.forecast = a.data.weather[0].hourly.slice(i, i + 6), n.forecast.length < 6) for (var r = 6 - n.forecast.length + 1, o = 1; r > o; o++) n.forecast.push(a.data.weather[1].hourly[o]);
                      a.data.weather.shift(),
                      n.daily = a.data.weather
                    } else n.show_climate_info = !1
                  }
                }, function () {
                  console.log('Error to get weather data'),
                  n.show_climate_info = !1
                })
              },
              e.getMinutes = function () {
                var e = n.date.getMinutes();
                return 10 > e ? '0' + e : e
              },
              e.weatherIcon = function (e) {
                return void 0 == e ? void 0 : {
                  113: 'icon-weather1',
                  116: 'icon-weather2',
                  119: 'icon-weather3',
                  122: 'icon-weather3',
                  143: 'icon-weather14',
                  176: 'icon-weather4',
                  179: 'icon-weather12',
                  182: 'icon-weather7',
                  185: 'icon-weather7',
                  200: 'icon-weather18',
                  227: 'icon-weather6',
                  230: 'icon-weather6',
                  248: 'icon-weather14',
                  260: 'icon-weather14',
                  263: 'icon-weather9',
                  266: 'icon-weather4',
                  281: 'icon-weather7',
                  284: 'icon-weather7',
                  293: 'icon-weather4',
                  296: 'icon-weather5',
                  299: 'icon-weather10',
                  302: 'icon-weather5',
                  305: 'icon-weather10',
                  308: 'icon-weather5',
                  311: 'icon-weather7',
                  314: 'icon-weather7',
                  317: 'icon-weather9',
                  320: 'icon-weather6',
                  323: 'icon-weather11',
                  326: 'icon-weather11',
                  329: 'icon-weather6',
                  332: 'icon-weather6',
                  335: 'icon-weather6',
                  338: 'icon-weather6',
                  350: 'icon-weather7',
                  353: 'icon-weather9',
                  356: 'icon-weather10',
                  359: 'icon-weather5',
                  362: 'icon-weather12',
                  365: 'icon-weather12',
                  368: 'icon-weather11',
                  371: 'icon-weather11',
                  374: 'icon-weather12',
                  377: 'icon-weather7',
                  386: 'icon-weather18',
                  389: 'icon-weather19',
                  392: 'icon-weather18',
                  395: 'icon-weather19'
                }
                [
                  e
                ]
              },
              e.$on('$destroy', function () {
                e.listenerPower(),
                e.listenerMode(),
                e.listenerVelocity(),
                e.listenerVertical(),
                e.listenerHorizontal(),
                e.listenerScenary(),
                e.listenerModal(),
                n.show_climate_info = !1,
                n.hidden_overflow = !1,
                s.destroyChannels(),
                e.update_timeout && clearTimeout(e.update_timeout),
                e.consign_timeout && clearTimeout(e.consign_timeout)
              })
            }
            ]), Multimarca.controller('deviceRowController', [
              '$scope',
              '$rootScope',
              '$stateParams',
              'eventsService',
              '$timeout',
              'deviceService',
              'websocketsService',
              'scheduleService',
              function (e, n, a, t, i, r, o, s) {
                function l() {
                  if (console.log('canales3: ', e.device.id), o.createServerChannel(e.device.id), e.modes) for (var a = 0; a <= e.modes.length; a++) e.device.modes && 1 == e.device.modes[a] && e.available_modes.push(e.modes[a]);
                  'test' == n.environment && (e.device.updated = !0),
                  e.device.updated ? d()  : c(),
                  s.getSchedules(e.device.id),
                  u(e.device),
                  e.device.show_error = !0,
                  e.device.reject = !1,
                  e.isMobile = n.isMobile,
                  n.demo ? i(function () {
                    e.device.updated = !0
                  }, 1000)  : v()
                }
                function c() {
                  t.createEvent('infomaquina', e.device, '', '').then(function () {
                  }).catch (function () {
                    n.error_devices.push(e.device.name)
                  })
                }
                function u(a) {
                  a.machine_errors && 0 == a.machine_errors.indexOf('ERROR') && (e.error_type = e.device.machine_errors.substr(a.machine_errors.indexOf('ERROR') + 6, 2), n.machine_errors.push(e.device.name), n.not_machine_ready = !0)
                }
                function d() {
                  e.installation.updated = !0
                }
                function m(n) {
                  for (var a = [
                    '0000',
                    '0001',
                    '0010',
                    '0011',
                    '0100',
                    '0111'
                  ], t = [
                  ], i = 0; i < parseInt(e.device.ver_position_slats); i++) t.push(a[i]);
                  return t.push('0111'),
                  - 1 != t.indexOf(n)
                }
                function h(n) {
                  for (var a = [
                    '0000',
                    '0001',
                    '0010',
                    '0011',
                    '0100',
                    '0111'
                  ], t = [
                  ], i = 0; i < parseInt(e.device.hor_position_slats); i++) t.push(a[i]);
                  return t.push('0111'),
                  - 1 != t.indexOf(n)
                }
                function p() {
                  return e.device ? 1 == e.cold_modes[parseInt(e.device.mode) - 1] ? 'cold' : 'heat' : 'none'
                }
                function v() {
                  e.update_timeout = setTimeout(function () {
                    e.device.updated && c(),
                    v()
                  }, 10000)
                }
                e.modes = [
                  'cool',
                  'heat',
                  'ventilate',
                  'heat-cold-auto',
                  'dehumidify',
                  'cool-air',
                  'heat-air',
                  'ventilate'
                ],
                e.velocities = [
                  '1',
                  '2',
                  '3',
                  '4',
                  '5'
                ],
                e.cold_modes = [
                  1,
                  0,
                  1,
                  1,
                  1,
                  1,
                  0,
                  0
                ],
                e.heat_modes = [
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  1,
                  1
                ],
                e.consign_timeout = null,
                e.state_timeout = null,
                e.name_timeout = null,
                e.device.new_consign = 0,
                e.available_modes = [
                ],
                e.showOptions = !0,
                e.device.new_mode = '0',
                e.device.new_velocity = null,
                e.device.new_vertical = '0',
                e.device.new_horizontal = '0',
                e.device.new_power = null,
                e.update_timeout,
                n.error_devices = [
                ],
                l(),
                e.getClassFromMode = function (n) {
                  return e.modes[parseInt(n) - 1]
                },
                e.booleanPower = function () {
                  return '1' == e.device.power
                },
                e.togglePower = function () {
                  e.device.new_power = '1' == e.device.power ? '0' : '1'
                },
                e.listenerUpdated = e.$watch('device.updated', function (e, n) {
                  e && e != n && d()
                }),
                e.listenerPower = e.$watch('device.power', function (n, a) {
                  if (n && n != a) {
                    for (var t = !1, i = 0; i < e.devices.length; i++) '1' == e.devices[i].power && (t = !0);
                    e.installation.power = t
                  }
                }),
                e.listenerNewPower = e.$watch('device.new_power', function (n, a) {
                  n && n != a && (t.createEvent('modmaquina', e.device, 'P1', n).then(function () {
                    e.device.power = n
                  }, function () {
                    e.device.power = a
                  }), r.checkUnoccupiedScene(e.device), e.device.new_power = null)
                }),
                e.hasWarning = function () {
                  return null != e.device.machine_errors && '' != e.device.machine_errors && - 1 == e.device.machine_errors.indexOf('ERROR')
                },
                e.closeWarning = function () {
                  e.device.show_error = !1
                },
                e.toggleMobileWarning = function () {
                  e.device.show_error = !e.device.show_error
                },
                e.listenerMode = e.$watch('device.new_mode', function (n, a) {
                  n !== a && 1 == e.device.modes[n - 1] && (t.createEvent('modmaquina', e.device, 'P2', n).then(function () {
                    e.device.mode = String(e.device.new_mode),
                    e.installation.update_mode_color = !0
                  }, function (e) {
                    console.log('Error to create event of new mode:', e)
                  }), r.checkUnoccupiedScene(e.device), e.device.new_mode = String(e.device.new_mode))
                }),
                e.listenerVelocity = e.$watch('device.new_velocity', function (n) {
                  n && parseInt(n) <= parseInt(e.device.availables_speeds) && (2 == parseInt(e.device.availables_speeds) && 2 == parseInt(n) && (n = 3), 'cold' == p() ? t.createEvent('modmaquina', e.device, 'P3', n).then(function () {
                    e.device.cold_speed = String(e.device.new_velocity),
                    e.device.new_velocity = null
                  }, function () {
                    e.device.new_velocity = null
                  })  : 'heat' == p() && t.createEvent('modmaquina', e.device, 'P4', n).then(function () {
                    e.device.heat_speed = String(e.device.new_velocity),
                    e.device.new_velocity = null
                  }, function () {
                    e.device.new_velocity = null
                  }), r.checkUnoccupiedScene(e.device))
                }),
                e.listenerVertical = e.$watch('device.new_vertical', function (n, a) {
                  null != a && a != n && m(n) && ('cold' == p() ? t.createEvent('modmaquina', e.device, 'P9', n).then(function () {
                    e.device.ver_cold_slats = String(e.device.new_vertical)
                  }, function (e) {
                    console.log('Error to create event of new cold vertical slat:', e)
                  })  : 'heat' == p() && t.createEvent('modmaquina', e.device, 'P10', n).then(function () {
                    e.device.ver_heat_slats = String(e.device.new_vertical)
                  }, function (e) {
                    console.log('Error to create event of new heat vertical slat:', e)
                  }), r.checkUnoccupiedScene(e.device))
                }),
                e.listenerHorizontal = e.$watch('device.new_horizontal', function (n, a) {
                  null != a && a != n && h(n) && ('cold' == p() ? t.createEvent('modmaquina', e.device, 'P19', n).then(function () {
                    e.device.hor_cold_slats = String(e.device.new_horizontal)
                  }, function (e) {
                    console.log('Error to create event of new cold horizontal slat:', e)
                  })  : 'heat' == p() && t.createEvent('modmaquina', e.device, 'P20', n).then(function () {
                    e.device.hor_heat_slats = String(e.device.new_horizontal)
                  }, function (e) {
                    console.log('Error to create event of new heat horizontal slat:', e)
                  }), r.checkUnoccupiedScene(e.device))
                }),
                e.listenerConsign = e.$watch('device.new_consign', function (n, a) {
                  n && null != a ? (n = parseFloat(n), 'cold' == p() && n <= parseFloat(e.device.max_limit_cold) && n >= parseFloat(e.device.min_limit_cold) ? (e.consign_timeout && clearTimeout(e.consign_timeout), e.device.cold_consign = parseInt(n), e.consign_timeout = setTimeout(function () {
                    t.createEvent('modmaquina', e.device, 'P7', n.toFixed(1)).then(function () {
                      e.device.reject = !1
                    }, function (n) {
                      e.device.power = a,
                      e.device.reject = !1,
                      console.log('Error to create event of new cold setpoint:', n)
                    })
                  }, 1000))  : 'heat' == p() && n <= parseFloat(e.device.max_limit_heat) && n >= parseFloat(e.device.min_limit_heat) ? (e.consign_timeout && clearTimeout(e.consign_timeout), e.device.heat_consign = parseInt(n), e.consign_timeout = setTimeout(function () {
                    t.createEvent('modmaquina', e.device, 'P8', n.toFixed(1)).then(function () {
                      e.device.reject = !1
                    }, function (n) {
                      e.device.power = a,
                      e.device.reject = !1,
                      console.log('Error to create event of new heat setpoint:', n)
                    })
                  }, 1000))  : e.device.reject = !1, r.checkUnoccupiedScene(e.device))  : e.device.reject = !1
                }),
                e.listenerScenary = e.$watch('device.new_scenary', function (n, a) {
                  if (n && n !== a) {
                    var t = {
                      device: {
                        scenary: n
                      }
                    };
                    r.updateDevice(e.device.id, t).then(function () {
                      e.device.scenary = n,
                      'vacant' == e.device.scenary && (parseFloat(e.device.max_temp_unoccupied) <= parseFloat(e.device.local_temp) ? (e.device.power = '1', '1' != e.device.mode && (e.device.mode = '1'))  : parseFloat(e.device.max_temp_unoccupied) - 2 > parseFloat(e.device.local_temp) ? e.device.power = '0' : parseFloat(e.device.min_temp_unoccupied) >= parseFloat(e.device.local_temp) ? (e.device.power = '1', '2' != e.device.mode && (e.device.mode = '2'))  : parseFloat(e.device.min_temp_unoccupied) + 2 < parseFloat(e.device.local_temp) && (e.device.power = '0'))
                    }).catch (function (e) {
                      console.log('Error to update device:', e)
                    }),
                    e.device.new_scenary = !1
                  }
                }),
                e.listenerModal = n.$watch('modalShow', function (n, a) {
                  n && !a ? (e.device.reject = !0, clearTimeout(e.update_timeout))  : !n && a && (e.device.reject = !1, v())
                }),
                e.canChangeTemp = function () {
                  return e.device ? '3' == e.device.mode || '5' == e.device.mode || '8' == e.device.mode ? !1 : !0 : void 0
                },
                e.getSlatsIcon = function (n) {
                  if (e.device) {
                    var a = '';
                    a = 'cold' == p() ? 'vertical' == n ? e.device.ver_cold_slats : e.device.hor_cold_slats : 'vertical' == n ? e.device.ver_heat_slats : e.device.hor_heat_slats;
                    var t = 'vertical' == n ? 'v' : 'h';
                    switch (a) {
                      case '0000':
                        return t + '0';
                      case '0001':
                        return t + '1';
                      case '0010':
                        return t + '2';
                      case '0011':
                        return t + '3';
                      case '0100':
                        return t + '4';
                      case '0111':
                        return t + 'swing'
                    }
                  }
                },
                e.getConsign = function () {
                  return e.device ? 'cold' == p() ? e.device.cold_consign : e.device.heat_consign : void 0
                },
                e.getVelocity = function () {
                  return e.device ? 'cold' == p() ? e.device.cold_speed : 'heat' == p() ? e.device.heat_speed : null : void 0
                },
                e.getTemp = function () {
                  return e.device && e.device.local_temp ? e.device.local_temp : void 0
                },
                e.showModeOptions = function () {
                  e.device.updated && (n.mode_target = e.device)
                },
                e.showVelocityOptionsRow = function () {
                  e.device.updated && (n.velocity_target = e.device)
                },
                e.showVerticalOptionsRow = function () {
                  e.device.updated && (n.vertical_target = e.device)
                },
                e.showHorizontalOptionsRow = function () {
                  e.device.updated && (n.horizontal_target = e.device)
                },
                e.showModalAdjust = function () {
                  'advanced' == e.installation.role ? (n.click_modal_params_adjust = !0, n.device_config_target = e.device)  : n.not_permission = !0
                },
                e.showScenaryModal = function () {
                  e.device.updated && (n.scenary_target = e.device)
                },
                e.showModalSchedules = function () {
                  'advanced' == e.installation.role ? n.schedules_target = e.device : n.not_permission = !0
                },
                e.showAlertInstallerModal = function () {
                  e.device.updated && (n.device_alert_installer_target = e.device)
                },
                e.updateConsign = function (n) {
                  e.device.reject = !0;
                  var a = 'plus' == n ? 1 : - 1;
                  e.device.new_consign = 'cold' == p() ? (parseFloat(e.device.cold_consign) + a).toFixed(1)  : (parseFloat(e.device.heat_consign) + a).toFixed(1)
                },
                e.getColourCold = function () {
                  return 'vacant' == e.device.scenary && 'cold' == p()
                },
                e.getColourHeat = function () {
                  return 'vacant' == e.device.scenary && 'heat' == p()
                },
                e.$on('$destroy', function () {
                  clearTimeout(e.update_timeout),
                  clearTimeout(e.consign_timeout),
                  e.listenerPower(),
                  e.listenerNewPower(),
                  e.listenerMode(),
                  e.listenerVelocity(),
                  e.listenerVertical(),
                  e.listenerHorizontal(),
                  e.listenerScenary(),
                  e.listenerUpdated(),
                  e.listenerModal()
                }),
                e.i18n = function (e) {
                  return n.i18n(e)
                }
              }
              ]), Multimarca.controller('deviceUsersController', [
                '$scope',
                '$rootScope',
                'installationService',
                'eventsService',
                '$stateParams',
                '$state',
                'installationRelationService',
                'sessionService',
                'deviceService',
                '$timeout',
                function (e, n, a, t, i, r, o, s, l) {
                  function c() {
                    e.new_permissions_user = [
                    ],
                    o.getInstallationRelations(e.installation_id, !0).then(function (n) {
                      e.irs = [
                      ],
                      n[0].permitted_devices.forEach(function (n) {
                        e.new_permissions_user.push(n)
                      }),
                      n.forEach(function (n) {
                        n.user && n.user.id != s.id() && e.irs.push(n)
                      })
                    }).catch (function (e) {
                      console.log('Error to get the relations of the users with this installation:', e),
                      n.show_backend_error = !0
                    }),
                    e.loader_list = !1
                  }
                  e.show_confirm = !1,
                  e.show_success = !1,
                  e.show_new_user = !1,
                  e.show_confirm_user = !1,
                  e.taken_error = !1,
                  e.user_to_remove = null,
                  e.installation_id = i.installation_id,
                  e.partial = 'list',
                  e.loader_list = !0,
                  e.loader_permissions = !1,
                  e.devices_permissions = {
                  },
                  e.installations_permissions = {
                  },
                  e.show_disabled_permission_device = !1,
                  e.emailFormat = /^[a-z]+[a-z0-9._-]+@[a-z]+\.[a-z.]{2,5}$/,
                  e.buttons = {
                    newUserForm: !1,
                    removeConfirmUser: !1
                  },
                  c(),
                  e.cancelConfirm = function () {
                    e.show_confirm = !1
                  },
                  e.cancelUserConfirm = function () {
                    e.show_confirm_user = !1
                  },
                  e.removeUser = function () {
                    e.show_confirm_user = !0,
                    e.ir_to_remove = e.ir_selected
                  },
                  e.removeConfirmUser = function () {
                    e.buttons.removeConfirmUser = !0,
                    o.removeInstallationRelation(e.ir_to_remove.id).then(function () {
                      e.show_confirm_user = !1,
                      r.go('home.users', {
                        installation_id: e.installation_id
                      }, {
                        reload: !0
                      })
                    }).catch (function (e) {
                      console.log('Error to remove the relation with the installation:', e),
                      n.show_backend_error = !0
                    })
                  },
                  e.showNewUser = function () {
                    e.new_user = null,
                    e.buttons.newUserForm = !1,
                    e.type = !1,
                    e.newUserForm && (e.newUserForm.$setPristine(), e.newUserForm.invalid = !1),
                    e.show_new_user = !0
                  },
                  e.changeState = function () {
                    e.type = e.type ? 'basic' : 'advanced'
                  },
                  e.cancelUserTaken = function () {
                    e.taken_error = !1
                  },
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.cancelNewUser = function () {
                    e.new_user = null,
                    e.show_new_user = !1
                  },
                  e.submitNewUserForm = function () {
                    if (e.newUserForm.$valid) {
                      if (e.type) var a = 'advanced';
                       else var a = 'basic';
                      e.buttons.newUserForm = !0,
                      params = {
                        installation_relation: {
                          type: a,
                          name: e.new_user.name,
                          email: e.new_user.email.toLowerCase(),
                          surname: e.new_user.surname,
                          installation_id: e.installation_id,
                          permitted_devices: e.new_permissions_user
                        }
                      },
                      o.createInstallationRelation(params).then(function () {
                        o.getInstallationRelations(e.installation_id, !0).then(function (n) {
                          e.irs = [
                          ],
                          n.forEach(function (n) {
                            e.irs.push(n)
                          }),
                          e.show_permissions(e.irs[e.irs.length - 1])
                        }).catch (function (e) {
                          console.log('Error to get the reelation with the installation:', e),
                          n.show_backend_error = !0
                        }),
                        e.show_new_user = !1
                      }).catch (function (n) {
                        console.log('Error to create the relation with the installation:', n),
                        e.taken_error = !0
                      })
                    } else e.newUserForm.invalid = !0
                  },
                  e.show_permissions = function (a) {
                    s.id() != a.user.id && (e.show_disabled_permission_device = !1, e.ir_selected = a, e.partial = 'permissions', e.ir_selected.installation.permitted_devices = [
                    ], l.getDevicesFromInstallation(a.installation.id).then(function (n) {
                      e.ir_selected.installation.permitted_devices.indexOf(n) < 0 && (e.ir_selected.installation.permitted_devices = n),
                      e.ir_selected.installation.permitted_devices.forEach(function (n) {
                        e.devices_permissions[n.id] = null != e.ir_selected.permitted_devices && e.ir_selected.permitted_devices.indexOf(n.id) > - 1 ? !0 : !1
                      })
                    }).catch (function (e) {
                      console.log('Error to get the devices of the installation:', e),
                      n.show_backend_error = !0
                    }), e.installations_permissions[e.installation_id] = 'advanced' == e.ir_selected.type ? !0 : !1)
                  },
                  e.returnToList = function () {
                    i.permission_relation_id ? r.go('home.installations', {
                      installation_id: e.installation_id
                    }, {
                      location: 'replace',
                      inherit: !1
                    })  : (e.ir_selected = null, c(), e.partial = 'list')
                  },
                  e.toggleInstallationPermission = function (a) {
                    if (e.installations_permissions[a.installation.id] = !e.installations_permissions[a.installation.id], e.installations_permissions[a.installation.id]) var t = 'advanced';
                     else var t = 'basic';
                    o.updateInstallationRelation(a.id, {
                      type: t
                    }).then(function (e) {
                      console.log('Type the relation with the installation updated: ', e)
                    }).catch (function (e) {
                      console.log('Error to update the type the relation with the installation:', e),
                      n.show_backend_error = !0
                    })
                  },
                  e.toggleDevicePermission = function (n) {
                    e.devices_permissions[n] = !e.devices_permissions[n],
                    e.setDevicePermission(n, e.devices_permissions[n])
                  },
                  e.setDevicePermission = function (a) {
                    if (null != e.ir_selected.permitted_devices) var t = e.ir_selected.permitted_devices.indexOf(a);
                     else {
                      e.ir_selected.permitted_devices = [
                      ];
                      var t = - 1
                    }
                    e.devices_permissions[a] ? 0 > t && e.ir_selected.permitted_devices.push(a)  : e.ir_selected.permitted_devices.length > 1 ? t > - 1 && e.ir_selected.permitted_devices.splice(t, 1)  : (e.devices_permissions[a] = !0, e.show_disabled_permission_device = !0),
                    o.putInstallationRelation(e.ir_selected).then(function (e) {
                      console.log('The installation has been update:', e)
                    }).catch (function (e) {
                      console.log('Error to update the installation:', e),
                      n.show_backend_error = !0
                    })
                  }
                }
              ]), Multimarca.controller('editInstallationController', [
                '$scope',
                '$rootScope',
                'installationService',
                '$stateParams',
                '$state',
                'installationRelationService',
                'sessionService',
                'deviceService',
                '$timeout',
                function (e, n, a, t, i, r, o, s) {
                  function l() {
                    r.getInstallationRelations(null, !0).then(function (a) {
                      e.irs = a,
                      e.ir_selected = a.filter(function (e) {
                        return e.id == t.ir
                      }) [0],
                      e.editInstallation.id = e.ir_selected.installation.id,
                      e.editInstallation.name = e.ir_selected.installation.name,
                      e.editInstallation.type = e.ir_selected.installation.type,
                      e.editInstallation.icon = e.ir_selected.installation.icon,
                      e.editInstallation.complete_name = e.ir_selected.installation.complete_name[n.language] ? e.ir_selected.installation.complete_name[n.language] : e.ir_selected.installation.complete_name,
                      e.editInstallation.postal_code = e.ir_selected.installation.postal_code,
                      e.editInstallation.installer_name = e.ir_selected.installation.installer_name,
                      e.editInstallation.installer_phone = e.ir_selected.installation.installer_phone,
                      e.editInstallation.installer_email = e.ir_selected.installation.installer_email,
                      s.getDevicesFromInstallation(e.editInstallation.id).then(function (n) {
                        e.editInstallation.devices = n
                      }).catch (function (e) {
                        console.log('Error to get the device of the installation:', e),
                        n.show_backend_error = !0
                      })
                    }).catch (function (e) {
                      console.log('Error to get the installation data:', e),
                      n.show_backend_error = !0
                    })
                  }
                  e.config = !0,
                  e.show_confirm = !1,
                  e.show_success = !1,
                  e.taken_error = !1,
                  e.installation = null,
                  e.type = null,
                  e.max_timeout = null,
                  e.min_timeout = null,
                  e.sleep_timeout = null,
                  e.show_types = !1,
                  e.editInstallation = {
                  },
                  e.messageServer = !1,
                  e.buttons = {
                    saveEdit: !1,
                    removeInstallation: !1
                  },
                  l(),
                  e.selectInstallationType = function (n) {
                    e.editInstallation.type = n,
                    e.show_types = !1
                  },
                  e.toggleInstallationType = function () {
                    e.propertyIcon = !1,
                    e.show_types = !e.show_types
                  },
                  e.togglePropertyIcon = function () {
                    e.show_types = !1,
                    e.propertyIcon = !e.propertyIcon
                  },
                  e.submitInstallationForm = function () {
                    if (e.editInstallationForm.$valid) {
                      e.buttons.saveEdit = !0;
                      var t = {
                        id: e.editInstallation.id,
                        installation: {
                          name: e.editInstallation.name,
                          icon: e.editInstallation.icon,
                          installer_name: e.editInstallation.installer_name,
                          installer_phone: e.editInstallation.installer_phone,
                          installer_email: e.editInstallation.installer_email,
                          spot_location: e.editInstallation.spot_location,
                          spot_complete_name: e.editInstallation.spot_complete_name,
                          spot_google_id: e.editInstallation.spot_google_id,
                          spot_google_reference: e.editInstallation.spot_google_reference,
                          postal_code: e.editInstallation.postal_code,
                          type: e.editInstallation.type
                        }
                      };
                      a.updateInstallation(e.editInstallation.id, t).then(function () {
                        l(),
                        e.show_success = !0
                      }).catch (function (e) {
                        console.log('Error to get the installation data:', e),
                        n.show_backend_error = !0
                      })
                    } else e.editInstallationForm.invalid = !0
                  },
                  e.setInstallationIcon = function (n) {
                    e.propertyIcon = !1,
                    e.editInstallation.icon = String(n)
                  },
                  e.confirmRemoveInstallation = function () {
                    e.show_confirm = !0
                  },
                  e.cancelConfirm = function () {
                    e.buttons.removeInstallation = !1,
                    e.show_confirm = !1
                  },
                  e.removeInstallation = function () {
                    n.demo ? (e.show_confirm = !1, e.show = !1, i.go('home.installations'))  : (e.buttons.removeInstallation = !0, r.removeInstallationRelation(e.ir_selected.id).then(function () {
                      e.show_confirm = !1,
                      e.show = !1,
                      i.go('home.installations')
                    }).catch (function (n) {
                      console.log('Error al borrar la instalación: ', n),
                      e.messageServer = 'errorServer'
                    }))
                  },
                  e.showModalAdjust = function (e) {
                    'advanced' == e.installation.role ? (n.click_modal_adjust_adjust = !0, n.device_config_target = e)  : n.not_permission = !0
                  },
                  e.removeDevice = function () {
                    e.show_modal_config_device = !0
                  },
                  e.i18n = function (e) {
                    return n.i18n(e)
                  }
                }
              ]), Multimarca.controller('homeController', [
                '$scope',
                '$rootScope',
                '$state',
                'sessionService',
                'websocketsService',
                'deviceService',
                'installationService',
                'installationRelationService',
                'checkLogin',
                function (e, n, a, t, i, r, o, s) {
                  function l() {
                    n.showMenuBtn = 'home.device' == a.current.name ? !1 : !0
                  }
                  n.menuTrigger = !1,
                  n.inside = !0,
                  n.hidden_overflow = !1,
                  e.device_phone_x = !1,
                  __eolo && (device.model.indexOf('iPhone10,3') >= 0 || device.model.indexOf('iPhone10,6') >= 0) && (e.device_iphone_x = !0),
                  l(),
                  e.logout = function () {
                    t.logout().then(t.unauthorize(), t.unauthorize()),
                    i.destroy(),
                    n.demo = !1,
                    s.destroy(),
                    r.destroy()
                  },
                  e.typeOfUser = function (e) {
                    return t.typeUser(e)
                  },
                  e.toggleEditInstallations = function () {
                    n.editInstallation = !n.editInstallation
                  }
                }
              ]), Multimarca.controller('initController', [
                '$scope',
                '$rootScope',
                '$state',
                '$http',
                '$window',
                function (e, n, a, t, i) {
                  function r() {
                    __eolo || n.browser_continue || t({
                      method: 'POST',
                      url: url_path + 'browsers/',
                      data: {
                      }
                    }).then(function (e) {
                      browser = e.data,
                      browser.supported || a.go('init.browsers')
                    }).catch (function (e) {
                      console.log('Error to check browser:', e),
                      n.show_backend_error = !0
                    })
                  }
                  e.goMarket = function () {
                    i.open('https://play.google.com/store/apps/details?id=es.altra.dkn', '_system', 'location=no')
                  },
                  e.reloadLogin = function () {
                    a.go('init.login', {
                    }, {
                      reload: !0
                    })
                  },
                  e.reloadHome = function () {
                    a.go('home.installations', {
                    }, {
                      reload: !0
                    }),
                    n.modalShow = !1,
                    n.installation_config_target = null,
                    n.device_config_target = null,
                    n.device_config_params_target = null
                  },
                  e.browserContinue = function () {
                    n.browser_continue = !0,
                    a.go('init.login')
                  },
                  r()
                }
              ]), Multimarca.controller('loginController', [
                '$scope',
                '$rootScope',
                '$http',
                '$state',
                '$stateParams',
                'sessionService',
                'demoService',
                function (e, n, a, t, i, r, o) {
                  function s() {
                    i.email_confirmed && (e.email_confirmed = !0)
                  }
                  if (e.login_error = !1, e.unconfirmed_error = !1, e.password_error = !1, e.state = 'login', e.invalid = !1, n.inside = !1, e.email_confirmed = !1, e.eolo = __eolo, __eolo) {
                    e.login = {
                    },
                    e.login_data = {
                    };
                    var l = new cordova.plugins.SecureStorage(function () {
                      console.log('Success')
                    }, function (e) {
                      console.log('Error ' + e)
                    }, 'ATHome2017')
                  }
                  e.init = function () {
                    __eolo && l.get(function (n) {
                      e.login_data.email = n,
                      l.get(function (n) {
                        e.login_data.password = n,
                        e.login.email = e.login_data.email,
                        e.login.password = e.login_data.password,
                        e.$apply()
                      }, function (e) {
                        console.log('Error ' + e)
                      }, 'password')
                    }, function (e) {
                      console.log('Error ' + e)
                    }, 'email')
                  },
                  s(),
                  e.submitLoginForm = function () {
                    e.loginForm.$valid ? (data = {
                      email: e.login.email,
                      password: e.login.password
                    }, __eolo && l.set(function () {
                      l.set(function () {
                      }, function (e) {
                        console.log('Error ' + e)
                      }, 'password', e.login.password)
                    }, function (e) {
                      console.log('Error ' + e)
                    }, 'email', e.login.email), a({
                      method: 'POST',
                      url: url_path + 'users/sign_in',
                      data: {
                        email: e.login.email,
                        password: e.login.password
                      }
                    }).then(function (a) {
                      if (data = a.data, __eolo && 'admin' == data.user.role) e.loginForm.invalid = !0,
                      e.login_error = !0,
                      e.unconfirmed_error = !1;
                       else {
                        r.saveUserLocal(data);
                        var i = data.user.role;
                        t.go('admin' == i || 'super_admin' == i ? 'home.admin' : 'home.installations')
                      }
                      n.detectLanguage()
                    }).catch (function (n) {
                      e.loginForm.invalid = !0;
                      var a = n.data;
                      console.log('Error to init session:', a),
                      - 1 != a.errors.indexOf('unconfirmed') ? e.state = 'unconfirmed' : (e.login_error = !0, e.unconfirmed_error = !1)
                    }))  : e.loginForm.invalid = !0
                  },
                  e.submitPasswordForm = function () {
                    e.passwordForm.$valid ? a({
                      method: 'POST',
                      url: url_path + 'users/password',
                      responseType: 'json',
                      data: {
                        user: {
                          email: this.password.email
                        }
                      }
                    }).then(function () {
                      e.state = 'reset_success'
                    }).catch (function (n) {
                      console.log('Error to change password:', n),
                      e.passwordForm.invalid = !0,
                      e.email_not_exist_error = !0
                    })  : e.passwordForm.invalid = !0
                  },
                  e.submitDemoform = function () {
                    r.saveUserLocal(o.user()),
                    n.demo = !0,
                    t.go('home.installations')
                  },
                  e.goRegister = function () {
                    __eolo ? (url = 'https://dkn.airzonecloud.com/#/init/register', cordova.InAppBrowser.open(url, '_system', 'location=no'))  : t.go('init.register')
                  }
                }
              ]), Multimarca.controller('modalAlertInstallerController', [
                '$scope',
                '$rootScope',
                'deviceService',
                function (e, n, a) {
                  function t() {
                    e.isMobile = n.isMobile,
                    e.installer = {
                      user_name: '',
                      user_phone: '',
                      id: e.device_alert_installer_target.id
                    }
                  }
                  e.showHelp = !1,
                  e.showSuccess = !1,
                  e.show_email = !1,
                  e.listenerDevice = n.$watch('device_alert_installer_target', function (a) {
                    a && (e.showHelp = !1, e.device_alert_installer_target = a, e.show_modal_alert_installer = !0, t(), e.showSuccess = !1, n.modalShow = !0)
                  }),
                  e.submitSendInstallerForm = function () {
                    e.alertInstallerForm.$valid ? a.alertInstaller(e.installer).then(function () {
                      e.showSuccess = !0
                    }).catch (function (e) {
                      console.log('Error to save data of alert to installer:', e),
                      n.show_backend_error = !0
                    })  : e.alertInstallerForm.invalid = !0
                  },
                  e.toggleShowEmail = function () {
                    e.show_email = !e.show_email
                  },
                  e.close = function () {
                    e.alertInstallerForm.invalid = !1,
                    e.show = !1,
                    e.device = null,
                    n.device_alert_installer_target = !1,
                    e.show_modal_alert_installer = !1,
                    e.showSuccess = !1,
                    n.modalShow = !1
                  },
                  e.$on('$destroy', function () {
                    e.listenerDevice()
                  }),
                  e.i18n = function (e) {
                    return n.i18n(e)
                  }
                }
              ]), Multimarca.controller('modalConfigDeviceController', [
                '$scope',
                '$rootScope',
                'deviceService',
                'eventsService',
                'installationService',
                'installationRelationService',
                '$state',
                'sessionService',
                '$timeout',
                function (e, n, a, t, i, r, o, s, l) {
                  function c(t, i) {
                    a.updateDevice(e.device.id, t).then(function () {
                      i()
                    }).catch (function (e) {
                      console.log('Error to update the device data:', e),
                      n.show_backend_error = !0
                    })
                  }
                  function u() {
                    e.device.name && c({
                      name: e.device.name
                    }, function () {
                    })
                  }
                  function d() {
                    e.min_timeout && l.cancel(e.min_timeout),
                    e.min_timeout = l(function () {
                      m()
                    }, 1000)
                  }
                  function m() {
                    a.updateDevice(e.device.id, {
                      min_temp_unoccupied: e.device.min_temp_unoccupied
                    })
                  }
                  function h() {
                    e.max_timeout && l.cancel(e.max_timeout),
                    e.max_timeout = l(function () {
                      p()
                    }, 1000)
                  }
                  function p() {
                    a.updateDevice(e.device.id, {
                      max_temp_unoccupied: e.device.max_temp_unoccupied
                    })
                  }
                  function v() {
                    e.sleep_timeout && l.cancel(e.sleep_timeout),
                    e.sleep_timeout = l(function () {
                      g()
                    }, 1000)
                  }
                  function g() {
                    a.updateDevice(e.device.id, {
                      sleep_time: e.device.sleep_time
                    })
                  }
                  function f(a) {
                    i.removeInstallation(a).then(function () {
                      e.show_modal_config_device = !1,
                      e.show_confirm = !1,
                      e.show = !1,
                      o.go('home.installations')
                    }).catch (function (e) {
                      console.log('Error to delete the installation:', e),
                      n.show_backend_error = !0
                    })
                  }
                  e.showHelp = !1,
                  e.show_new_installation = !1,
                  e.installations = [
                  ],
                  e.installation = null,
                  e.installation_selected = null,
                  e.name = '',
                  e.max_timeout = null,
                  e.min_timeout = null,
                  e.sleep_timeout = null,
                  e.show_confirm = !1,
                  e.link = null,
                  e.show_select_inst = !1,
                  e.show_types = !1,
                  e.remove_installation = !1,
                  e.delete_installation = !1,
                  e.buttons = {
                    removeDeviceInstallation: !1
                  },
                  e.listenerConfigDevice = n.$watch('device_config_target', function (a) {
                    a && (e.showHelp = !1, e.show_select_inst = !1, e.config_device_target = a, e.device = a, n.click_modal_adjust_adjust && (e.link = 'adjust', e.show_modal_config_device = !0, n.click_modal_adjust_adjust = !1, i.getInstallations(!0).then(function (n) {
                      e.installations = n,
                      e.installation_selected = e.installations.filter(function (n) {
                        return n.id == e.device.installation_id
                      }) [0]
                    }).catch (function (e) {
                      console.log('Error to get the installations:', e),
                      n.show_backend_error = !0
                    }), e.showNewInstallation(!1), e.name = e.device.name), n.click_modal_params_adjust && (e.link = 'params', e.show_modal_config_params_device = !0, n.click_modal_params_adjust = !1), n.modalShow = !0)
                  }),
                  e.selectLink = function (n) {
                    e.link = n
                  },
                  e.showNewInstallation = function (n) {
                    e.addInstallationForm.$pristine = !0,
                    e.installation = {
                    },
                    e.show_types = !1;
                    var a = document.getElementById('searchTextField2'),
                    t = new google.maps.places.Autocomplete(a, {
                      types: [
                        '(cities)'
                      ]
                    });
                    google.maps.event.addListener(t, 'place_changed', function () {
                      var n = t.getPlace(),
                      a = n.geometry.location,
                      i = n.address_components.filter(function (e) {
                        return e.types.indexOf('administrative_area_level_2') > - 1 || e.types.indexOf('administrative_area_level_1') > - 1 || e.types.indexOf('country') > - 1
                      }),
                      r = n.name + ',';
                      r += i.map(function (e) {
                        return e.long_name
                      }).join(),
                      e.installation.spot_location = [
                        a.lat(),
                        + a.lng()
                      ],
                      e.installation.spot_complete_name = r,
                      e.installation.spot_google_id = n.id,
                      e.installation.spot_google_reference = n.reference,
                      e.$apply()
                    }),
                    e.installation.type = 'home',
                    e.show_new_installation = n
                  },
                  e.selectInstallationType = function (n) {
                    e.installation.type = n,
                    e.show_types = !1
                  },
                  e.submitInstallationForm = function () {
                    if (e.addInstallationForm.$valid) {
                      var a = {
                        installation: {
                          owner_id: s.id(),
                          name: e.installation.name,
                          icon: e.installation.icon,
                          spot_location: e.installation.spot_location,
                          spot_complete_name: e.installation.spot_complete_name,
                          spot_google_id: e.installation.spot_google_id,
                          spot_google_reference: e.installation.spot_google_reference,
                          postal_code: e.installation.postal_code
                        }
                      };
                      i.createInstallation(a).then(function (n) {
                        n.installation.complete_name = e.installation.spot_complete_name,
                        n.installation.id = n.installation._id.$oid,
                        e.installations.push(n.installation),
                        e.show_new_installation = !1
                      }).catch (function (e) {
                        console.log('Error to create the installation:', e),
                        n.show_backend_error = !0
                      })
                    } else e.addInstallationForm.invalid = !0
                  },
                  e.$on('$destroy', function () {
                    e.listenerConfigDevice(),
                    e.listenerName()
                  }),
                  e.successUpdate = function () {
                    e.close(),
                    o.go('home.installations', {
                    }, {
                      reload: !0
                    })
                  },
                  e.selectInstallation = function (n) {
                    e.installation_selected = n,
                    1 == e.device.installation.device_ids.length ? (e.delete_installation = !0, e.remove_installation = !0, e.show_confirm = !0)  : c({
                      installation_id: e.installation_selected.id
                    }, function () {
                      a.destroy(),
                      e.show_success = !0
                    })
                  },
                  e.listenerName = e.$watch('device.name', function (n, a) {
                    if (n && a && n != a && n.length > 0) {
                      e.name_timeout && l.cancel(e.name_timeout);
                      var t = String(e.device.name);
                      e.name = t,
                      '' != e.device.name ? e.name_timeout = l(function () {
                        u()
                      }, 300)  : e.device.name = t
                    }
                  }),
                  e.minTempUnoccupiedChange = function (n) {
                    var a = 1,
                    t = 22,
                    i = 12;
                    'fahrenheit' == s.unit_format() && (t = 72, i = 54),
                    n > 0 && parseFloat(e.device.min_temp_unoccupied) < t ? (e.device.min_temp_unoccupied = String(parseFloat(parseFloat(e.device.min_temp_unoccupied) + a)), d())  : 0 > n && parseFloat(e.device.min_temp_unoccupied) > i && (e.device.min_temp_unoccupied = String(parseFloat(parseFloat(e.device.min_temp_unoccupied) - a)), d())
                  },
                  e.maxTempUnoccupiedChange = function (n) {
                    var a = 1,
                    t = 34,
                    i = 24;
                    'fahrenheit' == s.unit_format() && (t = 93, i = 75),
                    n > 0 && parseFloat(e.device.max_temp_unoccupied) < t ? (e.device.max_temp_unoccupied = String(parseFloat(parseFloat(e.device.max_temp_unoccupied) + a)), h())  : 0 > n && parseFloat(e.device.max_temp_unoccupied) > i && (e.device.max_temp_unoccupied = String(parseFloat(parseFloat(e.device.max_temp_unoccupied) - a)), h())
                  },
                  e.sleepTimeChange = function (n) {
                    var a = 10,
                    t = 120,
                    i = 30;
                    n > 0 && parseFloat(e.device.sleep_time) < t ? (e.device.sleep_time = String(parseFloat(parseFloat(e.device.sleep_time) + a)), v())  : 0 > n && parseFloat(e.device.sleep_time) > i && (e.device.sleep_time = String(parseFloat(parseFloat(e.device.sleep_time) - a)), v())
                  },
                  e.confirmRemoveInstallation = function () {
                    e.show_confirm = !0,
                    e.installation_selected.device_ids.length < '2' && (e.remove_installation = !0)
                  },
                  e.cancelConfirm = function () {
                    1 == e.device.installation.device_ids.length && (e.installation_selected = e.device.installation),
                    e.show_confirm = !1
                  },
                  e.removeDeviceInstallation = function () {
                    e.buttons.removeDeviceInstallation = !0,
                    a.updateDevice(e.device.id, {
                      installation_id: null,
                      status: 'connected'
                    }).then(function () {
                      e.remove_installation ? f(e.installation_selected.id)  : e.installation_selected.device_ids.indexOf(e.device.id) > - 1 && (e.installation_selected.device_ids.splice(e.installation_selected.device_ids.indexOf(e.device.id), 1), datas = {
                        device_relation: {
                          permitted_devices: e.installation_selected.device_ids
                        }
                      }, r.updateInstallationRelation(n.ir.id, datas).then(function () {
                        e.show_modal_config_device = !1,
                        e.show_confirm = !1,
                        e.show = !1,
                        e.buttons.removeDeviceInstallation = !1,
                        o.go('home.installations')
                      }).catch (function (e) {
                        console.log('Error to update the permitted devices of the installation:', e),
                        n.show_backend_error = !0
                      }))
                    }, function () {
                    })
                  },
                  e.updateDeviceDeleteInstallation = function (n) {
                    c({
                      installation_id: e.installation_selected.id
                    }, function () {
                      a.destroy(),
                      f(n)
                    })
                  },
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.close = function () {
                    e.min_timeout && (l.cancel(e.min_timeout), e.min_timeout = null, m()),
                    e.max_timeout && (l.cancel(e.max_timeout), e.max_timeout = null, p()),
                    e.sleep_timeout && (l.cancel(e.sleep_timeout), e.sleep_timeout = null, g()),
                    e.name_timeout && (l.cancel(e.name_timeout), e.name_timeout = null, '' != e.device.name && u()),
                    e.show = !1,
                    null == e.device.name && (e.device.name = e.name),
                    e.device = null,
                    e.show_new_installation = !1,
                    e.show_modal_config_device = !1,
                    e.show_modal_config_params_device = !1,
                    n.device_config_target = !1,
                    e.installations = [
                    ],
                    n.modalShow = !1,
                    n.click_modal_adjust_adjust = !1,
                    n.click_modal_params_adjust = !1,
                    e.show_success = !1
                  }
                }
              ]), Multimarca.controller('modalConfigInstallationController', [
                '$scope',
                '$rootScope',
                'installationService',
                'eventsService',
                '$stateParams',
                '$state',
                'installationRelationService',
                'sessionService',
                'deviceService',
                '$timeout',
                function (e, n, a, t, i, r, o, s, l, c) {
                  function u() {
                    var n = document.getElementById('searchTextField'),
                    a = new google.maps.places.Autocomplete(n, {
                      types: [
                        '(cities)'
                      ]
                    });
                    google.maps.event.addListener(a, 'place_changed', function () {
                      var n = a.getPlace(),
                      t = n.geometry.location,
                      i = n.address_components.filter(function (e) {
                        return e.types.indexOf('administrative_area_level_2') > - 1 || e.types.indexOf('administrative_area_level_1') > - 1 || e.types.indexOf('country') > - 1
                      }),
                      r = n.name + ',';
                      r += i.map(function (e) {
                        return e.long_name
                      }).join(),
                      e.edit_installation.spot_location = [
                        t.lat(),
                        + t.lng()
                      ],
                      e.edit_installation.spot_complete_name = r,
                      e.edit_installation.spot_google_id = n.id,
                      e.edit_installation.spot_google_reference = n.reference,
                      e.$apply()
                    })
                  }
                  function d() {
                    e.min_timeout && c.cancel(e.min_timeout),
                    e.min_timeout = c(function () {
                      m()
                    }, 1000)
                  }
                  function m() {
                    e.installation.devices.forEach(function (n) {
                      n.min_temp_unoccupied = e.installation.min_temp_unoccupied,
                      l.updateDevice(n.id, {
                        min_temp_unoccupied: e.installation.min_temp_unoccupied
                      })
                    })
                  }
                  function h() {
                    e.max_timeout && c.cancel(e.max_timeout),
                    e.max_timeout = c(function () {
                      p()
                    }, 1000)
                  }
                  function p() {
                    e.installation.devices.forEach(function (n) {
                      n.max_temp_unoccupied = e.installation.max_temp_unoccupied,
                      l.updateDevice(n.id, {
                        max_temp_unoccupied: e.installation.max_temp_unoccupied
                      })
                    })
                  }
                  function v() {
                    e.sleep_timeout && c.cancel(e.sleep_timeout),
                    e.sleep_timeout = c(function () {
                      g()
                    }, 1000)
                  }
                  function g() {
                    e.installation.devices.forEach(function (n) {
                      n.sleep_time = e.installation.sleep_time,
                      l.updateDevice(n.id, {
                        sleep_time: e.installation.sleep_time
                      })
                    })
                  }
                  function f() {
                    o.getInstallationRelations(e.installation.id, !0).then(function (n) {
                      e.irs = [
                      ],
                      n.forEach(function (n) {
                        n.user.id != s.id() && e.irs.push(n)
                      })
                    }, function () {
                    })
                  }
                  e.show = !1,
                  e.showHelp = !1,
                  e.config = !0,
                  e.show_confirm = !1,
                  e.show_success = !1,
                  e.show_new_user = !1,
                  e.show_confirm_user = !1,
                  e.show_new_user = !1,
                  e.taken_error = !1,
                  e.installation = null,
                  e.type = null,
                  e.user_to_remove = null,
                  e.max_timeout = null,
                  e.min_timeout = null,
                  e.sleep_timeout = null,
                  e.link = null,
                  e.show_types = !1,
                  e.listenerInstallation = n.$watch('installation_config_target', function (a) {
                    a && (e.link = 'params', e.showHelp = !1, e.show_types = !1, e.show_confirm = !1, e.show_success = !1, e.installation = a, e.edit_installation = {
                    }, e.edit_installation = JSON.parse(JSON.stringify(a)), e.installation.spot_complete_name = e.installation.complete_name, e.show = !0, n.modalShow = !0, e.installation.sleep_time = '30', 'fahrenheit' == s.unit_format() ? (e.installation.min_temp_unoccupied = '62', e.installation.max_temp_unoccupied = '84')  : (e.installation.min_temp_unoccupied = '17', e.installation.max_temp_unoccupied = '29'), u(), f())
                  }),
                  e.selectLink = function (n) {
                    e.link = n
                  },
                  e.selectInstallationType = function (n) {
                    e.edit_installation.type = n,
                    e.show_types = !1
                  },
                  e.minTempUnoccupiedChange = function (n) {
                    var a = 1,
                    t = 32,
                    i = 16;
                    'fahrenheit' == s.unit_format() && (t = 72, i = 54),
                    n > 0 && parseFloat(e.installation.min_temp_unoccupied) < t ? (e.installation.min_temp_unoccupied = String(parseFloat(parseFloat(e.installation.min_temp_unoccupied) + a)), d())  : 0 > n && parseFloat(e.installation.min_temp_unoccupied) > i && (e.installation.min_temp_unoccupied = String(parseFloat(parseFloat(e.installation.min_temp_unoccupied) - a)), d())
                  },
                  e.maxTempUnoccupiedChange = function (n) {
                    var a = 1,
                    t = 32,
                    i = 16;
                    'fahrenheit' == s.unit_format() && (t = 93, i = 75),
                    n > 0 && parseFloat(e.installation.max_temp_unoccupied) < t ? (e.installation.max_temp_unoccupied = String(parseFloat(parseFloat(e.installation.max_temp_unoccupied) + a)), h())  : 0 > n && parseFloat(e.installation.max_temp_unoccupied) > i && (e.installation.max_temp_unoccupied = String(parseFloat(parseFloat(e.installation.max_temp_unoccupied) - a)), h())
                  },
                  e.sleepTimeChange = function (n) {
                    var a = 10,
                    t = 120,
                    i = 30;
                    n > 0 && parseFloat(e.installation.sleep_time) < t ? (e.installation.sleep_time = String(parseFloat(parseFloat(e.installation.sleep_time) + a)), v())  : 0 > n && parseFloat(e.installation.sleep_time) > i && (e.installation.sleep_time = String(parseFloat(parseFloat(e.installation.sleep_time) - a)), v())
                  },
                  e.togglePropertyIcon = function () {
                    e.propertyIcon = !e.propertyIcon
                  },
                  e.submitInstallationForm = function () {
                    if (e.editInstallationForm.$valid) {
                      var t = {
                        id: i.id,
                        installation: {
                          name: e.edit_installation.name,
                          icon: e.edit_installation.icon,
                          installer_name: e.edit_installation.installer_name,
                          installer_phone: e.edit_installation.installer_phone,
                          installer_email: e.edit_installation.installer_email,
                          spot_location: e.edit_installation.spot_location,
                          spot_complete_name: e.edit_installation.spot_complete_name,
                          spot_google_id: e.edit_installation.spot_google_id,
                          spot_google_reference: e.edit_installation.spot_google_reference,
                          postal_code: e.edit_installation.postal_code,
                          type: e.edit_installation.type
                        }
                      };
                      a.updateInstallation(i.id, t).then(function () {
                        e.installation.name = e.edit_installation.name,
                        e.installation.icon = e.edit_installation.icon,
                        e.installation.installer_name = e.edit_installation.installer_name,
                        e.installation.installer_phone = e.edit_installation.installer_phone,
                        e.installation.installer_email = e.edit_installation.installer_email,
                        e.installation.spot_location = e.edit_installation.spot_location,
                        e.installation.spot_complete_name = e.edit_installation.spot_complete_name,
                        e.installation.spot_google_id = e.edit_installation.spot_google_id,
                        e.installation.spot_google_reference = e.edit_installation.spot_google_reference,
                        e.installation.min_temp_unoccupied = e.edit_installation.min_temp_unoccupied,
                        e.installation.max_temp_unoccupied = e.edit_installation.max_temp_unoccupied,
                        e.installation.postal_code = e.edit_installation.postal_code,
                        e.installation.type = e.edit_installation.type,
                        e.close()
                      }).catch (function (e) {
                        console.log('Error to update the installation data:', e),
                        n.show_backend_error = !0
                      })
                    } else e.editInstallationForm.invalid = !0
                  },
                  e.setInstallationIcon = function (n) {
                    e.propertyIcon = !1,
                    e.edit_installation.icon = String(n)
                  },
                  e.confirmRemoveInstallation = function () {
                    e.show_confirm = !0
                  },
                  e.cancelConfirm = function () {
                    e.show_confirm = !1
                  },
                  e.cancelUserConfirm = function () {
                    e.show_confirm_user = !1
                  },
                  e.removeInstallation = function () {
                    a.removeInstallation(e.edit_installation.id).then(function () {
                      e.show_confirm = !1,
                      e.show = !1,
                      r.go('home.installations')
                    }).catch (function (a) {
                      e.show_confirm = !1,
                      console.log('Error to remove the installation:', a),
                      n.show_backend_error = !0
                    })
                  },
                  e.$on('$destroy', function () {
                    e.listenerInstallation()
                  }),
                  e.removeUser = function (n) {
                    e.show_confirm_user = !0,
                    e.ir_to_remove = n
                  },
                  e.removeConfirmUser = function () {
                    o.removeInstallationRelation(e.ir_to_remove.id).then(function () {
                      e.show_confirm_user = !1;
                      var n = [
                      ];
                      e.irs.forEach(function (a) {
                        a.id != e.ir_to_remove.id && n.push(a)
                      }),
                      e.irs = n
                    }).catch (function (e) {
                      console.log('Error to remove the relation with the installation:', e),
                      n.show_backend_error = !0
                    })
                  },
                  e.showNewUser = function () {
                    e.new_user = null,
                    e.type = 'basic',
                    e.newUserForm && e.newUserForm.$setPristine(),
                    e.show_new_user = !0
                  },
                  e.changeState = function () {
                    e.type = 'advanced' == e.type ? 'basic' : 'advanced'
                  },
                  e.cancelUserTaken = function () {
                    e.taken_error = !1
                  },
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.cancelNewUser = function () {
                    e.new_user = null,
                    e.show_new_user = !1
                  },
                  e.submitNewUserForm = function () {
                    e.newUserForm.$valid ? (params = {
                      installation_relation: {
                        type: e.type,
                        name: e.new_user.name,
                        email: e.new_user.email,
                        surname: e.new_user.surname,
                        installation_id: e.installation.id
                      }
                    }, o.createInstallationRelation(params).then(function () {
                      f(),
                      e.show_new_user = !1
                    }).catch (function (n) {
                      console.log('Error to create the relation with the installation:', n),
                      e.taken_error = !0
                    }))  : e.newUserForm.invalid = !0
                  },
                  e.close = function () {
                    e.min_timeout && (c.cancel(e.min_timeout), e.min_timeout = null, m()),
                    e.max_timeout && (c.cancel(e.max_timeout), e.max_timeout = null, p()),
                    e.sleep_timeout && (c.cancel(e.sleep_timeout), e.sleep_timeout = null, g()),
                    e.show = !1,
                    e.installation = null,
                    e.edit_installation = null,
                    e.irs = null,
                    e.taken_error = !1,
                    e.show_new_user = !1,
                    e.show_modal_config_installation = !1,
                    n.installation_config_target = !1,
                    n.modalShow = !1,
                    e.user_to_remove = null
                  }
                }
              ]), Multimarca.controller('modalSchedulesController', [
                '$scope',
                '$rootScope',
                'deviceService',
                'scheduleService',
                'sessionService',
                '$timeout',
                function (e, n, a, t, r, o) {
                  function s(a) {
                    if (a) if (e.name = a.name, e.target = a, e.schedules = null, e.virtual_schedule = null, e.show = !0, n.modalShow = !0, n.demo && o(function () {
                      n.update_schedules = !0
                    }, 1000), 'fahrenheit' == r.unit_format() ? (e.temp_min = 61, e.temp_max = 90, e.temp_initial = 68)  : (e.temp_min = 16, e.temp_max = 32, e.temp_initial = 20), 'Installation' == e.target.class ) e.changeToNewView();
                     else {
                      e.show_view = 'list',
                      e.available_modes = [
                      ];
                      for (var t = 0; 5 > t; t++) '1' == e.target.modes[t] && e.available_modes.push(e.modes[t])
                    }
                  }
                  function l(a) {
                    e.schedules = [
                    ],
                    e.show_view = 'list',
                    e.buttons.save_new_schedule = !1,
                    a ? t.getSchedules(e.target.id).then(function (n) {
                      e.schedules = n,
                      e.buttons.disableNew = !1
                    }).catch (function (e) {
                      console.log('Error to get the list of the schedules: ', e),
                      n.show_backend_error = !0
                    })  : e.buttons.disableNew = !1
                  }
                  function c() {
                    if (e.schedules && e.schedules.length > 0) {
                      for (var n = !1, a = 0; a < e.schedules.length; a++) if ('1' == e.schedules[a].enabled) {
                        n = !0;
                        break
                      }
                      e.target.progs_enabled = n ? !0 : !1
                    } else e.target.progs_enabled = !1
                  }
                  function u(n) {
                    return e.modes.indexOf(n) + 1
                  }
                  e.showHelp = !1,
                  e.modes = [
                    'cool',
                    'heat',
                    'ventilate',
                    'heat-cold-auto',
                    'dehumidify'
                  ],
                  e.velocities = [
                    '0',
                    '1',
                    '2',
                    '3'
                  ],
                  e.show_view = 'list',
                  e.class_modal_mode,
                  e.available_modes = e.modes,
                  e.error_day = !1,
                  e.new_schedule = !1,
                  e.all_devices = !0,
                  e.buttons = {
                    disableNew: !0,
                    save_new_schedule: !1,
                    removeSchedule: !1
                  },
                  e.listener1 = n.$watch('schedules_target', function (n) {
                    e.showHelp = !1,
                    e.all_devices = !0,
                    e.buttons.disableNew = !0,
                    n ? (s(n), 'Installation' != e.target.class ? l(n)  : e.buttons.disableNew = !1)  : e.buttons.disableNew = !1
                  }),
                  e.changeToNewView = function () {
                    var a = null,
                    t = '';
                    if (e.buttons.save_new_schedule = !1, 'Installation' != e.target.class ) {
                      var r = e.schedules.map(function (e) {
                        return e.number
                      });
                      for (i = 1; 24 >= i; i++) if (r.indexOf(i) < 0) {
                        a = i;
                        break
                      }
                      t = 10 > a ? '0' + a : a
                    }
                    if ('Installation' == e.target.class ) var o = e.target.devices[0].time_zone;
                     else var o = e.target.installation.time_zone;
                    e.virtual_schedule = {
                      enabled: '1',
                      mode: '1',
                      temp: '20',
                      hour: '00',
                      minute: '00',
                      days: [
                        '0',
                        '0',
                        '0',
                        '0',
                        '0',
                        '0',
                        '0'
                      ],
                      number: a,
                      name: 'PROG. ' + t,
                      device_id: e.target.id,
                      time_zone: o,
                      type: 'mode'
                    },
                    e.virtual_schedule.temp = e.temp_initial,
                    'Installation' != e.target.class && n.schedules_count + 1 > 24 ? (console.log('Message: Can\'t create new schedule'), n.not_permission_new_schedule = !0)  : (e.new_edit_type = 'new', e.show_view = 'new', e.new_schedule = !0)
                  },
                  e.changeToEditView = function (n) {
                    e.buttons.save_new_schedule = !1,
                    e.buttons.delete_schedule = !1,
                    e.virtual_schedule = JSON.parse(JSON.stringify(n)),
                    e.virtual_schedule.temp || (e.virtual_schedule.temp = e.temp_initial),
                    e.virtual_schedule.time_zone || (e.virtual_schedule.time_zone = e.target.installation.time_zone),
                    e.new_edit_type = 'edit',
                    e.show_view = 'new',
                    e.new_schedule = !1
                  },
                  e.saveSchedule = function () {
                    e.virtual_schedule.days;
                    if (e.error_day = e.virtual_schedule && angular.equals(e.virtual_schedule.days, [
                      '0',
                      '0',
                      '0',
                      '0',
                      '0',
                      '0',
                      '0'
                    ]) ? !0 : !1, !e.error_day && e.virtual_schedule) {
                      'mode' == e.virtual_schedule.type ? (e.virtual_schedule.power = null, e.hasTemp() || (e.virtual_schedule.temp = null))  : (e.virtual_schedule.mode = null, e.virtual_schedule.temp = null);
                      var a = JSON.parse(JSON.stringify(e.virtual_schedule));
                      'Installation' == e.target.class ? n.schedules_count + e.target.devices.length > 24 ? (console.log('Message: Can\'t create new schedules'), n.not_permission_new_schedule = !0)  : (angular.forEach(e.target.devices, function (i) {
                        if (e.all_devices || i.selected_for_sche) {
                          i.progs_enabled = !0,
                          a.device_id = i.id;
                          var r = angular.copy(a);
                          t.saveSchedule(r).then(function () {
                            console.log('Schedule created'),
                            n.schedules_count += 1
                          }).catch (function (e) {
                            console.log('Error to create the schedule in all devices: ', e),
                            n.show_backend_error = !0
                          })
                        }
                      }), e.show_view = 'waiting_message')  : e.new_schedule ? (e.buttons.save_new_schedule = !0, t.saveSchedule(a).then(function () {
                        console.log('Schedule created'),
                        n.schedules_count += 1,
                        l(e.target)
                      }).catch (function (e) {
                        console.log('Error to create the schedule: ', e),
                        n.show_backend_error = !0
                      }))  : t.updateSchedule(a.id, a).then(function () {
                        l(e.target)
                      }).catch (function (e) {
                        console.log('Error to update the schedule: ', e),
                        n.show_backend_error = !0
                      })
                    }
                  },
                  e.removeSchedule = function () {
                    e.buttons.removeSchedule = !0,
                    e.schedules = [
                    ],
                    t.removeSchedule(e.virtual_schedule.id).then(function () {
                      n.schedules_count -= 1,
                      e.show_view = 'list',
                      l(e.target)
                    }).catch (function (e) {
                      console.log('Error to remove the schedule: ', e),
                      n.show_backend_error = !0
                    })
                  },
                  e.toggleEnabled = function (n) {
                    e.schedule_timeout && e.schedule_timeout != n && (clearTimeout(e.schedule_enabled_timeout), t.updateSchedule(e.schedule_timeout.id, {
                      enabled: e.schedule_timeout.enabled
                    })),
                    e.schedule_enabled_timeout && clearTimeout(e.schedule_enabled_timeout),
                    e.schedule_timeout = n,
                    e.schedule_enabled_timeout = setTimeout(function () {
                      t.updateSchedule(n.id, {
                        enabled: n.enabled
                      }),
                      e.schedule_timeout = null
                    }, 1000)
                  },
                  e.close = function () {
                    e.schedule_enabled_timeout && e.schedule_timeout && (clearTimeout(e.schedule_enabled_timeout), t.updateSchedule(e.schedule_timeout.id, {
                      enabled: e.schedule_timeout.enabled
                    }).then(function () {
                      console.log('Schedule updated.')
                    }).catch (function (e) {
                      console.log('Error to create the schedule in all devices: ', e),
                      n.show_backend_error = !0
                    })),
                    'Installation' != e.target.class && c(),
                    e.schedules = null,
                    e.target = null,
                    e.show = !1,
                    e.show_view = 'list',
                    n.modalShow = !1,
                    n.schedules_target = null,
                    e.error_day = !1,
                    e.block_update = !1
                  },
                  e.toggleAllDevices = function () {
                    e.all_devices = !e.all_devices,
                    e.all_devices || angular.forEach(e.target.devices, function (e) {
                      e.selected_for_sche = !0
                    })
                  },
                  e.changeType = function (n) {
                    e.virtual_schedule.type = n,
                    'mode' == n ? (e.virtual_schedule.mode || (e.virtual_schedule.mode = 1), e.virtual_schedule.temp || (e.virtual_schedule.temp = e.temp_initial))  : e.virtual_schedule.power || (e.virtual_schedule.power = 'on')
                  },
                  e.toggleOnOff = function () {
                    e.virtual_schedule.power = 'on' == e.virtual_schedule.power ? 'off' : 'on'
                  },
                  e.toggleDays = function (n) {
                    e.virtual_schedule.days[n] = '0' == e.virtual_schedule.days[n] ? '1' : '0'
                  },
                  e.selectNew = function (n) {
                    e.select_type = n,
                    'hour' == n ? (e.preview_show = 'new', e.show_view = 'hour')  : 'temp' == n ? (e.preview_show = 'new', e.show_view = 'temp')  : 'mode' == n && (e.preview_show = 'new', e.show_view = 'modes', e.class_modal_mode = e.modes[parseInt(e.virtual_schedule.mode - 1)])
                  },
                  e.returnToNew = function () {
                    e.show_view = 'new'
                  },
                  e.changeHour = function (n) {
                    var a = parseInt(e.virtual_schedule.hour) + n;
                    e.virtual_schedule.hour = 0 > a ? '23' : a > 23 ? '00' : a,
                    String(e.virtual_schedule.hour).length < 2 && (e.virtual_schedule.hour = '0' + e.virtual_schedule.hour)
                  },
                  e.changeMinute = function (n) {
                    var a = parseInt(e.virtual_schedule.minute) + n;
                    e.virtual_schedule.minute = 1 > a ? '59' : a > 59 ? '00' : a,
                    String(e.virtual_schedule.minute).length < 2 && (e.virtual_schedule.minute = '0' + e.virtual_schedule.minute)
                  },
                  e.changeTemp = function (n) {
                    var a,
                    t = 1;
                    a = n > 0 ? parseFloat(e.virtual_schedule.temp) + t : parseFloat(e.virtual_schedule.temp) - t,
                    a >= e.temp_min && a <= e.temp_max && (e.virtual_schedule.temp = parseFloat(a))
                  },
                  e.selectMode = function (n, a) {
                    e.virtual_schedule.mode = u(a),
                    e.class_modal_mode = a,
                    e.show_view = 'new'
                  },
                  e.$watch('virtual_schedule.name', function (n, a) {
                    n != a && e.virtual_schedule && e.virtual_schedule.name && (e.virtual_schedule.name = e.virtual_schedule.name.replace(/[^\xd1A-Z\xf1a-z-,\./\ _0-9\s]/g, '').substring(0, 11))
                  }),
                  e.closeScheduleModal = function () {
                    'Installation' == e.target.class ? e.close()  : e.show_view = 'list'
                  },
                  e.showRemoveConfirmation = function () {
                    e.show_view = 'remove_confirm'
                  },
                  e.showEdit = function () {
                    e.show_view = 'new'
                  },
                  e.hasTemp = function () {
                    return [3,
                    4,
                    5,
                    8].indexOf(e.virtual_schedule.mode) < 0
                  },
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.getModeClass = function (n) {
                    return null != n ? e.modes[parseInt(n) - 1] : void 0
                  },
                  e.$on('$destroy', function () {
                    e.listener1()
                  })
                }
              ]), Multimarca.controller('notConnectedDeviceModalController', [
                '$scope',
                '$rootScope',
                '$state',
                function (e, n) {
                  n.disconnected_device = !1,
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.refreshPage = function () {
                    n.show_disconnected_device = !1,
                    n.error_device = !1
                  },
                  e.hide = function () {
                    n.not_permission = !1
                  },
                  e.hideNotNewSchedule = function () {
                    n.not_permission_new_schedule = !1
                  },
                  e.hideNotMachineReady = function () {
                    n.not_machine_ready = !1
                  },
                  e.hideBackendError = function () {
                    n.show_backend_error = !1
                  }
                }
              ]), Multimarca.controller('notConnectionModalController', [
                '$scope',
                '$rootScope',
                '$window',
                function (e, n, a) {
                  n.disconnection = !1,
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.refreshPage = function () {
                    a.location.reload()
                  }
                }
              ]), Multimarca.controller('outsideModalsController', [
                '$scope',
                '$rootScope',
                function (e, n) {
                  function a(n, a) {
                    for (i = 0; i < parseInt(a); i++) n.push(e.slats[i]);
                    n.push('0111')
                  }
                  function t(n) {
                    return e.modes.indexOf(n) + 1
                  }
                  function r() {
                    return e.velocity_target ? 1 == e.cold_modes[parseInt(e.velocity_target.mode) - 1] ? 'cold' : 'heat' : 'none'
                  }
                  function o() {
                    return e.vertical_target ? 1 == e.cold_modes[parseInt(e.vertical_target.mode) - 1] ? 'cold' : 'heat' : 'none'
                  }
                  function s() {
                    return e.horizontal_target ? 1 == e.cold_modes[parseInt(e.horizontal_target.mode) - 1] ? 'cold' : 'heat' : 'none'
                  }
                  function l(n) {
                    e.show_auto_velocity = !1,
                    n.devices ? n.devices.forEach(function (n) {
                      n.firmware && parseInt(n.firmware[n.firmware.length - 1]) > 2 && (e.show_auto_velocity = !0)
                    })  : n.firmware && parseInt(n.firmware[n.firmware.length - 1]) > 2 && (e.show_auto_velocity = !0)
                  }
                  e.modes = [
                    'cool',
                    'heat',
                    'ventilate',
                    'heat-cold-auto',
                    'dehumidify'
                  ],
                  e.velocities = [
                    '1',
                    '2',
                    '3',
                    '4',
                    '5'
                  ],
                  e.slats = [
                    '0000',
                    '0001',
                    '0010',
                    '0011',
                    '0100',
                    '0111'
                  ],
                  e.cold_modes = [
                    1,
                    0,
                    1,
                    1,
                    1,
                    1,
                    0,
                    0
                  ],
                  e.heat_modes = [
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1
                  ],
                  e.scenaries = [
                    'occupied',
                    'vacant',
                    'sleep'
                  ],
                  e.showModeHelp = !1,
                  e.showSpeedHelp = !1,
                  e.showVerticalHelp = !1,
                  e.showHorizontalHelp = !1,
                  e.showScenaryHelp = !1,
                  e.show_modal_mode = !1,
                  e.show_modal_velocity = !1,
                  e.show_modal_vertical = !1,
                  e.show_modal_horizontal = !1,
                  e.show_modal_config_device = !1,
                  e.show_modal_config_params_device = !1,
                  e.show_auto_velocity = !1,
                  e.class_modal_mode,
                  e.available_modes = [
                  ],
                  e.availables_velocities = [
                  ],
                  e.availables_verticals = [
                  ],
                  e.availables_horizontals = [
                  ],
                  e.listenerMode = n.$watch('mode_target', function (a) {
                    if (a) {
                      e.showModeHelp = !1,
                      e.mode_target = a,
                      e.show_modal_mode = !0,
                      e.available_modes = [
                      ],
                      a.modes && angular.forEach([0,
                      1,
                      2,
                      3,
                      4], function (n) {
                        1 == a.modes[n] && e.available_modes.push(e.modes[n])
                      });
                      var t = parseInt(a.mode);
                      e.class_modal_mode = 6 == t || 7 == t ? 'heat-cold-auto' : 8 == t ? 'ventilate' : e.modes[parseInt(a.mode) - 1] || 'cool-air',
                      n.modalShow = !0
                    }
                  }),
                  e.listenerVelocity = n.$watch('velocity_target', function (a) {
                    if (a) {
                      for (e.showSpeedHelp = !1, e.showModeSpeed = !1, e.velocity_target = a, l(a), e.show_modal_velocity = !0, e.availables_velocities = [
                      ], i = 0; i < parseInt(e.velocity_target.availables_speeds); i++) e.availables_velocities.push(i + 1);
                      e.availables_velocities = e.availables_velocities.reverse(),
                      n.modalShow = !0
                    }
                  }),
                  e.listenerVertical = n.$watch('vertical_target', function (t) {
                    t && (e.showVerticalHelp = !1, e.showModeVertical = !1, e.vertical_target = t, e.show_modal_vertical = !0, e.availables_verticals = [
                    ], a(e.availables_verticals, e.vertical_target.ver_position_slats), n.modalShow = !0)
                  }),
                  e.listenerHorizontal = n.$watch('horizontal_target', function (t) {
                    t && (e.showHorizontalHelp = !1, e.showModeHorizontal = !1, e.horizontal_target = t, e.show_modal_horizontal = !0, e.availables_horizontals = [
                    ], a(e.availables_horizontals, e.horizontal_target.hor_position_slats), n.modalShow = !0)
                  }),
                  e.listenerScenary = n.$watch('scenary_target', function (a) {
                    a && (e.showScenaryHelp = !1, e.showModeScenary = !1, e.scenary_target = a, e.show_modal_scenary = !0, n.modalShow = !0)
                  }),
                  e.getVelocity = function () {
                    return 'cold' == r() ? e.velocity_target.cold_speed : 'heat' == r() ? e.velocity_target.heat_speed : null
                  },
                  e.getSlatVertical = function () {
                    return e.vertical_target ? 'cold' == o() ? e.vertical_target.ver_cold_slats : e.vertical_target.ver_heat_slats : void 0
                  },
                  e.getSlatHorizontal = function () {
                    return e.horizontal_target ? 'cold' == s() ? e.horizontal_target.hor_cold_slats : e.horizontal_target.hor_heat_slats : void 0
                  },
                  e.getSlatIcon = function (e) {
                    switch (e) {
                      case '0000':
                        return '0';
                      case '0001':
                        return '1';
                      case '0010':
                        return '2';
                      case '0011':
                        return '3';
                      case '0100':
                        return '4';
                      case '0111':
                        return 'swing'
                    }
                  },
                  e.selectMode = function (a) {
                    e.show_modal_mode = !1,
                    n.mode_target.new_mode = t(a),
                    e.closeModal()
                  },
                  e.selectVel = function (a) {
                    e.show_modal_velocity = !1,
                    n.velocity_target.new_velocity = a,
                    e.closeModal()
                  },
                  e.selectVertical = function (a) {
                    e.show_modal_vertical = !1,
                    n.vertical_target.new_vertical = a,
                    e.closeModal()
                  },
                  e.selectHorizontal = function (a) {
                    e.show_modal_horizontal = !1,
                    n.horizontal_target.new_horizontal = a,
                    e.closeModal()
                  },
                  e.selectScenary = function (a) {
                    e.show_modal_scenary = !1,
                    n.scenary_target.new_scenary = a,
                    e.closeModal()
                  },
                  e.closeModal = function () {
                    e.show_modal_mode = !1,
                    e.show_modal_velocity = !1,
                    e.show_modal_vertical = !1,
                    e.show_modal_horizontal = !1,
                    e.show_modal_scenary = !1,
                    n.mode_target = null,
                    n.velocity_target = null,
                    n.vertical_target = null,
                    n.horizontal_target = null,
                    n.scenary_target = null,
                    n.modalShow = !1
                  },
                  e.i18n = function (e) {
                    return n.i18n(e)
                  },
                  e.toggleModeHelp = function () {
                    e.showModeHelp = !e.showModeHelp
                  },
                  e.toggleSpeedHelp = function () {
                    e.showSpeedHelp = !e.showSpeedHelp
                  },
                  e.toggleVerticalHelp = function () {
                    e.showVerticalHelp = !e.showVerticalHelp
                  },
                  e.toggleHorizontalHelp = function () {
                    e.showHorizontalHelp = !e.showHorizontalHelp
                  },
                  e.toggleScenaryHelp = function () {
                    e.showScenaryHelp = !e.showScenaryHelp
                  },
                  e.getVelocityNameIndex = function (n) {
                    var a = parseInt(n);
                    return 2 == e.velocity_target.availables_speeds ? 1 == a ? 'velocity-2' : 'velocity-5' : 3 == e.velocity_target.availables_speeds ? 1 == a ? 'velocity-2' : 2 == a ? 'velocity-3' : 'velocity-5' : 4 == e.velocity_target.availables_speeds ? 'velocity-' + (a + 1)  : 'velocity-' + a
                  },
                  e.$on('$destroy', function () {
                    e.listenerMode(),
                    e.listenerVelocity(),
                    e.listenerVertical(),
                    e.listenerHorizontal(),
                    e.listenerScenary()
                  })
                }
                ]), Multimarca.controller('passwordController', [
                  '$scope',
                  '$http',
                  '$state',
                  '$stateParams',
                  function (e, n, a, t) {
                    e.password_error = !1,
                    e.password_confirmation_error = !1,
                    e.token_error = !1,
                    e.success_update = !1,
                    e.sendPassword = function () {
                      e.password_error = !1,
                      e.password_confirmation_error = !1,
                      e.token_error = !1,
                      e.passwordForm.$valid ? n({
                        method: 'PUT',
                        url: url_path + 'users/password',
                        data: {
                          user: {
                            password: this.password,
                            password_confirmation: this.password_confirmation,
                            reset_password_token: t.reset_password_token
                          }
                        }
                      }).then(function () {
                        e.success_update = !0
                      }).catch (function (n) {
                        console.log('Error to update the password: ', n),
                        n.errors.reset_password_token && (e.passwordForm.invalid = !0, e.token_error = !0)
                      })  : e.passwordForm.invalid = !0
                    }
                  }
                ]), Multimarca.controller('registerController', [
                  '$scope',
                  '$rootScope',
                  '$http',
                  '$stateParams',
                  function (e, n, a, t) {
                    if (e.register_error = !1, e.register_success = !1, e.state = 'register', e.invalid = !1, e.emailFormat = /^[a-z]+[a-z0-9._-]+@[a-z]+\.[a-z.]{2,5}$/, n.info_hide = Boolean(t.info_hide), e.htmlString = n.i18n('terms.body'), 'production' == n.environment) var i = 'https://dkn.airzonecloud.com/terms.json';
                     else var i = 'http://localhost:3000/terms.json';
                    a.get(i).then(function (a) {
                      data = a.data,
                      console.log('response: ', a);
                      var t = data[n.language];
                      console.log('terms: ', t),
                      t || (t = data.en),
                      e.terms = t,
                      console.log('scope: ', e)
                    }).catch (function (e) {
                      console.log('Error to get the legal terms link: ', e),
                      n.show_backend_error = !0
                    }),
                    e.submitRegisterForm = function () {
                      e.registerForm.$valid ? a({
                        method: 'POST',
                        url: url_path + 'users',
                        responseType: 'json',
                        data: {
                          user: {
                            name: this.register.name,
                            surname: this.register.surname,
                            email: this.register.email,
                            password: this.register.password,
                            password_confirmation: this.register.password_confirmation,
                            tos: !0,
                            publicity: this.register.publicity,
                            language: n.language
                          }
                        }
                      }).then(function () {
                        e.state = 'register_success'
                      }).catch (function (n) {
                        console.log('Error to save the register data', n),
                        e.registerForm.invalid = !0,
                        e.register_error = !0
                      })  : e.registerForm.invalid = !0
                    }
                  }
                ]), Multimarca.controller('supportController', [
                  '$scope',
                  '$rootScope',
                  '$http',
                  '$window',
                  'URL_PATH',
                  function (e, n, a, t, i) {
                    if ('production' == n.environment) var r = i + 'support.json';
                     else var r = 'http://localhost:3000/support.json';
                    a.get(r).success(function (a) {
                      var t = a[n.language];
                      t || (t = a.en),
                      e.support = t
                    }).catch (function (e) {
                      console.log('Error to get the support links.', e),
                      n.show_backend_error = !0
                    }),
                    e.openExternalLink = function (e) {
                      __eolo ? cordova.InAppBrowser.open(e, '_system', 'location=no')  : t.open(e, '_blank')
                    }
                  }
                ]), Multimarca.controller('userInstallationController', [
                  '$scope',
                  '$rootScope',
                  '$stateParams',
                  'installationRelationService',
                  'installationService',
                  'deviceService',
                  'eventsService',
                  'weatherService',
                  'sessionService',
                  'scheduleService',
                  '$q',
                  function (e, n, a, t, r, o, s, l, c, u, d) {
                    function m() {
                      r.getInstallation(a.id).then(function (i) {
                        e.installation = i,
                        e.installation.updated = 'test' != n.environment ? !1 : !0,
                        (1 != e.installation.device_ids.length && n.current_spot_name != e.installation.spot_name || !n.requestWeatherTime || Math.round((n.date - n.requestWeatherTime % 86400000) % 3600000 / 60000) > 1) && e.initializeWheather(),
                        h(),
                        o.getDevicesFromInstallation(e.installation.id).then(function (i) {
                          t.getInstallationRelations(a.id, !1).then(function (e) {
                            e.forEach(function (e) {
                              i.forEach(function (n) {
                                var a = i.indexOf(n);
                                e.installation_id == n.installation_id && - 1 == e.permitted_devices.indexOf(n.id) && a > - 1 && i.splice(a, 1)
                              })
                            })
                          }).catch (function (e) {
                            console.log('Error to get the relation of the installation: ', e),
                            n.show_backend_error = !0
                          }),
                          e.devices = i,
                          e.installation.devices = i,
                          0 == i.length && (e.installation.updated = !0),
                          e.installation.power = !1,
                          _(),
                          p()
                        }).catch (function (e) {
                          console.log('Error to get the devices of the installation:', e),
                          n.show_backend_error = !0
                        })
                      }).catch (function (e) {
                        console.log('Error to get the installation data:', e),
                        n.show_backend_error = !0
                      }),
                      e.unit_format = c.unit_format(),
                      n.demo && (e.unit_format = 'celsius')
                    }
                    function h() {
                      e.installation.modes && (e.initialized = !0),
                      e.initialized || (e.installation.mode = '1', e.installation.cold_speed = '1', e.installation.heat_speed = '1'),
                      e.installation.new_mode = '-1',
                      e.installation.new_velocity = '-1',
                      e.installation.new_vertical = '-1',
                      e.installation.new_horizontal = '-1',
                      e.installation.new_scenary = '-1'
                    }
                    function p() {
                      e.devices.length > 0 && (e.installation.consign = 1 == e.cold_modes[parseInt(e.devices[0].mode) - 1] ? e.devices[0].cold_consign : e.devices[0].heat_consign, e.initialized || (v(), g(), f())),
                      e.devices.length > 0 && (e.installation.name = e.devices[0].installation.name),
                      e.expand = e.devices.length > 1 ? !0 : !1
                    }
                    function v() {
                      if (e.devices.length > 0) {
                        var n = e.devices.map(function (e) {
                          return parseInt(e.mode)
                        }),
                        a = n.filter(function (e, a) {
                          return n.indexOf(e) == a
                        }).toString();
                        e.mode_color = a == e.installation.mode ? '1' == a ? 'cool' : '2' == a ? 'heat' : null : null
                      }
                    }
                    function g() {
                      var n = [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                      ];
                      if (e.devices.length > 0) for (i = 0; i < e.devices.length; i++) for (j = 0; 8 > j; j++) e.devices[i].modes && 1 == e.devices[i].modes[j] && (n[j] = 1);
                      e.installation.modes = n
                    }
                    function f() {
                      var n = 2;
                      if (e.devices.length > 0) {
                        for (i = 0; i < e.devices.length; i++) parseInt(e.devices[i].availables_speeds) > n && (n = parseInt(e.devices[i].availables_speeds));
                        e.installation.availables_speeds = String(n)
                      }
                    }
                    function _() {
                      var n = !1;
                      e.devices.forEach(function (e) {
                        '1' == e.power && (n = !0)
                      }),
                      e.installation.power != n && (e.installation.power = n)
                    }
                    function b() {
                      return 1 == e.cold_modes[parseInt(e.installation.mode) - 1] ? 'cold' : 'heat'
                    }
                    function y() {
                      var a = new Date;
                      if (n.time_zone) {
                        var t = 60 * parseFloat(n.time_zone[0].utcOffset) + a.getTimezoneOffset();
                        n.date = new Date(a.getTime() + 60 * t * 1000)
                      }
                      e.update_date = setTimeout(function () {
                        y()
                      }, 10000)
                    }
                    e.modes = [
                      'cool',
                      'heat',
                      'ventilate',
                      'heat-cold-auto',
                      'dehumidify',
                      'cool-air',
                      'heat-air',
                      'ventilate-heat'
                    ],
                    e.velocities = [
                      '1',
                      '2',
                      '3',
                      '4',
                      '5'
                    ],
                    e.cold_modes = [
                      1,
                      0,
                      1,
                      1,
                      1,
                      1,
                      0,
                      0
                    ],
                    e.heat_modes = [
                      0,
                      1,
                      0,
                      0,
                      0,
                      0,
                      1,
                      1
                    ],
                    n.date = new Date,
                    e.weather = {
                    },
                    e.initialized = !1,
                    e.devices = [
                    ],
                    e.mode_color = null,
                    n.show_climate_info = !0,
                    n.machine_errors = [
                    ],
                    n.schedules_count = 0,
                    m(),
                    e.getClassFromMode = function (n) {
                      return e.modes[parseInt(n) - 1]
                    },
                    e.togglePower = function () {
                      e.installation.power = !e.installation.power,
                      e.devices.forEach(function (n) {
                        n.new_power = e.installation.power ? '1' : '0'
                      })
                    },
                    e.getConsign = function () {
                      return e.installation ? e.installation.consign : void 0
                    },
                    e.updateConsign = function (n) {
                      var a = 'plus' == n ? 1 : - 1,
                      t = parseInt(e.installation.consign) + a,
                      i = 16,
                      r = 32;
                      'fahrenheit' == e.unit_format && (i = 61, r = 90),
                      t >= i && r >= t && (e.installation.consign = t, e.devices.forEach(function (n) {
                        n.new_consign = e.installation.consign
                      }))
                    },
                    e.canChangeTemp = function () {
                      return e.installation ? '3' == e.installation.mode || '5' == e.installation.mode || '8' == e.installation.mode ? !1 : !0 : void 0
                    },
                    e.initializeWheather = function () {
                      l.getWeather(e.installation.location).then(function (a) {
                        if (a.data.error) n.show_climate_info = !1;
                         else {
                          if (n.requestWeatherTime = new Date, n.time_zone = a.data.time_zone, y(), n.current_spot_name = e.installation.spot_name, a.data.current_condition) {
                            n.current_weather_icon = e.weatherIcon(a.data.weather[0].weatherCode);
                            var t = c.language();
                            n.current_description = 'es' == t ? a.data.current_condition[0].lang_es[0].value : 'en' == t ? a.data.current_condition[0].weatherDesc[0].value : '',
                            n.current_temp = 'fahrenheit' == e.unit_format ? a.data.current_condition[0].temp_F : a.data.current_condition[0].temp_C
                          } else n.show_climate_info = !1;
                          if (a.data.weather) {
                            var i = Number(n.date.getHours()) / 3 + 1;
                            if (n.forecast = a.data.weather[0].hourly.slice(i, i + 6), n.forecast.length < 6) for (var r = 6 - n.forecast.length + 1, o = 1; r > o; o++) n.forecast.push(a.data.weather[1].hourly[o]);
                            a.data.weather.shift(),
                            n.daily = a.data.weather
                          } else n.show_climate_info = !1
                        }
                      }, function (e) {
                        console.log('Error to get climate data: ', e),
                        n.show_climate_info = !1
                      })
                    },
                    e.listenerMode = e.$watch('installation.new_mode', function (n, a) {
                      null != a && '-1' != n && 1 == e.installation.modes[n - 1] && e.devices && ('1' == n ? e.mode_color = 'cool' : '2' == n && (e.mode_color = 'heat'), e.devices.forEach(function (n) {
                        n.new_mode = e.installation.new_mode
                      }), e.installation.mode = String(e.installation.new_mode), e.installation.new_mode = '-1')
                    }),
                    e.listenerVelocity = e.$watch('installation.new_velocity', function (n, a) {
                      null != a && '-1' != n && (e.devices.forEach(function (n) {
                        n.new_velocity = e.installation.new_velocity
                      }), e.installation.cold_speed = String(e.installation.new_velocity), e.installation.heat_speed = String(e.installation.new_velocity), e.installation.new_velocity = '-1')
                    }),
                    e.listenerScenary = e.$watch('installation.new_scenary', function (a, t) {
                      if (null != t && '-1' != a) {
                        var i = {
                          installation: {
                            scenary: a
                          }
                        };
                        r.updateInstallation(e.installation.id, i).then(function () {
                          e.installation.scenary = String(e.installation.new_scenary),
                          e.devices.forEach(function (n) {
                            n.new_scenary = e.installation.new_scenary
                          }),
                          e.installation.new_scenary = '-1'
                        }).catch (function (e) {
                          console.log('Error to update the installation: ', e),
                          n.show_backend_error = !0
                        })
                      }
                    }),
                    e.listener_color = e.$watch('installation.update_mode_color', function (n, a) {
                      n && n != a && (v(), e.installation.update_mode_color = !1)
                    }),
                    e.getVelocity = function () {
                      return e.installation ? 'cold' == b() ? e.installation.cold_speed : 'heat' == b() ? e.installation.heat_speed : null : void 0
                    },
                    e.parseInt = function (e) {
                      return parseInt(e)
                    },
                    e.getMinutes = function () {
                      var e = n.date.getMinutes();
                      return 10 > e ? '0' + e : e
                    },
                    e.showModeOptions = function () {
                      e.installation.updated && (n.mode_target = e.installation)
                    },
                    e.showVelocityOptionsRow = function () {
                      e.installation.updated && (n.velocity_target = e.installation)
                    },
                    e.showConfigInstallationModal = function () {
                      'advanced' == e.installation.role ? n.installation_config_target = e.installation : n.not_permission = !0
                    },
                    e.showScenaryModal = function () {
                      e.installation.updated && (n.scenary_target = e.installation)
                    },
                    e.showSchedulesModal = function () {
                      if ('advanced' == e.installation.role) {
                        var a = [
                        ];
                        e.devices.forEach(function (e) {
                          var t = u.getSchedules(e.id).then(function (e) {
                            return e && e.length > 0 ? (n.schedules_count += e.length, !0)  : void 0
                          }).catch (function (e) {
                            return e
                          });
                          a.push(t)
                        }),
                        d.all(a).then(function () {
                          n.schedules_count + e.devices.length > 24 ? n.not_permission_new_schedule = !0 : (e.installation.class = 'Installation', e.installation.devices = e.devices, n.schedules_target = e.installation)
                        }).catch (function (e) {
                          console.log('Error to get schedules:', e),
                          n.show_backend_error = !0
                        })
                      } else n.not_permission = !0
                    },
                    e.getScenary = function () {
                      return e.installation.unoccupied ? 'vacant' : 'occupied'
                    },
                    e.weatherIcon = function (e) {
                      return void 0 == e ? void 0 : {
                        113: 'icon-weather1',
                        116: 'icon-weather2',
                        119: 'icon-weather3',
                        122: 'icon-weather3',
                        143: 'icon-weather14',
                        176: 'icon-weather4',
                        179: 'icon-weather12',
                        182: 'icon-weather7',
                        185: 'icon-weather7',
                        200: 'icon-weather18',
                        227: 'icon-weather6',
                        230: 'icon-weather6',
                        248: 'icon-weather14',
                        260: 'icon-weather14',
                        263: 'icon-weather9',
                        266: 'icon-weather4',
                        281: 'icon-weather7',
                        284: 'icon-weather7',
                        293: 'icon-weather4',
                        296: 'icon-weather5',
                        299: 'icon-weather10',
                        302: 'icon-weather5',
                        305: 'icon-weather10',
                        308: 'icon-weather5',
                        311: 'icon-weather7',
                        314: 'icon-weather7',
                        317: 'icon-weather9',
                        320: 'icon-weather6',
                        323: 'icon-weather11',
                        326: 'icon-weather11',
                        329: 'icon-weather6',
                        332: 'icon-weather6',
                        335: 'icon-weather6',
                        338: 'icon-weather6',
                        350: 'icon-weather7',
                        353: 'icon-weather9',
                        356: 'icon-weather10',
                        359: 'icon-weather5',
                        362: 'icon-weather12',
                        365: 'icon-weather12',
                        368: 'icon-weather11',
                        371: 'icon-weather11',
                        374: 'icon-weather12',
                        377: 'icon-weather7',
                        386: 'icon-weather18',
                        389: 'icon-weather19',
                        392: 'icon-weather18',
                        395: 'icon-weather19'
                      }
                      [
                        e
                      ]
                    },
                    e.$on('$destroy', function () {
                      n.show_climate_info = !1,
                      e.listenerMode(),
                      e.listenerVelocity(),
                      clearTimeout(e.update_date)
                    })
                  }
                ]), Multimarca.controller('userInstallationsController', [
                  '$scope',
                  '$rootScope',
                  '$state',
                  '$stateParams',
                  'deviceService',
                  'sessionService',
                  'installationRelationService',
                  function (e, n, a, t, i, r, o) {
                    function s() {
                      return r.user().then(function (n) {
                        e.user = n
                      }).catch (function (e) {
                        console.log('Error to get the user data: ', e),
                        r.unauthorize()
                      }),
                      i.destroy(),
                      o.getInstallationRelations(null, !0).then(function (a) {
                        return e.loader = !1,
                        e.noInstallation = a && a.length > 0 ? !1 : !0,
                        n.installation_relations = a,
                        e.installation_relations = n.installation_relations,
                        n.installation_relations
                      })
                    }
                    e.noInstallation = !1,
                    e.loader = !0,
                    e.installation_relations,
                    n.disconnected_device = !1,
                    n.machine_ready_error = !1,
                    n.editInstallation = !1,
                    n.show_edit_servers_btn = !0,
                    e.messageInstallation = !1,
                    s(),
                    e.getIcon = function (e) {
                      return 'icon icon-build' + e
                    },
                    e.showEditInstallationModal = function (e) {
                      'advanced' == e.installation.role ? (n.ir = e, a.go('home.editInstallation', {
                        ir: e.id
                      }, {
                        reload: !0
                      }))  : n.not_permission = !0
                    },
                    e.showUsersInstallationModal = function (e) {
                      'advanced' == e.installation.role ? a.go('home.users', {
                        installation_id: e.installation.id
                      }, {
                        reload: !0
                      })  : n.not_permission = !0
                    },
                    e.showEditInstallationModal = function (e) {
                      'advanced' == e.installation.role ? (n.ir = e, a.go('home.editInstallation', {
                        ir: e.id
                      }, {
                        reload: !0
                      }))  : n.not_permission = !0
                    },
                    e.showUsersInstallationModal = function (e) {
                      'advanced' == e.installation.role ? a.go('home.users', {
                        installation_id: e.installation.id
                      }, {
                        reload: !0
                      })  : n.not_permission = !0
                    },
                    e.showDevicesDesign = function (e) {
                      e.permitted_devices && 1 != e.permitted_devices.length ? a.go('home.installation', {
                        id: e.installation_id
                      }, {
                        reload: !0
                      })  : a.go('home.device', {
                        id: e.permitted_devices[0],
                        installation_id: e.installation_id
                      }, {
                        reload: !0
                      })
                    },
                    e.$on('$destroy', function () {
                      n.show_edit_servers_btn = !1
                    })
                  }
                ]), Multimarca.directive('deviceRow', function () {
                  return {
                    restrict: 'E',
                    scope: {
                      device: '=device',
                      installation: '=installation',
                      devices: '=devices'
                    },
                    templateUrl: template_path + 'device_row.html',
                    controller: 'deviceRowController'
                  }
                }), Multimarca.directive('equals', function () {
                  return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (e, n, a, t) {
                      if (t) {
                        e.$watch(a.ngModel, function () {
                          i()
                        }),
                        a.$observe('equals', function () {
                          i()
                        });
                        var i = function () {
                          var e = t.$viewValue,
                          n = a.equals;
                          t.$setValidity('equals', !e || !n || e === n)
                        }
                      }
                    }
                  }
                }), Multimarca.directive('lazyLoad', [
                  '$window',
                  '$q',
                  '$rootScope',
                  'localStorageService',
                  function (e, n, a, t) {
                    function i() {
                      var e = document.createElement('script');
                      t.set('googleApiLang', a.language),
                      e.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyB5qjWM0fvd-3IP8U1TNbZiKIsC3rZVi-o&v=3.exp&libraries=places&language=' + a.language + '&callback=initialize',
                      document.body.appendChild(e)
                    }
                    function r() {
                      var a = n.defer();
                      return e.initialize = function () {
                        a.resolve()
                      },
                      i(),
                      a.promise
                    }
                    function o(e) {
                      var n = document.getElementById('searchTextField'),
                      a = new google.maps.places.Autocomplete(n, {
                        types: [
                          '(cities)'
                        ]
                      });
                      google.maps.event.addListener(a, 'place_changed', function () {
                        var n = a.getPlace(),
                        t = n.geometry.location,
                        i = n.address_components.filter(function (e) {
                          return e.types.indexOf('administrative_area_level_2') > - 1 || e.types.indexOf('administrative_area_level_1') > - 1 || e.types.indexOf('country') > - 1
                        }),
                        r = i[i.length - 1].short_name,
                        o = n.name + ',';
                        o += i.map(function (e) {
                          return e.long_name
                        }).join(),
                        e.installation.spot_location = [
                          t.lat(),
                          + t.lng()
                        ],
                        e.installation.spot_complete_name = o,
                        e.installation.spot_google_id = n.id,
                        e.installation.spot_google_reference = n.reference,
                        e.installation.spot_country_code = r
                      })
                    }
                    return {
                      restrict: 'E',
                      scope: {
                        installation: '=installation',
                        messageServer: '=messageServer'
                      },
                      link: function (n) {
                        e.google && e.google.maps && a.language == t.get('googleApiLang') ? o(n)  : (e.google && e.google.maps && delete e.google.maps, r().then(function () {
                          e.google && e.google.maps ? o(n)  : (console.log('google maps not loaded'), n.messageServer = 'errorServer')
                        }, function () {
                          console.log('google maps by promise rejected'),
                          n.messageServer = 'errorServer'
                        }))
                      }
                    }
                  }
                ]), Multimarca.directive('modalAlertInstaller', function () {
                  return {
                    restrict: 'E',
                    scope: {
                      close: '&'
                    },
                    controller: 'modalAlertInstallerController',
                    templateUrl: template_path + 'modal_alert_installer.html',
                    link: function (e, n, a) {
                      e.dialogStyle = {
                      },
                      a.width && (e.dialogStyle.width = a.width),
                      a.height && (e.dialogStyle.height = a.height),
                      e.hideModal = function () {
                        e.close()
                      }
                    }
                  }
                }), Multimarca.directive('modalConfigDevice', function () {
                  return {
                    restrict: 'E',
                    scope: {
                      close: '&'
                    },
                    controller: 'modalConfigDeviceController',
                    templateUrl: template_path + 'modal_config_device.html',
                    link: function (e, n, a) {
                      e.dialogStyle = {
                      },
                      a.width && (e.dialogStyle.width = a.width),
                      a.height && (e.dialogStyle.height = a.height),
                      e.hideModal = function () {
                        e.close()
                      }
                    }
                  }
                }), Multimarca.directive('modalConfigInstallation', function () {
                  return {
                    restrict: 'E',
                    scope: {
                      close: '&'
                    },
                    controller: 'modalConfigInstallationController',
                    templateUrl: template_path + 'modal_config_installation.html',
                    link: function (e, n, a) {
                      e.dialogStyle = {
                      },
                      a.width && (e.dialogStyle.width = a.width),
                      a.height && (e.dialogStyle.height = a.height),
                      e.hideModal = function () {
                        e.close()
                      }
                    }
                  }
                }), Multimarca.directive('modalInfoServer', [
                  '$rootScope',
                  function () {
                    return {
                      restrict: 'E',
                      scope: {
                        show: '=',
                        close: '&'
                      },
                      replace: !0,
                      transclude: !0,
                      link: function (e, n, a) {
                        e.dialogStyle = {
                        },
                        a.width && (e.dialogStyle.width = a.width),
                        a.height && (e.dialogStyle.height = a.height),
                        e.hideModal = function () {
                          e.close(),
                          e.show = !1
                        }
                      },
                      templateUrl: template_path + 'modal_info_servers.html'
                    }
                  }
                ]), Multimarca.directive('modalSchedules', function () {
                  return {
                    restrict: 'E',
                    scope: {
                      close: '&'
                    },
                    controller: 'modalSchedulesController',
                    templateUrl: template_path + 'modal_schedules.html',
                    link: function (e, n, a) {
                      e.dialogStyle = {
                      },
                      a.width && (e.dialogStyle.width = a.width),
                      a.height && (e.dialogStyle.height = a.height),
                      e.hideModal = function () {
                        e.close()
                      }
                    }
                  }
                }), Multimarca.directive('notConnectedDeviceModal', function () {
                  return {
                    restrict: 'E',
                    scope: {
                    },
                    controller: 'notConnectedDeviceModalController',
                    templateUrl: template_path + 'not_connected_device_modal.html'
                  }
                }), Multimarca.directive('notConnectionModal', function () {
                  return {
                    restrict: 'E',
                    scope: {
                    },
                    controller: 'notConnectionModalController',
                    templateUrl: template_path + 'not_connection_modal.html'
                  }
                }), Multimarca.directive('outsideModals', function () {
                  return {
                    restrict: 'E',
                    scope: {
                    },
                    controller: 'outsideModalsController',
                    templateUrl: template_path + 'outside_modals.html'
                  }
                }), Multimarca.service('demoService', [
                  '$rootScope',
                  function () {
                    function e() {
                      return {
                        user: {
                          id: 'user1',
                          email: 'demo@email.com',
                          name: 'Demo',
                          surname: 'Multimarca',
                          language: 'es',
                          role: 'demo',
                          authentication_token: 'KwfMHF8ngwHczPDjzfbs'
                        }
                      }
                    }
                    function n() {
                      return {
                        installation_relations: [
                          {
                            id: 'installation_relation1',
                            installation_id: 'installation1',
                            user_id: 'user1',
                            type: 'advanced',
                            permitted_devices: [
                              'device1',
                              'device2',
                              'device3',
                              'device4'
                            ],
                            installation: {
                              id: 'installation1',
                              name: 'Sede DKN',
                              icon: '1',
                              spot_name: 'Madrid',
                              installer_name: 'Instalador de daikin',
                              installer_phone: '987654321',
                              installer_email: 'installer@email.com',
                              scenary: 'occupied',
                              type: 'business',
                              postal_code: '28070',
                              owner_id: 'user1',
                              complete_name: 'Madrid, Comunidad de Madrid, España',
                              location: {
                                latitude: '40.4167754',
                                longitude: '-3.7037901999999576'
                              },
                              device_ids: [
                                'device1',
                                'device2',
                                'device3',
                                'device4'
                              ],
                              role: 'advanced'
                            },
                            user: {
                              id: 'user1',
                              name: 'Demo'
                            }
                          },
                          {
                            id: 'installation_relation2',
                            installation_id: 'installation2',
                            user_id: 'user1',
                            type: 'advanced',
                            permitted_devices: [
                              'device5'
                            ],
                            installation: {
                              id: 'installation2',
                              name: 'Casa',
                              icon: '4',
                              spot_name: 'Málaga',
                              installer_name: 'Instalador de daikin',
                              installer_phone: '987654321',
                              installer_email: 'installer@email.com',
                              scenary: 'occupied',
                              type: 'home',
                              postal_code: '29590',
                              owner_id: 'user1',
                              complete_name: 'Málaga, Andalucía, España',
                              location: {
                                latitude: '36.7585406',
                                longitude: '-4.3971722'
                              },
                              device_ids: [
                                'device5'
                              ],
                              role: 'advanced'
                            },
                            user: {
                              id: 'user1',
                              name: 'Demo'
                            }
                          }
                        ]
                      }
                    }
                    function a() {
                      return {
                        installations: [
                          {
                            id: 'installation1',
                            name: 'Sede DKN',
                            icon: '1',
                            spot_name: 'Madrid',
                            installer_name: 'Instalador de daikin',
                            installer_phone: '987654321',
                            installer_email: 'installer@email.com',
                            scenary: 'occupied',
                            type: 'business',
                            postal_code: '28070',
                            owner_id: 'user1',
                            complete_name: 'Madrid, Comunidad de Madrid, España',
                            location: {
                              latitude: '40.4167754',
                              longitude: '-3.7037901999999576'
                            },
                            device_ids: [
                              'device1',
                              'device2',
                              'device3',
                              'device4'
                            ],
                            role: 'advanced'
                          },
                          {
                            id: 'installation2',
                            name: 'Casa',
                            icon: '4',
                            spot_name: 'Málaga',
                            installer_name: 'Instalador de daikin',
                            installer_phone: '987654321',
                            installer_email: 'installer@email.com',
                            scenary: 'occupied',
                            type: 'home',
                            postal_code: '29590',
                            owner_id: 'user1',
                            complete_name: 'Málaga, Andalucía, España',
                            location: {
                              latitude: '36.7585406',
                              longitude: '-4.3971722'
                            },
                            device_ids: [
                              'device5'
                            ],
                            role: 'advanced'
                          }
                        ]
                      }
                    }
                    function t() {
                      return {
                        devices: [
                          {
                            id: 'device1',
                            name: 'Entrada',
                            mac: '3E:A8:77:4F:B0:7D',
                            pin: '1234',
                            status: 'activated',
                            mode: '1',
                            power: '1',
                            cold_speed: '1',
                            heat_speed: '1',
                            units: '23.5',
                            availables_speeds: '3',
                            cold_consign: '26',
                            heat_consign: '19',
                            local_temp: '24.0',
                            ver_state_slats: '0',
                            ver_position_slats: '5',
                            hor_state_slats: '1',
                            hor_position_slats: '5',
                            max_limit_cold: '32',
                            min_limit_cold: '16',
                            max_limit_heat: '32',
                            min_limit_heat: '16',
                            update_date: 'Thu, 26 Mar 2015 11:47:48 +0000',
                            scenary: 'occupied',
                            sleep_time: '30',
                            min_temp_unoccupied: '16',
                            max_temp_unoccupied: '32',
                            ver_cold_slats: '0000',
                            ver_heat_slats: '0111',
                            hor_cold_slats: '0000',
                            hor_heat_slats: '0111',
                            modes: '11111000',
                            installation_id: 'installation1',
                            installation: {
                              id: 'installation1',
                              name: 'Sede DKN',
                              spot_name: 'Madrid',
                              complete_name: {
                                es: 'Madrid, Comunidad de Madrid, España',
                                en: 'Madrid, Community of Madrid, Spain',
                                fr: 'Madrid, Communauté de Madrid, Espagne',
                                it: 'Madrid, Comunità di Madrid, Spagna'
                              },
                              location: {
                                latitude: '40.4167754',
                                longitude: '-3.7037901999999576'
                              },
                              postal_code: '28070',
                              device_ids: [
                                'device1',
                                'device2',
                                'device3',
                                'device4'
                              ],
                              role: 'advanced'
                            }
                          },
                          {
                            id: 'device2',
                            name: 'Comercial',
                            mac: '3E:A8:77:4F:B0:7C',
                            pin: '1234',
                            status: 'activated',
                            mode: '1',
                            power: '1',
                            cold_speed: '1',
                            heat_speed: '1',
                            units: '23.5',
                            availables_speeds: '2',
                            cold_consign: '26',
                            heat_consign: '21',
                            local_temp: '24.0',
                            ver_state_slats: '0',
                            ver_position_slats: '5',
                            hor_state_slats: '0',
                            hor_position_slats: '5',
                            max_limit_cold: '32',
                            min_limit_cold: '16',
                            max_limit_heat: '32',
                            min_limit_heat: '16',
                            update_date: 'Thu, 26 Mar 2015 11:47:48 +0000',
                            scenary: 'occupied',
                            sleep_time: '30',
                            min_temp_unoccupied: '16',
                            max_temp_unoccupied: '32',
                            ver_cold_slats: '0000',
                            ver_heat_slats: '0111',
                            hor_cold_slats: '0000',
                            hor_heat_slats: '0111',
                            modes: '11110000',
                            installation_id: 'installation1',
                            installation: {
                              id: 'installation1',
                              name: 'Sede DKN',
                              spot_name: 'Madrid',
                              location: {
                                latitude: '40.4167754',
                                longitude: '-3.7037901999999576'
                              },
                              device_ids: [
                                'device1',
                                'device2',
                                'device3',
                                'device4'
                              ],
                              role: 'advanced'
                            }
                          },
                          {
                            id: 'device3',
                            name: 'Técnico',
                            mac: '3E:A8:77:4F:B0:7B',
                            pin: '1234',
                            status: 'activated',
                            mode: '1',
                            power: '1',
                            cold_speed: '1',
                            heat_speed: '1',
                            units: '23.5',
                            availables_speeds: '2',
                            cold_consign: '26',
                            heat_consign: '21',
                            local_temp: '24.0',
                            ver_state_slats: '0',
                            ver_position_slats: '5',
                            hor_state_slats: '0',
                            hor_position_slats: '5',
                            max_limit_cold: '32',
                            min_limit_cold: '16',
                            max_limit_heat: '32',
                            min_limit_heat: '16',
                            update_date: 'Thu, 26 Mar 2015 11:47:48 +0000',
                            scenary: 'occupied',
                            sleep_time: '30',
                            min_temp_unoccupied: '16',
                            max_temp_unoccupied: '32',
                            ver_cold_slats: '0000',
                            ver_heat_slats: '0111',
                            hor_cold_slats: '0000',
                            hor_heat_slats: '0111',
                            modes: '11110000',
                            installation_id: 'installation1',
                            installation: {
                              id: 'installation1',
                              name: 'Sede DKN',
                              spot_name: 'Madrid',
                              location: {
                                latitude: '40.4167754',
                                longitude: '-3.7037901999999576'
                              },
                              device_ids: [
                                'device1',
                                'device2',
                                'device3',
                                'device4'
                              ],
                              role: 'advanced'
                            }
                          },
                          {
                            id: 'device4',
                            name: 'Sala de juntas',
                            mac: '3E:A8:77:4F:B0:7B',
                            pin: '1234',
                            status: 'activated',
                            mode: '1',
                            power: '1',
                            cold_speed: '1',
                            heat_speed: '1',
                            units: '23.5',
                            availables_speeds: '3',
                            cold_consign: '26',
                            heat_consign: '21',
                            local_temp: '24.0',
                            ver_state_slats: '0',
                            ver_position_slats: '5',
                            hor_state_slats: '1',
                            hor_position_slats: '5',
                            max_limit_cold: '32',
                            min_limit_cold: '16',
                            max_limit_heat: '32',
                            min_limit_heat: '16',
                            update_date: 'Thu, 26 Mar 2015 11:47:48 +0000',
                            scenary: 'occupied',
                            sleep_time: '30',
                            min_temp_unoccupied: '16',
                            max_temp_unoccupied: '32',
                            ver_cold_slats: '0000',
                            ver_heat_slats: '0111',
                            hor_cold_slats: '0000',
                            hor_heat_slats: '0111',
                            modes: '11110000',
                            installation_id: 'installation1',
                            installation: {
                              id: 'installation1',
                              name: 'Sede DKN',
                              spot_name: 'Madrid',
                              location: {
                                latitude: '40.4167754',
                                longitude: '-3.7037901999999576'
                              },
                              device_ids: [
                                'device1',
                                'device2',
                                'device3',
                                'device4'
                              ],
                              role: 'advanced'
                            }
                          },
                          {
                            id: 'device5',
                            name: 'Salón',
                            mac: '3E:A8:77:4F:B0:7C',
                            pin: '1234',
                            status: 'activated',
                            mode: '1',
                            power: '1',
                            cold_speed: '1',
                            heat_speed: '1',
                            units: '23.5',
                            availables_speeds: '3',
                            cold_consign: '26',
                            heat_consign: '21',
                            local_temp: '24.0',
                            ver_state_slats: '0',
                            ver_position_slats: '5',
                            hor_state_slats: '1',
                            hor_position_slats: '5',
                            max_limit_cold: '32',
                            min_limit_cold: '16',
                            max_limit_heat: '32',
                            min_limit_heat: '16',
                            update_date: 'Thu, 26 Mar 2015 11:47:48 +0000',
                            progs_enabled: null,
                            scenary: 'occupied',
                            sleep_time: '30',
                            min_temp_unoccupied: '16',
                            max_temp_unoccupied: '32',
                            ver_cold_slats: '0000',
                            ver_heat_slats: '0111',
                            hor_cold_slats: '0000',
                            hor_heat_slats: '0111',
                            modes: '11110000',
                            installation_id: 'installation2',
                            installation: {
                              id: 'installation2',
                              name: 'Casa',
                              spot_name: 'Málaga',
                              complete_name: {
                                es: 'Málaga, Andalucía, España',
                                en: 'Málaga, Andalusia, Spain',
                                fr: 'Málaga, Andalousie, Espagne',
                                it: 'Malaga, Andalusia, Spagna'
                              },
                              postal_code: '29590',
                              location: {
                                latitude: '36.7585406',
                                longitude: '-4.3971722'
                              },
                              device_ids: [
                                'device5'
                              ],
                              role: 'advanced'
                            }
                          }
                        ]
                      }
                    }
                    function i() {
                      return {
                        schedules: [
                          {
                            id: 'schedule1',
                            device_id: 'device1',
                            name: 'PROG. 01',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'on',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '8',
                            minute: '00'
                          },
                          {
                            id: 'schedule2',
                            device_id: 'device1',
                            name: 'PROG. 02',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'off',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '14',
                            minute: '00'
                          },
                          {
                            id: 'schedule3',
                            device_id: 'device2',
                            name: 'PROG. 01',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'on',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '8',
                            minute: '00'
                          },
                          {
                            id: 'schedule4',
                            device_id: 'device2',
                            name: 'PROG. 02',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'off',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '14',
                            minute: '00'
                          },
                          {
                            id: 'schedule5',
                            device_id: 'device3',
                            name: 'PROG. 01',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'on',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '8',
                            minute: '00'
                          },
                          {
                            id: 'schedule6',
                            device_id: 'device3',
                            name: 'PROG. 02',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'off',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '14',
                            minute: '00'
                          },
                          {
                            id: 'schedule7',
                            device_id: 'device5',
                            name: 'PROG. 01',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'on',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '8',
                            minute: '00'
                          },
                          {
                            id: 'schedule8',
                            device_id: 'device5',
                            name: 'PROG. 02',
                            enabled: '1',
                            days: [
                              '1',
                              '1',
                              '1',
                              '1',
                              '1',
                              '0',
                              '0'
                            ],
                            mode: null,
                            power: 'off',
                            number: 1,
                            type: 'on_off',
                            temp: null,
                            hour: '14',
                            minute: '00'
                          }
                        ]
                      }
                    }
                    return {
                      user: e,
                      intallationRelations: n,
                      installations: a,
                      devices: t,
                      schedules: i
                    }
                  }
                ]), Multimarca.service('deviceService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  '$injector',
                  'sessionService',
                  '$state',
                  'demoService',
                  'unitFormatService',
                  function (e, n, a, t, i, r, i, o, s, l) {
                    function c(n, a) {
                      var t = e({
                        method: 'post',
                        url: url_path + 'devices',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        },
                        data: {
                          mac: n,
                          pin: a
                        }
                      });
                      return t.then(u, _)
                    }
                    function u(e) {
                      return e.data
                    }
                    function d(n) {
                      var a = e({
                        method: 'post',
                        url: url_path + '/alert_installer',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        },
                        data: n
                      });
                      return a.then(u, _)
                    }
                    function u(e) {
                      return e.data
                    }
                    function m(n) {
                      if (n = 'undefined' != typeof n ? n : !1, a && a.devices && !n) return t(function () {
                        return a.devices
                      }, 0);
                      var r = e({
                        method: 'get',
                        url: url_path + 'devices/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        }
                      });
                      return r.then(p, _)
                    }
                    function h(n, r) {
                      if (a.demo) {
                        if (a && a.devices && !r) return t(function () {
                          return a.devices.filter(function (e) {
                            return e.installation_id == n
                          })
                        }, 0);
                        var o = s.devices().devices.filter(function (e) {
                          return e.installation_id == n
                        });
                        return a.devices = o,
                        t(function () {
                          return o
                        }, 0)
                      }
                      if (r = 'undefined' != typeof r ? r : !1, a && a.devices && !r) return t(function () {
                        return a.devices.filter(function (e) {
                          return e.installation_id == n
                        })
                      }, 0);
                      var l = e({
                        method: 'get',
                        url: url_path + 'devices/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          installation_id: n,
                          format: 'json'
                        }
                      });
                      return l.then(p, _)
                    }
                    function p(e) {
                      var n = e.data.devices;
                      return angular.forEach(n, function (e) {
                        'fahrenheit' == i.unit_format() ? w(e)  : (e.cold_consign = parseInt(e.cold_consign), e.heat_consign = parseInt(e.heat_consign))
                      }),
                      a.devices = n,
                      n
                    }
                    function v(e) {
                      if (null !== A) {
                        var a = A.upload({
                          method: 'post',
                          url: url_path + 'import_devices?',
                          params: {
                            user_email: i.email(),
                            user_token: i.token(),
                            format: 'json'
                          },
                          data: {
                            import_devices: {
                            }
                          },
                          file: e
                        });
                        return a.then(u, _)
                      }
                      return n.reject('Dependency not found')
                    }
                    function u(e) {
                      return e.data
                    }
                    function g(n, r) {
                      if (a.demo) return t(function () {
                        return !0
                      });
                      'fahrenheit' == i.unit_format() && (r.min_temp_unoccupied && (r.min_temp_unoccupied = l.f2c(r.min_temp_unoccupied)), r.max_temp_unoccupied && (r.max_temp_unoccupied = l.f2c(r.max_temp_unoccupied)));
                      var o = e({
                        method: 'put',
                        url: url_path + 'devices/' + n,
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        },
                        data: r
                      });
                      return o.then(f, _)
                    }
                    function f(e) {
                      return e.data
                    }
                    function _(e) {
                      if (401 == e.status) i.unauthorize();
                       else {
                        if (403 == e.status) return o.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return o.go('init.404'),
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(angular.isObject(e.data) && e.data.message ? e.data.message : 'An unknown error occurred.')
                    }
                    function b(e, n) {
                      var t = y(e.id);
                      if (!t) return null;
                      if (t.reject) {
                        if (t.reject = !1, a.$apply(), !n) return null
                      } else {
                        if ('fahrenheit' == i.unit_format() ? w(e)  : (e.cold_consign = parseInt(e.cold_consign), e.heat_consign = parseInt(e.heat_consign)), !n) return angular.copy(e);
                        Object.keys(e).forEach(function (n) {
                          t[n] = e[n]
                        }),
                        (!e.machine_errors || e.machine_errors.indexOf('ERROR') < 0) && (t.updated = !0),
                        t.replace_retry = 0,
                        a.$apply()
                      }
                    }
                    function y(e) {
                      if (a.devices) {
                        var n = a.devices.filter(function (n) {
                          return n.id == e
                        });
                        if (n.length > 0) return n[0]
                      }
                      return !1
                    }
                    function w(e) {
                      e.cold_consign = l.c2f(e.cold_consign),
                      e.heat_consign = l.c2f(e.heat_consign),
                      e.max_limit_cold = l.c2f(e.max_limit_cold),
                      e.min_limit_cold = l.c2f(e.min_limit_cold),
                      e.max_limit_heat = l.c2f(e.max_limit_heat),
                      e.min_limit_heat = l.c2f(e.min_limit_heat),
                      e.min_temp_unoccupied = l.c2f(e.min_temp_unoccupied),
                      e.max_temp_unoccupied = l.c2f(e.max_temp_unoccupied),
                      e.local_temp = l.c2f(e.local_temp)
                    }
                    function k() {
                      a.devices = null
                    }
                    function S(e) {
                      if ('vacant' == e.scenary) {
                        e.scenary = 'occupied',
                        e.new_scenary = null;
                        var n = {
                          device: {
                            scenary: 'occupied'
                          }
                        };
                        g(e.id, n).then(function () {
                        }).catch (function (e) {
                          console.log('Error update device to ocuppied scene: ', e)
                        })
                      }
                    }
                    return {
                      getDevices: m,
                      getDevicesFromInstallation: h,
                      createDevice: c,
                      createDevicesFile: v,
                      updateDevice: g,
                      replaceDevice: b,
                      destroy: k,
                      alertInstaller: d,
                      checkUnoccupiedScene: S
                    };
                    var A
                  }
                ]), Multimarca.service('eventsService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  '$state',
                  'LogService',
                  function (e, n, a, t, i, r, o) {
                    function s(r, o, s, d) {
                      if (a.demo) return t(function () {
                        return !0
                      }, 0);
                      'fahrenheit' == i.unit_format() && [
                        'P7',
                        'P8',
                        'P13',
                        'P14',
                        'P15',
                        'P16'
                      ].indexOf(s) > - 1 && (d = u(d));
                      var m = {
                        event: {
                          cgi: r,
                          option: s,
                          value: d,
                          device_id: o.id
                        }
                      },
                      h = e({
                        method: 'post',
                        url: url_path + 'events/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        },
                        data: m
                      });
                      return h.then(function (e) {
                        return l(m, e)
                      }).catch (function (e) {
                        return n.reject(c(e, m))
                      })
                    }
                    function l(e, n) {
                      return o.startTiming(n.data.event.id, n.data.event.cgi, e),
                      n.data
                    }
                    function c(e, t) {
                      if (o.eventError(e.status, e.statusText, t), 401 == e.status) i.unauthorize();
                       else if (423 == e.status) a.machine_ready_error = !0,
                      a.not_machine_ready = !0;
                       else {
                        if (422 == e.status) return a.disconnected_device = !0,
                        a.show_disconnected_device = !0,
                        n.reject('An unknown error occurred.');
                        if (403 == e.status) return r.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return r.go('init.404'),
                        n.reject('An unknown error occurred.');
                        if (!angular.isObject(e.data) || !e.data.message) return a.disconnection = !0,
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(e.data.message)
                    }
                    function u(e) {
                      return (5 * (e - 32) / 9).toFixed(1)
                    }
                    return {
                      createEvent: s
                    }
                  }
                ]), Multimarca.service('installationRelationService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  'sessionService',
                  '$state',
                  'demoService',
                  function (e, n, a, t, i, i, r, o) {
                    function s(n) {
                      if (a.demo) return t(function () {
                        return o.intallationRelations().installation_relations
                      }, 0);
                      var r = e({
                        method: 'post',
                        url: url_path + 'installation_relations?.json',
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        },
                        data: n
                      });
                      return r.then(l, v)
                    }
                    function l(e) {
                      return e.data
                    }
                    function c(n, r) {
                      if (a.demo) return t(function () {
                        return o.intallationRelations().installation_relations
                      }, 0);
                      if (r = 'undefined' != typeof r ? r : !1, a && a.installation_relations && !r) return t(function () {
                        return a.installation_relations
                      }, 0);
                      var s = e({
                        method: 'get',
                        url: url_path + 'installation_relations/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          installation_id: n,
                          format: 'json'
                        }
                      });
                      return s.then(u, v)
                    }
                    function u(e) {
                      return e.data.installation_relations
                    }
                    function d(n, r) {
                      if (a.demo) return t(function () {
                        return o.intallationRelations().installation_relations
                      }, 0);
                      var s = e({
                        method: 'put',
                        url: url_path + 'installation_relations/' + n,
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        },
                        data: r
                      });
                      return s.then(l, v)
                    }
                    function m(n) {
                      var a = e({
                        method: 'put',
                        url: url_path + 'installation_relations/' + n.id,
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        },
                        data: {
                          device_relation: {
                            permitted_devices: n.permitted_devices
                          }
                        }
                      });
                      return a.then(l, v)
                    }
                    function h(n) {
                      var a = e({
                        method: 'delete',
                        url: url_path + 'installation_relations/' + n,
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        }
                      });
                      return a.then(p, v)
                    }
                    function p(e) {
                      return e.data
                    }
                    function v(e) {
                      if (401 == e.status) i.unauthorize();
                       else {
                        if (403 == e.status) return r.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return r.go('init.404'),
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(angular.isObject(e.data) ? e.data : 'An unknown error occurred.')
                    }
                    function g() {
                      a.installation_relations = null
                    }
                    return {
                      getInstallationRelations: c,
                      createInstallationRelation: s,
                      updateInstallationRelation: d,
                      putInstallationRelation: m,
                      removeInstallationRelation: h,
                      destroy: g
                    }
                  }
                ]), Multimarca.service('installationService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  'sessionService',
                  '$state',
                  'demoService',
                  function (e, n, a, t, i, i, r, o) {
                    function s(n) {
                      if (a.demo) return t(function () {
                        return !0
                      }, 0);
                      var r = e({
                        method: 'post',
                        url: url_path + 'installations?.json',
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        },
                        data: n
                      });
                      return r.then(l, f)
                    }
                    function l(e) {
                      return e.data
                    }
                    function c(n) {
                      if (a.demo) return t(function () {
                        return o.installations().installations
                      }, 0);
                      if (n = 'undefined' != typeof n ? n : !1, a && a.installations && !n) return t(function () {
                        return a.installations
                      }, 0);
                      var r = e({
                        method: 'get',
                        url: url_path + 'installations/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        }
                      });
                      return r.then(m, f)
                    }
                    function u(n, r) {
                      if (a.demo) return t(function () {
                        return o.installations().installations.filter(function (e) {
                          return e.id == n
                        }) [0]
                      }, 0);
                      if (r = 'undefined' != typeof r ? r : !1, a.installations && !r) {
                        var s = a.installations.filter(function (e) {
                          return e.id == n
                        });
                        if (s.length > 0) return t(function () {
                          return s[0]
                        })
                      }
                      var l = e({
                        method: 'get',
                        url: url_path + 'installations/' + n,
                        responseType: 'json',
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        },
                        data: {
                          id: n
                        }
                      });
                      return l.then(d, f)
                    }
                    function d(e) {
                      var n = e.data.installation;
                      return a.installations ? - 1 == a.installations.indexOf(n) && a.installations.push(n)  : a.installations = [
                        n
                      ],
                      n
                    }
                    function m(e) {
                      return e.data.installations
                    }
                    function h(n, r) {
                      if (a.demo) return t(function () {
                        return !0
                      });
                      var o = e({
                        method: 'put',
                        url: url_path + 'installations/' + n + '?.json',
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        },
                        data: r
                      });
                      return o.then(p, f)
                    }
                    function p(e) {
                      return e.data
                    }
                    function v(n) {
                      if (a.demo) return t(function () {
                        return !0
                      }, 0);
                      var r = e({
                        method: 'delete',
                        url: url_path + 'installations/' + n + '?.json',
                        params: {
                          user_email: i.email(),
                          user_token: i.token()
                        }
                      });
                      return r.then(g, f)
                    }
                    function g(e) {
                      return e.data
                    }
                    function f(e) {
                      if (401 == e.status) i.unauthorize();
                       else {
                        if (403 == e.status) return r.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return r.go('init.404'),
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(angular.isObject(e.data) && e.data.message ? e.data.message : 'An unknown error occurred.')
                    }
                    function _() {
                      a.installations = null
                    }
                    return {
                      getInstallations: c,
                      getInstallation: u,
                      createInstallation: s,
                      updateInstallation: h,
                      removeInstallation: v,
                      destroy: _
                    }
                  }
                ]), Multimarca.service('LogService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  function (e) {
                    function n(e, n, t) {
                      l.push({
                        event_id: e,
                        time: performance.now(),
                        type: n,
                        request: t,
                        timeout: setTimeout.bind(null, a, 60000, e) ()
                      })
                    }
                    function a(e) {
                      console.log('Timeout event!');
                      var n = r(e);
                      if (null !== n) {
                        var a = l[n];
                        a.time = null,
                        a.err = 'Event timeout',
                        delete a.timeout,
                        l.splice(n, 1),
                        o(a)
                      } else console.log('Not found')
                    }
                    function t(e, n, a) {
                      var t = {
                        code: e,
                        msg: n,
                        request: a
                      };
                      o(t)
                    }
                    function i(e) {
                      var n = r(e.last_event_id);
                      if (null !== n) {
                        var a = l[n];
                        clearTimeout(a.timeout),
                        delete a.timeout,
                        a.time = performance.now() - a.time,
                        a.mac = e.mac,
                        a.id = e.id,
                        a.installation_id = e.installation_id,
                        a.firmware = e.firmware,
                        l.splice(n, 1),
                        o(a)
                      }
                    }
                    function r(e) {
                      for (var n = null, a = 0; a < l.length; a++) if (l[a].event_id === e) {
                        n = a;
                        break
                      }
                      return n
                    }
                    function o(n) {
                      e.post(s, n).success(function () {
                      }).catch (function (e) {
                        console.log('Error almacenando evento en backend: ', e)
                      })
                    }
                    var s = 'https://logging.airzonecloud.com:8443/api/v1/logger/registerLog/DKNcloud/',
                    l = [
                    ];
                    return {
                      startTiming: n,
                      endTiming: i,
                      eventError: t
                    }
                  }
                ]), Multimarca.service('scheduleService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  '$state',
                  'demoService',
                  'unitFormatService',
                  function (e, n, a, t, i, r, o, s) {
                    function l(n) {
                      if (a.demo) {
                        var r = o.schedules().schedules.filter(function (e) {
                          return n == e.device_id
                        });
                        return t(function () {
                          return m({
                            data: {
                              schedules: r
                            }
                          })
                        }, 0)
                      }
                      var s = e({
                        method: 'get',
                        url: url_path + 'schedules/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json',
                          device_id: n
                        }
                      });
                      return s.then(m, p)
                    }
                    function c(n, r) {
                      if ('fahrenheit' == i.unit_format() && r.temp && (r.temp = s.f2c(r.temp)), a.demo) return t(function () {
                        return !0
                      }, 0);
                      var o = e({
                        method: 'put',
                        url: url_path + 'schedules/' + n,
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        },
                        data: {
                          schedule: r
                        }
                      });
                      return o.then(h, p)
                    }
                    function u(t) {
                      if (a.demo) return n.when(!0);
                      'fahrenheit' == i.unit_format() && t.temp && (t.temp = s.f2c(t.temp));
                      var r = e({
                        method: 'post',
                        url: url_path + 'schedules/',
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        },
                        data: {
                          schedule: t
                        }
                      });
                      return r.then(h, p)
                    }
                    function d(n) {
                      if (a.demo) return t(function () {
                        return !0
                      }, 0);
                      var r = e({
                        method: 'delete',
                        url: url_path + 'schedules/' + n,
                        params: {
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        }
                      });
                      return r.then(h, p)
                    }
                    function m(e) {
                      var n = e.data.schedules;
                      return angular.forEach(n, function (e) {
                        if (!e.time_zone && a && a.devices && a.devices.length > 0) {
                          var n = a.devices.filter(function (n) {
                            return n.id == e.device_id
                          });
                          n.length > 0 && null != n[0].time_zone && (e.time_zone = n[0].time_zone, c(e.id, e))
                        }
                        e.hour < 10 && (e.hour = '0' + e.hour),
                        e.temp && 'fahrenheit' == i.unit_format() ? e.temp = s.c2f(e.temp)  : e.temp && (e.temp = parseInt(e.temp).toFixed(0))
                      }),
                      n
                    }
                    function h(e) {
                      return e.data
                    }
                    function p(e) {
                      if (401 == e.status) i.unauthorize();
                       else {
                        if (403 == e.status) return r.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return r.go('init.404'),
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(angular.isObject(e.data) && e.data.message ? e.data.message : 'An unknown error occurred.')
                    }
                    return {
                      getSchedules: l,
                      saveSchedule: u,
                      updateSchedule: c,
                      removeSchedule: d
                    }
                  }
                ]), Multimarca.service('sessionService', [
                  '$http',
                  '$q',
                  'localStorageService',
                  '$state',
                  '$timeout',
                  '$rootScope',
                  '$state',
                  function (e, n, a, t, i, r, t) {
                    function o() {
                      return M
                    }
                    function s() {
                      return null !== a.get('session')
                    }
                    function l(e) {
                      return M ? M.role == e : !1
                    }
                    function c() {
                      var e = a.get('session');
                      return e ? e.id : null
                    }
                    function u() {
                      return M ? M.role : null
                    }
                    function d() {
                      var e = a.get('session');
                      return e ? e.email : null
                    }
                    function m() {
                      var e = a.get('session');
                      return e ? e.authentication_token : null
                    }
                    function h() {
                      return M ? M.language : null
                    }
                    function p() {
                      return M ? M.name : null
                    }
                    function v() {
                      return M ? M.surname : null
                    }
                    function g() {
                      return M ? M.unit_format : null
                    }
                    function f() {
                      var n = e({
                        method: 'get',
                        url: url_path + 'users/' + c(),
                        params: {
                          user_email: d(),
                          user_token: m()
                        },
                        data: {
                        }
                      });
                      return n.then(function (e) {
                        return r.detectLanguage(),
                        r.user = e.data.user,
                        M = e.data.user,
                        angular.copy(M)
                      }, S)
                    }
                    function _() {
                      return a.get('session') ? M ? n.when(angular.copy(M))  : f()  : n.reject()
                    }
                    function b() {
                      M = null,
                      t.go('init.login')
                    }
                    function y() {
                      if (r.demo) return i(function () {
                        return !0
                      });
                      var n = e({
                        method: 'delete',
                        url: url_path + '/users/sign_out',
                        params: {
                          user_email: d(),
                          user_token: m()
                        },
                        data: {
                        }
                      });
                      return n.then(A, S)
                    }
                    function w(e) {
                      M = e.user;
                      var n = {
                        authentication_token: e.user.authentication_token,
                        email: e.user.email,
                        id: e.user.id
                      };
                      a.set('session', n),
                      r.user = e.user
                    }
                    function k() {
                      var n = e({
                        method: 'delete',
                        url: url_path + '/users/' + c(),
                        params: {
                          user_email: d(),
                          user_token: m()
                        },
                        data: {
                        }
                      });
                      return n.then(A, S)
                    }
                    function S(e) {
                      if (401 == e.status) b();
                       else {
                        if (403 == e.status) return t.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return t.go('init.404'),
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(angular.isObject(e.data) && e.data.message ? e.data.message : 'An unknown error occurred.')
                    }
                    function A(e) {
                      return e.data
                    }
                    var M = null;
                    return {
                      user: _,
                      unauthorize: b,
                      logout: y,
                      typeUser: l,
                      id: c,
                      name: p,
                      surname: v,
                      language: h,
                      email: d,
                      token: m,
                      saveUserLocal: w,
                      destroyUser: k,
                      unit_format: g,
                      role: u,
                      checkUser: o,
                      checkSession: s,
                      requestUserData: f
                    }
                  }
                ]), Multimarca.service('unitFormatService', function () {
                  function e(e, n) {
                    return ( + (Math.round( + (e + 'e' + n)) + 'e' + - n)).toFixed(n)
                  }
                  function n(n) {
                    return e(Number(32 + 9 * parseFloat(n) / 5), 0)
                  }
                  function a(n) {
                    return e(5 * (n - 32) / 9, 1)
                  }
                  return {
                    c2f: n,
                    f2c: a
                  }
                }), Multimarca.service('userService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  '$state',
                  function (e, n, a, t, i, r) {
                    function o(n, i) {
                      if (i = 'undefined' != typeof i ? i : !1, a && a.users && !i) {
                        var r = a.users;
                        if (r.length > 0) return t(function () {
                          return r
                        }, 0)
                      }
                      var o = e({
                        method: 'get',
                        url: url_path + 'users/',
                        params: n
                      });
                      return o.then(l, d)
                    }
                    function s(n) {
                      var a = e({
                        method: 'get',
                        url: url_path + 'users/',
                        params: {
                          installation_id: n,
                          user_email: i.email(),
                          user_token: i.token(),
                          format: 'json'
                        }
                      });
                      return a.then(l, d)
                    }
                    function l(e) {
                      return e.data
                    }
                    function c(n, a) {
                      var t = e({
                        method: 'PUT',
                        url: url_path + 'users/' + n,
                        data: a
                      });
                      return t.then(u, m)
                    }
                    function u(e) {
                      return e.data
                    }
                    function d(e) {
                      if (401 != e.status) i.unauthorize();
                       else {
                        if (403 == e.status) return r.go('init.403'),
                        n.reject('An unknown error occurred.');
                        if (404 == e.status) return r.go('init.404'),
                        n.reject('An unknown error occurred.')
                      }
                      return n.reject(angular.isObject(e.data) && e.data.message ? e.data.message : 'An unknown error occurred.')
                    }
                    function m(e) {
                      return n.reject(e)
                    }
                    return {
                      getUsers: o,
                      getInstallationUsers: s,
                      updateUser: c
                    }
                  }
                ]), Multimarca.service('weatherService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  '$timeout',
                  'sessionService',
                  function (e, n, a, t, i) {
                    function r(n) {
                      var t;
                      t = 'production' == a.environment ? 'https://api.worldweatheronline.com/premium/v1/weather.ashx?format=json&' : 'http://api.worldweatheronline.com/free/v2/weather.ashx?format=json&',
                      t += 'q=' + n.latitude + ',' + n.longitude,
                      t += '&num_of_days=6&mca=no&fx24=yes&includelocation=no&show_comments=no&tp=3&showlocaltime=yes',
                      t += '&key=eaf291cc04ff4b0baa2104500173003',
                      t += '&lang=' + i.language();
                      var r = e({
                        method: 'get',
                        url: t,
                        crossDomain: !0,
                        headers: {
                          'X-Requested-With': void 0
                        }
                      });
                      return r.then(o, s)
                    }
                    function o(e) {
                      return e.data
                    }
                    function s(e) {
                      return n.reject(e.data.message)
                    }
                    return {
                      getWeather: r
                    }
                  }
                ]), Multimarca.service('websocketsService', [
                  '$http',
                  '$q',
                  '$rootScope',
                  'sessionService',
                  'deviceService',
                  'LogService',
                  function (e, n, a, t, i, r) {
                    function o() {
                      if (!a.demo && !v && t.token()) {
                        'test' == a.environment ? (Pusher.host = '127.0.0.1', Pusher.ws_port = '8080')  : 'production' == a.environment ? (Pusher.host = 'dkn.airzonecloud.com', Pusher.ws_port = '8080', Pusher.wss_port = '8080')  : 'development' == a.environment && (Pusher.host = '127.0.0.1', Pusher.ws_port = '9080');
                        var e = t.token(),
                        n = t.email(),
                        i = {
                          enabledTransports: [
                            'ws'
                          ],
                          disableStats: !0,
                          ignoreNullOrigin: !0,
                          auth: {
                            params: {
                              user_token: e,
                              user_email: n
                            }
                          },
                          encrypted: 'production' == a.environment
                        };
                        'production' == a.environment && (i.authEndpoint = 'https://dkn.airzonecloud.com/pusher/auth'),
                        v = new Pusher(p, i),
                        Pusher.log = function () {
                        }
                      }
                    }
                    function s(e, n) {
                      if (!a.demo && v && !m['private-' + e]) {
                        var t = 'private-' + e,
                        i = v.subscribe(t);
                        m[t] = void 0 !== n ? {
                          channel: i,
                          cb: n
                        }
                         : {
                          channel: i
                        },
                        l(t)
                      }
                    }
                    function l(e) {
                      var n = m[e].channel,
                      a = null;
                      m[e].cb && (a = m[e].cb),
                      n && n.bind('device', function (e) {
                        r.endTiming(e),
                        null !== a ? a(i.replaceDevice(e, !1))  : i.replaceDevice(e, !0)
                      })
                    }
                    function c() {
                      if (v) {
                        var e = Object.keys(m);
                        o(),
                        e && e.forEach(function (e) {
                          console.log('canales: ', e),
                          s(e)
                        })
                      }
                    }
                    function u() {
                      if (v && m) {
                        for (var e in m) v.unsubscribe(e);
                        m = {
                        },
                        h = !1
                      }
                    }
                    function d() {
                      u(),
                      v && (v.disconnect(), v = null)
                    }
                    var m = {
                    },
                    h = !1,
                    p = '765ec374ae0a69f4ce44',
                    v = null;
                    return {
                      init: o,
                      createServerChannel: s,
                      destroyChannels: u,
                      connect: c,
                      destroy: d
                    }
                  }
                ]), angular.module('templates', [
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('403.html', '<div class=\'page-error\'>\n  <div class=\'page-error__title\'>\n    {{i18n( \'errors_page.page_403.title\')}}\n  </div>\n  <div class=\'page-error__description\'>\n    {{i18n( \'errors_page.page_403.text\')}}\n    <a class=\'btn btn--primary\' href=\'\' ng-click=\'reloadHome()\'>\n      {{i18n( \'errors_page.page_403.button\')}}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('404.html', '<div class=\'page-error\'>\n  <div class=\'page-error__title\'>\n    {{i18n( \'errors_page.page_404.title\')}}\n  </div>\n  <div class=\'page-error__description\'>\n    {{i18n( \'errors_page.page_404.text\')}}\n    <a class=\'btn btn--primary\' href=\'\' ui-sref=\'home.installations\'>\n      {{i18n( \'errors_page.page_404.button\')}}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('add_user_device.html', '<lazy-load installation=\'installation\' message-server=\'messageServer\'></lazy-load>\n<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-show=\'!show_error &amp;&amp; !show_success &amp;&amp; !show_confirm &amp;&amp; !messageServer\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{ i18n(\'messages.title.add_device\') }}\n    </div>\n  </header>\n  <!-- Form -->\n  <form class=\'form\' name=\'addDeviceForm\' ng-show=\'!show_new_installation\' novalidate=\'\'>\n    <div class=\'form__label\'>\n      {{ i18n(\'add_device.choose_installation\') }}\n    </div>\n    <div class=\'form__row form__groups\'>\n      <!-- loader -->\n      <div class=\'loader\' ng-show=\'loader_installations\'>\n        <div class=\'spinner\'>\n          <div class=\'rect1\'></div>\n          <div class=\'rect2\'></div>\n          <div class=\'rect3\'></div>\n          <div class=\'rect4\'></div>\n          <div class=\'rect5\'></div>\n        </div>\n      </div>\n      <div class=\'server__item\' ng-repeat=\'instal in installations\' ng-show=\'!loader_installations\'>\n        <a class=\'btn server__item__btn\' id=\'installation_{{instal.id}}\' ng-class="{\'select\': installation_selected == instal}" ng-click=\'selectInstallation(instal)\'>\n          <i class=\'icon icon-build{{instal.icon}}\'></i>\n          <div class=\'server__item__name\'>{{ instal.name }}</div>\n          <div class=\'server__item__location\'>{{ instal.spot_name }}</div>\n        </a>\n      </div>\n      <div class=\'server__item add\'>\n        <a class=\'btn server__item__btn\' id=\'new_installation\' ng-click=\'showNewInstallation(true)\'>\n          <i class=\'icon icon-more\'></i>\n          <div class=\'server__item__add\'>\n            {{ i18n(\'add_installation.add_installation\') }}\n          </div>\n        </a>\n      </div>\n    </div>\n    <div class=\'form__label\'>\n      {{ i18n(\'add_device.add_device\') }}\n    </div>\n    <div class=\'form__row\'>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' name=\'name\' ng-model=\'device.name\' placeholder="{{i18n(\'add_device.name_placeholder\') }}" required=\'\' type=\'text\'>\n        <div class=\'input--error\' ng-show=\'addDeviceForm.invalid &amp;&amp; addDeviceForm.name.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' name=\'model_device\' ng-model=\'device.model_device\' placeholder="{{ i18n(\'devices.adjusts.model_device\') }}" type=\'text\'>\n        <div class=\'input--error\' ng-show=\'addDeviceForm.invalid &amp;&amp; addDeviceForm.name.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' name=\'mac\' ng-model=\'device.mac\' ng-pattern=\'macPattern\' placeholder="{{i18n(\'add_device.mac_placeholder\') }}" required=\'\' type=\'text\'>\n        <div class=\'input--error\' ng-show=\'addDeviceForm.invalid &amp;&amp; addDeviceForm.mac.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' name=\'pin\' ng-model=\'device.pin\' placeholder="{{i18n(\'add_device.pin_placeholder\') }}" required=\'\' type=\'text\'>\n        <div class=\'input--error\' ng-show=\'addDeviceForm.invalid &amp;&amp; addDeviceForm.pin.$invalid\'>!</div>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'addDeviceForm.invalid\'>\n      <div ng-show=\'addDeviceForm.name.$error.required\'>\n        {{ i18n(\'messages.errors.device_blank\') }}\n      </div>\n      <div ng-show=\'addDeviceForm.mac.$error.required\'>\n        {{ i18n(\'messages.errors.mac_blank\') }}\n      </div>\n      <div ng-show=\'addDeviceForm.pin.$error.required\'>\n        {{ i18n(\'messages.errors.pin_blank\') }}\n      </div>\n      <div ng-show=\'addDeviceForm.mac.$error.pattern\'>\n        {{ i18n(\'messages.errors.mac_format\') }}\n      </div>\n      <div ng-show=\'installation_selected == null\'>\n        {{ i18n(\'messages.errors.installation_blank\') }}\n      </div>\n    </div>\n    <!-- buttons -->\n    <div class=\'form__buttons\'>\n      <a class=\'btn btn--primary extraMargin\' id=\'save\' ng-click=\'buttons.saveDevice || submitAddDeviceForm()\'>\n        {{ i18n(\'buttons.save\') }}\n      </a>\n      <div class=\'btn\' ng-click=\'check_remove_installation()\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </div>\n    </div>\n  </form>\n  <!-- Form -->\n  <form class=\'form\' id=\'add_installation_form\' name=\'addInstallationForm\' ng-show=\'show_new_installation\' novalidate=\'\'>\n    <!-- / Inicialmente no debe verse, solo se mostrará al hacer click en el botón de -->\n    <!-- / "añadir instalación", para mostrarlo añadir la clase ".show" -->\n    <div class=\'form__row form__add__installation show\'>\n      <div class=\'form__label\'>\n        {{ i18n(\'add_installation.add_installation\') }}\n      </div>\n      <div class=\'form__row\'>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' id=\'add_name_inst\' name=\'name\' ng-model=\'installation.name\' placeholder="{{i18n(\'add_installation.name_placeholder\') }}" required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'addInstallationForm.invalid &amp;&amp; addInstallationForm.name.$invalid\'>!</div>\n        </div>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' id=\'searchTextField\' name=\'location\' ng-model=\'installation.location\' placeholder="{{i18n(\'add_installation.location_placeholder\') }}" required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'addInstallationForm.invalid &amp;&amp; addInstallationForm.location.$invalid\'>!</div>\n        </div>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' id=\'cp_inst\' name=\'postal_code\' ng-model=\'installation.postal_code\' placeholder="{{i18n(\'add_installation.postal_code_placeholder\') }}" type=\'text\'>\n          <div class=\'input--error\' ng-show=\'addInstallationForm.invalid &amp;&amp; addInstallationForm.location.$invalid\'>!</div>\n        </div>\n      </div>\n      <div class=\'form__label\'>\n        {{ i18n(\'buttons.icon\') }}\n      </div>\n      <div class=\'form__row\'>\n        <div class=\'form__radio-icon\'>\n          <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'1\'>\n          <label>\n            <i class=\'icon icon-build1\'></i>\n          </label>\n        </div>\n        <div class=\'form__radio-icon\'>\n          <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'2\'>\n          <label>\n            <i class=\'icon icon-build2\'></i>\n          </label>\n        </div>\n        <div class=\'form__radio-icon\'>\n          <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'3\'>\n          <label>\n            <i class=\'icon icon-build3\'></i>\n          </label>\n        </div>\n        <div class=\'form__radio-icon\'>\n          <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'6\'>\n          <label>\n            <i class=\'icon icon-build6\'></i>\n          </label>\n        </div>\n        <div class=\'form__radio-icon\'>\n          <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'4\'>\n          <label>\n            <i class=\'icon icon-build4\'></i>\n          </label>\n        </div>\n        <div class=\'form__radio-icon\'>\n          <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'5\'>\n          <label>\n            <i class=\'icon icon-build5\'></i>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__label\'>\n        {{ i18n(\'add_installation.type\') }}\n      </div>\n      <!-- Tipo de instalación -->\n      <div class=\'relative float-left\'>\n        <a class=\'btn table-adjust__property__btn\' id=\'type_inst\' ng-click=\'show_types = !show_types\'>\n          {{i18n(\'installation.modal.type_\' + installation.type)}}\n        </a>\n        <div class=\'table-adjust__options\' ng-class="{\'show\': show_types}">\n          <a class=\'btn\' id=\'home_type\' ng-class="{\'select\': installation.type == \'home\'}" ng-click="selectInstallationType( \'home\' )">\n            {{i18n(\'installation.modal.type_home\')}}\n          </a>\n          <a class=\'btn\' id=\'commercial_type\' ng-class="{\'select\': installation.type == \'commercial\'}" ng-click="selectInstallationType( \'commercial\' )">\n            {{i18n(\'installation.modal.type_commercial\')}}\n          </a>\n          <a class=\'btn\' id=\'business_type\' ng-class="{\'select\': installation.type == \'business\'}" ng-click="selectInstallationType( \'business\' )">\n            {{i18n(\'installation.modal.type_business\')}}\n          </a>\n          <a class=\'btn\' id=\'others_type\' ng-class="{\'select\': installation.type == \'others\'}" ng-click="selectInstallationType( \'others\' )">\n            {{i18n(\'installation.modal.type_others\')}}\n          </a>\n        </div>\n      </div>\n      <div class=\'clearfix\'></div>\n      <!-- error messages -->\n      <div class=\'form__error\' ng-show=\'addInstallationForm.invalid\'>\n        <div ng-show=\'addInstallationForm.name.$error.required\'>\n          {{ i18n(\'messages.errors.installation_blank\') }}\n        </div>\n        <div ng-show=\'addInstallationForm.location.$error.required\'>\n          {{ i18n(\'messages.errors.location_blank\') }}\n        </div>\n        <div ng-show=\'installation.icon == null\'>\n          {{ i18n(\'messages.errors.icon_blank\') }}\n        </div>\n      </div>\n      <!-- buttons -->\n      <div class=\'form__buttons\'>\n        <a class=\'btn btn--primary extraMargin\' id=\'save_installation\' ng-click=\'buttons.saveInstallation || submitInstallationForm()\'>\n          {{ i18n(\'buttons.save_installation\') }}\n        </a>\n        <div class=\'btn\' ng-click=\'showNewInstallation(false)\'>\n          {{ i18n(\'buttons.cancel\') }}\n        </div>\n      </div>\n    </div>\n  </form>\n</section>\n<!-- Delete Device Confirmation --------------------------------------------------- -->\n<div class=\'modal__message\' ng-show=\'show_success\'>\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{ i18n(\'messages.title.user_device_added\') }}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    <i class=\'icon icon-success\'></i>\n    {{ i18n(\'messages.success.user_device_added\') }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' ui-sref=\'home.installations\'>\n      {{ i18n(\'buttons.accept\') }}\n    </a>\n  </div>\n</div>\n<!-- Message Error ---------------------------------------------------------------- -->\n<div class=\'modal__message\' ng-show=\'show_error\'>\n  <!-- Message -->\n  <div class=\'modal__message__content\' ng-show=\'taken_error\'>\n    <i class=\'icon icon-cancel\'></i>\n    {{ i18n(\'messages.errors.device_taken\') }}\n  </div>\n  <div class=\'modal__message__content\' ng-show=\'mac_error\'>\n    <i class=\'icon icon-cancel\'></i>\n    {{ i18n(\'messages.errors.mac_invalid\') }}\n  </div>\n  <div class=\'modal__message__content\' ng-show=\'pin_error\'>\n    <i class=\'icon icon-cancel\'></i>\n    {{ i18n(\'messages.errors.pin_invalid\') }}\n  </div>\n  <div class=\'modal__message__content\' ng-show=\'sleeping_error\'>\n    <i class=\'icon icon-cancel\'></i>\n    {{ i18n(\'messages.errors.server_sleeping\') }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' href=\'\' ng-click=\'acceptError()\'>\n      {{ i18n(\'buttons.accept\') }}\n    </a>\n  </div>\n</div>\n<!-- Delete Installation Confirmation --------------------------------------------------- -->\n<section id=\'confirm_remove\' ng-show=\'show_confirm\'>\n  <div class=\'modal__message\'>\n    <!-- Title -->\n    <div class=\'modal__message__title\'>\n      {{ i18n(\'messages.title.remove_installation_confirm\') }}\n    </div>\n    <!-- Message -->\n    <div class=\'modal__message__content\'>\n      <i class=\'icon icon-cancel\'></i>\n      {{ i18n(\'messages.success.remove_installation_without_devices\') }}\n    </div>\n    <!-- confirm button -->\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn\' id=\'cancel_confirm\' ng-click=\'cancelConfirm()\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </a>\n      <a class=\'btn btn--primary\' id=\'confirm_remove_button\' ng-click=\'removeInstallation()\'>\n        {{ i18n(\'buttons.accept\') }}\n      </a>\n    </div>\n  </div>\n</section>\n<!-- Message Error ---------------------------------------------------------------- -->\n<div class=\'modal__message\' ng-show="messageServer == \'errorServer\'">\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{ i18n( \'installation_relation_list.internal_error\' ) }}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{ i18n( \'installation_relation_list.internal_error_message\' ) }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' ng-click=\'messageServer = false\'>\n      {{ i18n( \'buttons.accept\' ) }}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('adjust.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-show=\'!message\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{i18n( \'adjust.title\' )}}\n    </div>\n  </header>\n  <!-- Form -->\n  <form class=\'form\' name=\'editUserForm\' ng-show=\'!changePass\' novalidate=\'\'>\n    <div class=\'form__label\'>\n      {{i18n( \'adjust.personal\' )}}\n    </div>\n    <div class=\'form__row\'>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' maxlength=\'30\' name=\'name\' ng-model=\'user.name\' placeholder="{{i18n(\'name\')}}" required=\'\' type=\'text\'>\n        <div class=\'input--error\' ng-show=\'editUserForm.invalid &amp;&amp; editUserForm.name.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' maxlength=\'30\' name=\'surname\' ng-model=\'user.surname\' placeholder="{{i18n(\'surname\')}}" required=\'\' type=\'text\'>\n        <div class=\'input--error\' ng-show=\'editUserForm.invalid &amp;&amp; editUserForm.surname.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' name=\'email\' ng-model=\'user.email\' readonly=\'\' type=\'text\'>\n      </div>\n    </div>\n    <div class=\'form__label\' ng-if="!typeOfUser( \'demo\' )">\n      {{i18n( \'adjust.type_temp\' ) }}\n    </div>\n    <div class=\'form__row\' ng-if="!typeOfUser( \'demo\' )">\n      <div class=\'form__line\'>\n        {{i18n( \'adjust.type_temp_text\' ) }}\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' id=\'unit_format\' ng-checked="user.unit_format == \'celsius\'" ng-click=\'toggleUnitForm()\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner temp\'></span>\n            <span class=\'onoffswitch-switch temp\'></span>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class=\'form__label\' ng-if="!typeOfUser( \'demo\' )">\n      {{i18n( \'adjust.language\' )}}\n    </div>\n    <!-- Desktop -->\n    <div dropdown-model=\'languageDefault\' dropdown-onchange=\'changeLanguage(selected)\' dropdown-select=\'languages\' ng-if="!typeOfUser( \'demo\' )" ng-show=\'!isMobile\'></div>\n    <!-- Mobile -->\n    <div class=\'form__select\' ng-if="!typeOfUser( \'demo\' )" ng-show=\'isMobile\'>\n      <select name=\'languageDefaultMobile\' ng-model=\'user.language\'>\n        <option value=\'es\'>{{i18n(\'adjust.spanish\')}}</option>\n        <option value=\'en\'>{{i18n(\'adjust.english\')}}</option>\n        <option value=\'fr\'>{{i18n(\'adjust.french\')}}</option>\n        <option value=\'it\'>{{i18n(\'adjust.italian\')}}</option>\n        <option value=\'de\'>{{i18n(\'adjust.german\')}}</option>\n        <option value=\'pt\'>{{i18n(\'adjust.portuguese\')}}</option>\n      </select>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'editUserForm.invalid\'>\n      <div ng-show=\'editUserForm.name.$error.required\'>\n        {{i18n( \'adjust.require.name\' )}}\n      </div>\n      <div ng-show=\'editUserForm.surname.$error.required\'>\n        {{i18n( \'adjust.require.surname\' )}}\n      </div>\n    </div>\n    <!-- buttons -->\n    <div class=\'form__buttons\'>\n      <input class=\'btn btn--primary extraMargin\' id=\'save_user_button\' ng-click=\'buttons.save || saveUserSettings()\' ng-if="!typeOfUser( \'demo\' )" type=\'submit\' value="{{i18n(\'buttons.save\')}}">\n      <div class=\'btn\' id=\'change_pass\' ng-click=\'tooglePassView()\' ng-if="!typeOfUser( \'demo\' )">\n        {{i18n(\'adjust.change_pass\')}}\n      </div>\n      <div class=\'btn\' id=\'remove_user_button\' ng-click=\'showMessageConfirm()\' ng-if="!typeOfUser( \'demo\' )">\n        {{i18n( \'buttons.unsubscribe\' )}}\n      </div>\n    </div>\n  </form>\n  <!-- Form -->\n  <form class=\'form\' name=\'changePassUserForm\' ng-show=\'changePass\' novalidate=\'\'>\n    <div class=\'form__label\'>\n      {{i18n( \'adjust.password.password_change\' )}}\n    </div>\n    <div class=\'form__row\'>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' maxlength=\'50\' name=\'pass\' ng-minlength=\'8\' ng-model=\'passUser.pass\' placeholder="{{i18n(\'adjust.password.old_password_placeholder\')}}" required=\'\' type=\'password\'>\n        <div class=\'input--error\' ng-show=\'changePassUserForm.invalid &amp;&amp; changePassUserForm.pass.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' maxlength=\'50\' name=\'repass\' ng-minlength=\'8\' ng-model=\'passUser.repass\' placeholder="{{i18n(\'adjust.password.new_password_placeholder\')}}" required=\'\' type=\'password\'>\n        <div class=\'input--error\' ng-show=\'changePassUserForm.invalid &amp;&amp; changePassUserForm.repass.$invalid\'>!</div>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' equals=\'{{passUser.repass}}\' maxlength=\'50\' name=\'repass2\' ng-minlength=\'8\' ng-model=\'passUser.repass2\' placeholder="{{i18n(\'adjust.password.new_password_repeat_placeholder\')}}" required=\'\' type=\'password\'>\n        <div class=\'input--error\' ng-show=\'changePassUserForm.invalid &amp;&amp; changePassUserForm.repass2.$invalid\'>!</div>\n      </div>\n      <div class=\'form__error\' id=\'failure_message\' ng-show=\'changePassUserForm.invalid\'>\n        <div ng-show=\'invalid_password\'>\n          {{i18n(\'messages.errors.invalid_old_password\')}}\n        </div>\n        <div ng-show=\'changePassUserForm.pass.$error.required\'>\n          {{i18n(\'messages.errors.password_blank\')}}\n        </div>\n        <div ng-show=\'changePassUserForm.pass.$error.minlength\'>\n          {{i18n(\'messages.errors.password_length\')}}\n        </div>\n        <div ng-show=\'changePassUserForm.repass.$error.required\'>\n          {{i18n(\'messages.errors.password_new_blank\')}}\n        </div>\n        <div ng-show=\'changePassUserForm.repass.$error.minlength &amp;&amp; !changePassUserForm.repass.$error.required\'>\n          {{i18n(\'messages.errors.password_new_length\')}}\n        </div>\n        <div ng-show=\'changePassUserForm.repass2.$error.required\'>\n          {{i18n(\'messages.errors.password_confirmation_blank\')}}\n        </div>\n        <div ng-show=\'!changePassUserForm.repass2.$error.required &amp;&amp; changePassUserForm.repass2.$invalid &amp;&amp; !changePassUserForm.repass.$error.minlength\'>\n          {{i18n(\'messages.errors.password_confirmation_check\')}}\n        </div>\n      </div>\n      <!-- buttons -->\n    </div>\n    <div class=\'form__buttons\'>\n      <input class=\'btn btn--primary extraMargin\' id=\'save_change_pass\' ng-click=\'changePassUser()\' type=\'submit\' value="{{i18n(\'buttons.save\')}}">\n      <div class=\'btn\' id=\'cancel_change_pass\' ng-click=\'tooglePassView()\'>\n        {{i18n( \'buttons.cancel\' )}}\n      </div>\n    </div>\n  </form>\n</section>\n<!-- Save User Success ---------------------------------------------------------- -->\n<div class=\'modal__message\' id=\'save_success\' ng-show="message == \'saveSuccess\'">\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{i18n( \'adjust.save.title\' )}}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{i18n( \'adjust.save.body\' )}}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' id=\'save_user_accept\' ng-click=\'reloadAdjust()\'>\n      {{i18n( \'buttons.accept\' )}}\n    </a>\n  </div>\n</div>\n<!-- Delete Server Confirmation ------------------------------------------------- -->\n<div class=\'modal__message\' ng-show="message == \'deleteUserConfirm\'">\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{i18n( \'adjust.unsubscribe_confirm\' )}}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn\' id=\'delete_user_cancel\' ng-click=\'message = false\'>\n      {{i18n( \'buttons.cancel\' )}}\n    </a>\n    <a class=\'btn btn--primary\' id=\'delete_user_confirm\' ng-click=\'deleteUserConfirmation()\'>\n      {{i18n( \'buttons.accept\' )}}\n    </a>\n  </div>\n</div>\n<!-- Delete User Success ---------------------------------------------------------- -->\n<div class=\'modal__message\' ng-show="message == \'deleteUserSuccess\'">\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{i18n( \'adjust.unsubscribe.title\' )}}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{i18n( \'adjust.unsubscribe.body\' )}}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' id=\'logout_button\' ng-click=\'exitUser()\'>\n      {{i18n( \'buttons.accept\' )}}\n    </a>\n  </div>\n</div>\n<!-- Message Error ---------------------------------------------------------------- -->\n<div class=\'modal__message\' ng-show="message == \'errorServer\'">\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{i18n( \'error.internal.title\' )}}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{i18n( \'error.internal.body\' )}}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' id=\'error_accept\' ng-click=\'message = false\'>\n      {{i18n( \'buttons.accept\' )}}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_add_server.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-class="{\'loading\': loader}" ng-show=\'!message &amp;&amp; !show_success\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{i18n( \'servers.new.add_servers\' )}}\n    </div>\n    <div class=\'content__header__action\' ng-show=\'!noServer\'>\n      <a class=\'btn\' ui-sref=\'home.admin\'>\n        {{i18n( \'servers.new.return\' )}}\n      </a>\n    </div>\n  </header>\n  <!-- From file -->\n  <div class=\'add-server__item\' ng-show=\'success_devices == 0 &amp;&amp; failure_devices == 0\'>\n    <form class=\'form\' name=\'addServerFileForm\' novalidate=\'\'>\n      <!-- title -->\n      <div class=\'form__title\'>\n        {{i18n( \'servers.new.from_file\' )}}\n      </div>\n      <!-- form -->\n      <div class=\'form__file\' ng-class="{\'file__error\': addServerFileForm.invalid}">\n        <div class=\'form__file__label\' ng-bind="file.name || i18n( \'servers.new.select_file\' )"></div>\n        <input class=\'form__file__input\' id=\'import_devices_file\' name=\'file\' ng-file-select=\'onFileSelect($files)\' ng-model=\'file\' required=\'\' title="{{i18n( \'servers.new.select_file2\' )}}" type=\'file\'>\n      </div>\n      <!-- error messages -->\n      <div class=\'form__error center\' ng-show=\'addServerFileForm.invalid\'>\n        <div ng-show=\'addServerFileForm.file.$error.required\'>\n          {{i18n( \'messages.errors.must_select_file\' )}}\n        </div>\n        <div ng-show=\'file_error\'>\n          {{i18n( \'messages.errors.file_error\' )}}\n        </div>\n      </div>\n      <!-- buttons -->\n      <div class=\'form__buttons\'>\n        <input class=\'btn btn--primary\' id=\'save_file_button\' ng-click=\'submitAddServerFileForm()\' type=\'submit\' value="{{i18n(\'buttons.save\')}}">\n      </div>\n    </form>\n  </div>\n  <!-- From form -->\n  <div class=\'add-server__item\' ng-show=\'success_devices == 0 &amp;&amp; failure_devices == 0\'>\n    <form class=\'form\' name=\'addServerForm\' novalidate=\'\'>\n      <!-- title -->\n      <div class=\'form__title\'>\n        {{i18n( \'servers.new.from_form\' )}}\n      </div>\n      <!-- form -->\n      <div class=\'form__row\'>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' name=\'mac\' ng-model=\'server.mac\' ng-pattern=\'macPattern\' placeholder=\'MAC\' required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'addServerForm.invalid &amp;&amp; addServerForm.mac.$invalid\'>!</div>\n        </div>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' name=\'pin\' ng-model=\'server.pin\' placeholder=\'PIN\' required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'addServerForm.invalid &amp;&amp; addServerForm.pin.$invalid\'>!</div>\n        </div>\n      </div>\n      <!-- error messages -->\n      <div class=\'form__error\' ng-show=\'addServerForm.invalid\'>\n        <div ng-show=\'addServerForm.mac.$error.required\'>\n          {{ i18n(\'messages.errors.mac_blank\') }}\n        </div>\n        <div ng-show=\'addServerForm.pin.$error.required\'>\n          {{ i18n(\'messages.errors.pin_blank\') }}\n        </div>\n        <div ng-show=\'addServerForm.mac.$error.pattern\'>\n          {{ i18n(\'messages.errors.mac_format\') }}\n        </div>\n        <div ng-show=\'already_register_mac\'>\n          {{ i18n(\'messages.errors.mac_repeated\') }}\n        </div>\n      </div>\n      <!-- buttons -->\n      <div class=\'form__buttons\'>\n        <input class=\'btn btn--primary\' id=\'save_manual_button\' ng-click=\'submitAddServerForm()\' type=\'submit\' value="{{i18n(\'buttons.save\')}}">\n      </div>\n    </form>\n  </div>\n  <div class=\'clearfix\'></div>\n  <!-- Resume -->\n  <div class=\'add-server__resume\' id=\'success_resume\' ng-show=\'success_devices != 0\'>\n    <div class=\'add-server__resume-success\' ng-show=\'success_devices == 1\'>\n      <div class=\'add-server__resume__icon\'>\n        <i class=\'icon icon-success\'></i>\n      </div>\n      {{ i18n( \'servers.new.success_add1\' ) + \' \' + success_devices + \' \' + i18n(\'servers.new.success_add_f1\')}}\n    </div>\n    <div class=\'add-server__resume-success\' ng-show=\'success_devices != 1\'>\n      <div class=\'add-server__resume__icon\'>\n        <i class=\'icon icon-success\'></i>\n      </div>\n      {{ i18n( \'servers.new.success_add2\' ) + \' \' + success_devices + \' \' + i18n(\'servers.new.success_add_f2\')}}\n    </div>\n  </div>\n  <div class=\'add-server__resume\' id=\'failure_resume\' ng-show=\'failure_devices != 0\'>\n    <div class=\'add-server__resume-error\' ng-show=\'failure_devices == 1\'>\n      <div class=\'add-server__resume__icon\'>\n        <i class=\'icon icon-cancel\'></i>\n      </div>\n      {{ i18n(\'servers.new.failure_add1\') }}\n      <table ng-repeat=\'device in erroneous_devices\'>\n        <tr>\n          <td>\n            {{device[0]}}\n          </td>\n          <td>\n            {{device[1]}}\n          </td>\n        </tr>\n      </table>\n    </div>\n    <div class=\'add-server__resume-error\' ng-show=\'failure_devices != 1\'>\n      <div class=\'add-server__resume__icon\'>\n        <i class=\'icon icon-cancel\'></i>\n      </div>\n      {{ i18n(\'servers.new.failure_add2\') + \' \' + failure_devices + \' \' + i18n(\'servers.new.failure_add_f2\') }}\n      <table ng-repeat=\'device in erroneous_devices\'>\n        <tr>\n          <td>\n            {{device[0]}}\n          </td>\n          <td>\n            {{device[1]}}\n          </td>\n        </tr>\n      </table>\n    </div>\n    <!-- / Cierra el resumen y muestra los formularios -->\n    <a class=\'btn btn--primary\' ng-click=\'reloadPage()\' ng-show=\'success_devices != 0 || failure_devices != 0\'>\n      {{i18n( \'servers.new.return\' )}}\n    </a>\n  </div>\n</section>\n<!-- loader -->\n<div class=\'loader\' ng-show=\'loader\'>\n  <div class=\'spinner\'>\n    <div class=\'rect1\'></div>\n    <div class=\'rect2\'></div>\n    <div class=\'rect3\'></div>\n    <div class=\'rect4\'></div>\n    <div class=\'rect5\'></div>\n  </div>\n</div>\n<!-- Delete Server Confirmation --------------------------------------------------- -->\n<div class=\'modal__message\' ng-show=\'show_success\'>\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{ i18n(\'servers.new.success.added\') }}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{ i18n(\'servers.new.success.added2\') }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' id=\'accept_modal_result\' ng-click=\'reloadPage()\'>\n      {{ i18n(\'servers.new.accept\') }}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_adjust.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{i18n( \'adjust.title_admin\' )}}\n    </div>\n  </header>\n  <!-- Form -->\n  <form class=\'form\'>\n    <div class=\'form__label\'>\n      {{i18n( \'adjust.personal\' )}}\n    </div>\n    <div class=\'form__row\'>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' name=\'email\' ng-model=\'user.email\' readonly=\'\' type=\'text\'>\n      </div>\n    </div>\n  </form>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_export.html', '<section class=\'content adjust\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      Exportar Datos\n    </div>\n    <div class=\'content__header__action\'>\n      <a class=\'btn\' ui-sref=\'home.admin\'>\n        Volver\n      </a>\n    </div>\n  </header>\n  <div class=\'server-filter__title\'>\n    {{ i18n(\'filters\') }}\n  </div>\n  <table class=\'server-filter\'>\n    <tr>\n      <td class=\'table-serves__mac\'>\n        <input class=\'server-filter__item\' name=\'initDate\' placeholder=\'Desde\' type=\'text\'>\n      </td>\n      <td class=\'table-serves__mac\'>\n        <input class=\'server-filter__item\' name=\'endDate\' placeholder=\'Hasta\' type=\'text\'>\n      </td>\n      <td class=\'table-serves__status\'>\n        <div class=\'server-filter__item\' dropdown-model=\'filterStatus\' dropdown-onchange=\'getDevices(); current_page = 1;\' dropdown-select=\'statusList\' id=\'filter_status\'></div>\n      </td>\n      <td class=\'table-serves__location\'></td>\n      <td class=\'table-serves__result\'>\n        <div class=\'server-filter__item\'>0</div>\n      </td>\n    </tr>\n  </table>\n  <!-- Form -->\n  <form class=\'form\' name=\'editUserForm\' ng-show=\'!changePass\' novalidate=\'\'>\n    <div class=\'form__label\'>\n      Campos\n    </div>\n    <div class=\'form__row\'>\n      <div class=\'form__line\'>\n        Temp. Exterior\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Temp. Retorno\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Temp. Ambiente\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Temp. Consigna\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Encendido y Apagado\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Modo de Trabajo\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Consumo\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Errores\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Instalación\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Zona\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Localidad\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n      <div class=\'form__line\'>\n        Funcionamiento\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class=\'form__buttons\'>\n      <input class=\'btn btn--primary extraMargin\' id=\'save_change_pass\' type=\'submit\' value=\'Exportar\'>\n      <div class=\'btn\' id=\'cancel_change_pass\'>\n        {{i18n( \'buttons.cancel\' )}}\n      </div>\n    </div>\n  </form>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_firmware.html', '<section class=\'content adjust\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      Firmware\n    </div>\n    <div class=\'content__header__action\'>\n      <a class=\'btn\' ui-sref=\'home.admin\'>\n        Añadir Firmware\n      </a>\n    </div>\n  </header>\n  <!-- Form -->\n  <form class=\'form\'>\n    <div class=\'form__label\'>\n      Añadir Firmware\n    </div>\n    <div class=\'form__row\'>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' placeholder=\'Versión\' required=\'\' type=\'text\'>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' placeholder=\'Fecha\' required=\'\' type=\'text\'>\n      </div>\n      <div class=\'form__input\'>\n        <input class=\'form__input\' placeholder=\'Hardware\' required=\'\' type=\'text\'>\n      </div>\n      <div class=\'form__input\'>\n        <textarea placeholder=\'Cambios\'></textarea>\n      </div>\n    </div>\n    <div class=\'form__buttons\'>\n      <input class=\'btn btn--primary extraMargin\' type=\'submit\' value="{{i18n(\'buttons.save\')}}">\n      <div class=\'btn\' id=\'cancel_change_pass\'>\n        {{i18n( \'buttons.cancel\' )}}\n      </div>\n    </div>\n  </form>\n  <table class=\'table-servers\'>\n    <tr class=\'table-servers__header\'>\n      <th class=\'table-firmware__version\'>\n        <a class=\'link\'>\n          Versión\n        </a>\n      </th>\n      <th class=\'table-firmware__date\'>\n        <a class=\'link\'>\n          Fecha\n        </a>\n      </th>\n      <th class=\'table-firmware__hardware\'>\n        <a class=\'link\'>\n          Hardware\n        </a>\n      </th>\n      <th class=\'table-firmware__info\'>\n        <a class=\'link\'>\n          Info\n        </a>\n      </th>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n    <tr class=\'table-servers__row\'>\n      <td class=\'table-firmware__version\'>\n        1.13\n      </td>\n      <td class=\'table-firmware__date\'>\n        10/12/2015\n      </td>\n      <td class=\'table-firmware__hardware\'>\n        daikin 1.3.23\n      </td>\n      <td class=\'table-firmware__info btn__cell\'>\n        <a class=\'btn\'>\n          <i class=\'icon icon-info\'></i>\n        </a>\n      </td>\n    </tr>\n  </table>\n  <div id=\'pagination_counter\'>\n    {{ i18n(\'servers.tags.page\') }}\n    1\n    {{ i18n(\'servers.tags.of\') }}\n    3\n  </div>\n  <div class=\'pagination\'>\n    <div class=\'btn prev\' id=\'servers_prev\'>\n      {{ i18n(\'buttons.prev\') }}\n    </div>\n    <div class=\'btn next\' id=\'servers_next\'>\n      {{ i18n(\'buttons.next\') }}\n    </div>\n  </div>\n</section>\n<!-- Modal ------------------------------------------------------------------------ -->\n<modal-info-server class=\'info-server\' show=\'show_modal\'>\n  <header class=\'modal__header\'>\n    Firmware\n  </header>\n  <section class=\'modal__section\'>\n    <table class=\'table-servers\'>\n      <tr class=\'table-servers__row\'>\n        <td>\n          Versión\n        </td>\n        <td>\n          1.13\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          Fecha\n        </td>\n        <td>\n          10/12/2015\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          Hardware\n        </td>\n        <td>\n          daikin 1.3.23\n        </td>\n      </tr>\n      <tr class=\'table-servers__row info--title\'>\n        <td colspan=\'2\'>\n          Cambios\n        </td>\n      </tr>\n      <tr class=\'table-servers__row info\'>\n        <td colspan=\'2\'>\n          Cambio 1\n          <br>\n          Cambio 2\n          <br>\n          Cambio 3\n          <br>\n          Cambio 4\n          <br>\n          Cambio 5\n        </td>\n      </tr>\n    </table>\n    <div class=\'info-server__buttoms__bot\'>\n      <a class=\'btn\' id=\'close_server\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </a>\n    </div>\n  </section>\n</modal-info-server>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_map.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-show=\'!message\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{ i18n(\'servers.tags.servers\') }}\n      <a class=\'btn tooltip\' data-tooltop=\'Vista tabla\' ui-sref=\'home.admin\'>\n        <i class=\'icon icon-view-table\'></i>\n      </a>\n    </div>\n  </header>\n  <div class=\'map map-servers\' id=\'map\'></div>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_servers.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-show=\'!message\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{ i18n(\'servers.tags.servers\') }}\n      <a class=\'btn tooltip\' data-tooltop=\'Vista mapa\' ui-sref=\'home.map\'>\n        <i class=\'icon icon-view-map\'></i>\n      </a>\n    </div>\n    <div class=\'content__header__action\' ng-show=\'!noServer\'>\n      <a class=\'btn\' ui-sref=\'home.addServer\'>\n        {{ i18n(\'servers.new.add_servers\') }}\n      </a>\n    </div>\n  </header>\n  <div class=\'server-filter__title\'>\n    {{ i18n(\'filters\') }}\n  </div>\n  <table class=\'server-filter\'>\n    <tr>\n      <td class=\'table-serves__mac\'>\n        <input class=\'server-filter__item\' name=\'filter_mac\' ng-keyup=\'$event.keyCode == 13 ? getDevices() : null; current_page = 1;\' ng-model=\'filterMac\' placeholder="{{ i18n(\'mac\') }}" type=\'text\'>\n          <div class=\'search-mac__icon\' ng-click=\'getDevices()\'>\n            <i class=\'icon icon-search\'></i>\n          </div>\n        </input>\n      </td>\n      <td class=\'table-serves__status\'>\n        <div class=\'server-filter__item\' dropdown-model=\'filterStatus\' dropdown-onchange=\'getDevices(); current_page = 1;\' dropdown-select=\'statusList\' id=\'filter_status\'></div>\n      </td>\n      <td class=\'table-serves__location\'>\n        <input class=\'server-filter__item center\' ng-keyup=\'$event.keyCode == 13 ? getDevices() : null; current_page = 1;\' ng-model=\'filterLocation\' placeholder="{{ i18n(\'locality\') }}" type=\'text\'>\n          <div class=\'search-mac__icon\' ng-click=\'getDevices()\'>\n            <i class=\'icon icon-search\'></i>\n          </div>\n        </input>\n      </td>\n      <td class=\'table-serves__firmware\'>\n        <input class=\'server-filter__item center\' placeholder=\'firmware\' type=\'text\'>\n      </td>\n      <td class=\'table-serves__result\'>\n        <div class=\'server-filter__item\'>{{ total_devices  }}</div>\n      </td>\n    </tr>\n    <tr ng-show=\'macErrorMessage || locationErrorMessage\'>\n      <td class=\'table-serves__mac form__error\'>\n        <div ng-show=\'macErrorMessage\'>\n          {{ i18n(\'messages.errors.mac_length_seek\') }}\n        </div>\n      </td>\n      <td class=\'table-serves__status\'></td>\n      <td class=\'table-serves__location form__error\'>\n        <div ng-show=\'locationErrorMessage\'>\n          {{ i18n(\'messages.errors.email_length_seek\') }}\n        </div>\n      </td>\n      <td class=\'table-serves__firmware\'></td>\n      <td></td>\n    </tr>\n  </table>\n  <div class=\'server-filter__title extra__margin\'>\n    {{ i18n(\'servers.tags.results\') }}\n  </div>\n  <table class=\'table-servers\'>\n    <tr class=\'table-servers__header\'>\n      <th>\n        <a class=\'link\' id=\'order_by_mac\' ng-click="orderBy = \'mac\'; orderAsc=!orderAsc; getDevices();">\n          {{ i18n(\'mac\') }}\n        </a>\n      </th>\n      <th>\n        <a class=\'link\' id=\'order_by_status\' ng-click="orderBy = \'status\'; orderAsc=!orderAsc; getDevices()">\n          {{ i18n(\'status\') }}\n        </a>\n      </th>\n      <th>\n        <a class=\'link\' id=\'order_by_location\' ng-click="orderBy = \'spot_name.es\'; orderAsc=!orderAsc; getDevices()">\n          {{ i18n(\'locality\') }}\n        </a>\n      </th>\n      <th>\n        <a class=\'link\'>\n          Firmware\n        </a>\n      </th>\n      <th>\n        <a class=\'link\'>\n          {{ i18n(\'servers.tags.update\') }}\n        </a>\n      </th>\n    </tr>\n    <tr class=\'table-servers__row\' ng-click=\'showServerInfo(server)\' ng-repeat=\'server in servers\'>\n      <td class=\'table-serves__mac\'>\n        {{server.mac}}\n      </td>\n      <td class=\'table-serves__status {{server.status}}\'>\n        {{ i18n(server.status) }}\n      </td>\n      <td class=\'table-serves__location\'>\n        <span class=\'table-servers__city\'>\n          {{server.complete_name|location:\'city\'}}\n        </span>\n        <span class=\'table-servers__lessCity\'>\n          {{server.complete_name|location:\'lessCity\'}}\n        </span>\n      </td>\n      <td class=\'table-serves__firmware\'>\n        {{server.firmware}}\n      </td>\n      <td class=\'table-serves__update btn__cell\' id=\'uf_{{server.id}}\' ng-click=\'updateDevice(server); $event.stopPropagation();\'>\n        <a class=\'btn btn-icon\'>\n          <i class=\'icon icon-reload2\'></i>\n        </a>\n      </td>\n    </tr>\n  </table>\n  <div id=\'no_results\' ng-show=\'total_pages == 0\' style=\'text-align: center;\'>\n    {{ i18n( \'servers.no_results\' ) }}\n  </div>\n  <div id=\'pagination_counter\' ng-show=\'total_pages &gt; 0\'>\n    {{ i18n(\'servers.tags.page\') }}\n    {{ current_page }}\n    {{ i18n(\'servers.tags.of\') }}\n    {{ total_pages }}\n  </div>\n  <div class=\'pagination\'>\n    <div class=\'btn prev\' id=\'servers_prev\' ng-click=\'current_page = current_page - 1; pagination = true; getDevices()\' ng-show=\'current_page &gt; 1\'>\n      {{ i18n(\'buttons.prev\') }}\n    </div>\n    <div class=\'btn next\' id=\'servers_next\' ng-click=\'current_page = current_page + 1; pagination = true; getDevices()\' ng-show=\'current_page &lt; total_pages\'>\n      {{ i18n(\'buttons.next\') }}\n    </div>\n  </div>\n</section>\n<!-- Modal ------------------------------------------------------------------------ -->\n<modal-info-server class=\'info-server\' close=\'goToList()\' show=\'show_modal\'>\n  <header class=\'modal__header\' ng-show="modal_status == \'info\'">\n    {{ i18n(\'messages.title.server_data\') }}\n  </header>\n  <section class=\'modal__section\' ng-show="modal_status == \'info\'">\n    <table class=\'table-servers\'>\n      <tr class=\'table-servers__row\'>\n        <td>\n          {{ i18n(\'mac\') }}\n        </td>\n        <td>\n          {{server.mac}}\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          {{ i18n(\'pin\') }}\n        </td>\n        <td>\n          {{server.pin}}\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          {{ i18n(\'state\') }}\n        </td>\n        <td class=\'activated\'>\n          {{ i18n(server.status || \'\') }}\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          Firmware\n        </td>\n        <td>\n          {{server.firmware}}\n        </td>\n      </tr>\n    </table>\n    <div class=\'info-server__buttoms\'>\n      <a class=\'btn\' href=\'\' ng-click="setModalStatus(\'restore_confirmation\')">\n        {{ i18n(\'buttons.restore_factory\') }}\n      </a>\n      <a class=\'btn btn--delete\' href=\'\' ng-click="setModalStatus(\'remove_confirmation\')">\n        {{ i18n(\'buttons.remove\') }}\n      </a>\n    </div>\n    <div class=\'info-server__col marginRight\'>\n      <div class=\'info-server__title\'>\n        {{ i18n(\'historic\') }}\n      </div>\n      <div class=\'info-server__section\'>\n        <ul class=\'info-server__list\'>\n          <li>\n            {{server.sleeping_date| date: \'dd-MM-yyyy (HH:mm)\'}}\n            <span class=\'sleeping\'>\n              {{ i18n(\'sleeping\') }}\n            </span>\n          </li>\n          <li>\n            {{server.connection_date| date: \'dd-MM-yyyy (HH:mm)\'}}\n            <span class=\'connected\'>\n              {{ i18n(\'connected\') }}\n            </span>\n          </li>\n          <li>\n            {{server.activation_date| date: \'dd-MM-yyyy (HH:mm)\'}}\n            <span class=\'activated\'>\n              {{ i18n(\'activated\') }}\n            </span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\'info-server__col\'>\n      <div class=\'info-server__title\'>\n        {{ i18n(\'admin_users.title\') }}\n      </div>\n      <div class=\'info-server__section\'>\n        <div class=\'info-server__list__title\' ng-repeat=\'user in users\'>\n          {{user.email}}\n        </div>\n      </div>\n    </div>\n    <div class=\'clearfix\'></div>\n    <div class=\'info-server__buttoms__bot\'>\n      <a class=\'btn\' href=\'\' id=\'close_server\' ng-click=\'goToList()\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </a>\n    </div>\n  </section>\n  <section class=\'modal__section\' ng-show="modal_status == \'remove_confirmation\'">\n    <!-- Delete Server Confirmation --------------------------------------------------- -->\n    <div class=\'modal__message remove-server\'>\n      <!-- Title -->\n      <div class=\'modal__message__title\'>\n        {{ i18n(\'messages.title.remove_server\') }}\n      </div>\n      <!-- Message -->\n      <div class=\'modal__message__content\'>\n        {{ i18n(\'messages.info.remove_server_admin.question\') }}\n        <br>\n        {{ i18n(\'messages.info.remove_server_admin.info\') }}\n      </div>\n      <!-- confirm button -->\n      <div class=\'modal__message__buttons\'>\n        <a class=\'btn\' href=\'\' id=\'cancel_confirmation\' ng-click="setModalStatus(\'info\')">\n          {{ i18n(\'buttons.cancel\') }}\n        </a>\n        <a class=\'btn btn--primary\' href=\'\' id=\'accept_confirmation\' ng-click=\'removeDevice()\'>\n          {{ i18n(\'buttons.accept\') }}\n        </a>\n      </div>\n    </div>\n  </section>\n  <section class=\'modal__section\' ng-show="modal_status == \'remove_success\'">\n    <!-- Delete Server Success -------------------------------------------------------- -->\n    <div class=\'modal__message remove-server\'>\n      <!-- Title -->\n      <div class=\'modal__message__title\'>\n        {{ i18n(\'servers.remove.message\') }}\n      </div>\n      <!-- Message -->\n      <div class=\'modal__message__content\'>\n        {{ i18n(\'servers.remove.confirmation_deleted\') }}\n      </div>\n      <!-- confirm button -->\n      <div class=\'modal__message__buttons\'>\n        <a class=\'btn btn--primary\' href=\'\' id=\'accept_modal\' ng-click=\'goToList()\'>\n          {{ i18n(\'buttons.accept\') }}\n        </a>\n      </div>\n    </div>\n  </section>\n  <section class=\'modal__section\' ng-show="modal_status == \'restore_confirmation\'">\n    <!-- Restore Server Confirmation --------------------------------------------------- -->\n    <div class=\'modal__message remove-server\'>\n      <!-- Title -->\n      <div class=\'modal__message__title\'>\n        {{ i18n(\'messages.title.restore_factory\') }}\n      </div>\n      <!-- Message -->\n      <div class=\'modal__message__content\'>\n        {{ i18n(\'messages.info.restore_server_admin.question\') }}\n        <br>\n        {{ i18n(\'messages.info.restore_server_admin.info\') }}\n      </div>\n      <!-- confirm button -->\n      <div class=\'modal__message__buttons\'>\n        <a class=\'btn\' href=\'\' id=\'cancel_confirmation\' ng-click="setModalStatus(\'info\')">\n          {{ i18n(\'buttons.cancel\') }}\n        </a>\n        <a class=\'btn btn--primary\' href=\'\' id=\'accept_confirmation\' ng-click=\'restoreToFactory()\'>\n          {{ i18n(\'buttons.accept\') }}\n        </a>\n      </div>\n    </div>\n  </section>\n  <section class=\'modal__section\' ng-show="modal_status == \'restore_success\'">\n    <!-- Restore Factory Success -------------------------------------------------------- -->\n    <div class=\'modal__message remove-server\'>\n      <!-- Title -->\n      <div class=\'modal__message__title\'>\n        {{ i18n(\'messages.title.restore_factory\') }}\n      </div>\n      <!-- Message -->\n      <div class=\'modal__message__content\'>\n        {{ i18n(\'messages.success.restore_factory\') }}\n      </div>\n      <!-- confirm button -->\n      <div class=\'modal__message__buttons\'>\n        <a class=\'btn btn--primary\' href=\'\' id=\'accept_modal\' ng-click="setModalStatus(\'info\')">\n          {{ i18n(\'buttons.accept\') }}\n        </a>\n      </div>\n    </div>\n  </section>\n</modal-info-server>\n<modal-info-server class=\'info-server\' show=\'update_success\'>\n  <div class=\'modal__message\'>\n    <!-- Title -->\n    <div class=\'modal__message__title\'>\n      {{ i18n(\'messages.title.firmware_updated\') }}\n    </div>\n    <!-- Message -->\n    <div class=\'modal__message__content\'>\n      {{ i18n(\'messages.info.firmware_updated\') }}\n    </div>\n    <!-- confirm button -->\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn btn--primary\' id=\'accept_modal_result\' ng-click=\'closeMessage()\'>\n        {{ i18n(\'buttons.accept\') }}\n      </a>\n    </div>\n  </div>\n</modal-info-server>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('admin_users.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-show=\'!message\'>\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{ i18n(\'admin_users.title\') }}\n    </div>\n  </header>\n  <div class=\'server-filter__title\'>\n    {{ i18n(\'filters\') }}\n  </div>\n  <table class=\'server-filter\'>\n    <tr>\n      <td class=\'table-serves__mac\'>\n        <input class=\'server-filter__item\' name=\'filter_email\' ng-keyup=\'$event.keyCode == 13 ? getUsers() : null; current_page = 1;\' ng-model=\'filterEmail\' placeholder="{{ i18n(\'admin_users.email\') }}" type=\'text\'>\n          <div class=\'search-mac__icon\' ng-click=\'getUsers()\'>\n            <i class=\'icon icon-search\'></i>\n          </div>\n        </input>\n      </td>\n      <td class=\'table-serves__result\'>\n        <div class=\'server-filter__item\'>{{ users.length }}</div>\n      </td>\n    </tr>\n    <tr ng-show=\'emailErrorMessage\'>\n      <td class=\'table-serves__mac form__error\'>\n        <div ng-show=\'emailErrorMessage\'>\n          {{ i18n(\'messages.errors.email_length_seek\') }}\n        </div>\n      </td>\n      <td></td>\n    </tr>\n  </table>\n  <div class=\'server-filter__title\'>\n    {{ i18n(\'admin_users.results\') }}\n  </div>\n  <table class=\'table-servers\'>\n    <tr class=\'table-servers__header\'>\n      <th>\n        <a class=\'link\' id=\'order_by_email\' ng-click="orderBy = \'email\'; orderAsc=!orderAsc; getUsers()">\n          {{ i18n(\'admin_users.email\') }}\n        </a>\n      </th>\n      <th>\n        <a class=\'link\' id=\'order_by_name\' ng-click="orderBy = \'name\'; orderAsc=!orderAsc; getUsers()">\n          {{ i18n(\'admin_users.name\') }}\n        </a>\n      </th>\n    </tr>\n    <tr class=\'table-servers__row\' id=\'user_{{user.id}}\' ng-click=\'showUserInfo(user)\' ng-repeat=\'user in users\'>\n      <td class=\'table-serves__mac\'>\n        {{ user.email }}\n      </td>\n      <td class=\'sleeping table-serves__status\'>\n        {{ user.name + \' \' + user.surname}}\n      </td>\n    </tr>\n  </table>\n  <div id=\'no_results\' ng-show=\'users.length == 0\' style=\'text-align: center;\'>\n    {{ i18n( \'admin_users.no_results\' ) }}\n  </div>\n  <div id=\'pagination_counter\' ng-show=\'total_pages &gt; 0\'>\n    {{ i18n(\'admin_users.page\') }}\n    {{ current_page }}\n    {{ i18n(\'admin_users.of\') }}\n    {{ total_pages }}\n  </div>\n  <div class=\'pagination\'>\n    <div class=\'btn prev\' id=\'users_prev\' ng-click=\'current_page = current_page - 1; getUsers()\' ng-show=\'current_page &gt; 1\'>\n      {{ i18n(\'buttons.prev\') }}\n    </div>\n    <div class=\'btn next\' id=\'users_next\' ng-click=\'current_page = current_page + 1; getUsers()\' ng-show=\'current_page &lt; total_pages\'>\n      {{ i18n(\'buttons.next\') }}\n    </div>\n  </div>\n</section>\n<!-- Modal ------------------------------------------------------------------------ -->\n<modal-info-server class=\'info-server\' close=\'goToList()\' show=\'show_modal\'>\n  <header class=\'modal__header\' ng-show="modal_status == \'info\'">\n    {{ i18n(\'admin_users.device_modal.title\') }}\n  </header>\n  <section class=\'modal__section\' ng-show="modal_status == \'info\'">\n    <table class=\'table-servers\' ng-repeat=\'device in select_user.devices\'>\n      <tr class=\'table-servers__row\'>\n        <td>\n          {{ i18n(\'mac\') }}\n        </td>\n        <td>\n          {{device.mac}}\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          {{ i18n(\'pin\') }}\n        </td>\n        <td>\n          {{device.pin}}\n        </td>\n      </tr>\n      <tr class=\'table-servers__row\'>\n        <td>\n          {{ i18n(\'admin_users.device_modal.location\') }}\n        </td>\n        <td>\n          {{device.complete_name}}\n        </td>\n      </tr>\n    </table>\n    <p ng-show=\'!select_user.devices || select_user.devices.length == 0\'>\n      {{i18n( \'admin_users.device_modal.no_devices\' )}}\n    </p>\n    <br>\n    <div class=\'clearfix\'></div>\n    <div class=\'info-server__buttoms__bot\'>\n      <a class=\'btn\' href=\'\' id=\'close_user\' ng-click=\'goToList()\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </a>\n    </div>\n  </section>\n</modal-info-server>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('association.html', '<div class=\'main pageTransition\' ng-class="{\'menu-trigger\': $root.menuTrigger, \'modalShow\': modalShow, \'zonaView\': zonaView}" ui-view=\'\'>\n  <!-- / Cambiando la clase .state1 cambias de página -->\n  <!-- / .state1 - Texto explicativo del proceso -->\n  <!-- / .state2 - Conectar el webserver -->\n  <!-- / .state3 - Seleccionar el tipo de instalación -->\n  <!-- / .state4 - Cambiar de wifi -->\n  <!-- / .state5 - Seleccionar Router -->\n  <!-- / .state6 - Introducir clave wifi -->\n  <!-- / .state7 - Introducir datos del router -->\n  <!-- / .state8 - Proceso completado -->\n  <!-- / -->\n  <!-- / .state21 - Pulsar botón WPS router -->\n  <!-- / .state22 - Pulsar botón WPS dispositivo -->\n  <div class=\'installation state{{state}}\'>\n    <div class=\'installation__header\'>\n      <a class=\'link installation__return\' ng-click=\'goToPreviousState()\' ng-show=\'state != 1 &amp;&amp; state != 9 &amp;&amp; state != 8\'>\n        {{i18n( \'installations.return\' ) }}\n      </a>\n      <a class=\'link installation__close\' ui-sref=\'init.login\'>\n        {{i18n( \'installations.exit\' ) }}\n      </a>\n    </div>\n    <div class=\'installation__content\'>\n      <!-- / .state1 - Texto explicativo del proceso -->\n      <div class=\'installation__state1\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state1.text\' ) }}\n        </div>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(2)\'>\n          {{i18n( \'installations.next\' ) }}\n        </a>\n      </div>\n      <!-- / .state2 - Conectar el webserver -->\n      <div class=\'installation__state2\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state2.text\' ) }}\n        </div>\n        <img alt=\'webserver\' class=\'installation__img\' ng-src=\'assets/wps.jpg\'>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(4)\'>\n          {{i18n( \'installations.next\' ) }}\n        </a>\n      </div>\n      <!-- / .state21 - Pulsar botón WPS router -->\n      <div class=\'installation__state21\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state21.text1\' ) }}\n          <br>\n          {{i18n( \'installations.state21.text2\' ) }}\n        </div>\n        <img alt=\'webserver\' class=\'installation__img__little\' ng-src=\'assets/wps_logo.png\'>\n        <div class=\'clearfix\'></div>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(22)\'>\n          {{i18n( \'installations.next\' ) }}\n        </a>\n      </div>\n      <!-- / .state22 - Pulsar botón WPS dispositivo -->\n      <div class=\'installation__state22\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state22.text1\' ) }}\n          <br>\n          {{i18n( \'installations.state22.text2\' ) }}\n        </div>\n        <img alt=\'webserver\' class=\'installation__img\' ng-src=\'assets/wps.jpg\'>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(9)\'>\n          {{i18n( \'installations.next\' ) }}\n        </a>\n      </div>\n      <!-- / .state3 - Seleccionar el tipo de instalación -->\n      <div class=\'installation__state3\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state3.text\' ) }}\n        </div>\n        <a class=\'btn installation__block-btn\' ng-click=\'setState(4)\'>\n          {{i18n( \'installations.state3.assisted\' ) }}\n        </a>\n        <a class=\'btn installation__block-btn\' ng-click=\'setState(21)\'>\n          {{i18n( \'installations.state3.wps\' ) }}\n        </a>\n      </div>\n      <!-- / .state4 - Cambiar de wifi -->\n      <div class=\'installation__state4\'>\n        <!-- / En los navegadores -->\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state4.text\' ) }}\n        </div>\n        <div>\n          AZWSDKNxxxx\n        </div>\n        <div>\n          &nbsp;\n        </div>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state4.text4\' ) }}\n        </div>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(41)\' ng-show="deviceType != \'Android\'">\n          {{i18n( \'installations.next\' ) }}\n        </a>\n        <br>\n      </div>\n      <!-- / .state4 - Cambiar de wifi -->\n      <div class=\'installation__state41\'>\n        <!-- / En los navegadores -->\n        <div>\n          {{i18n( \'installations.state41.title\' ) }}\n        </div>\n        <div>\n          &nbsp;\n        </div>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state41.auto_info\' ) }}\n        </div>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state41.manual_info\' ) }}\n        </div>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(5)\'>\n          {{i18n( \'installations.state41.auto\' ) }}\n        </a>\n        <br>\n        <a class=\'btn installation__buttons\' ng-click=\'setManualRouter()\'>\n          {{i18n( \'installations.state41.manual\' ) }}\n        </a>\n        <br>\n      </div>\n      <!-- / .state5 - Seleccionar Router -->\n      <div class=\'installation__state5\'>\n        <div class=\'installation__title\' ng-show=\'!loading1\'>\n          {{i18n( \'installations.state5.text\' ) }}\n        </div>\n        <div class=\'installation__routers\' ng-show=\'!loading1\'>\n          <a class=\'link installation__routers__link\' ng-click=\'selectRouter( router )\' ng-repeat=\'router in routers\'>\n            <div class=\'installation__routers__name\'>\n              {{router._name}}\n              <i class=\'icon icon-signal {{getClassConnection(router._rssi)}}\'></i>\n            </div>\n          </a>\n        </div>\n        <div ng-show=\'loading1\'>\n          {{i18n(\'installations.state5.loading_text\')}}\n        </div>\n        <div ng-show=\'loading1\'>\n          {{i18n(\'installations.state5.loading_text2\')}}\n        </div>\n        <div class=\'loader loader-relative\' ng-show=\'loading1\'>\n          <div class=\'spinner\'>\n            <div class=\'rect1\'></div>\n            <div class=\'rect2\'></div>\n            <div class=\'rect3\'></div>\n            <div class=\'rect4\'></div>\n            <div class=\'rect5\'></div>\n          </div>\n        </div>\n      </div>\n      <!-- / .state6 - Introducir clave wifi -->\n      <form class=\'installation__state6\' name=\'passForm\' novalidate=\'\'>\n        <div ng-if=\'!manual_router\'>\n          <div class=\'installation__title\' ng-if=\'router._name\'>\n            {{router._name}}\n          </div>\n          <div class=\'installation__title\'>\n            {{i18n( \'installations.state6.text\' ) }}\n          </div>\n        </div>\n        <div ng-if=\'manual_router\'>\n          <div class=\'installation__title\'>\n            {{i18n( \'installations.state6.text2\' ) }}\n          </div>\n          <input class=\'installation__input\' name=\'name\' ng-model=\'router._name\' placeholder="{{i18n(\'installations.state6.name\')}}" type=\'text\'>\n        </div>\n        <div class=\'form__select\'>\n          <select name=\'seguridad\' ng-model=\'router._seguridad\'>\n            <option value=\'0\'>{{i18n(\'installations.state6.none\')}}</option>\n            <option value=\'1\'>{{i18n(\'installations.state6.wep\')}}</option>\n            <option value=\'2\'>{{i18n(\'installations.state6.wpa\')}}</option>\n          </select>\n        </div>\n        <div>\n          &nbsp;\n        </div>\n        <input class=\'installation__input\' name=\'password\' ng-model=\'router._password\' placeholder="{{i18n(\'installations.state6.pass\')}}" type=\'text\'>\n        <input class=\'btn btn--primary installation__buttons\' ng-click=\'setState(7)\' type=\'submit\' value="{{i18n( \'installations.next\' ) }}">\n      </form>\n      <!-- / .state7 - Introducir datos del router -->\n      <div class=\'installation__state7\'>\n        <div class=\'installation__title\' ng-show=\'!loading2\'>\n          {{i18n( \'installations.state7.text\' ) }}\n        </div>\n        <div ng-show=\'!loading2\'>\n          <a class=\'btn installation__buttons\' ng-class="{\'select\': typeDhcp}" ng-click="setConnectionType( \'dhcp\' )">\n            {{i18n(\'installations.state7.dhcp\')}}\n          </a>\n          <a class=\'btn installation__buttons\' ng-class="{\'select\': !typeDhcp}" ng-click="setConnectionType( \'manual\' )">\n            {{i18n(\'installations.state7.manual\')}}\n          </a>\n          <div>\n            &nbsp;\n          </div>\n          <input class=\'installation__input\' ng-if=\'!typeDhcp\' ng-model=\'connection.ip\' placeholder="{{i18n(\'installations.state7.ip\')}}" type=\'text\'>\n          <input class=\'installation__input\' ng-if=\'!typeDhcp\' ng-model=\'connection.masc\' placeholder="{{i18n(\'installations.state7.masc\')}}" type=\'text\'>\n          <input class=\'installation__input\' ng-if=\'!typeDhcp\' ng-model=\'connection.port\' placeholder="{{i18n(\'installations.state7.port\')}}" type=\'text\'>\n          <input class=\'installation__input\' ng-if=\'!typeDhcp\' ng-model=\'connection.dns\' placeholder=\'DNS\' type=\'text\'>\n          <a class=\'btn btn--primary installation__buttons\' ng-click=\'setConnection()\' ng-if=\'!loading2\'>\n            {{i18n( \'installations.next\' ) }}\n          </a>\n        </div>\n        <div ng-show=\'loading2\'>\n          {{i18n(\'installations.state7.loading_text\')}}\n        </div>\n        <div class=\'loader loader-relative\' ng-show=\'loading2\'>\n          <div class=\'spinner\'>\n            <div class=\'rect1\'></div>\n            <div class=\'rect2\'></div>\n            <div class=\'rect3\'></div>\n            <div class=\'rect4\'></div>\n            <div class=\'rect5\'></div>\n          </div>\n        </div>\n      </div>\n      <!-- / .state22 - Pulsar botón WPS dispositivo -->\n      <div class=\'installation__state8\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state8.text\' ) }}\n        </div>\n        <img alt=\'webserver\' class=\'installation__img\' ng-src=\'assets/wps.jpg\'>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'setState(9)\'>\n          {{i18n( \'installations.next\' ) }}\n        </a>\n      </div>\n      <!-- / .state9 - Proceso completado -->\n      <div class=\'installation__state9\'>\n        <div class=\'installation__title\'>\n          {{i18n( \'installations.state9.text\' ) }}\n        </div>\n        <div class=\'installation__success\'>\n          <i class=\'icon icon-success\'></i>\n        </div>\n        <a class=\'btn btn--primary installation__buttons\' ui-sref=\'init.login\'>\n          {{i18n( \'installations.finish\' ) }}\n        </a>\n      </div>\n      <div class=\'error\' ng-show=\'error\'>\n        <div class=\'installation__error\'>\n          {{i18n( \'installations.error\' )}}\n        </div>\n        <a class=\'btn btn--primary installation__buttons\' ng-click=\'retry()\'>\n          {{i18n(\'installations.retry\')}}\n        </a>\n      </div>\n      <div class=\'installation__progress__continer\'>\n        <div class=\'installation__progress__bar\'></div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' ng-show=\'low_signal_dialog\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-server\'></i>\n        {{i18n( \'installations.state5.low_signal.title\' )}}\n      </section>\n      <section class=\'modal__message\'>\n        {{i18n( \'installations.state5.low_signal.text\' )}}\n      </section>\n    </div>\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn btn--primary installation__buttons\' ng-click=\'closeLowSignalDialog()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('complete_registration.html', '<!-- Create Accoun -------------------------------------------------------------- -->\n<div class=\'create_acount\' ng-show="state == \'register\'">\n  <!-- Title -->\n  <div class=\'login__title\'>\n    {{i18n(\'complete_registration.title\')}}\n  </div>\n  <!-- Form -->\n  <form class=\'login__form\' name=\'registerForm\' novalidate=\'\'>\n    <div class=\'login__form__row\'>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input form__input read-only\' name=\'email\' ng-model=\'register.email\' placeholder="{{i18n(\'email\')}}" readonly=\'\' required=\'\' type=\'text\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.email.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'30\' name=\'name\' ng-model=\'register.name\' placeholder="{{i18n(\'name\')}}" required=\'\' type=\'text\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.name.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'30\' name=\'surname\' ng-model=\'register.surname\' placeholder="{{i18n(\'surname\')}}" required=\'\' type=\'text\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.surname.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'50\' name=\'password\' ng-minlength=\'8\' ng-model=\'register.password\' placeholder="{{i18n(\'new_password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.password.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' equals=\'{{register.password}}\' maxlength=\'50\' name=\'passwordRepeat\' ng-model=\'register.password_confirmation\' placeholder="{{i18n(\'repeat_password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.passwordRepeat.$invalid\'>!</div>\n      </div>\n    </div>\n    <div class=\'login__form__checkbox checkbox register__first__checkbox\'>\n      <div>\n        <input name=\'condition\' ng-class="{\'error\': registerForm.invalid &amp;&amp; registerForm.condition.$invalid}" ng-model=\'register.condition\' required=\'\' type=\'checkbox\'>\n        <label>\n          {{i18n( \'terms.accept\' )}}\n          <a class=\'link\' href=\'{{terms.legal_terms.link}}\' target=\'_blank\'>\n            {{i18n( \'terms.legal_terms\' )}}\n          </a>\n          {{i18n( \'terms.and\' )}}\n          <a class=\'link\' href=\'{{terms.privacy_policy.link}}\' target=\'_blank\'>\n            {{i18n( \'terms.privacy\' )}}\n          </a>\n        </label>\n      </div>\n    </div>\n    <div class=\'login__form__checkbox second__checkbox checkbox\'>\n      <div>\n        <input name=\'publicity\' ng-model=\'register.publicity\' type=\'checkbox\'>\n        <label>\n          <a class=\'link register_publicity\' href=\'\'>\n            {{i18n( \'terms.publicity\' )}}\n          </a>\n        </label>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' id=\'failure_message\' ng-show=\'registerForm.invalid\'>\n      <div ng-show=\'register_error\'>\n        {{i18n(\'messages.errors.registration_already_completed\')}}\n      </div>\n      <div ng-show=\'registerForm.name.$error.required\'>\n        {{i18n(\'messages.errors.name_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.surname.$error.required\'>\n        {{i18n(\'messages.errors.surname_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.email.$error.required\'>\n        {{i18n(\'messages.errors.email_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.email.$dirty &amp;&amp; registerForm.email.$error.email\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'registerForm.password.$error.required\'>\n        {{i18n(\'messages.errors.password_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.password.$error.minlength\'>\n        {{i18n(\'messages.errors.password_length\')}}\n      </div>\n      <div ng-show=\'registerForm.passwordRepeat.$error.required\'>\n        {{i18n(\'messages.errors.password_confirmation_blank\')}}\n      </div>\n      <div ng-show=\'!registerForm.passwordRepeat.$error.required &amp;&amp; registerForm.passwordRepeat.$invalid\'>\n        {{i18n(\'messages.errors.password_confirmation_check\')}}\n      </div>\n      <div ng-show=\'registerForm.condition.$error.required\'>\n        {{i18n(\'messages.errors.condition\')}}\n      </div>\n    </div>\n    <!-- send button -->\n    <input class=\'btn btn--primary login__form__btn--send\' href=\'\' id=\'save\' ng-click=\'submitRegisterForm()\' type=\'submit\' value="{{i18n(\'buttons.init\')}}">\n  </form>\n  <!-- cancel button -->\n  <a class=\'btn login__form__btn--cancel\' href=\'\' id=\'cancel\' ng-click=\'reloadLogin()\'>\n    {{i18n(\'buttons.cancel\')}}\n  </a>\n</div>\n<!-- Success Register ----------------------------------------------------------- -->\n<div class=\'login__message--success\' id=\'success_message\' ng-show="state == \'register_success\'">\n  <!-- Title -->\n  <div class=\'login__message__title\'>\n    {{i18n(\'messages.success.register\')}}\n  </div>\n  <!-- Message -->\n  <div class=\'login__message__content\'>\n    {{i18n(\'messages.info.complete_registration_success\')}}\n  </div>\n  <!-- success button -->\n  <a class=\'btn btn--primary login__form__btn--success\' href=\'#\' ui-sref=\'home.installations\'>\n    {{i18n(\'buttons.accept\')}}\n  </a>\n</div>\n<!-- Terms ----------------------------------------------------------- -->\n<div class=\'terms\' ng-show="state == \'terms\'">\n  <div class=\'login__title\'>\n    {{i18n( \'terms.title\' )}}\n  </div>\n  <div class=\'terms__body\' ng-bind-html="i18n(\'terms.body\')"></div>\n  <a class=\'btn terms__btn--back\' href=\'\' ng-click="state = \'register\'">\n    {{i18n( \'buttons.back\' )}}\n  </a>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('confirmation.html', '<!-- Title -->\n<div class=\'login__title\'>\n  {{i18n(\'messages.title.resend_confirmation\')}}\n</div>\n<div class=\'confirmation\' ng-show=\'!confirmation_success\'>\n  <!-- Form -->\n  <form class=\'login__form\' name=\'confirmationForm\' novalidate=\'\'>\n    <div class=\'login__form__row\'>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'50\' name=\'email\' ng-model=\'confirmation.email\' ng-pattern=\'emailFormat\' placeholder="{{i18n(\'email\')}}" required=\'\' type=\'email\'>\n        <div class=\'login__input--error\' ng-show=\'confirmationForm.invalid &amp;&amp; confirmationForm.email.$invalid\'>!</div>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'confirmationForm.invalid\'>\n      <div ng-show=\'confirmation_error\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'confirmationForm.email.$error.required\'>\n        {{i18n(\'messages.errors.email_blank\')}}\n      </div>\n      <div ng-show=\'confirmationForm.email.$dirty &amp;&amp; (confirmationForm.email.$error.email || confirmationForm.email.$error.pattern)\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n    </div>\n    <!-- send button -->\n    <input class=\'btn btn--primary login__form__btn--send\' ng-click=\'submitConfirmationForm()\' type=\'submit\' value="{{i18n(\'buttons.send\')}}">\n    <!-- Message -->\n    <div class=\'login__message\' ng-if=\'!error_token\'>\n      {{i18n(\'messages.info.resend_confirmation\')}}\n    </div>\n    <div class=\'login__message\' ng-if=\'error_token\'>\n      {{i18n(\'messages.errors.confirmation\')}}\n    </div>\n    <!-- cancel button -->\n  </form>\n  <a class=\'btn login__form__btn--cancel\' href=\'\' ng-click=\'reloadLogin()\'>\n    {{i18n(\'buttons.cancel\')}}\n  </a>\n</div>\n<!-- Success Confirmation ----------------------------------------------------------- -->\n<div class=\'login__message--success\' ng-show=\'confirmation_success\'>\n  <!-- Title -->\n  <div class=\'login__message__title\'>\n    {{i18n(\'messages.info.has_email\')}}\n  </div>\n  <!-- Message -->\n  <div class=\'login__message__content\'>\n    {{i18n(\'messages.success.resend_confirmation\')}}\n  </div>\n  <!-- success button -->\n  <a class=\'btn btn--primary login__form__btn--success\' href=\'\' ui-sref=\'home.installations\'>\n    {{i18n(\'buttons.accept\')}}\n  </a>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('device.html', '<!-- View Zone and Hide Climate in Moblie ----------------------------------------- -->\n<section class=\'content\' ng-class="{\'show-climate\': show_climate}">\n  <section class=\'systems\'>\n    <section class=\'content content-zone\'>\n      <a class=\'link zoneReturnSystem\' ng-click=\'goBack()\'>\n        {{i18n( \'buttons.back\' )}}\n      </a>\n      <div class=\'zone\' ng-class="{\'powerOff\': device.power == \'0\', \'notify\': hasWarning()}">\n        <div class=\'zone__header\'>\n          <a class=\'system__zone__alert-btn notice\' ng-click=\'toggleMobileWarning()\' ng-if=\'hasWarning()\'>\n            <i class=\'icon icon-alert\'></i>\n          </a>\n          <div class=\'div\' ng-class="{\'error__machine\': hasWarning()}">\n            {{device.name}}\n            <div class=\'zone__temp-ext\'>\n              {{getTemp()}}º\n            </div>\n          </div>\n        </div>\n        <!-- / Segun la clase que se añada se muestra de un color u otro -->\n        <!-- / .notice (aviso -> amarillo) -->\n        <!-- / .alert (aviso -> rojo) -->\n        <div class=\'system__zone__alert__one__device notice\' id=\'warning_{{device.id}}\' ng-if=\'hasWarning() &amp;&amp; device.show_error == true\'>\n          <a class=\'btn system__zone__alert__cancel\' id=\'close_warn_{{device.id}}\' ng-click=\'closeWarning()\'>\n            <i class=\'icon icon-cancel\'></i>\n          </a>\n          <div class=\'system__zone__alert__text__one__device\' id=\'warning_text_{{device.id}}\'>\n            <div>\n              {{i18n( \'devices.warnings.text\' )}}\n              <br ng-if=\'!isMobile\'>\n              {{device.machine_errors}}\n              <br>\n            </div>\n            <a class=\'btn system__zone__alert__installer\' id=\'show_alert\' ng-click=\'showAlertInstallerModal()\'>\n              <i class=\'icon icon-configure\'></i>\n              {{i18n( \'devices.warnings.installer\' )}}\n            </a>\n          </div>\n        </div>\n        <div class=\'zone__modes\' ng-class="{\'loading\' : !device.updated}">\n          <a class=\'btn icon-btn\' ng-class="{\'cool\': device.mode == \'1\' || device.mode == \'6\', \'heat\': device.mode == \'2\' || device.mode == \'7\'}" ng-click=\'showModeOptions()\'>\n            <i class=\'icon icon-{{getClassFromMode(device.mode)}}\'></i>\n          </a>\n          <a class=\'btn icon-btn\' ng-click=\'showVelocityOptionsRow()\' ng-show="device.mode != \'5\'">\n            <i class=\'icon icon-velocity{{device.availables_speeds}}-{{getVelocity()}}\'></i>\n          </a>\n          <a class=\'btn icon-btn\' ng-click=\'showVerticalOptionsRow()\' ng-show="device.ver_state_slats == \'1\'">\n            <i class="icon icon-{{getSlatsIcon(\'vertical\')}}"></i>\n          </a>\n          <a class=\'btn icon-btn\' ng-click=\'showHorizontalOptionsRow()\' ng-show="device.hor_state_slats == \'1\'">\n            <i class="icon icon-{{getSlatsIcon(\'horizontal\')}}"></i>\n          </a>\n          <a class=\'btn icon-btn\' ng-click=\'showScenaryModal()\'>\n            <i class=\'icon icon-{{device.scenary}}\' ng-class="{\'cool\': getColourCold(), \'heat\': getColourHeat()}"></i>\n          </a>\n          <ul ng-show=\'!show_climate\' rn-carousel-index=\'tempIndex\' rn-carousel-transition=\'hexagon\' rn-carousel=\'\'>\n            <li ng-repeat=\'temp in listTemp\'>\n              <div class=\'zone__temp__item\' id=\'temp-{{temp}}\' ng-class="{\'select\': tempIndex == $index,&#x000A;\'cool\': device.power == \'1\' &amp;&amp; (device.mode == \'1\' || device.mode == \'6\'),&#x000A;\'heat\': device.power == \'1\' &amp;&amp; (device.mode == \'2\' || device.mode == \'7\')}">\n                <div class=\'span\' ng-show="(device.mode != \'3\' &amp;&amp; device.mode != \'5\')">\n                  {{ temp }}º\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div class=\'loader\' ng-if=\'!device.updated\' style=\'top: 75px;\'>\n          <div class=\'spinner\'>\n            <div class=\'rect1\'></div>\n            <div class=\'rect2\'></div>\n            <div class=\'rect3\'></div>\n            <div class=\'rect4\'></div>\n            <div class=\'rect5\'></div>\n          </div>\n        </div>\n        <div class=\'zone__power\'>\n          <a class=\'btn icon-btn\' id=\'power_button\' ng-class="{\'select\': device.power == \'1\'}" ng-click=\'toggleDevicePower()\'>\n            <i class=\'icon icon-power\'></i>\n          </a>\n        </div>\n        <div class=\'zone__footer\' ng-class="{\'zone__footer__mobile\': eolo}">\n          <a class=\'btn icon-btn\' id=\'config_device_{{device.id}}\' ng-click=\'showModalAdjust()\'>\n            <i class=\'icon icon-adjust\'></i>\n          </a>\n          <a class=\'btn icon-btn\' ng-click=\'showModalSchedules()\'>\n            <i class=\'icon icon-program\'></i>\n          </a>\n        </div>\n      </div>\n    </section>\n  </section>\n  <section class=\'climate\'>\n    <div class=\'climate__content\'>\n      <div class=\'climate__item climate__city\'>\n        <div class=\'climate__city__title\'>\n          {{ installation.spot_name }}\n        </div>\n        <div class=\'climate__text\'>\n          {{ date.getDate() + " " + i18n( "installation.months." + date.getMonth() ) + " - " + date.getHours() + ":" + getMinutes() }}\n        </div>\n        <div class=\'climate__city__icon\'>\n          {{ current_temp }}º\n          <i class=\'icon\' ng-class=\'current_weather_icon\'></i>\n        </div>\n        <div class=\'climate__text\'>\n          {{ current_description }}\n        </div>\n      </div>\n      <div class=\'climate__item climate__weather\'>\n        <div class=\'climate__weather__table\'>\n          <div class=\'climate__weather__day\' ng-repeat=\'hour in forecast\'>\n            <div class=\'climate__weather__day__time\'>\n              {{ (hour.time / 100 + \':00\') }}\n            </div>\n            <div class=\'climate__weatjer__day__icon\'>\n              <i class=\'icon\' ng-class=\'weatherIcon( hour.weatherCode );\'></i>\n            </div>\n            <div class=\'climate__weather__day__temp\' ng-if="unit_format == \'fahrenheit\'">\n              {{ hour.tempF }}º\n            </div>\n            <div class=\'climate__weather__day__temp\' ng-if="unit_format == \'celsius\'">\n              {{ hour.tempC }}º\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\'climate__item climate__week\'>\n        <div class=\'climate__week__day\' ng-repeat=\'day in daily\'>\n          <div class=\'climate__week__day__title\'>\n            {{ i18n( "installation.days." + ( date.getDay() + $index + 1 ) % 7 ) }}\n          </div>\n          <div class=\'climate__week__day__temp\' ng-if="unit_format == \'fahrenheit\'">\n            {{ day.maxtempF }}º / {{ day.mintempF }}º\n          </div>\n          <div class=\'climate__week__day__temp\' ng-if="unit_format == \'celsius\'">\n            {{ day.maxtempC }}º / {{ day.mintempC }}º\n          </div>\n          <div class=\'climate__week__day__icon\'>\n            <i class=\'icon\' ng-class=\'weatherIcon( day.hourly[3].weatherCode );\'></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('device_row.html', '<!-- / Añadir la clase .notify cuando haya una alerta/error -->\n<div class=\'system__zone\' id=\'device_{{device.id}}\' ng-class="{\'powerOff\': !booleanPower(), \'notify\': hasWarning()}">\n  <!-- / Se muestra cuando hay una alerta/error y se cierra la ventana con la alerta -->\n  <!-- / Al pulsarse vuelve a mostrar la ventana con la alerta/error -->\n  <!-- / Usar la clase .notice para las alertas -->\n  <!-- / Usar la clase .alert para los errores -->\n  <a class=\'system__zone__alert-btn notice\' ng-click=\'toggleMobileWarning()\' ng-if=\'hasWarning()\'>\n    <i class=\'icon icon-alert\'></i>\n  </a>\n  <div class=\'system__zone__title\' ng-bind=\'device.name\'>\n    {{device.name}}\n  </div>\n  <div class=\'system__zone__temp-ext\'>\n    {{getTemp()}} º\n  </div>\n  <div class=\'system__zone__modes\' ng-class="{\'loading\' : !device.updated}" ng-show=\'showOptions\'>\n    <a class=\'btn icon-btn\' id=\'device_mode_{{device.id}}\' ng-class="{\'cool\': device.mode == \'1\' || device.mode == \'6\', \'heat\': device.mode == \'2\' || device.mode == \'7\'}" ng-click=\'showModeOptions()\'>\n      <i class=\'icon icon-{{getClassFromMode(device.mode)}}\'></i>\n    </a>\n    <a class=\'btn icon-btn\' id=\'device_speed_{{device.id}}\' ng-click=\'showVelocityOptionsRow()\' ng-show="device.mode != \'5\'">\n      <i class=\'icon icon-velocity{{device.availables_speeds}}-{{getVelocity()}}\'></i>\n    </a>\n    <a class=\'btn icon-btn\' id=\'device_vertical_{{device.id}}\' ng-click=\'showVerticalOptionsRow()\' ng-show="device.ver_state_slats == \'1\'">\n      <i class="icon icon-{{getSlatsIcon(\'vertical\')}}"></i>\n    </a>\n    <a class=\'btn icon-btn\' id=\'device_horizontal_{{device.id}}\' ng-click=\'showHorizontalOptionsRow()\' ng-show="device.hor_state_slats == \'1\'">\n      <i class="icon icon-{{getSlatsIcon(\'horizontal\')}}"></i>\n    </a>\n    <a class=\'btn icon-btn\' id=\'device_scenary_{{device.id}}\' ng-click=\'showScenaryModal()\'>\n      <i class=\'icon icon-{{device.scenary}}\' ng-class="{\'cool\': getColourCold(), \'heat\': getColourHeat()}"></i>\n    </a>\n  </div>\n  <div class=\'system__zone__temp\' id=\'buttons_temp_{{device.id}}\' ng-class="{\'cool\': device.power == \'1\' &amp;&amp; (device.mode == \'1\' || device.mode == \'6\'),&#x000A;\'heat\': device.power == \'1\' &amp;&amp; (device.mode == \'2\' || device.mode == \'7\')}">\n    <a class=\'btn icon-btn btn-less\' id=\'device_minus_consign_{{device_id}}\' ng-class="{\'loading\' : !device.updated}" ng-click="updateConsign(\'minus\')" ng-if=\'canChangeTemp()\'>\n      <i class=\'icon icon-less\'></i>\n    </a>\n    <span class=\'system__zone__temp-value\' id=\'device_consign_{{device.id}}\' ng-class="{\'loading\' : !device.updated}" ng-show="device.mode != \'3\' &amp;&amp; device.mode != \'5\'">\n      {{getConsign()}} º\n    </span>\n    <div class=\'loader\' ng-if=\'!device.updated\'>\n      <div class=\'spinner\'>\n        <div class=\'rect1\'></div>\n        <div class=\'rect2\'></div>\n        <div class=\'rect3\'></div>\n        <div class=\'rect4\'></div>\n        <div class=\'rect5\'></div>\n      </div>\n    </div>\n    <a class=\'btn icon-btn btn-more\' id=\'device_plus_consign_{{device.id}}\' ng-class="{\'loading\' : !device.updated}" ng-click="updateConsign(\'plus\')" ng-if=\'canChangeTemp()\'>\n      <i class=\'icon icon-more\'></i>\n    </a>\n  </div>\n  <div class=\'system__zone__adjust\'>\n    <a class=\'btn icon-btn\' id=\'config_device_{{device.id}}\' ng-click=\'showModalAdjust()\'>\n      <i class=\'icon icon-adjust\'></i>\n    </a>\n  </div>\n  <div class=\'system__zone__program\'>\n    <!-- / Si tiene algún tipo de programación activada se añade la clase .select -->\n    <!-- / para que se vea azul -->\n    <a class=\'btn icon-btn\' id=\'device_schedules_{{device.id}}\' ng-click=\'showModalSchedules()\'>\n      <i class=\'icon icon-program\'></i>\n    </a>\n  </div>\n  <div class=\'system__zone__power\'>\n    <a class=\'btn icon-btn\' id=\'device_power_{{device.id}}\' ng-class="{\'select\': booleanPower()}" ng-click=\'togglePower()\'>\n      <i class=\'icon icon-power\'></i>\n    </a>\n  </div>\n  <div class=\'system__zone__btn-mobile\' ui-sref=\'home.device({id: device.id, installation_id: installation.id })\'></div>\n  <!-- / Segun la clase que se añada se muestra de un color u otro -->\n  <!-- / .notice (aviso -> amarillo) -->\n  <!-- / .alert (aviso -> rojo) -->\n  <div class=\'system__zone__alert notice\' id=\'warning_{{device.id}}\' ng-if=\'hasWarning() &amp;&amp; device.show_error == true\'>\n    <a class=\'btn system__zone__alert__cancel\' id=\'close_warn_{{device.id}}\' ng-click=\'closeWarning()\'>\n      <i class=\'icon icon-cancel\'></i>\n    </a>\n    <div class=\'system__zone__alert__text\' id=\'warning_text_{{device.id}}\'>\n      <div>\n        {{i18n( \'devices.warnings.text\' )}}\n        <br ng-if=\'!isMobile\'>\n        {{device.machine_errors}}\n        <br>\n      </div>\n      <a class=\'btn system__zone__alert__installer\' id=\'show_alert\' ng-click=\'showAlertInstallerModal()\'>\n        <i class=\'icon icon-configure\'></i>\n        {{i18n( \'devices.warnings.installer\' )}}\n      </a>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('device_users.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content users\' ng-show=\'!show_confirm_user &amp;&amp; !show_confirm &amp;&amp; !show_disabled_permission_device &amp;&amp; !taken_error\'>\n  <!-- Header Content ------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{i18n(\'installation.modal.links.users\')}}\n    </div>\n  </header>\n  <!-- List users ---------------------------------------------------------- -->\n  <section class=\'users__list\' ng-show="!show_new_user &amp;&amp; partial == \'list\'">\n    <div ng-class="{\'loading\': loader_list}">\n      <div class=\'users__title\'>\n        {{i18n(\'installation.modal.users\')}}\n      </div>\n      <div id=\'basic_users_list\'>\n        <a class=\'btn user__list__user\' id=\'user_{{ir.user.id}}\' ng-click=\'show_permissions(ir)\' ng-repeat=\'ir in irs\'>\n          <div class=\'truncate-name\'>\n            {{ir.user.name}} {{ir.user.surname}}\n          </div>\n          <div class=\'truncate-email\'>\n            {{ir.user.email}}\n          </div>\n          <div class=\'user__list__user__type\' ng-if="ir.type == \'advanced\'">\n            {{i18n(\'users.advanced\')}}\n          </div>\n          <div class=\'user__list__user__type\' ng-if="ir.type == \'basic\'">\n            {{i18n(\'users.basic\')}}\n          </div>\n        </a>\n      </div>\n      <a class=\'btn btn--primary users__btn\' ng-click=\'showNewUser()\' ng-if="!typeOfUser( \'demo\' )">\n        {{i18n(\'installation.modal.add_user\')}}\n      </a>\n    </div>\n    <div class=\'form__buttons\'>\n      <div class=\'btn\' ui-sref=\'home.installations\'>\n        {{i18n(\'buttons.back\')}}\n      </div>\n    </div>\n    <!-- loader -->\n    <div class=\'loader\' ng-show=\'loader_list\'>\n      <div class=\'spinner\'>\n        <div class=\'rect1\'></div>\n        <div class=\'rect2\'></div>\n        <div class=\'rect3\'></div>\n        <div class=\'rect4\'></div>\n        <div class=\'rect5\'></div>\n      </div>\n    </div>\n  </section>\n  <!-- List user zones ---------------------------------------------------------- -->\n  <section class=\'users__zones\' ng-show="partial == \'permissions\'">\n    <div ng-class="{\'loading\': loader_permissions}">\n      <div class=\'users__title message\'>\n        {{ir_selected.user.name}} {{ir_selected.user.surname}}\n      </div>\n      <div class=\'users__title\'>\n        <!-- { "ng-if" => "ir_selected.type === \'advanced\'" } -->\n        {{i18n(\'messages.title.installation_permissions\')}}\n      </div>\n      <!-- / Add class .select if select && ir_selected.user.role == \'advanced\'"} -->\n      <div class=\'user__list__zone--server\' id=\'installation-row-permission-{{ir_selected.id}}\' ng-if=\'ir_selected.installation_id == installation_id\'>\n        <i class=\'icon icon-build1\'></i>\n        {{ir_selected.installation.name}}\n        <div class=\'onoffswitch\'>\n          <input class=\'onoffswitch-checkbox\' id=\'installation-permission-checkbox-{{ir_selected.installation.id}}\' ng-click=\'toggleInstallationPermission(ir_selected)\' ng-model=\'installations_permissions[ir_selected.installation.id]\' type=\'checkbox\'>\n          <label class=\'onoffswitch-label\'>\n            <span class=\'onoffswitch-inner\'></span>\n            <span class=\'onoffswitch-switch\'></span>\n          </label>\n        </div>\n        <div class=\'user__list__zones__system\' id=\'device-row-permission-{{device.id}}\' ng-repeat=\'device in ir_selected.installation.permitted_devices\'>\n          <div class=\'user__list__zone--zone\'>\n            {{device.name}}\n            <div class=\'onoffswitch\'>\n              <input class=\'onoffswitch-checkbox\' id=\'device-permission-checkbox-{{device.id}}\' ng-click=\'toggleDevicePermission(device.id)\' ng-model=\'devices_permissions[device.id]\' type=\'checkbox\'>\n              <label class=\'onoffswitch-label\'>\n                <span class=\'onoffswitch-inner\'></span>\n                <span class=\'onoffswitch-switch\'></span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <a class=\'btn btn--delete users__btn\' id=\'remove_user\' ng-click=\'removeUser()\' ng-if="!typeOfUser( \'demo\' )">\n        {{i18n(\'buttons.remove\')}}\n      </a>\n      <a class=\'btn btn users__btn\' href=\'\' id=\'return\' ng-click=\'returnToList()\' ng-if=\'isNewUser()\'>\n        {{i18n(\'buttons.accept\')}}\n      </a>\n      <a class=\'btn btn users__btn\' href=\'\' id=\'return\' ng-click=\'returnToList()\' ng-if=\'!isNewUser()\'>\n        {{i18n(\'buttons.back\')}}\n      </a>\n    </div>\n    <!-- loader -->\n    <div class=\'loader\' ng-show=\'loader\'>\n      <div class=\'spinner\'>\n        <div class=\'rect1\'></div>\n        <div class=\'rect2\'></div>\n        <div class=\'rect3\'></div>\n        <div class=\'rect4\'></div>\n        <div class=\'rect5\'></div>\n      </div>\n    </div>\n  </section>\n  <clearfix></clearfix>\n  <!-- Create New User Invitation --------------------------------------------------- -->\n  <form class=\'form\' name=\'newUserForm\' ng-show=\'show_new_user &amp;&amp; !taken_error\' novalidate=\'\'>\n    <div class=\'form__row\'></div>\n    <!-- %section.modal__section.modal__adjust.ng-scope.ng-hide.form__row{"ng-show" => ""} -->\n    <form class=\'table-adjust\' id=\'installation_user_form\' name=\'newUserForm\' novalidate=\'\'>\n      <!-- Nombre de la instalación -->\n      <div class=\'form__input\'>\n        {{i18n(\'installation.modal.new_user.title\')}}\n      </div>\n      <div class=\'form__row\'>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' id=\'user_name\' maxlength=\'30\' name=\'user_name\' ng-model=\'new_user.name\' placeholder="{{i18n(\'installation.modal.new_user.name\')}}" required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'newUserForm.invalid &amp;&amp; newUserForm.user_name.$invalid\'>!</div>\n        </div>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' id=\'user_surname\' maxlength=\'30\' name=\'user_surname\' ng-model=\'new_user.surname\' placeholder="{{i18n(\'installation.modal.new_user.surname\')}}" required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'newUserForm.invalid &amp;&amp; newUserForm.user_surname.$invalid\'>!</div>\n        </div>\n        <div class=\'form__input\'>\n          <input class=\'form__input\' id=\'user_email\' maxlength=\'50\' name=\'user_email\' ng-model=\'new_user.email\' ng-pattern=\'emailFormat\' placeholder="{{i18n(\'installation.modal.new_user.email\')}}" required=\'\' type=\'email\'>\n          <div class=\'input--error\' ng-show=\'newUserForm.invalid &amp;&amp; newUserForm.user_email.$invalid\'>!</div>\n        </div>\n        <div class=\'form__input\'>\n          <div class=\'switchBtn\'>\n            <input class=\'switchBtn-checkbox\' ng-click=\'changeState()\' ng-model=\'type\' type=\'checkbox\'>\n            <span class=\'switchBtn-inner\'>\n              {{i18n(\'users.advanced\')}}\n            </span>\n            <span class=\'switchBtn-switch\'>\n              {{i18n(\'users.basic\')}}\n            </span>\n          </div>\n        </div>\n        <!-- error messages -->\n        <div class=\'form__error\' ng-show=\'newUserForm.invalid\'>\n          <div ng-show=\'newUserForm.user_name.$error.required\'>\n            {{ i18n(\'installation.modal.new_user.name_blank\') }}\n          </div>\n          <div ng-show=\'newUserForm.user_surname.$error.required\'>\n            {{ i18n(\'installation.modal.new_user.surname_blank\') }}\n          </div>\n          <div ng-show=\'newUserForm.user_email.$error.required\'>\n            {{ i18n(\'installation.modal.new_user.email_blank\') }}\n          </div>\n          <div ng-show=\'newUserForm.user_email.$error.email || newUserForm.user_email.$error.pattern\'>\n            {{i18n(\'messages.errors.email\')}}\n          </div>\n        </div>\n        <!-- buttons -->\n        <div class=\'form__buttons\'>\n          <a class=\'btn btn--primary\' id=\'confirm_new_user_button\' ng-click=\'buttons.newUserForm || submitNewUserForm()\'>\n            {{ i18n(\'buttons.accept\') }}\n          </a>\n          <a class=\'btn\' id=\'cancel_new_user\' ng-click=\'cancelNewUser()\'>\n            {{ i18n(\'buttons.cancel\') }}\n          </a>\n        </div>\n      </div>\n    </form>\n    <section class=\'modal__section modal__adjust__help ng-scope ng-hide\' ng-show=\'showHelp\'>\n      <div class=\'modal__adjust__help__title\' ng-show="link == \'users\'">\n        {{i18n(\'installation.modal.help.users\')}}\n      </div>\n      <div class=\'modal__adjust__help__description\' ng-show="link == \'users\'">\n        {{i18n(\'installation.modal.help.users_text\')}}\n      </div>\n    </section>\n  </form>\n</section>\n<div class=\'modal__message\' id=\'error_new_user\' ng-show=\'taken_error\'>\n  <!-- Message Error ---------------------------------------------------------------- -->\n  <div class=\'modal__message\'>\n    <!-- Message -->\n    <div class=\'modal__message__content\'>\n      <i class=\'icon icon-cancel\'></i>\n      {{ i18n(\'messages.errors.user_taken\') }}\n    </div>\n    <!-- confirm button -->\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn btn--primary\' href=\'\' id=\'cancel_taken\' ng-click=\'cancelUserTaken()\'>\n        {{ i18n(\'buttons.accept\') }}\n      </a>\n    </div>\n  </div>\n</div>\n<!-- Disable Permission Device Message --------------------------------------------------- -->\n<div class=\'modal__message\' ng-show=\'show_disabled_permission_device\'>\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{ i18n(\'messages.title.device_permissions\') }}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{ i18n(\'messages.info.disable_permission_device\') }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' ng-click=\'show_permissions(ir_selected)\'>\n      {{ i18n(\'buttons.accept\') }}\n    </a>\n  </div>\n</div>\n<section id=\'confirm_remove\' ng-show=\'show_confirm_user\'>\n  <div class=\'modal__message\'>\n    <!-- Title -->\n    <div class=\'modal__message__title\'>\n      {{ i18n(\'messages.title.remove_user_confirm\') }}\n    </div>\n    <!-- Message -->\n    <div class=\'modal__message__content\'>\n      <i class=\'icon icon-cancel\'></i>\n      {{ i18n(\'messages.success.remove_user_confirmation\') }}\n    </div>\n    <!-- confirm button -->\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn\' id=\'cancel_user_confirm\' ng-click=\'cancelUserConfirm()\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </a>\n      <a class=\'btn btn--primary\' id=\'confirm_remove_user_button\' ng-click=\'buttons.removeConfirmUser || removeConfirmUser()\'>\n        {{ i18n(\'buttons.accept\') }}\n      </a>\n    </div>\n  </div>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('edit_installation.html', '<lazy-load installation=\'editInstallation\' message-server=\'messageServer\'></lazy-load>\n<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content adjust\' ng-show=\'!show_success &amp;&amp; !show_confirm  &amp;&amp; !messageServer\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{i18n(\'installation.modal.links.adjust\')}}\n    </div>\n  </header>\n  <!-- Form - Ajustes de Control -->\n  <form class=\'form\' name=\'editInstallationForm\' novalidate=\'\'>\n    <div class=\'form__row\'>\n      <!-- Nombre de la instalación -->\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.name\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <input class=\'form__input\' id=\'edit_name_inst\' maxlength=\'30\' name=\'name\' ng-model=\'editInstallation.name\' placeholder="{{i18n(\'add_installation.name_placeholder\') }}" required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'editInstallationForm.invalid &amp;&amp; editInstallationForm.name.$invalid\'>!</div>\n        </div>\n      </div>\n      <!-- Tipo de instalación -->\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.type\')}}\n          <a class=\'btn table-adjust__property__btn\' id=\'type_inst\' ng-click=\'toggleInstallationType()\'>\n            {{i18n(\'installation.modal.type_\' + editInstallation.type)}}\n          </a>\n        </div>\n        <div class=\'table-adjust__options\' ng-class="{\'show\': show_types}">\n          <a class=\'btn\' id=\'home_type\' ng-class="{\'select\': installation.type == \'home\'}" ng-click="selectInstallationType( \'home\' )">\n            {{i18n(\'installation.modal.type_home\')}}\n          </a>\n          <a class=\'btn\' id=\'commercial_type\' ng-class="{\'select\': installation.type == \'commercial\'}" ng-click="selectInstallationType( \'commercial\' )">\n            {{i18n(\'installation.modal.type_commercial\')}}\n          </a>\n          <a class=\'btn\' id=\'business_type\' ng-class="{\'select\': installation.type == \'business\'}" ng-click="selectInstallationType( \'business\' )">\n            {{i18n(\'installation.modal.type_business\')}}\n          </a>\n          <a class=\'btn\' id=\'others_type\' ng-class="{\'select\': installation.type == \'others\'}" ng-click="selectInstallationType( \'others\' )">\n            {{i18n(\'installation.modal.type_others\')}}\n          </a>\n        </div>\n      </div>\n      <!-- Icono -->\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.icon\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <a class=\'icon-btn\' id=\'select_icon\' ng-click=\'togglePropertyIcon()\'>\n            <i class=\'icon icon-build{{editInstallation.icon}}\'></i>\n          </a>\n        </div>\n        <div class=\'table-adjust__options__custom\' ng-class="{\'show\' : propertyIcon}">\n          <a class=\'btn-group icon-btn\' ng-class="{\'select\': editInstallation.icon == \'1\'}" ng-click=\'setInstallationIcon(1)\'>\n            <i class=\'icon icon-build1\'></i>\n          </a>\n          <a class=\'btn-group icon-btn\' ng-class="{\'select\': editInstallation.icon == \'2\'}" ng-click=\'setInstallationIcon(2)\'>\n            <i class=\'icon icon-build2\'></i>\n          </a>\n          <a class=\'btn-group icon-btn\' ng-class="{\'select\': editInstallation.icon == \'3\'}" ng-click=\'setInstallationIcon(3)\'>\n            <i class=\'icon icon-build3\'></i>\n          </a>\n          <a class=\'btn-group icon-btn\' ng-class="{\'select\': editInstallation.icon == \'4\'}" ng-click=\'setInstallationIcon(4)\'>\n            <i class=\'icon icon-build4\'></i>\n          </a>\n          <a class=\'btn-group icon-btn\' ng-class="{\'select\': editInstallation.icon == \'5\'}" ng-click=\'setInstallationIcon(5)\'>\n            <i class=\'icon icon-build5\'></i>\n          </a>\n        </div>\n      </div>\n      <!-- Localización de la instalación -->\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.location\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <input class=\'form__input\' id=\'searchTextField\' maxlength=\'50\' name=\'location\' ng-model=\'editInstallation.complete_name\' placeholder="{{i18n(\'add_installation.location_placeholder\') }}" required=\'\' type=\'text\'>\n          <div class=\'input--error\' ng-show=\'editInstallationForm.invalid &amp;&amp; editInstallationForm.location.$invalid\'>!</div>\n        </div>\n      </div>\n      <!-- CP -->\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.postal_code\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <input class=\'form__input\' id=\'postal_code_inst\' maxlength=\'10\' name=\'postal_code\' ng-model=\'editInstallation.postal_code\' placeholder="{{i18n(\'installation.modal.postal_code\')}}" type=\'text\'>\n        </div>\n      </div>\n      <!-- Datos del instalador -->\n      <div class=\'table-adjust__subtitle\'>\n        {{i18n(\'installation.modal.installer\')}}\n      </div>\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.installer_name\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <input class=\'form__input\' id=\'inst_name\' name=\'ins_name\' ng-model=\'editInstallation.installer_name\' placeholder="{{i18n(\'edit_installation.installator.name\') }}" type=\'text\'>\n        </div>\n      </div>\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.installer_phone\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <input class=\'form__input\' id=\'inst_phone\' name=\'ins_phone\' ng-model=\'editInstallation.installer_phone\' placeholder="{{i18n(\'edit_installation.installator.phone\') }}" type=\'text\'>\n        </div>\n      </div>\n      <div class=\'table-adjust__row\'>\n        <div class=\'table-adjust__property\'>\n          {{i18n(\'installation.modal.installer_email\')}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <input class=\'form__input lowercase\' id=\'inst_email\' name=\'ins_email\' ng-model=\'editInstallation.installer_email\' placeholder="{{i18n(\'edit_installation.installator.email\') }}" type=\'text\'>\n        </div>\n      </div>\n      <!-- Listado de Equipos -->\n      <div class=\'table-adjust__subtitle\'>\n        {{ i18n(\'add_device.add_device\') }}\n      </div>\n      <div class=\'table-adjust__row\' id=\'edit_installation.devices\' ng-click=\'showModalAdjust(device)\' ng-repeat=\'device in editInstallation.devices\'>\n        <div class=\'table-adjust__property\'>\n          {{device.name}}\n        </div>\n        <div class=\'table-adjust__value\'>\n          <a class=\'icon-btn\' id=\'remove_device_{{device.id}}\'>\n            <i class=\'icon icon-adjust\'></i>\n          </a>\n        </div>\n      </div>\n      <!-- error messages -->\n      <div class=\'form__error\' ng-show=\'editInstallationForm.invalid\'>\n        <div ng-show=\'editInstallationForm.name.$error.required\'>\n          {{ i18n(\'installation.modal.name_error\') }}\n        </div>\n        <div ng-show=\'editInstallationForm.location.$error.required\'>\n          {{ i18n(\'installation.modal.location_error\') }}\n        </div>\n      </div>\n      <div class=\'form__buttons\'>\n        <a class=\'btn btn--primary extraMargin\' id=\'save_installation\' ng-click=\'buttons.saveEdit || submitInstallationForm()\'>\n          {{i18n(\'installation.modal.save\')}}\n        </a>\n        <a class=\'btn btn--delete\' id=\'remove_installation\' ng-click=\'confirmRemoveInstallation()\'>\n          {{i18n(\'installation.modal.remove\')}}\n        </a>\n        <a class=\'btn\' id=\'cancel\' ui-sref=\'home.installations\'>\n          {{i18n(\'installation.modal.cancel\')}}\n        </a>\n      </div>\n    </div>\n  </form>\n</section>\n<!-- Update Messages --------------------------------------------------- -->\n<div class=\'modal__message\' ng-show=\'show_success\'>\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{ i18n(\'messages.title.user_device_updated\') }}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{ i18n(\'messages.success.user_device_updated\') }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' ui-sref=\'home.installations\'>\n      {{ i18n(\'buttons.accept\') }}\n    </a>\n  </div>\n</div>\n<section class=\'modal__section modal__adjust__help ng-scope ng-hide\' ng-show=\'showHelp\'>\n  <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.name\')}}\n  </div>\n  <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.name_text\')}}\n  </div>\n  <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.type\')}}\n  </div>\n  <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.type_text\')}}\n  </div>\n  <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.location\')}}\n  </div>\n  <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.location_text\')}}\n  </div>\n  <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.icon\')}}\n  </div>\n  <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.icon_text\')}}\n  </div>\n  <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.postal_code\')}}\n  </div>\n  <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.postal_code_text\')}}\n  </div>\n  <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.installer\')}}\n  </div>\n  <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n    {{i18n(\'installation.modal.help.installer_text\')}}\n  </div>\n</section>\n<section id=\'confirm_remove\' ng-show=\'show_confirm\'>\n  <div class=\'modal__message\'>\n    <!-- Title -->\n    <div class=\'modal__message__title\'>\n      {{ i18n(\'messages.title.remove_installation_confirm\') }}\n    </div>\n    <!-- Message -->\n    <div class=\'modal__message__content\'>\n      <i class=\'icon icon-cancel\'></i>\n      {{ i18n(\'messages.success.remove_installation_confirmation\') }}\n    </div>\n    <!-- confirm button -->\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn\' id=\'cancel_confirm\' ng-click=\'cancelConfirm()\'>\n        {{ i18n(\'buttons.cancel\') }}\n      </a>\n      <a class=\'btn btn--primary\' id=\'confirm_remove_button\' ng-click=\'buttons.removeInstallation || removeInstallation()\'>\n        {{ i18n(\'buttons.accept\') }}\n      </a>\n    </div>\n  </div>\n</section>\n<section class=\'modal_message\' id=\'error_new_user\' ng-show=\'taken_error\'>\n  <!-- Message Error ---------------------------------------------------------------- -->\n  <div class=\'modal__message\'>\n    <!-- Message -->\n    <div class=\'modal__message__content\'>\n      <i class=\'icon icon-cancel\'></i>\n      {{ i18n(\'messages.errors.user_taken\') }}\n    </div>\n    <!-- confirm button -->\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn btn--primary\' href=\'\' id=\'cancel_taken\' ng-click=\'cancelUserTaken()\'>\n        {{ i18n(\'buttons.accept\') }}\n      </a>\n    </div>\n  </div>\n</section>\n<!-- Message Error ---------------------------------------------------------------- -->\n<div class=\'modal__message\' ng-show="messageServer == \'errorServer\'">\n  <!-- Title -->\n  <div class=\'modal__message__title\'>\n    {{ i18n( \'installation_relation_list.internal_error\' ) }}\n  </div>\n  <!-- Message -->\n  <div class=\'modal__message__content\'>\n    {{ i18n( \'installation_relation_list.internal_error_message\' ) }}\n  </div>\n  <!-- confirm button -->\n  <div class=\'modal__message__buttons\'>\n    <a class=\'btn btn--primary\' ng-click=\'messageServer = false\'>\n      {{ i18n( \'buttons.accept\' ) }}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('help.html', 'Ayuda')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('home.html', '<!-- Header -->\n<header class=\'header\' ng-class="{\'showMenu\': $root.menuTrigger}">\n  <input class=\'navigation__trigger\' id=\'navigation__trigger\' ng-model=\'$root.menuTrigger\' ng-show=\'$root.showMenuBtn\' type=\'checkbox\'>\n  <label for=\'navigation__trigger\' ng-show=\'$root.showMenuBtn\'>\n    <i class=\'icon icon-menu\'></i>\n  </label>\n  <div class=\'header__logo\'>\n    <a class=\'header__logo__item\' href=\'#\'>\n      <img alt=\'airzone logo\' ng-src=\'assets/daikinLogo.png\'>\n    </a>\n  </div>\n  <!-- Top Bar Climate Mobile Device ------------------------------------------------ -->\n  <a class=\'link climate-mini\' ng-click=\'show_climate = !show_climate\' ng-show=\'show_climate_info\'>\n    <div class=\'climate-mini-close\' ng-if=\'current_spot_name\' ng-show=\'!show_climate\'>\n      {{ current_temp }}º\n      <i class=\'icon\' ng-class=\'current_weather_icon\'></i>\n      <div class=\'climate-mini-location\'>\n        {{ current_spot_name }}\n      </div>\n    </div>\n    <div class=\'climate-mini-open\' ng-show=\'show_climate\'>\n      {{ i18n( \'buttons.hide\' ) }}\n    </div>\n  </a>\n  <a class=\'link edit-server__btn\' href=\'\' id=\'edit_installation_poket\' ng-click=\'toggleEditInstallations()\' ng-if=\'show_edit_servers_btn\'>\n    {{ editInstallation ? i18n( \'list_installations.close\' ) : i18n( \'list_installations.edit\' ) }}\n  </a>\n</header>\n<!-- Navigation -->\n<nav class=\'navigation\' id=\'menu\' ng-class="{\'showMenu\': $root.menuTrigger, \'iphonex__menu\': device_iphone_x}">\n  <div class=\'navigation__content\' ng-show="typeOfUser( \'basic\' ) || typeOfUser( \'demo\' )">\n    <a class=\'link navigation__item\' id=\'installations_menu_button\' ui-sref-active=\'active\' ui-sref=\'home.installations\'>\n      <i class=\'icon icon-server\'></i>\n      {{i18n( \'home.menu.installations\' )}}\n    </a>\n    <a class=\'link navigation__item\' id=\'adjusts_menu_button\' ui-sref-active=\'active\' ui-sref=\'home.adjust\'>\n      <i class=\'icon icon-user\'></i>\n      {{i18n( \'home.menu.adjusts\' )}}\n    </a>\n    <a class=\'link navigation__item\' id=\'installations_menu_button\' ui-sref-active=\'active\' ui-sref=\'home.support\'>\n      <i class=\'icon icon-configure\'></i>\n      {{i18n( \'home.menu.support\' )}}\n    </a>\n    <a class=\'link navigation__item\' href=\'\' id=\'exit_menu_button\' ng-click=\'logout()\'>\n      <i class=\'icon icon-logout\'></i>\n      {{i18n( \'home.menu.exit\' )}}\n    </a>\n  </div>\n  <div class=\'navigation__content\' ng-if=\'!isMobile\' ng-show="typeOfUser( \'admin\' ) || typeOfUser(\'super_admin\')">\n    <a class=\'link navigation__item\' id=\'admin_menu_button\' ui-sref-active=\'active\' ui-sref=\'home.admin\'>\n      <i class=\'icon icon-server\'></i>\n      {{i18n( \'home.menu.admin\' )}}\n    </a>\n    <a class=\'link navigation__item\' id=\'admin_users_button\' ui-sref-active=\'active\' ui-sref=\'home.admin_users\'>\n      <i class=\'icon icon-user\'></i>\n      {{i18n( \'home.menu.admin_users\' )}}\n    </a>\n    <a class=\'link navigation__item\' id=\'admin_adjusts_menu_button\' ui-sref-active=\'active\' ui-sref=\'home.adminAdjust\'>\n      <i class=\'icon icon-configure\'></i>\n      {{i18n( \'home.menu.admins\' )}}\n    </a>\n    <a class=\'link navigation__item\' href=\'\' id=\'exit_menu_button\' ng-click=\'logout()\'>\n      <i class=\'icon icon-logout\'></i>\n      {{i18n( \'home.menu.exit\' )}}\n    </a>\n  </div>\n</nav>\n<div class=\'navigation-overlay\' ng-click=\'$root.menuTrigger = false\'></div>\n<div class=\'main pageTransition\' ng-class="{\'menu-trigger\': $root.menuTrigger, \'modalShow\': modalShow, \'zonaView\': deviceView, \'hidden__overflow__y\': hidden_overflow}" ui-view=\'\'></div>\n<!-- / Modals -->\n<outside-modals></outside-modals>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('init.html', '<!--[if lt IE 9]>\n  <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>\n<![endif]-->\n<div class=\'login\'>\n  <!-- Logo -->\n  <div class=\'login__logo\'>\n    <img alt=\'airzone logo\' class=\'login__logo__img\' ng-src=\'assets/daikinLogo.png\'>\n  </div>\n  <div class=\'login__container\' ui-view=\'\'></div>\n  <div class=\'login__app\' ng-hide=\'info_hide\'>\n    <a class=\'link login__app__link\' href=\'https://itunes.apple.com/es/app/dkn-cloud/id999311567\'>\n      <img alt=\'apple store\' ng-src=\'assets/appleStore.png\'>\n    </a>\n    <a class=\'link login__app__link\' href=\'https://play.google.com/store/apps/details?id=es.altra.dkn\'>\n      <img alt=\'google play\' ng-src=\'assets/googlePlay.png\'>\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('login.html', '<!-- Login password ------------------------------------------------------------- -->\n<div class=\'login-acount\' ng-show="state == \'login\'">\n  <!-- Remember password -->\n  <a class=\'login__form__remember\' href=\'\' ng-click="state = \'password\'">\n    {{ i18n(\'login.restore_password\') }}\n  </a>\n  <!-- Form -->\n  <form class=\'login__form\' name=\'loginForm\' novalidate=\'\'>\n    <div class=\'login__form__row\' data-ng-init=\'init()\'>\n      <div class=\'login__form__input\'>\n        <input maxlength=\'50\' name=\'email\' ng-model=\'login.email\' placeholder="{{i18n(\'email\')}}" required=\'\' type=\'email\'>\n        <div class=\'login__input--error\' ng-show=\'loginForm.invalid &amp;&amp; loginForm.email.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input maxlength=\'50\' name=\'password\' ng-model=\'login.password\' placeholder="{{i18n(\'password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'loginForm.invalid &amp;&amp; loginForm.password.$invalid\'>!</div>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'loginForm.invalid\'>\n      <div ng-show=\'login_error\'>\n        {{i18n(\'messages.errors.login\')}}\n      </div>\n      <div ng-show=\'loginForm.email.$error.required\'>\n        {{i18n(\'messages.errors.email_blank\')}}\n      </div>\n      <div ng-show=\'loginForm.email.$dirty &amp;&amp; loginForm.email.$error.email\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'loginForm.password.$error.required\'>\n        {{i18n(\'messages.errors.password_blank\')}}\n      </div>\n    </div>\n    <div class=\'form__error\' ng-show=\'email_confirmed\'>\n      <div>\n        {{i18n(\'messages.success.confirmed\')}}\n      </div>\n    </div>\n    <!-- send button -->\n    <input class=\'btn btn--primary login__form__btn--send\' ng-click=\'submitLoginForm()\' type=\'submit\' value="{{i18n(\'buttons.sign_in\')}}">\n  </form>\n  <!-- router button -->\n  <a class=\'btn login__form__btn--demo\' href=\'\' id=\'router_button\' ng-if=\'eolo\' ui-sref=\'association\'>\n    {{i18n(\'login.router\')}}\n  </a>\n  <!-- register button -->\n  <a class=\'btn login__form__btn--register\' ng-click=\'goRegister()\'>\n    {{i18n(\'register.sign_up\')}}\n  </a>\n  <!-- demo button -->\n  <a class=\'btn login__form__btn--demo\' href=\'\' id=\'demo_button\' ng-click=\'submitDemoform()\'>\n    {{i18n(\'login.demo\')}}\n  </a>\n</div>\n<!-- Success Register ----------------------------------------------------------- -->\n<div class=\'login__message--success\' ng-show="state == \'unconfirmed\'">\n  <div class=\'login__message__title\'>\n    {{i18n(\'messages.errors.unconfirmed\')}}\n  </div>\n  <!-- Message -->\n  <div class=\'login__message__content\'>\n    {{i18n(\'messages.info.unconfirmed\')}}\n  </div>\n  <!-- success button -->\n  <a class=\'btn btn--primary login__form__btn--success\' href=\'\' ui-sref=\'init.confirmation\'>\n    {{i18n(\'buttons.resend_confirmation\')}}\n  </a>\n</div>\n<!-- Change password ------------------------------------------------------------ -->\n<div class=\'change_password\' ng-show="state == \'password\'">\n  <!-- Title -->\n  <div class=\'login__title\'>\n    {{i18n(\'messages.title.reset_password\')}}\n  </div>\n  <!-- Form -->\n  <form class=\'login__form\' name=\'passwordForm\' ng-show=\'!reset_success\' novalidate=\'\'>\n    <div class=\'login__form__row\'>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' name=\'email\' ng-model=\'password.email\' placeholder="{{i18n(\'email\')}}" required=\'\' type=\'email\'>\n        <div class=\'login__input--error\' ng-show=\'passwordForm.invalid &amp;&amp; passwordForm.email.$invalid\'>!</div>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'passwordForm.invalid\'>\n      <div ng-show=\'password_error\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'passwordForm.email.$error.required\'>\n        {{i18n(\'messages.errors.email_blank\')}}\n      </div>\n      <div ng-show=\'passwordForm.email.$dirty &amp;&amp; passwordForm.email.$error.email\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'email_not_exist_error\'>\n        {{i18n(\'messages.errors.email_not_exist\')}}\n      </div>\n    </div>\n    <!-- send button -->\n    <input class=\'btn btn--primary login__form__btn--send\' ng-click=\'submitPasswordForm()\' type=\'submit\' value="{{i18n(\'buttons.send\')}}">\n    <!-- Message -->\n    <div class=\'login__message\'>\n      {{i18n(\'messages.info.send_reset_password\')}}\n    </div>\n  </form>\n  <!-- cancel button -->\n  <a class=\'btn login__form__btn--cancel\' href=\'\' ng-click=\'reloadLogin()\'>\n    {{i18n(\'buttons.cancel\')}}\n  </a>\n</div>\n<!-- Success Message ------------------------------------------------------------ -->\n<div class=\'login__message--success\' ng-show="state == \'reset_success\'">\n  <!-- Title -->\n  <div class=\'login__message__title\'>\n    {{i18n(\'messages.info.has_email\')}}\n  </div>\n  <!-- Message -->\n  <div class=\'login__message__content\'>\n    {{i18n(\'messages.success.send_reset_password\')}}\n  </div>\n  <!-- success button -->\n  <a class=\'btn btn--primary login__form__btn--success\' href=\'\' ng-click="state = \'login\'">\n    {{i18n(\'messages.info.go_login\')}}\n  </a>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('maintenance.html', '<div class=\'page-error\'>\n  <div class=\'page-maintenance__title\'>\n    {{ i18n(\'home.maintenance.title\') }}\n  </div>\n  <div class=\'page-maintenance__description\'>\n    {{ i18n(\'home.maintenance.description\') }}\n  </div>\n  <div class=\'maintenance__container\'>\n    {{ i18n(\'home.maintenance.text\') }}\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('modal_alert_installer.html', '<div class=\'ng-modal\' id=\'alert_installer_modal\' ng-show=\'show_modal_alert_installer\'>\n  <div class=\'ng-modal-overlay\' ng-click=\'hideModal()\'></div>\n  <div class=\'ng-modal-dialog modal__adjust\' ng-style=\'dialogStyle\'>\n    <div class=\'ng-modal-action-bar\'>\n      <a class=\'link ng-modal-close\' id=\'close_config_device\' ng-click=\'hideModal()\'>\n        {{i18n(\'buttons.exit\')}}\n      </a>\n    </div>\n    <div class=\'ng-modal-dialog-content\'>\n      <header class=\'modal__header installer__contact__header\'>\n        {{i18n(\'devices.alert_installer_modal.installer_params\')}}\n      </header>\n      <section class=\'modal__section\' ng-show=\'!show_email &amp;&amp; (device_alert_installer_target.installation.installer_email || device_alert_installer_target.installation.installer_phone)\'>\n        <div class=\'installer__contact__title\'>\n          {{i18n(\'devices.warnings.installer\')}}\n        </div>\n        <div class=\'installer__contact__name\'>\n          <div>{{device_alert_installer_target.installation.installer_name}}</div>\n          <div>{{device_alert_installer_target.installation.installer_email}}</div>\n          <div>{{device_alert_installer_target.installation.installer_phone}}</div>\n        </div>\n        <div class=\'installer__contact__title\'>\n          {{i18n(\'buttons.contact\')}}\n        </div>\n        <div class=\'installer__contact__buttons\'>\n          <a class=\'btn installer__contact__buttons__item\' href=\'tel://{{device_alert_installer_target.installation.installer_phone}}\' id=\'contact_button\' ng-show=\'device_alert_installer_target.installation.installer_phone &amp;&amp; isMobile\'>\n            <i class=\'icon icon-phone1\'></i>\n          </a>\n          <a class=\'btn installer__contact__buttons__item mail\' id=\'mail_button\' ng-click=\'toggleShowEmail()\' ng-show=\'device_alert_installer_target.installation.installer_email\'>\n            <i class=\'icon icon-mail\'></i>\n          </a>\n        </div>\n      </section>\n      <section class=\'modal__section\' ng-show=\'!device_alert_installer_target.installation.installer_email &amp;&amp; !device_alert_installer_target.installation.installer_phone\'>\n        <div class=\'installer__contact__error\'>\n          {{i18n(\'devices.alert_installer_modal.no_email\')}}\n        </div>\n        <div class=\'form__buttons\'>\n          <div class=\'btn\' ng-click=\'close()\'>\n            {{ i18n(\'buttons.cancel\') }}\n          </div>\n        </div>\n      </section>\n      <section class=\'modal__section\' ng-show=\'show_email &amp;&amp; !showSuccess\'>\n        <div class=\'installer__contact__title\'>\n          {{i18n(\'devices.alert_installer_modal.user_params\')}}\n        </div>\n        <form class=\'form\' id=\'installer_form\' name=\'alertInstallerForm\' novalidate=\'\'>\n          <div class=\'form__input\'>\n            <input class=\'form__input\' id=\'name_user\' name=\'name\' ng-model=\'installer.user_name\' placeholder="{{i18n(\'devices.alert_installer_modal.name_placeholder\') }}" required=\'\' type=\'text\'>\n            <div class=\'input--error\' ng-show=\'alertInstallerForm.invalid &amp;&amp; alertInstallerForm.name.$invalid\'>!</div>\n          </div>\n          <div class=\'form__input\'>\n            <input class=\'form__input\' id=\'phone_user\' name=\'phone\' ng-model=\'installer.user_phone\' placeholder="{{i18n(\'devices.alert_installer_modal.phone_placeholder\') }}" required=\'\' type=\'text\'>\n            <div class=\'input--error\' ng-show=\'alertInstallerForm.invalid &amp;&amp; alertInstallerForm.phone.$invalid\'>!</div>\n          </div>\n          <!-- error messages -->\n          <div class=\'form__error\' ng-show=\'alertInstallerForm.invalid\'>\n            <div id=\'error_name_alert\' ng-show=\'alertInstallerForm.name.$error.required\'>\n              {{ i18n(\'devices.alert_installer_modal.error.name\') }}\n            </div>\n            <div id=\'error_phone_alert\' ng-show=\'alertInstallerForm.phone.$error.required\'>\n              {{ i18n(\'devices.alert_installer_modal.error.phone\') }}\n            </div>\n          </div>\n          <!-- buttons -->\n          <div class=\'form__buttons\'>\n            <a class=\'btn btn--primary extraMargin\' id=\'send_alert\' ng-click=\'submitSendInstallerForm()\'>\n              {{ i18n(\'devices.alert_installer_modal.send_button\') }}\n            </a>\n            <div class=\'btn\' id=\'close_alert_modal\' ng-click=\'toggleShowEmail()\'>\n              {{ i18n(\'buttons.cancel\') }}\n            </div>\n          </div>\n        </form>\n      </section>\n      <section id=\'confirm_accept\' ng-show=\'showSuccess &amp;&amp; !showHelp\'>\n        <!-- Title -->\n        <!-- .modal__message__title -->\n        <!-- {{ i18n(\'devices.alert_installer_modal.success_title\') }} -->\n        <!-- Message -->\n        <div class=\'installer__contact__success\'>\n          <i class=\'icon icon-success\'></i>\n          {{ i18n(\'devices.alert_installer_modal.success_message\') }}\n        </div>\n        <!-- confirm button -->\n        <div class=\'form__buttons\'>\n          <a class=\'btn\' id=\'accept_confirm\' ng-click=\'close()\'>\n            {{ i18n(\'buttons.accept\') }}\n          </a>\n        </div>\n      </section>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('modal_config_device.html', '<div class=\'ng-modal\' id=\'device_config_modal\' ng-show=\'show_modal_config_device\'>\n  <div class=\'ng-modal-overlay\' ng-click=\'hideModal()\'></div>\n  <div class=\'ng-modal-dialog modal__adjust\' ng-style=\'dialogStyle\'>\n    <div class=\'ng-modal-action-bar\' ng-show=\'!show_confirm &amp;&amp; !show_success\'>\n      <a class=\'link ng-modal-close\' id=\'close_config_device\' ng-click=\'hideModal()\'>\n        {{i18n(\'buttons.exit\')}}\n      </a>\n      <a class=\'link ng-modal-help\' ng-click=\'showHelp = true\' ng-show=\'showHelp == false\'>\n        {{i18n(\'buttons.help\')}}\n      </a>\n      <a class=\'link ng-modal-help\' ng-click=\'showHelp = false\' ng-show=\'showHelp == true\'>\n        {{i18n(\'buttons.back\')}}\n      </a>\n    </div>\n    <!-- Form -->\n    <form class=\'form\' id=\'installation_form\' name=\'addInstallationForm\' ng-show=\'show_new_installation\' novalidate=\'\'>\n      <!-- / Inicialmente no debe verse, solo se mostrará al hacer click en el botón de -->\n      <!-- / "añadir instalación", para mostrarlo añadir la clase ".show" -->\n      <div class=\'form__row form__add__installation show\'>\n        <div class=\'form__label\'>\n          {{ i18n(\'add_installation.add_installation\') }}\n        </div>\n        <div class=\'form__row\'>\n          <div class=\'form__input\'>\n            <input class=\'form__input\' id=\'name_installation\' maxlength=\'50\' name=\'name\' ng-model=\'installation.name\' placeholder="{{i18n(\'add_installation.name_placeholder\') }}" required=\'\' type=\'text\'>\n            <div class=\'input--error\' ng-show=\'addInstallationForm.invalid &amp;&amp; addInstallationForm.name.$invalid\'>!</div>\n          </div>\n          <div class=\'form__input\'>\n            <input class=\'form__input\' id=\'searchTextField2\' maxlength=\'30\' name=\'location\' ng-model=\'installation.location\' placeholder="{{i18n(\'add_installation.location_placeholder\') }}" required=\'\' type=\'text\'>\n            <div class=\'input--error\' ng-show=\'addInstallationForm.invalid &amp;&amp; addInstallationForm.location.$invalid\'>!</div>\n          </div>\n          <div class=\'form__input\'>\n            <input class=\'form__input\' id=\'cp_installation\' maxlength=\'10\' name=\'postal_code\' ng-model=\'installation.postal_code\' placeholder="{{i18n(\'add_installation.postal_code_placeholder\') }}" type=\'text\'>\n            <div class=\'input--error\' ng-show=\'addInstallationForm.invalid &amp;&amp; addInstallationForm.location.$invalid\'>!</div>\n          </div>\n        </div>\n        <div class=\'form__label\'>\n          {{ i18n(\'buttons.icon\') }}\n        </div>\n        <div class=\'form__row\'>\n          <div class=\'form__radio-icon\'>\n            <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'1\'>\n            <label>\n              <i class=\'icon icon-build1\'></i>\n            </label>\n          </div>\n          <div class=\'form__radio-icon\'>\n            <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'2\'>\n            <label>\n              <i class=\'icon icon-build2\'></i>\n            </label>\n          </div>\n          <div class=\'form__radio-icon\'>\n            <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'3\'>\n            <label>\n              <i class=\'icon icon-build3\'></i>\n            </label>\n          </div>\n          <div class=\'form__radio-icon\'>\n            <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'6\'>\n            <label>\n              <i class=\'icon icon-build6\'></i>\n            </label>\n          </div>\n          <div class=\'form__radio-icon\'>\n            <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'4\'>\n            <label>\n              <i class=\'icon icon-build4\'></i>\n            </label>\n          </div>\n          <div class=\'form__radio-icon\'>\n            <input class=\'radio-icon\' name=\'icon\' ng-model=\'installation.icon\' required=\'\' type=\'radio\' value=\'5\'>\n            <label>\n              <i class=\'icon icon-build5\'></i>\n            </label>\n          </div>\n        </div>\n        <div class=\'form__label\'>\n          {{ i18n(\'add_installation.type\') }}\n        </div>\n        <!-- Tipo de instalación -->\n        <div class=\'relative float-left\'>\n          <a class=\'btn table-adjust__property__btn\' id=\'type_inst\' ng-click=\'show_types = !show_types\'>\n            {{i18n(\'installation.modal.type_\' + installation.type)}}\n          </a>\n          <div class=\'table-adjust__options\' ng-class="{\'show\': show_types}">\n            <a class=\'btn\' id=\'home_type\' ng-class="{\'select\': installation.type == \'home\'}" ng-click="selectInstallationType( \'home\' )">\n              {{i18n(\'installation.modal.type_home\')}}\n            </a>\n            <a class=\'btn\' id=\'commercial_type\' ng-class="{\'select\': installation.type == \'commercial\'}" ng-click="selectInstallationType( \'commercial\' )">\n              {{i18n(\'installation.modal.type_commercial\')}}\n            </a>\n            <a class=\'btn\' id=\'business_type\' ng-class="{\'select\': installation.type == \'business\'}" ng-click="selectInstallationType( \'business\' )">\n              {{i18n(\'installation.modal.type_business\')}}\n            </a>\n            <a class=\'btn\' id=\'others_type\' ng-class="{\'select\': installation.type == \'others\'}" ng-click="selectInstallationType( \'others\' )">\n              {{i18n(\'installation.modal.type_others\')}}\n            </a>\n          </div>\n        </div>\n        <div class=\'clearfix\'></div>\n        <!-- error messages -->\n        <div class=\'form__error\' ng-show=\'addInstallationForm.invalid\'>\n          <div ng-show=\'addInstallationForm.name.$error.required\'>\n            {{ i18n(\'messages.errors.installation_blank\') }}\n          </div>\n          <div ng-show=\'addInstallationForm.location.$error.required\'>\n            {{ i18n(\'messages.errors.location_blank\') }}\n          </div>\n          <div ng-show=\'installation.icon == null\'>\n            {{ i18n(\'messages.errors.icon_blank\') }}\n          </div>\n        </div>\n        <!-- buttons -->\n        <div class=\'form__buttons\'>\n          <a class=\'btn btn--primary extraMargin\' id=\'save_installation\' ng-click=\'submitInstallationForm()\'>\n            {{ i18n(\'buttons.save_installation\') }}\n          </a>\n          <div class=\'btn\' ng-click=\'showNewInstallation(false)\'>\n            {{ i18n(\'buttons.cancel\') }}\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\'ng-modal-dialog-content\'>\n      <header class=\'modal__header--tab\' ng-show=\'!show_new_installation &amp;&amp; !showHelp &amp;&amp; !show_confirm &amp;&amp; !show_success\'>\n        <div class=\'modal__header--tab__link\' id=\'adjust_device_link\' ng-class="{\'select\': link == \'adjust\'}">\n          {{i18n(\'devices.adjusts.links.adjust\')}}\n        </div>\n      </header>\n      <section class=\'modal__section modal__adjust__content\' ng-show=\'!showHelp &amp;&amp; !show_new_installation &amp;&amp; !show_confirm &amp;&amp; !show_success\'>\n        <div class=\'table-adjust\'>\n          <!-- Pestaña 1 - Ajustes de Control -->\n          <div class=\'tab-content\' ng-class="{\'show\': link == \'adjust\'}">\n            <!-- Instalación -->\n            <div>\n              <div class=\'table-adjust__subtitle\'>\n                {{i18n( \'devices.adjusts.installation\')}}\n              </div>\n            </div>\n            <div>\n              <div class=\'table-adjust__row\' ng-show=\'!show_select_inst\'>\n                <div class=\'table-adjust__property\'>\n                  <i class=\'icon icon-build{{device.installation.icon}}\'></i>\n                  {{device.installation.name}} ({{device.installation.spot_name}})\n                </div>\n                <div class=\'table-adjust__value\'>\n                  <a class=\'btn\' id=\'modify_installation\' ng-click=\'show_select_inst = !show_select_inst\' ng-show=\'!show_select_inst\'>\n                    {{i18n(\'buttons.modify\')}}\n                  </a>\n                </div>\n              </div>\n              <div class=\'table-adjust__row-groups clearfix\' ng-class="{\'hide\': !show_select_inst}">\n                <div class=\'server__item\' ng-repeat=\'installation in installations\'>\n                  <a class=\'btn server__item__btn\' id=\'installation_{{installation.id}}\' ng-class="{\'select\': installation_selected.id == installation.id}" ng-click=\'installation_selected.id != installation.id ? selectInstallation(installation) : false\'>\n                    <i class=\'icon icon-build{{installation.icon}}\'></i>\n                    <div class=\'server__item__name\'>{{installation.name}}</div>\n                    <div class=\'server__item__location\'>{{installation.complete_name}}</div>\n                  </a>\n                </div>\n                <div class=\'server__item add\'>\n                  <a class=\'btn server__item__btn\' id=\'new_installation\' ng-click=\'showNewInstallation( true )\'>\n                    <i class=\'icon icon-more\'></i>\n                    <div class=\'server__item__add\'>\n                      {{ i18n(\'add_installation.add_installation\') }}\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n            <!-- Nombre del equipo -->\n            <div>\n              <div class=\'table-adjust__subtitle\'>\n                {{i18n( \'devices.adjusts.device\')}}\n              </div>\n            </div>\n            <div>\n              <div class=\'table-adjust__row\'>\n                <div class=\'table-adjust__property\'>\n                  {{i18n(\'devices.adjusts.name\')}}\n                </div>\n                <div class=\'table-adjust__value\'>\n                  <input maxlength=\'30\' name=\'deviceName\' ng-model=\'device.name\' required type=\'text\' value=\'{{device.name}}\'>\n                </div>\n              </div>\n            </div>\n            <!-- Modelo del equipo -->\n            <div>\n              <div class=\'table-adjust__row\'>\n                <div class=\'table-adjust__property\'>\n                  {{i18n(\'devices.adjusts.model_device\')}}\n                </div>\n                <div class=\'table-adjust__value\'>\n                  {{device.brand}}\n                </div>\n              </div>\n            </div>\n            <!-- Mac -->\n            <div>\n              <div class=\'table-adjust__row\'>\n                <div class=\'table-adjust__property\'>\n                  {{i18n(\'devices.adjusts.mac\')}}\n                </div>\n                <div class=\'table-adjust__value\'>\n                  {{device.mac}}\n                </div>\n              </div>\n            </div>\n            <!-- Pin -->\n            <div>\n              <div class=\'table-adjust__row\'>\n                <div class=\'table-adjust__property\'>\n                  {{i18n(\'devices.adjusts.pin\')}}\n                </div>\n                <div class=\'table-adjust__value\'>\n                  {{device.pin}}\n                </div>\n              </div>\n            </div>\n            <!-- buttons -->\n            <div class=\'form__buttons\'>\n              <a class=\'btn btn--primary extraMargin\' id=\'save\' ng-click=\'show_success = true\' ng-show=\'show_select_inst\'>\n                {{ i18n(\'buttons.save\') }}\n              </a>\n              <a class=\'btn btn--delete\' id=\'remove_installation\' ng-click=\'confirmRemoveInstallation()\'>\n                {{i18n(\'buttons.remove\')}}\n              </a>\n              <div class=\'btn\' ng-click=\'hideModal()\'>\n                {{i18n(\'buttons.cancel\')}}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <!-- Update Messages --------------------------------------------------- -->\n      <section id=\'confirm_remove\'>\n        <div class=\'modal__message\' ng-show=\'show_success\'>\n          <!-- Title -->\n          <div class=\'modal__message__title\'>\n            {{ i18n(\'messages.title.user_device_updated\') }}\n          </div>\n          <!-- Message -->\n          <div class=\'modal__message__content\'>\n            {{ i18n(\'messages.success.user_device_updated\') }}\n          </div>\n          <!-- confirm button -->\n          <div class=\'modal__message__buttons\'>\n            <a class=\'btn btn--primary\' ng-click=\'successUpdate()\'>\n              {{ i18n(\'buttons.accept\') }}\n            </a>\n          </div>\n        </div>\n      </section>\n      <section id=\'confirm_remove\' ng-show=\'show_confirm\'>\n        <div class=\'modal__message\'>\n          <!-- Title -->\n          <div class=\'modal__message__title\'>\n            {{ i18n(\'messages.title.remove_installation_confirm\') }}\n          </div>\n          <!-- Message -->\n          <div class=\'modal__message__content\' ng-if=\'remove_installation\'>\n            <i class=\'icon icon-cancel\'></i>\n            {{ i18n(\'messages.success.remove_last_device_confirmation\') }}\n          </div>\n          <div class=\'modal__message__content\' ng-if=\'!remove_installation\'>\n            <i class=\'icon icon-cancel\'></i>\n            {{ i18n(\'messages.success.remove_installation_confirmation\') }}\n          </div>\n          <!-- confirm button -->\n          <div class=\'modal__message__buttons\'>\n            <a class=\'btn\' id=\'cancel_confirm\' ng-click=\'cancelConfirm()\'>\n              {{ i18n(\'buttons.cancel\') }}\n            </a>\n            <a class=\'btn btn--primary\' id=\'confirm_remove_button\' ng-click=\'removeDeviceInstallation()\' ng-if=\'!delete_installation\'>\n              {{ i18n(\'buttons.accept\') }}\n            </a>\n            <a class=\'btn btn--primary\' id=\'confirm_remove_button\' ng-click=\'updateDeviceDeleteInstallation(device.installation_id)\' ng-if=\'delete_installation\'>\n              {{ i18n(\'buttons.accept\') }}\n            </a>\n          </div>\n        </div>\n      </section>\n      <section class=\'modal__section modal__adjust__help\' ng-show=\'showHelp\'>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.name\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.name_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.installation\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.installation_text\')}}\n        </div>\n      </section>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' id=\'device_config_modal\' ng-show=\'show_modal_config_params_device\'>\n  <div class=\'ng-modal-overlay\' ng-click=\'hideModal()\'></div>\n  <div class=\'ng-modal-dialog modal__adjust\' ng-style=\'dialogStyle\'>\n    <div class=\'ng-modal-action-bar\'>\n      <a class=\'link ng-modal-close\' id=\'close_config_device\' ng-click=\'hideModal()\'>\n        {{i18n(\'buttons.exit\')}}\n      </a>\n      <a class=\'link ng-modal-help\' ng-click=\'showHelp = true\' ng-show=\'showHelp == false\'>\n        {{i18n(\'buttons.help\')}}\n      </a>\n      <a class=\'link ng-modal-help\' ng-click=\'showHelp = false\' ng-show=\'showHelp == true\'>\n        {{i18n(\'buttons.back\')}}\n      </a>\n    </div>\n    <div class=\'ng-modal-dialog-content\'>\n      <header class=\'modal__header--tab\' ng-show=\'!showHelp\'>\n        <div class=\'modal__header--tab__link\' id=\'params_device_link\' ng-class="{\'select\': link == \'params\'}">\n          {{i18n(\'devices.adjusts.links.params\')}}\n        </div>\n      </header>\n      <section class=\'modal__section modal__adjust__content\' ng-show=\'!showHelp\'>\n        <div class=\'table-adjust\'>\n          <!-- Pestaña 1 - Parámetros de Control -->\n          <div class=\'tab-content\' ng-class="{\'show\': link == \'params\'}">\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                <i class=\'icon icon-vacant-heat\'></i>\n                {{i18n(\'installation.modal.unoccupied_min_temp\')}}\n                <div class=\'table-adjust__property__temp\'>\n                  <div class=\'tempSelector\'>\n                    <a class=\'btn tempSelector__btn\' id=\'min_temp_unoccupied_minus\' ng-click=\'minTempUnoccupiedChange(-1)\'>-</a>\n                    <span class=\'tempSelector__temp\' id=\'min_temp_unoccupied\'>{{device.min_temp_unoccupied}}º</span>\n                    <a class=\'btn tempSelector__btn\' id=\'min_temp_unoccupied_plus\' ng-click=\'minTempUnoccupiedChange(1)\'>+</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                <i class=\'icon icon-vacant-cold\'></i>\n                {{i18n(\'installation.modal.unoccupied_max_temp\')}}\n                <div class=\'table-adjust__property__temp\'>\n                  <div class=\'tempSelector\'>\n                    <a class=\'btn tempSelector__btn\' id=\'max_temp_unoccupied_minus\' ng-click=\'maxTempUnoccupiedChange(-1)\'>-</a>\n                    <span class=\'tempSelector__temp\' id=\'max_temp_unoccupied\'>{{device.max_temp_unoccupied}}º</span>\n                    <a class=\'btn tempSelector__btn\' id=\'max_temp_unoccupied_plus\' ng-click=\'maxTempUnoccupiedChange(1)\'>+</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                <i class=\'icon icon-sleep\'></i>\n                {{i18n(\'devices.adjusts.sleep\')}}\n                <div class=\'table-adjust__property__temp\'>\n                  <!-- / valores de 30\' a 120\' en saltos de 10\' -->\n                  <div class=\'tempSelector\'>\n                    <a class=\'btn tempSelector__btn\' id=\'sleep_installation_minus\' ng-click=\'sleepTimeChange(-1)\'>-</a>\n                    <span class=\'tempSelector__temp\' id=\'sleep_installation\'>{{device.sleep_time}}\'</span>\n                    <a class=\'btn tempSelector__btn\' id=\'sleep_installation_plus\' ng-click=\'sleepTimeChange(1)\'>+</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section class=\'modal__section modal__adjust__help\' ng-show=\'showHelp\'>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.name\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.name_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.installation\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'devices.adjusts.installation_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'params\'">\n          {{i18n(\'devices.adjusts.min_temp_unoccupied\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'params\'">\n          {{i18n(\'devices.adjusts.min_temp_unoccupied_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'params\'">\n          {{i18n(\'devices.adjusts.max_temp_unoccupied\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'params\'">\n          {{i18n(\'devices.adjusts.max_temp_unoccupied_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'params\'">\n          {{i18n(\'devices.adjusts.sleep_time\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'params\'">\n          {{i18n(\'devices.adjusts.sleep_time_text\')}}\n        </div>\n      </section>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('modal_config_installation.html', '<div class=\'ng-modal\' id=\'installation_config_modal\' ng-show=\'show\'>\n  <div class=\'ng-modal-overlay\' ng-click=\'hideModal()\'></div>\n  <div class=\'ng-modal-dialog modal__adjust\' ng-style=\'dialogStyle\'>\n    <div class=\'ng-modal-action-bar\'>\n      <a class=\'link ng-modal-close\' id=\'close_server\' ng-click=\'hideModal()\'>\n        {{i18n(\'buttons.exit\')}}\n      </a>\n      <a class=\'link ng-modal-help\' ng-click=\'showHelp = true\' ng-show=\'showHelp == false\'>\n        {{i18n(\'buttons.help\')}}\n      </a>\n      <a class=\'link ng-modal-help\' ng-click=\'showHelp = false\' ng-show=\'showHelp == true\'>\n        {{i18n(\'buttons.back\')}}\n      </a>\n    </div>\n    <div class=\'ng-modal-dialog-content\'>\n      <header class=\'modal__header--tab\' ng-show=\'!showHelp &amp;&amp; !show_confirm_user &amp;&amp; !show_confirm &amp;&amp; !show_new_user\'>\n        <a class=\'link modal__header--tab__link\' id=\'params_installation_link\' ng-class="{\'select\': link == \'params\'}" ng-click="selectLink(\'params\')">\n          {{i18n(\'installation.modal.links.params\')}}\n        </a>\n      </header>\n      <section class=\'modal__section modal__adjust__content ng-scope\' ng-show=\'!showHelp &amp;&amp; !show_confirm_user &amp;&amp; !show_confirm &amp;&amp; !show_new_user\'>\n        <form class=\'table-adjust\' id=\'edit_installation_form\' name=\'editInstallationForm\' novalidate=\'\'>\n          <!-- Pestaña 1 - Ajustes de Control -->\n          <div class=\'tab-content\' ng-class="{\'show\': link == \'adjust\'}">\n            <!-- Nombre de la instalación -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.name\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <input class=\'form__input\' id=\'name_inst\' name=\'name\' ng-model=\'edit_installation.name\' placeholder="{{i18n(\'add_installation.name_placeholder\') }}" required=\'\' type=\'text\'>\n                <div class=\'input--error\' ng-show=\'editInstallationForm.invalid &amp;&amp; editInstallationForm.name.$invalid\'>!</div>\n              </div>\n            </div>\n            <!-- Tipo de instalación -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.type\')}}\n                <a class=\'btn table-adjust__property__btn\' id=\'type_inst\' ng-click=\'show_types = !show_types\'>\n                  {{i18n(\'installation.modal.type_\' + edit_installation.type)}}\n                </a>\n              </div>\n              <div class=\'table-adjust__options\' ng-class="{\'show\': show_types}">\n                <a class=\'btn\' id=\'home_type\' ng-class="{\'select\': installation.type == \'home\'}" ng-click="selectInstallationType( \'home\' )">\n                  {{i18n(\'installation.modal.type_home\')}}\n                </a>\n                <a class=\'btn\' id=\'commercial_type\' ng-class="{\'select\': installation.type == \'commercial\'}" ng-click="selectInstallationType( \'commercial\' )">\n                  {{i18n(\'installation.modal.type_commercial\')}}\n                </a>\n                <a class=\'btn\' id=\'business_type\' ng-class="{\'select\': installation.type == \'business\'}" ng-click="selectInstallationType( \'business\' )">\n                  {{i18n(\'installation.modal.type_business\')}}\n                </a>\n                <a class=\'btn\' id=\'others_type\' ng-class="{\'select\': installation.type == \'others\'}" ng-click="selectInstallationType( \'others\' )">\n                  {{i18n(\'installation.modal.type_others\')}}\n                </a>\n              </div>\n            </div>\n            <!-- Icono -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.icon\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <a class=\'icon-btn\' id=\'select_icon\' ng-click=\'togglePropertyIcon()\'>\n                  <i class=\'icon icon-build{{edit_installation.icon}}\'></i>\n                </a>\n              </div>\n              <div class=\'table-adjust__options\' ng-class="{\'show\' : propertyIcon}">\n                <a class=\'btn-group icon-btn\' ng-class="{\'select\': edit_installation.icon == \'1\'}" ng-click=\'setInstallationIcon(1)\'>\n                  <i class=\'icon icon-build1\'></i>\n                </a>\n                <a class=\'btn-group icon-btn\' ng-class="{\'select\': edit_installation.icon == \'2\'}" ng-click=\'setInstallationIcon(2)\'>\n                  <i class=\'icon icon-build2\'></i>\n                </a>\n                <a class=\'btn-group icon-btn\' ng-class="{\'select\': edit_installation.icon == \'3\'}" ng-click=\'setInstallationIcon(3)\'>\n                  <i class=\'icon icon-build3\'></i>\n                </a>\n                <a class=\'btn-group icon-btn\' ng-class="{\'select\': edit_installation.icon == \'4\'}" ng-click=\'setInstallationIcon(4)\'>\n                  <i class=\'icon icon-build4\'></i>\n                </a>\n                <a class=\'btn-group icon-btn\' ng-class="{\'select\': edit_installation.icon == \'5\'}" ng-click=\'setInstallationIcon(5)\'>\n                  <i class=\'icon icon-build5\'></i>\n                </a>\n              </div>\n            </div>\n            <!-- Localización de la instalación -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.location\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <input class=\'form__input\' id=\'searchTextField\' name=\'location\' ng-model=\'installation.spot_complete_name\' placeholder="{{i18n(\'add_installation.location_placeholder\') }}" required=\'\' type=\'text\'>\n                <div class=\'input--error\' ng-show=\'editInstallationForm.invalid &amp;&amp; editInstallationForm.location.$invalid\'>!</div>\n              </div>\n            </div>\n            <!-- CP -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.postal_code\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <input class=\'form__input\' id=\'postal_code_inst\' name=\'postal_code\' ng-model=\'edit_installation.postal_code\' placeholder="{{i18n(\'installation.modal.postal_code\')}}" type=\'text\'>\n              </div>\n            </div>\n            <!-- Datos del instalador -->\n            <div class=\'table-adjust__subtitle\'>\n              {{i18n(\'installation.modal.installer\')}}\n            </div>\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.installer_name\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <input class=\'form__input\' id=\'inst_name\' name=\'ins_name\' ng-model=\'edit_installation.installer_name\' placeholder="{{i18n(\'edit_installation.installator.name\') }}" type=\'text\'>\n              </div>\n            </div>\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.installer_phone\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <input class=\'form__input\' id=\'inst_phone\' name=\'ins_phone\' ng-model=\'edit_installation.installer_phone\' placeholder="{{i18n(\'edit_installation.installator.phone\') }}" type=\'text\'>\n              </div>\n            </div>\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.installer_email\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <input class=\'form__input lowercase\' id=\'inst_email\' name=\'ins_email\' ng-model=\'edit_installation.installer_email\' placeholder="{{i18n(\'edit_installation.installator.email\') }}" type=\'text\'>\n              </div>\n            </div>\n            <!-- error messages -->\n            <div class=\'form__error\' ng-show=\'editInstallationForm.invalid\'>\n              <div ng-show=\'editInstallationForm.name.$error.required\'>\n                {{ i18n(\'installation.modal.name_error\') }}\n              </div>\n              <div ng-show=\'editInstallationForm.location.$error.required\'>\n                {{ i18n(\'installation.modal.location_error\') }}\n              </div>\n            </div>\n            <div class=\'form__buttons\'>\n              <a class=\'btn btn--primary extraMargin\' id=\'save_installation\' ng-click=\'submitInstallationForm()\'>\n                {{i18n(\'installation.modal.save\')}}\n              </a>\n              <a class=\'btn btn--delete\' id=\'remove_installation\' ng-click=\'confirmRemoveInstallation()\'>\n                {{i18n(\'installation.modal.remove\')}}\n              </a>\n              <a class=\'btn\' id=\'cancel\' ng-click=\'close()\'>\n                {{i18n(\'installation.modal.cancel\')}}\n              </a>\n            </div>\n          </div>\n          <!-- Pestaña 2 - Parámetros de Control -->\n          <div class=\'tab-content\' ng-class="{\'show\': link == \'params\'}">\n            <!-- Unoccupied temps -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                <i class=\'icon icon-vacant-heat\'></i>\n                {{i18n(\'installation.modal.unoccupied_min_temp\')}}\n                <div class=\'table-adjust__property__temp\'>\n                  <div class=\'tempSelector\'>\n                    <a class=\'btn tempSelector__btn\' id=\'min_temp_unoccupied_minus\' ng-click=\'minTempUnoccupiedChange(-1)\'>-</a>\n                    <span class=\'tempSelector__temp\' id=\'min_temp_unoccupied\'>{{installation.min_temp_unoccupied}}º</span>\n                    <a class=\'btn tempSelector__btn\' id=\'min_temp_unoccupied_plus\' ng-click=\'minTempUnoccupiedChange(1)\'>+</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                <i class=\'icon icon-vacant-cold\'></i>\n                {{i18n(\'installation.modal.unoccupied_max_temp\')}}\n                <div class=\'table-adjust__property__temp\'>\n                  <div class=\'tempSelector\'>\n                    <a class=\'btn tempSelector__btn\' id=\'max_temp_unoccupied_minus\' ng-click=\'maxTempUnoccupiedChange(-1)\'>-</a>\n                    <span class=\'tempSelector__temp\' id=\'max_temp_unoccupied\'>{{installation.max_temp_unoccupied}}º</span>\n                    <a class=\'btn tempSelector__btn\' id=\'max_temp_unoccupied_plus\' ng-click=\'maxTempUnoccupiedChange(1)\'>+</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- Sleep -->\n            <div class=\'table-adjust__row\'>\n              <div class=\'table-adjust__property\'>\n                <i class=\'icon icon-sleep\'></i>\n                {{i18n(\'installation.modal.sleep_time\')}}\n                <div class=\'table-adjust__property__temp\'>\n                  <!-- / valores de 30\' a 120\' en saltos de 10\' -->\n                  <div class=\'tempSelector\'>\n                    <a class=\'btn tempSelector__btn\' id=\'sleep_installation_minus\' ng-click=\'sleepTimeChange(-1)\'>-</a>\n                    <span class=\'tempSelector__temp\' id=\'sleep_installation\'>{{installation.sleep_time}}\'</span>\n                    <a class=\'btn tempSelector__btn\' id=\'sleep_installation_plus\' ng-click=\'sleepTimeChange(1)\'>+</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Pestaña 3 - Usuarios -->\n          <div class=\'tab-content\' ng-class="{\'show\': link == \'users\'}">\n            <!-- Usuarios -->\n            <div class=\'table-adjust__subtitle\'>\n              {{i18n(\'installation.modal.users\')}}\n            </div>\n            <div class=\'table-adjust__row\' id=\'ir_{{ir.id}}\' ng-repeat=\'ir in irs\'>\n              <div class=\'table-adjust__property\'>\n                {{ir.user.name}}\n              </div>\n              <div class=\'table-adjust__value\' ng-if="ir.type == \'advanced\'">\n                {{i18n(\'users.advanced\')}}\n              </div>\n              <div class=\'table-adjust__value\' ng-if="ir.type == \'basic\'">\n                {{i18n(\'users.basic\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <a class=\'icon-btn\' id=\'remove_user_{{ir.id}}\' ng-click=\'removeUser(ir)\'>\n                  <i class=\'icon icon-trash\'></i>\n                </a>\n              </div>\n            </div>\n            <div class=\'table-adjust__row-btn\'>\n              <div class=\'table-adjust__property\'>\n                {{i18n(\'installation.modal.add_user\')}}\n              </div>\n              <div class=\'table-adjust__value\'>\n                <a class=\'btn icon-btn\' id=\'add_user_button\' ng-click=\'showNewUser()\'>\n                  <i class=\'icon icon-more\'></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </form>\n      </section>\n      <section class=\'modal__section modal__adjust ng-scope ng-hide\' ng-show=\'!showHelp &amp;&amp; show_new_user &amp;&amp; !taken_error\'>\n        <form class=\'table-adjust\' id=\'installation_user_form\' name=\'newUserForm\' novalidate=\'\'>\n          <!-- Nombre de la instalación -->\n          <div class=\'form__input\'>\n            {{i18n(\'installation.modal.new_user.title\')}}\n          </div>\n          <div class=\'form__row\'>\n            <div class=\'form__input\'>\n              <input class=\'form__input\' id=\'user_name2\' name=\'user_name\' ng-model=\'new_user.name\' placeholder="{{i18n(\'installation.modal.new_user.name\')}}" required=\'\' type=\'text\'>\n              <div class=\'input--error\' ng-show=\'newUserForm.invalid &amp;&amp; newUserForm.user_name.$invalid\'>!</div>\n            </div>\n            <div class=\'form__input\'>\n              <input class=\'form__input\' id=\'user_surname2\' name=\'user_surname\' ng-model=\'new_user.surname\' placeholder="{{i18n(\'installation.modal.new_user.surname\')}}" required=\'\' type=\'text\'>\n              <div class=\'input--error\' ng-show=\'newUserForm.invalid &amp;&amp; newUserForm.user_surname.$invalid\'>!</div>\n            </div>\n            <div class=\'form__input\'>\n              <input class=\'form__input\' id=\'user_email2\' name=\'user_email\' ng-model=\'new_user.email\' placeholder="{{i18n(\'installation.modal.new_user.email\')}}" required=\'\' type=\'text\'>\n              <div class=\'input--error\' ng-show=\'newUserForm.invalid &amp;&amp; newUserForm.user_email.$invalid\'>!</div>\n            </div>\n            <div class=\'form__input\'>\n              <div class=\'switchBtn\'>\n                <input class=\'switchBtn-checkbox\' ng-click=\'changeState()\' type=\'checkbox\'>\n                <span class=\'switchBtn-inner\'>\n                  {{i18n(\'users.advanced\')}}\n                </span>\n                <span class=\'switchBtn-switch\'>\n                  {{i18n(\'users.basic\')}}\n                </span>\n              </div>\n            </div>\n            <!-- error messages -->\n            <div class=\'form__error\' ng-show=\'newUserForm.invalid\'>\n              <div ng-show=\'newUserForm.user_name.$error.required\'>\n                {{ i18n(\'installation.modal.new_user.name_blank\') }}\n              </div>\n              <div ng-show=\'newUserForm.user_surname.$error.required\'>\n                {{ i18n(\'installation.modal.new_user.surname_blank\') }}\n              </div>\n              <div ng-show=\'newUserForm.user_email.$error.required\'>\n                {{ i18n(\'installation.modal.new_user.email_blank\') }}\n              </div>\n            </div>\n            <!-- buttons -->\n            <div class=\'form__buttons\'>\n              <a class=\'btn btn--primary\' id=\'confirm_new_user_button\' ng-click=\'submitNewUserForm()\'>\n                {{ i18n(\'buttons.accept\') }}\n              </a>\n              <a class=\'btn\' id=\'cancel_new_user\' ng-click=\'cancelNewUser()\'>\n                {{ i18n(\'buttons.cancel\') }}\n              </a>\n            </div>\n          </div>\n        </form>\n      </section>\n      <section class=\'modal__section modal__adjust__help ng-scope ng-hide\' ng-show=\'showHelp\'>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.name\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.name_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.type\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.type_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.location\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.location_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.icon\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.icon_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.postal_code\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.postal_code_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.installer\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'adjust\'">\n          {{i18n(\'installation.modal.help.installer_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'params\'">\n          {{i18n(\'installation.modal.help.min_temp_unoccupied\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'params\'">\n          {{i18n(\'installation.modal.help.min_temp_unoccupied_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'params\'">\n          {{i18n(\'installation.modal.help.max_temp_unoccupied\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'params\'">\n          {{i18n(\'installation.modal.help.max_temp_unoccupied_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'params\'">\n          {{i18n(\'installation.modal.help.sleep_time\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'params\'">\n          {{i18n(\'installation.modal.help.sleep_time_text\')}}\n        </div>\n        <div class=\'modal__adjust__help__title\' ng-show="link == \'users\'">\n          {{i18n(\'installation.modal.help.users\')}}\n        </div>\n        <div class=\'modal__adjust__help__description\' ng-show="link == \'users\'">\n          {{i18n(\'installation.modal.help.users_text\')}}\n        </div>\n      </section>\n      <section id=\'confirm_remove\' ng-show=\'show_confirm\'>\n        <!-- Title -->\n        <div class=\'modal__message__title\'>\n          {{ i18n(\'messages.title.remove_installation_confirm\') }}\n        </div>\n        <!-- Message -->\n        <div class=\'modal__message__content\'>\n          <i class=\'icon icon-cancel\'></i>\n          {{ i18n(\'messages.success.remove_installation_confirmation\') }}\n        </div>\n        <!-- confirm button -->\n        <div class=\'modal__message__buttons\'>\n          <a class=\'btn\' id=\'cancel_confirm\' ng-click=\'cancelConfirm()\'>\n            {{ i18n(\'buttons.cancel\') }}\n          </a>\n          <a class=\'btn btn--primary\' id=\'confirm_remove_button\' ng-click=\'removeInstallation()\'>\n            {{ i18n(\'buttons.accept\') }}\n          </a>\n        </div>\n      </section>\n      <section id=\'confirm_remove\' ng-show=\'show_confirm_user\'>\n        <!-- Title -->\n        <div class=\'modal__message__title\'>\n          {{ i18n(\'messages.title.remove_user_confirm\') }}\n        </div>\n        <!-- Message -->\n        <div class=\'modal__message__content\'>\n          <i class=\'icon icon-cancel\'></i>\n          {{ i18n(\'messages.success.remove_user_confirmation\') }}\n        </div>\n        <!-- confirm button -->\n        <div class=\'modal__message__buttons\'>\n          <a class=\'btn\' id=\'cancel_user_confirm\' ng-click=\'cancelUserConfirm()\'>\n            {{ i18n(\'buttons.cancel\') }}\n          </a>\n          <a class=\'btn btn--primary\' id=\'confirm_remove_user_button\' ng-click=\'removeConfirmUser()\'>\n            {{ i18n(\'buttons.accept\') }}\n          </a>\n        </div>\n      </section>\n      <section class=\'modal_message\' id=\'error_new_user\' ng-show=\'taken_error\'>\n        <!-- Message Error ---------------------------------------------------------------- -->\n        <div class=\'modal__message\'>\n          <!-- Message -->\n          <div class=\'modal__message__content\'>\n            <i class=\'icon icon-cancel\'></i>\n            {{ i18n(\'messages.errors.user_taken\') }}\n          </div>\n          <!-- confirm button -->\n          <div class=\'modal__message__buttons\'>\n            <a class=\'btn btn--primary\' href=\'\' id=\'cancel_taken\' ng-click=\'cancelUserTaken()\'>\n              {{ i18n(\'buttons.accept\') }}\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('modal_info_servers.html', '<div class=\'ng-modal\' ng-show=\'show\'>\n  <div class=\'ng-modal-overlay\' ng-click=\'hideModal()\'></div>\n  <div class=\'ng-modal-dialog\' ng-style=\'dialogStyle\'>\n    <!-- .ng-modal-action-bar -->\n    <!-- %a.link.ng-modal-close{ id: \'close_server\', \'ng-click\' => \'hideModal()\'} -->\n    <!-- {{i18n(\'buttons.exit\')}} -->\n    <div class=\'ng-modal-dialog-content\' ng-transclude></div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('modal_schedules.html', '<div class=\'ng-modal\' id=\'schedules_modal\' ng-show=\'show\'>\n  <div class=\'ng-modal-overlay\' ng-click=\'hideModal()\'></div>\n  <div class=\'ng-modal-dialog modal__schedules\' ng-style=\'dialogStyle\'>\n    <div class=\'ng-modal-action-bar\'>\n      <a class=\'link ng-modal-close\' id=\'close_server\' ng-click=\'hideModal()\' ng-if="show_view == \'list\' || show_view == \'new\' || show_view == \'edit\'">\n        {{i18n(\'buttons.exit\')}}\n      </a>\n    </div>\n    <div class=\'ng-modal-dialog-content\'>\n      <header class=\'modal__header\' ng-if="show_view == \'list\'">\n        {{name}}\n      </header>\n      <section class=\'modal__section\' ng-if="show_view == \'list\'">\n        <!-- class off to remove -->\n        <div class=\'schedules__list\' id=\'schedules_list\'>\n          <div class=\'schedules__list__item\' id=\'schedule_{{schedule.id}}\' ng-class="{\'off\': schedule.enabled == false }" ng-repeat=\'schedule in schedules\'>\n            <div id=\'schedule_div_{{schedule.id}}\' ng-click=\'changeToEditView(schedule)\'>\n              <div class=\'schedule__header\'>\n                {{schedule.name}}\n                <div class=\'onoffswitch\'>\n                  <input class=\'onoffswitch-checkbox\' id=\'sche_enable_{{schedule.id}}\' name=\'schedule.enabled\' ng-click=\'toggleEnabled( schedule ); $event.stopPropagation();\' ng-false-value=\'0\' ng-model=\'schedule.enabled\' ng-true-value=\'1\' type=\'checkbox\'>\n                  <label class=\'onoffswitch-label\' for=\'schedule.enabled\'>\n                    <span class=\'onoffswitch-inner\'></span>\n                    <span class=\'onoffswitch-switch\'></span>\n                  </label>\n                </div>\n              </div>\n              <div class=\'schedule__options\'>\n                <div class=\'schedule__option\'>\n                  <div class=\'schedule__options__title\'>\n                    {{i18n(\'devices.schedules.init\')}}\n                  </div>\n                  <div class=\'schedule__options__time\' id=\'sche_hour_{{schedule.id}}\'>\n                    {{schedule.hour}}:{{schedule.minute}}\n                  </div>\n                  <div class=\'schedule__options__value\'>\n                    <div id=\'sche_mode_{{schedule.id}}\' ng-if="schedule.type == \'mode\'">\n                      <div>\n                        <i class=\'icon\' ng-class="{\'icon-{{getModeClass( schedule.mode )}}\': true}"></i>\n                      </div>\n                      <div ng-if=\'schedule.temp\'>\n                        {{ schedule.temp }}º\n                      </div>\n                    </div>\n                    <div id=\'sche_vent_{{schedule.id}}\' ng-if="schedule.power == \'on\'">\n                      ON\n                    </div>\n                    <div id=\'sche_vent_{{schedule.id}}\' ng-if="schedule.power == \'off\'">\n                      OFF\n                    </div>\n                  </div>\n                </div>\n                <div class=\'schedule__option\'>\n                  <div class=\'schedule__options__title days\'>\n                    {{i18n(\'devices.schedules.days\')}}\n                  </div>\n                  <div class=\'schedule__options__days\'>\n                    <div class=\'schedule__options__day\' id=\'day0\' ng-class="{\'select\': schedule.days[0] == \'1\'}">{{i18n(\'devices.schedules.monday\')}}</div>\n                    <div class=\'schedule__options__day\' id=\'day1\' ng-class="{\'select\': schedule.days[1] == \'1\'}">{{i18n(\'devices.schedules.tuesday\')}}</div>\n                    <div class=\'schedule__options__day\' id=\'day2\' ng-class="{\'select\': schedule.days[2] == \'1\'}">{{i18n(\'devices.schedules.wednesday\')}}</div>\n                    <div class=\'schedule__options__day\' id=\'day3\' ng-class="{\'select\': schedule.days[3] == \'1\'}">{{i18n(\'devices.schedules.thursday\')}}</div>\n                    <div class=\'schedule__options__day\' id=\'day4\' ng-class="{\'select\': schedule.days[4] == \'1\'}">{{i18n(\'devices.schedules.friday\')}}</div>\n                    <div class=\'schedule__options__day\' id=\'day5\' ng-class="{\'select\': schedule.days[5] == \'1\'}">{{i18n(\'devices.schedules.saturday\')}}</div>\n                    <div class=\'schedule__options__day\' id=\'day6\' ng-class="{\'select\': schedule.days[6] == \'1\'}">{{i18n(\'devices.schedules.sunday\')}}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\'schedules__list__buttons\'>\n            <a class=\'btn btn--primary\' id=\'to_new_schedule\' ng-click=\'buttons.disableNew || changeToNewView()\' ng-disabled=\'buttons.disableNew\' ng-if=\'schedules.length &lt; 24\'>\n              {{i18n(\'devices.schedules.add_schedule\')}}\n            </a>\n            <a class=\'btn\' id=\'close_schedule_button\' ng-click=\'close()\'>\n              {{i18n(\'devices.schedules.close\')}}\n            </a>\n          </div>\n        </div>\n      </section>\n      <!-- New and edit programation -->\n      <header class=\'modal__header\' ng-if="show_view == \'new\' || show_view == \'edit\'">\n        {{ new_edit_type == \'new\' ? i18n(\'devices.schedules.new_prog\') : i18n( \'devices.schedules.edit_prog\' )}}\n      </header>\n      <section class=\'modal__section\' ng-if="show_view == \'new\'">\n        <div>\n          <div class=\'schedules__add__title\'>\n            {{i18n(\'devices.schedules.schedules_name\')}}\n          </div>\n          <div class=\'schedules__add__options\'>\n            <input name=\'virtual_schedule.name\' ng-model=\'virtual_schedule.name\' required type=\'text\' value=\'{{virtual_schedule.name}}\'>\n          </div>\n          <!-- Select schedule TYPE -->\n          <div class=\'schedules__add__title\'>\n            {{i18n(\'devices.schedules.schedules_types\')}}\n          </div>\n          <div class=\'schedules__add__options\'>\n            <a class=\'btn\' id=\'select_mode_type\' ng-class="{\'select\': virtual_schedule.type == \'mode\'}" ng-click="changeType(\'mode\' )">\n              {{i18n(\'devices.schedules.mode\')}}\n            </a>\n            <a class=\'btn\' id=\'select_on_type\' ng-class="{\'select\': virtual_schedule.type == \'on_off\'}" ng-click="changeType(\'on_off\')">\n              {{i18n(\'devices.schedules.on_off\')}}\n            </a>\n          </div>\n          <div class=\'schedules__add__title\'>\n            {{i18n(\'devices.schedules.days\')}}\n          </div>\n          <!-- Select days -->\n          <div class=\'schedules__add__options days\'>\n            <a class=\'btn\' id=\'day_0\' ng-class="{\'select\': virtual_schedule.days[0] == \'1\'}" ng-click=\'toggleDays(0)\'>{{i18n(\'devices.schedules.monday\')}}</a>\n            <a class=\'btn\' id=\'day_1\' ng-class="{\'select\': virtual_schedule.days[1] == \'1\'}" ng-click=\'toggleDays(1)\'>{{i18n(\'devices.schedules.tuesday\')}}</a>\n            <a class=\'btn\' id=\'day_2\' ng-class="{\'select\': virtual_schedule.days[2] == \'1\'}" ng-click=\'toggleDays(2)\'>{{i18n(\'devices.schedules.wednesday\')}}</a>\n            <a class=\'btn\' id=\'day_3\' ng-class="{\'select\': virtual_schedule.days[3] == \'1\'}" ng-click=\'toggleDays(3)\'>{{i18n(\'devices.schedules.thursday\')}}</a>\n            <a class=\'btn\' id=\'day_4\' ng-class="{\'select\': virtual_schedule.days[4] == \'1\'}" ng-click=\'toggleDays(4)\'>{{i18n(\'devices.schedules.friday\')}}</a>\n            <a class=\'btn\' id=\'day_5\' ng-class="{\'select\': virtual_schedule.days[5] == \'1\'}" ng-click=\'toggleDays(5)\'>{{i18n(\'devices.schedules.saturday\')}}</a>\n            <a class=\'btn\' id=\'day_6\' ng-class="{\'select\': virtual_schedule.days[6] == \'1\'}" ng-click=\'toggleDays(6)\'>{{i18n(\'devices.schedules.sunday\')}}</a>\n          </div>\n          <div class=\'schedule__add__error\' id=\'error_day\' ng-show=\'error_day\'>\n            {{i18n(\'devices.schedules.days_error\')}}\n          </div>\n          <!-- Select Hour -->\n          <div class=\'schedules__add__halve-row\'>\n            <div class=\'schedules__add__halve-row__item\'>\n              <div class=\'schedules__add__title\'>\n                {{i18n(\'devices.schedules.hour\')}}\n              </div>\n              <div class=\'schedules__add__button\'>\n                <a class=\'btn\' id=\'hour_btn\' ng-click="selectNew( \'hour\' )">\n                  {{virtual_schedule.hour}}:{{virtual_schedule.minute}}\n                </a>\n              </div>\n            </div>\n            <div class=\'schedules__add__halve-row__item\'>\n              <div class=\'schedules__add__title\'>\n                {{i18n(\'devices.schedules.start_mode\')}}\n              </div>\n              <div class=\'schedules__add__button two-btn\' ng-if="virtual_schedule.type == \'mode\'">\n                <a class=\'btn icon-btn\' id=\'mode_btn\' ng-click="selectNew( \'mode\' )">\n                  <i class=\'icon\' ng-class="{\'icon-{{getModeClass( virtual_schedule.mode )}}\': true}"></i>\n                </a>\n                <a class=\'btn icon-btn\' id=\'temp_btn\' ng-click="selectNew( \'temp\' )" ng-if=\'hasTemp()\'>\n                  {{virtual_schedule.temp}}º\n                </a>\n              </div>\n              <div class=\'schedules__add__button\' id=\'on_off_btn\' ng-if="virtual_schedule.type == \'on_off\'">\n                <a class=\'btn icon-btn\' ng-click=\'toggleOnOff()\'>\n                  {{virtual_schedule.power}}\n                </a>\n              </div>\n            </div>\n          </div>\n          <!-- / List of aplicable devices -->\n          <div class=\'schedules__add__devices\' ng-if="target.class == \'Installation\'">\n            <div class=\'schedules__add__title\'>\n              {{i18n( \'devices.schedules.all_devices\' )}}\n              <div class=\'onoffswitch\'>\n                <input class=\'onoffswitch-checkbox\' id=\'all_devices_button\' name=\'all_devices\' ng-click=\'toggleAllDevices()\' ng-model=\'all_devices\' type=\'checkbox\'>\n                <label class=\'onoffswitch-label\' for=\'all_devices\'>\n                  <span class=\'onoffswitch-inner\'></span>\n                  <span class=\'onoffswitch-switch\'></span>\n                </label>\n              </div>\n            </div>\n            <div class=\'schedules__add__device\' ng-repeat=\'sche_device in target.devices\' ng-show=\'!all_devices\'>\n              {{sche_device.name}}\n              <div class=\'onoffswitch\'>\n                <input class=\'onoffswitch-checkbox\' id=\'sche_for_device_{{sche_device.id}}\' name=\'\' ng-model=\'sche_device.selected_for_sche\' type=\'checkbox\'>\n                <label class=\'onoffswitch-label\' for=\'sche_device.selected_for_sche\'>\n                  <span class=\'onoffswitch-inner\'></span>\n                  <span class=\'onoffswitch-switch\'></span>\n                </label>\n              </div>\n            </div>\n          </div>\n          <!-- Buttons for edit -->\n          <div class=\'schedules__add__halve-row buttons\' ng-if="new_edit_type == \'edit\'">\n            <div class=\'schedules__add__halve-row__item\'>\n              <div class=\'schedules__add__button\'>\n                <a class=\'btn btn--delete\' id=\'delete_schedule\' ng-click=\'buttons.delete_schedule ||  showRemoveConfirmation()\' ng-disabled=\'buttons.delete_schedule\'>\n                  {{i18n(\'devices.schedules.remove\')}}\n                </a>\n              </div>\n            </div>\n            <div class=\'schedules__add__halve-row__item\'>\n              <div class=\'schedules__add__button\'>\n                <a class=\'btn btn--primary\' id=\'save_schedule\' ng-click=\'buttons.save_new_schedule || saveSchedule()\' ng-disabled=\'buttons.save_new_schedule\'>\n                  {{i18n(\'devices.schedules.save\')}}\n                </a>\n              </div>\n            </div>\n          </div>\n          <!-- BUttons for new -->\n          <div class=\'schedules__add__halve-row buttons\'>\n            <div class=\'schedules__add__button\' ng-if="new_edit_type == \'new\'">\n              <a class=\'btn btn--primary\' id=\'save_new_schedule\' ng-click=\'buttons.save_new_schedule || saveSchedule()\' ng-disabled=\'buttons.save_new_schedule\'>\n                {{i18n(\'devices.schedules.save\')}}\n              </a>\n            </div>\n          </div>\n        </div>\n        <div class=\'schedules__add__return\'>\n          <a class=\'btn\' id=\'close_new_view\' ng-click=\'closeScheduleModal()\'>\n            {{i18n(\'devices.schedules.close\')}}\n          </a>\n        </div>\n      </section>\n      <!-- Hour selector -->\n      <header class=\'modal__header\' ng-if="show_view == \'hour\'">\n        {{i18n(\'devices.schedules.hour\')}}\n        <a class=\'link\' id=\'return_from_hour\' ng-click=\'returnToNew()\'>\n          {{i18n(\'buttons.back\')}}\n        </a>\n      </header>\n      <section class=\'modal__section schedules__modifiers\' id=\'hour_selector\' ng-if="show_view == \'hour\'">\n        <div class=\'schedules__time\' ng-if="virtual_schedule.end_hour != \'255\' || select_type == \'hour\'">\n          <div class=\'schedules__time__col\' id=\'select_hour\'>\n            <div class=\'schedules__time__button\'>\n              <a class=\'btn icon-btn\' id=\'select_hour_plus_hour\' ng-click=\'changeHour( 1 )\'>\n                <i class=\'icon icon-up\'></i>\n              </a>\n            </div>\n            <div class=\'schedules__time__value\' id=\'select_hour_hour\' ng-if="select_type == \'hour\'">\n              {{virtual_schedule.hour}}\n            </div>\n            <div class=\'schedules__time__value\' id=\'select_hour_hour\' ng-if="select_type == \'end_hour\'">\n              {{virtual_schedule.end_hour}}\n            </div>\n            <div class=\'schedules__time__button\'>\n              <a class=\'btn icon-btn\' id=\'select_hour_minus_hour\' ng-click=\'changeHour( -1 )\'>\n                <i class=\'icon icon-down\'></i>\n              </a>\n            </div>\n          </div>\n          <div class=\'schedules__time__col pointer\'>\n            <div class=\'schedules__time__value\'>:</div>\n          </div>\n          <div class=\'schedules__time__col\'>\n            <div class=\'schedules__time__button\'>\n              <a class=\'btn icon-btn\' id=\'select_hour_plus_min\' ng-click=\'changeMinute( 1 )\'>\n                <i class=\'icon icon-up\'></i>\n              </a>\n            </div>\n            <div class=\'schedules__time__value\' id=\'select_hour_min\' ng-if="select_type == \'hour\'">\n              {{virtual_schedule.minute}}\n            </div>\n            <div class=\'schedules__time__value\' id=\'select_hour_min\' ng-if="select_type == \'end_hour\'">\n              {{virtual_schedule.end_minute}}\n            </div>\n            <div class=\'schedules__time__button\'>\n              <a class=\'btn icon-btn\' id=\'select_hour_minus_min\' ng-click=\'changeMinute( -1 )\'>\n                <i class=\'icon icon-down\'></i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n      <!-- Temp selector -->\n      <header class=\'modal__header\' ng-if="show_view == \'temp\'">\n        {{i18n(\'devices.schedules.temperature\')}}\n        <a class=\'link\' id=\'return_from_temp\' ng-click=\'returnToNew()\'>\n          {{i18n(\'buttons.back\')}}\n        </a>\n      </header>\n      <section class=\'modal__section schedules__modifiers\' id=\'temp_selector\' ng-if="show_view == \'temp\'">\n        <div class=\'schedules__add__options temp\'>\n          <div class=\'schedules__temp__btn\'>\n            <a class=\'btn icon-btn\' id=\'minus_temp_btn\' ng-click=\'changeTemp( -1 )\' ng-show=\'virtual_schedule.temp &gt; temp_min\'>\n              <i class=\'icon icon-less\'></i>\n            </a>\n          </div>\n          <div class=\'schedules__temp__value\' id=\'temp_value\'>\n            {{virtual_schedule.temp}}º\n          </div>\n          <div class=\'schedules__temp__btn\'>\n            <a class=\'btn icon-btn\' id=\'plus_temp_btn\' ng-click=\'changeTemp( 1 )\' ng-show=\'virtual_schedule.temp &lt; temp_max\'>\n              <i class=\'icon icon-more\'></i>\n            </a>\n          </div>\n        </div>\n      </section>\n      <!-- Modes selector -->\n      <header class=\'modal__header\' ng-if="show_view == \'modes\'">\n        {{i18n(\'devices.schedules.mode\')}}\n        <a class=\'link\' id=\'return_from_modes\' ng-click=\'returnToNew()\'>\n          {{i18n(\'buttons.back\')}}\n        </a>\n      </header>\n      <section class=\'modal__section schedules__modifiers\' ng-show="show_view == \'modes\'">\n        <div class=\'schedules__mode\'>\n          <div class=\'schedules__mode__item\'>\n            <a class=\'btn\' id=\'mode-{{mode}}\' ng-class="{ \'select\': class_modal_mode == mode }" ng-click=\'selectMode( select_type, mode )\' ng-repeat=\'mode in available_modes\'>\n              <i class=\'icon icon-{{mode}}\'></i>\n              {{ i18n( \'installation.modes.\' + mode ) }}\n            </a>\n          </div>\n        </div>\n      </section>\n      <!-- confirm button -->\n      <div ng-if="show_view == \'remove_confirm\'">\n        <div class=\'modal__message__content\'>\n          {{ i18n(\'messages.info.remove_schedule\') }}\n        </div>\n        <div class=\'modal__message__buttons\'>\n          <a class=\'btn\' id=\'cancel_confirmation\' ng-click=\'showEdit()\'>\n            {{ i18n( \'buttons.cancel\' ) }}\n          </a>\n          <a class=\'btn btn--primary\' id=\'accept_confirmation\' ng-click=\'removeSchedule()\'>\n            {{ i18n( \'buttons.accept\' ) }}\n          </a>\n        </div>\n      </div>\n      <!-- Wait message -->\n      <header class=\'modal__header\' ng-if="show_view == \'waiting_message\'">\n        {{i18n(\'devices.schedules.waiting_title\')}}\n      </header>\n      <section class=\'modal__section\' ng-if="show_view == \'waiting_message\'">\n        <div>\n          <div class=\'schedule__options\'>\n            <div class=\'schedule__option\'>\n              <div class=\'schedule__options__title\'>\n                {{i18n(\'devices.schedules.waiting_text\')}}\n              </div>\n            </div>\n          </div>\n        </div>\n        <br>\n        <br>\n      </section>\n      <div class=\'modal__message__buttons\' id=\'installation_schedules_msg\' ng-if="show_view == \'waiting_message\'">\n        <a class=\'btn btn-success\' id=\'accept_message\' ng-click=\'close()\'>\n          {{ i18n( \'buttons.close\' ) }}\n        </a>\n      </div>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('not_connected_device_modal.html', '<div class=\'ng-modal\' ng-show=\'$root.show_disconnected_device\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-server\'></i>\n        {{i18n( \'messages.errors.not_connected_device_title\' )}}\n      </section>\n      <section class=\'modal__message\' ng-show=\'$root.error_devices.length &gt; 1 \'>\n        {{i18n( \'messages.errors.not_connected_devices\' )}}\n        <div ng-repeat=\'name in $root.error_devices\'>\n          {{name}}\n        </div>\n      </section>\n      <section class=\'modal__message\' ng-show=\'$root.error_devices.length == 1 \'>\n        {{i18n( \'messages.errors.not_connected_device\' )}}\n        <div ng-repeat=\'name in $root.error_devices\'>\n          {{name}}\n        </div>\n      </section>\n    </div>\n    <div class=\'modal__message__buttons modal__alert__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'refreshPage()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' ng-show=\'$root.error_device\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-server\'></i>\n        {{i18n( \'messages.errors.not_connected_device_title\' )}}\n      </section>\n      <section class=\'modal__message\'>\n        {{i18n( \'messages.errors.error_device\' )}}\n      </section>\n    </div>\n    <div class=\'modal__message__buttons modal__alert__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'refreshPage()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' ng-show=\'$root.not_permission\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-cancel\'></i>\n        {{i18n( \'messages.errors.not_permission_title\' )}}\n      </section>\n      <section class=\'modal__message\'>\n        {{i18n( \'messages.errors.not_permission\' )}}\n      </section>\n    </div>\n    <div class=\'modal__message__buttons modal__alert__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'hide()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' ng-show=\'$root.not_permission_new_schedule\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-cancel\'></i>\n        {{i18n( \'messages.errors.not_permission_title\' )}}\n      </section>\n      <section class=\'modal__message\'>\n        {{i18n( \'messages.errors.not_permission_new_schedule\' )}}\n      </section>\n    </div>\n    <div class=\'modal__message__buttons modal__alert__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'hideNotNewSchedule()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' ng-show=\'$root.not_machine_ready\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-server\'></i>\n        {{i18n( \'messages.errors.machine_error_11_title\' )}}\n      </section>\n      <section class=\'modal__message\' ng-show=\'$root.machine_errors.length &gt; 1 \'>\n        {{i18n( \'messages.errors.machine_error_11_text\' )}}\n        <div ng-repeat=\'name in $root.machine_errors\'>\n          {{name}}\n        </div>\n      </section>\n      <section class=\'modal__message\' ng-show=\'$root.machine_errors.length == 1 \'>\n        {{i18n( \'messages.errors.machine_error_11_text\' )}}\n        <div ng-repeat=\'name in $root.machine_errors\'>\n          {{name}}\n        </div>\n      </section>\n    </div>\n    <div class=\'modal__message__buttons modal__alert__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'hideNotMachineReady()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\'ng-modal\' ng-show=\'$root.show_backend_error\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-server\'></i>\n        {{i18n( \'installation_relation_list.internal_error\' )}}\n      </section>\n      <section class=\'modal__message\'>\n        {{i18n( \'messages.errors.backend_error\' )}}\n      </section>\n    </div>\n    <div class=\'modal__message__buttons modal__alert__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'hideBackendError()\'>\n        {{i18n( \'buttons.accept\' )}}\n      </a>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('not_connection_modal.html', '<div class=\'ng-modal\' ng-show=\'$root.disconnection\'>\n  <div class=\'ng-modal-overlay\'></div>\n  <div class=\'ng-modal-dialog\'>\n    <div class=\'ng-modal-dialog-content\'>\n      <section class=\'modal__header\' style=\'white-space: nowrap;\'>\n        <i class=\'icon icon-server\'></i>\n        {{i18n( \'messages.errors.not_connected_title\' )}}\n      </section>\n      <section class=\'modal__message\'>\n        {{i18n( \'messages.errors.not_connected\' )}}\n      </section>\n    </div>\n    <div class=\'modal__message__buttons\'>\n      <a class=\'btn btn--primary ng-binding\' ng-click=\'refreshPage()\'>\n        {{i18n( \'buttons.recharge\' )}}\n      </a>\n    </div>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('outside_modals.html', '<!-- Modal for modes -->\n<modal-info-server class=\'modal__mode\' close=\'closeModal()\' show=\'show_modal_mode\'>\n  <div class=\'ng-modal-action-bar\'>\n    <a class=\'link ng-modal-close\' ng-click=\'closeModal()\'>\n      {{i18n(\'buttons.exit\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleModeHelp()\' ng-show=\'!showModeHelp\'>\n      {{i18n(\'buttons.help\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleModeHelp()\' ng-show=\'showModeHelp\'>\n      {{i18n(\'buttons.back\')}}\n    </a>\n  </div>\n  <div class=\'table-adjust__subtitle\'>\n    {{ i18n( \'installation.modes.header\' ) }}\n  </div>\n  <section class=\'modal__section\' ng-show=\'!showModeHelp\'>\n    <a class=\'btn\' id=\'mode-{{mode}}-{{mode_target.id}}\' ng-class="{ \'select\': class_modal_mode == mode }" ng-click=\'selectMode( mode )\' ng-repeat=\'mode in available_modes\'>\n      <i class=\'icon icon-{{mode}}\'></i>\n      {{ i18n( \'installation.modes.\' + mode ) }}\n    </a>\n  </section>\n  <section class=\'modal__section modal__adjust__help\' ng-show=\'showModeHelp\'>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[0] == 1\'>\n      {{i18n(\'modal_mode.cold\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[0] == 1\'>\n      {{i18n(\'modal_mode.cold_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[1] == 1\'>\n      {{i18n(\'modal_mode.heat\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[1] == 1\'>\n      {{i18n(\'modal_mode.heat_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[2] == 1\'>\n      {{i18n(\'modal_mode.ventilate_cold\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[2] == 1\'>\n      {{i18n(\'modal_mode.ventilate_cold_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[3] == 1\'>\n      {{i18n(\'modal_mode.heat_cold_auto\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[3] == 1\'>\n      {{i18n(\'modal_mode.heat_cold_auto_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[4] == 1\'>\n      {{i18n(\'modal_mode.dehumidify\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[4] == 1\'>\n      {{i18n(\'modal_mode.dehumidify_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[5] == 1\'>\n      {{i18n(\'modal_mode.cold_auto\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[5] == 1\'>\n      {{i18n(\'modal_mode.cold_auto_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[6] == 1\'>\n      {{i18n(\'modal_mode.heat_auto\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[6] == 1\'>\n      {{i18n(\'modal_mode.heat_auto_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\' ng-show=\'mode_target.modes[7] == 1\'>\n      {{i18n(\'modal_mode.ventilate_heat\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'mode_target.modes[7] == 1\'>\n      {{i18n(\'modal_mode.ventilate_heat_text\')}}\n    </div>\n  </section>\n</modal-info-server>\n<!-- Velocity modal -->\n<modal-info-server class=\'modal__mode\' close=\'closeModal()\' show=\'show_modal_velocity\'>\n  <div class=\'ng-modal-action-bar\'>\n    <a class=\'link ng-modal-close\' ng-click=\'closeModal()\'>\n      {{i18n(\'buttons.exit\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleSpeedHelp()\' ng-show=\'!showSpeedHelp\'>\n      {{i18n(\'buttons.help\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleSpeedHelp()\' ng-show=\'showSpeedHelp\'>\n      {{i18n(\'buttons.back\')}}\n    </a>\n  </div>\n  <div class=\'table-adjust__subtitle\'>\n    {{ i18n( \'installation.velocity.header\' ) }}\n  </div>\n  <section class=\'modal__section\' ng-show=\'!showSpeedHelp\'>\n    <!-- el modo auto lo saco fuera -->\n    <a class=\'btn\' id=\'vel-0-{{velocity_target.id}}\' ng-class="{ \'select\': vel == getVelocity() }" ng-click="selectVel( \'0\' )" ng-show=\'show_auto_velocity\'>\n      <i class=\'icon icon-velocity0\'></i>\n      {{ i18n( \'installation.velocity.velocity-0\') }}\n    </a>\n    <a class=\'btn\' id=\'vel-{{vel}}-{{velocity_target.id}}\' ng-class="{ \'select\': vel == getVelocity() }" ng-click=\'selectVel( vel )\' ng-repeat=\'vel in availables_velocities\'>\n      <i class=\'icon icon-velocity{{availables_velocities.length}}-{{vel}}\'></i>\n      {{ i18n( \'installation.velocity.\' + getVelocityNameIndex(vel) ) }}\n    </a>\n  </section>\n  <section class=\'modal__section modal__adjust__help\' ng-show=\'showSpeedHelp\'>\n    <div class=\'modal__adjust__help__title\' ng-show=\'availables_velocities.length &gt;= 1\'>\n      {{i18n(\'modal_speed.title\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'availables_velocities.length == 1\'>\n      {{i18n(\'modal_speed.speed_1\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'availables_velocities.length == 2\'>\n      {{i18n(\'modal_speed.speed_2\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'availables_velocities.length == 3\'>\n      {{i18n(\'modal_speed.speed_3\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'availables_velocities.length == 4\'>\n      {{i18n(\'modal_speed.speed_4\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show=\'availables_velocities.length == 5\'>\n      {{i18n(\'modal_speed.speed_5\')}}\n    </div>\n  </section>\n</modal-info-server>\n<!-- Vertical slats modal -->\n<modal-info-server class=\'modal__mode\' close=\'closeModal()\' show=\'show_modal_vertical\'>\n  <div class=\'ng-modal-action-bar\'>\n    <a class=\'link ng-modal-close\' ng-click=\'closeModal()\'>\n      {{i18n(\'buttons.exit\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleVerticalHelp()\' ng-show=\'!showVerticalHelp\'>\n      {{i18n(\'buttons.help\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleVerticalHelp()\' ng-show=\'showVerticalHelp\'>\n      {{i18n(\'buttons.back\')}}\n    </a>\n  </div>\n  <div class=\'table-adjust__subtitle\'>\n    {{ i18n( \'installation.vertical.header\' ) }}\n  </div>\n  <section class=\'modal__section\' ng-show=\'!showVerticalHelp\'>\n    <a class=\'btn\' id=\'ver-{{vertical}}-{{vertical_target.id}}\' ng-class="{ \'select\': getSlatVertical() == vertical }" ng-click=\'selectVertical( vertical )\' ng-repeat=\'vertical in availables_verticals\'>\n      <i class=\'icon icon-v{{getSlatIcon(vertical)}}\'></i>\n      {{ i18n( \'installation.vertical.vertical-\' + vertical ) }}\n    </a>\n  </section>\n  <section class=\'modal__section modal__adjust__help\' ng-show=\'showVerticalHelp\'>\n    <div class=\'modal__adjust__help__title\'>\n      {{i18n(\'modal_vertical.title\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_verticals.indexOf(\'0000\') != -1">\n      {{i18n(\'modal_vertical.position_0\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_verticals.indexOf(\'0001\') != -1">\n      {{i18n(\'modal_vertical.position_1\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_verticals.indexOf(\'0010\') != -1">\n      {{i18n(\'modal_vertical.position_2\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_verticals.indexOf(\'0011\') != -1">\n      {{i18n(\'modal_vertical.position_3\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_verticals.indexOf(\'0100\') != -1">\n      {{i18n(\'modal_vertical.position_4\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_verticals.indexOf(\'0111\') != -1">\n      {{i18n(\'modal_vertical.position_swing\')}}\n    </div>\n  </section>\n</modal-info-server>\n<!-- Horizontal slats modal -->\n<modal-info-server class=\'modal__mode\' close=\'closeModal()\' show=\'show_modal_horizontal\'>\n  <div class=\'ng-modal-action-bar\'>\n    <a class=\'link ng-modal-close\' ng-click=\'closeModal()\'>\n      {{i18n(\'buttons.exit\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleHorizontalHelp()\' ng-show=\'!showHorizontalHelp\'>\n      {{i18n(\'buttons.help\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleHorizontalHelp()\' ng-show=\'showHorizontalHelp\'>\n      {{i18n(\'buttons.back\')}}\n    </a>\n  </div>\n  <div class=\'table-adjust__subtitle\'>\n    {{ i18n( \'installation.horizontal.header\' ) }}\n  </div>\n  <section class=\'modal__section\' ng-show=\'!showHorizontalHelp\'>\n    <a class=\'btn\' id=\'hor-{{horizontal}}-{{horizontal_target.id}}\' ng-class="{ \'select\': getSlatHorizontal() == horizontal }" ng-click=\'selectHorizontal( horizontal )\' ng-repeat=\'horizontal in availables_horizontals\'>\n      <i class=\'icon icon-h{{getSlatIcon(horizontal)}}\'></i>\n      {{ i18n( \'installation.horizontal.horizontal-\' + horizontal ) }}\n    </a>\n  </section>\n  <section class=\'modal__section modal__adjust__help\' ng-show=\'showHorizontalHelp\'>\n    <div class=\'modal__adjust__help__title\'>\n      {{i18n(\'modal_horizontal.title\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_horizontal.indexOf(\'0000\') != -1">\n      {{i18n(\'modal_horizontal.position_0\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_horizontal.indexOf(\'0001\') != -1">\n      {{i18n(\'modal_horizontal.position_1\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_horizontal.indexOf(\'0010\') != -1">\n      {{i18n(\'modal_horizontal.position_2\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_horizontal.indexOf(\'0011\') != -1">\n      {{i18n(\'modal_horizontal.position_3\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_horizontal.indexOf(\'0100\') != -1">\n      {{i18n(\'modal_horizontal.position_4\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\' ng-show="availables_horizontal.indexOf(\'0111\') != -1">\n      {{i18n(\'modal_horizontal.position_swing\')}}\n    </div>\n  </section>\n</modal-info-server>\n<!-- Scenary modal -->\n<modal-info-server class=\'modal__mode\' close=\'closeModal()\' show=\'show_modal_scenary\'>\n  <div class=\'ng-modal-action-bar\'>\n    <a class=\'link ng-modal-close\' ng-click=\'closeModal()\'>\n      {{i18n(\'buttons.exit\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleScenaryHelp()\' ng-show=\'!showScenaryHelp\'>\n      {{i18n(\'buttons.help\')}}\n    </a>\n    <a class=\'link ng-modal-help\' ng-click=\'toggleScenaryHelp()\' ng-show=\'showScenaryHelp\'>\n      {{i18n(\'buttons.back\')}}\n    </a>\n  </div>\n  <div class=\'table-adjust__subtitle\'>\n    {{ i18n( \'installation.scenary.header\' ) }}\n  </div>\n  <section class=\'modal__section\' ng-show=\'!showScenaryHelp\'>\n    <a class=\'btn\' id=\'scenary_{{scenary}}_{{scenary_target.id}}\' ng-class="{ \'select\': scenary == scenary_target.scenary }" ng-click=\'selectScenary(scenary)\' ng-repeat=\'scenary in scenaries\'>\n      <i class=\'icon icon-{{scenary}}\'></i>\n      {{ i18n( \'installation.scenary.\' + scenary ) }}\n    </a>\n  </section>\n  <section class=\'modal__section modal__adjust__help\' ng-show=\'showScenaryHelp\'>\n    <div class=\'modal__adjust__help__title\'>\n      {{i18n(\'modal_scenary.occupied\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\'>\n      {{i18n(\'modal_scenary.occupied_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\'>\n      {{i18n(\'modal_scenary.vacant\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\'>\n      {{i18n(\'modal_scenary.vacant_text\')}}\n    </div>\n    <div class=\'modal__adjust__help__title\'>\n      {{i18n(\'modal_scenary.sleep\')}}\n    </div>\n    <div class=\'modal__adjust__help__description\'>\n      {{i18n(\'modal_scenary.sleep_text\')}}\n    </div>\n  </section>\n</modal-info-server>\n<modal-config-device></modal-config-device>\n<modal-config-installation></modal-config-installation>\n<modal-schedules></modal-schedules>\n<modal-alert-installer></modal-alert-installer>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('password.html', '<!-- Change password ------------------------------------------------------------ -->\n<div class=\'change_password\' ng-show=\'!success_update\'>\n  <!-- Title -->\n  <div class=\'login__title\'>\n    {{i18n(\'messages.title.change_password\')}}\n  </div>\n  <!-- Form -->\n  <form class=\'login__form\' name=\'passwordForm\' ng-show=\'!success_update\' novalidate=\'\'>\n    <div class=\'login__form__row\'>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'50\' name=\'password\' ng-minlength=\'8\' ng-model=\'password\' placeholder="{{i18n(\'new_password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'passwordForm.invalid &amp;&amp; passwordForm.password.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' equals=\'{{password}}\' maxlength=\'50\' name=\'passwordRepeat\' ng-model=\'password_confirmation\' placeholder="{{i18n(\'repeat_password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'passwordForm.invalid &amp;&amp; passwordForm.passwordRepeat.$invalid\'>!</div>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'passwordForm.invalid\'>\n      <div ng-show=\'register_error\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'token_error\'>\n        {{i18n(\'messages.errors.token_invalid\')}}\n      </div>\n      <div ng-show=\'passwordForm.password.$error.required\'>\n        {{i18n(\'messages.errors.password_blank\')}}\n      </div>\n      <div ng-show=\'passwordForm.password.$error.minlength\'>\n        {{i18n(\'messages.errors.password_length\')}}\n      </div>\n      <div ng-show=\'passwordForm.passwordRepeat.$error.required\'>\n        {{i18n(\'messages.errors.password_confirmation_blank\')}}\n      </div>\n      <div ng-show=\'!passwordForm.passwordRepeat.$error.required &amp;&amp; passwordForm.passwordRepeat.$invalid\'>\n        {{i18n(\'messages.errors.password_confirmation_check\')}}\n      </div>\n    </div>\n    <!-- send button -->\n    <input class=\'btn btn--primary login__form__btn--send\' ng-click=\'sendPassword()\' type=\'submit\' value="{{i18n(\'buttons.save\')}}">\n    <!-- Message -->\n    <div class=\'login__message\' ng-show=\'!success_update\'>\n      {{i18n(\'messages.info.change_password\')}}\n    </div>\n  </form>\n  <!-- cancel button -->\n  <a class=\'btn login__form__btn--cancel\' href=\'\' ng-click="state = \'login\'">\n    {{i18n(\'buttons.cancel\')}}\n  </a>\n</div>\n<!-- Success Message ------------------------------------------------------------ -->\n<div class=\'login__message login__message--success\' ng-show=\'success_update\'>\n  <!-- Title -->\n  <div class=\'login__message__title\'>\n    {{i18n(\'messages.success.reset_password\')}}\n  </div>\n  <!-- Message -->\n  <div class=\'login__message__content\'>\n    {{i18n(\'messages.info.reset_password\')}}\n  </div>\n  <!-- success button -->\n  <a class=\'btn btn--primary login__form__btn--success\' href=\'\' ui-sref=\'init.login\'>\n    {{i18n(\'messages.info.go_login\')}}\n  </a>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('register.html', '<!-- Create Accoun -------------------------------------------------------------- -->\n<div class=\'create_acount\' ng-show="state == \'register\'">\n  <!-- Title -->\n  <div class=\'login__title\'>\n    {{i18n(\'register.sign_up\')}}\n  </div>\n  <!-- Form -->\n  <form class=\'login__form\' name=\'registerForm\' novalidate=\'\'>\n    <div class=\'login__form__row\'>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'30\' name=\'name\' ng-model=\'register.name\' placeholder="{{i18n(\'name\')}}" required=\'\' type=\'text\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.name.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'30\' name=\'surname\' ng-model=\'register.surname\' placeholder="{{i18n(\'surname\')}}" required=\'\' type=\'text\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.surname.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'50\' name=\'email\' ng-model=\'register.email\' ng-pattern=\'emailFormat\' placeholder="{{i18n(\'email\')}}" required=\'\' type=\'email\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.email.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' maxlength=\'50\' name=\'password\' ng-minlength=\'8\' ng-model=\'register.password\' placeholder="{{i18n(\'new_password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.password.$invalid\'>!</div>\n      </div>\n      <div class=\'login__form__input\'>\n        <input class=\'login__form__input\' equals=\'{{register.password}}\' maxlength=\'50\' name=\'passwordRepeat\' ng-model=\'register.password_confirmation\' placeholder="{{i18n(\'repeat_password\')}}" required=\'\' type=\'password\'>\n        <div class=\'login__input--error\' ng-show=\'registerForm.invalid &amp;&amp; registerForm.passwordRepeat.$invalid\'>!</div>\n      </div>\n    </div>\n    <div class=\'login__form__checkbox checkbox register__first__checkbox\'>\n      <div>\n        <input name=\'condition\' ng-class="{\'error\': registerForm.invalid &amp;&amp; registerForm.condition.$invalid}" ng-model=\'register.condition\' required=\'\' type=\'checkbox\'>\n        <label>\n          {{i18n( \'terms.accept\' )}}\n          <a class=\'link\' href=\'{{terms.legal_terms.link}}\' target=\'_blank\'>\n            {{i18n( \'terms.legal_terms\' )}}\n          </a>\n          {{i18n( \'terms.and\' )}}\n          <a class=\'link\' href=\'{{terms.privacy_policy.link}}\' target=\'_blank\'>\n            {{i18n( \'terms.privacy\' )}}\n          </a>\n        </label>\n      </div>\n    </div>\n    <div class=\'login__form__checkbox second__checkbox checkbox\'>\n      <div>\n        <input name=\'publicity\' ng-model=\'register.publicity\' type=\'checkbox\'>\n        <label>\n          <a class=\'link register_publicity\' href=\'\'>\n            {{i18n( \'terms.publicity\' )}}\n          </a>\n        </label>\n      </div>\n    </div>\n    <!-- error messages -->\n    <div class=\'form__error\' ng-show=\'registerForm.invalid\'>\n      <div ng-show=\'register_error\'>\n        {{i18n(\'messages.errors.email_taken\')}}\n      </div>\n      <div ng-show=\'registerForm.name.$error.required\'>\n        {{i18n(\'messages.errors.name_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.surname.$error.required\'>\n        {{i18n(\'messages.errors.surname_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.email.$error.required\'>\n        {{i18n(\'messages.errors.email_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.email.$dirty &amp;&amp; (registerForm.email.$error.email || registerForm.email.$error.pattern)\'>\n        {{i18n(\'messages.errors.email\')}}\n      </div>\n      <div ng-show=\'registerForm.password.$error.required\'>\n        {{i18n(\'messages.errors.password_blank\')}}\n      </div>\n      <div ng-show=\'registerForm.password.$error.minlength\'>\n        {{i18n(\'messages.errors.password_length\')}}\n      </div>\n      <div ng-show=\'registerForm.passwordRepeat.$error.required\'>\n        {{i18n(\'messages.errors.password_confirmation_blank\')}}\n      </div>\n      <div ng-show=\'!registerForm.passwordRepeat.$error.required &amp;&amp; registerForm.passwordRepeat.$invalid\'>\n        {{i18n(\'messages.errors.password_confirmation_check\')}}\n      </div>\n      <div ng-show=\'registerForm.condition.$error.required\'>\n        {{i18n(\'messages.errors.condition\')}}\n      </div>\n    </div>\n    <!-- send button -->\n    <input class=\'btn btn--primary login__form__btn--send\' href=\'\' id=\'register_btn\' ng-click=\'submitRegisterForm()\' type=\'submit\' value="{{i18n(\'buttons.init\')}}">\n  </form>\n  <!-- cancel button -->\n  <a class=\'btn login__form__btn--cancel\' href=\'\' ng-click=\'reloadLogin()\'>\n    {{i18n(\'buttons.cancel\')}}\n  </a>\n</div>\n<!-- Success Register ----------------------------------------------------------- -->\n<div class=\'login__message--success\' ng-show="state == \'register_success\'">\n  <!-- Title -->\n  <div class=\'login__message__title\'>\n    {{i18n(\'messages.success.register\')}}\n  </div>\n  <!-- Message -->\n  <div class=\'login__message__content\'>\n    {{i18n(\'messages.info.register_success\')}}\n  </div>\n  <!-- success button -->\n  <a class=\'btn btn--primary login__form__btn--success\' href=\'#\' ui-sref=\'home\'>\n    {{i18n(\'buttons.back\')}}\n  </a>\n</div>\n<!-- Terms ----------------------------------------------------------- -->\n<div class=\'terms\' ng-show="state == \'terms\'">\n  <div class=\'login__title\'>\n    {{i18n( \'terms.title\' )}}\n  </div>\n  <div class=\'terms__body\' ng-bind-html="i18n(\'terms.body\')"></div>\n  <a class=\'btn terms__btn--back\' href=\'\' ng-click="state = \'register\'">\n    {{i18n( \'buttons.back\' )}}\n  </a>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('splash.html', '<div class=\'splash\'>\n  <div class=\'splash__logo\'>\n    <img alt=\'airzone logo\' class=\'login__logo__img\' src=\'assets/daikinLogo.png\'>\n  </div>\n  <div class=\'splash__version\'>\n    {{ version_app }}\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('support.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content\'>\n  <!-- Header Content --------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{ i18n(\'support\') }}\n    </div>\n  </header>\n  <div class=\'support\'>\n    <h3 class=\'form__label\'>{{ i18n(\'videos\') }}</h3>\n    <a class=\'support__item\' ng-click=\'openExternalLink(video.url)\' ng-repeat=\'video in support.videos\'>\n      <div class=\'support__item__cover\' style=\'background-image:url({{video.cover}})\'></div>\n      <div class=\'support__item__title\'>\n        {{ video.title }}\n      </div>\n    </a>\n    <h3 class=\'form__label\'>{{ i18n(\'documents\') }}</h3>\n    <a class=\'support__item\' ng-click=\'openExternalLink(document.url)\' ng-repeat=\'document in support.documents\'>\n      <div class=\'support__item__cover\' style=\'background-image:url({{document.cover}})\'></div>\n      <div class=\'support__item__title\'>\n        {{ document.title }}\n      </div>\n    </a>\n  </div>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('unsupported_browser.html', '<div class=\'page-error\'>\n  <div class=\'page-error__title\'>\n    Navegador no soportado\n  </div>\n  <div class=\'page-error__description\'>\n    {{i18n(\'messages.info.browsers\')}}\n  </div>\n  <div class=\'page-error__browsers\'>\n    <a class=\'link page-error__browser\' href=\'https://www.google.es/chrome/\'>\n      <img alt=\'Chrome logo\' ng-src=\'assets/chromeLogo.png\'>\n      Google Chrome\n    </a>\n    <a class=\'link page-error__browser\' href=\'https://www.apple.com/es/safari/\'>\n      <img alt=\'Safari logo\' ng-src=\'assets/safariLogo.png\'>\n      Safari\n    </a>\n    <a class=\'link page-error__browser\' href=\'https://www.mozilla.org/download\'>\n      <img alt=\'Firefox logo\' ng-src=\'assets/firefoxLogo.png\'>\n      Firefox\n    </a>\n  </div>\n  <div class=\'page error_browsers\'>\n    <a class=\'btn btn--primary\' ng-click=\'browserContinue()\'>\n      {{i18n(\'buttons.continue\')}}\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('update_app.html', '<div class=\'page-error\'>\n  <div class=\'page-upload__title\'>\n    {{ i18n(\'home.upload.title\') }}\n  </div>\n  <div class=\'page-upload__description\'>\n    {{ i18n(\'home.upload.description\') }}\n  </div>\n  <div class=\'upload__container\'>\n    <a class=\'link upload__app__link\' ng-click=\'goMarket()\'>\n      <img alt=\'google play\' ng-src=\'assets/googlePlay.png\'>\n    </a>\n  </div>\n</div>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('user_installation.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content\' ng-class="{\'show-climate\': show_climate}">\n  <section class=\'systems\'>\n    <section class=\'system\' id=\'installation-{{installation.id}}\' ng-class="{\'expand\': expand, \'powerOff\' : !installation.power}">\n      <div class=\'system__header\'>\n        <div class=\'system__title\' id=\'installation_expand\' ng-click=\'expand = !expand\' ng-show=\'devices.length &gt; 1\'>\n          <i class=\'icon icon-build{{installation.icon}}\'></i>\n          {{ installation.name }}\n        </div>\n        <div class=\'system__title\' id=\'installation_expand\' ng-show=\'devices.length &lt; 2\'>\n          <i class=\'icon icon-build{{installation.icon}}\'></i>\n          {{ installation.name }}\n        </div>\n        <div class=\'system__modes\' ng-class="{\'loading\' : !installation.updated}" ng-if=\'devices.length &gt; 1\'>\n          <a class=\'btn-group icon-btn\' id=\'installation_mode\' ng-class="{\'cool\': mode_color == \'cool\', \'heat\': mode_color == \'heat\'}" ng-click=\'showModeOptions()\'>\n            <i class=\'icon icon-{{getClassFromMode(installation.mode)}}\'></i>\n          </a>\n          <a class=\'btn-group icon-btn\' id=\'installation_speed\' ng-click=\'showVelocityOptionsRow()\' ng-show="installation.mode != \'5\'">\n            <i class=\'icon icon-velocity{{installation.availables_speeds}}-{{getVelocity()}}\'></i>\n          </a>\n          <a class=\'btn-group icon-btn\' id=\'installation_scenary\' ng-click=\'showScenaryModal()\'>\n            <i class=\'icon icon-{{installation.scenary}}\'></i>\n          </a>\n        </div>\n        <div class=\'system__actions\' ng-if=\'devices.length &gt; 1\'>\n          <a class=\'btn icon-btn\' id=\'installation_config\' ng-click=\'showConfigInstallationModal()\'>\n            <i class=\'icon icon-adjust\'></i>\n          </a>\n          <a class=\'btn icon-btn\' id=\'installation_schedules\' ng-click=\'showSchedulesModal()\'>\n            <i class=\'icon icon-program\'></i>\n          </a>\n        </div>\n        <div class=\'system__temp\' id=\'buttons_temp_{{installation.id}}\' ng-class="{\'cool\': installation.power &amp;&amp; mode_color == \'cool\', \'heat\': installation.power &amp;&amp; mode_color == \'heat\'}" ng-if=\'devices.length &gt; 1\' ng-show="installation.mode != \'3\' &amp;&amp; installation.mode != \'5\'">\n          <a class=\'btn icon-btn\' id=\'minus_installation_consign\' ng-class="{\'loading\' : !installation.updated}" ng-click="updateConsign(\'minus\')" ng-if=\'canChangeTemp()\'>\n            <i class=\'icon icon-less\'></i>\n          </a>\n          <span class=\'system__temp-value\' id=\'installation_consign\' ng-class="{\'loading\' : !installation.updated}">\n            {{getConsign()}} º\n          </span>\n          <div class=\'loader\' ng-if=\'!installation.updated\'>\n            <div class=\'spinner\'>\n              <div class=\'rect1\'></div>\n              <div class=\'rect2\'></div>\n              <div class=\'rect3\'></div>\n              <div class=\'rect4\'></div>\n              <div class=\'rect5\'></div>\n            </div>\n          </div>\n          <a class=\'btn icon-btn\'>\n            <i class=\'icon icon-more\' id=\'plus_installation_consign\' ng-class="{\'loading\' : !installation.updated}" ng-click="updateConsign(\'plus\')" ng-if=\'canChangeTemp()\'></i>\n          </a>\n        </div>\n        <div class=\'system__power\' ng-if=\'devices.length &gt; 1\'>\n          <a class=\'btn icon-btn\' id=\'installation_power\' ng-class="{\'select\': installation.power}" ng-click=\'togglePower()\'>\n            <i class=\'icon icon-power\'></i>\n          </a>\n        </div>\n      </div>\n    </section>\n    <div class=\'system__zones__list\'>\n      <device_row device=\'device\' devices=\'devices\' installation=\'installation\' ng-repeat=\'device in devices\'></device_row>\n    </div>\n  </section>\n  <section class=\'climate\'>\n    <div class=\'climate__content\'>\n      <div class=\'climate__item climate__city\'>\n        <div class=\'climate__city__title\'>\n          {{ installation.spot_name }}\n        </div>\n        <div class=\'climate__text\'>\n          {{ date.getDate() + " " + i18n( "installation.months." + date.getMonth() ) + " - " + date.getHours() + ":" + getMinutes() }}\n        </div>\n        <div class=\'climate__city__icon\'>\n          {{ current_temp }}º\n          <i class=\'icon\' ng-class=\'current_weather_icon\'></i>\n        </div>\n        <div class=\'climate__text\'>\n          {{ current_description }}\n        </div>\n      </div>\n      <div class=\'climate__item climate__weather\'>\n        <div class=\'climate__weather__table\'>\n          <div class=\'climate__weather__day\' ng-repeat=\'hour in forecast\'>\n            <div class=\'climate__weather__day__time\'>\n              {{ (hour.time / 100 + \':00\') }}\n            </div>\n            <div class=\'climate__weatjer__day__icon\'>\n              <i class=\'icon\' ng-class=\'weatherIcon( hour.weatherCode );\'></i>\n            </div>\n            <div class=\'climate__weather__day__temp\' ng-if="unit_format == \'fahrenheit\'">\n              {{ hour.tempF }}º\n            </div>\n            <div class=\'climate__weather__day__temp\' ng-if="unit_format == \'celsius\'">\n              {{ hour.tempC }}º\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\'climate__item climate__week\'>\n        <div class=\'climate__week__day\' ng-repeat=\'day in daily\'>\n          <div class=\'climate__week__day__title\'>\n            {{ i18n( "installation.days." + ( date.getDay() + $index + 1 ) % 7 ) }}\n          </div>\n          <div class=\'climate__week__day__temp\' ng-if="unit_format == \'fahrenheit\'">\n            {{ day.maxtempF }}º / {{ day.mintempF }}º\n          </div>\n          <div class=\'climate__week__day__temp\' ng-if="unit_format == \'celsius\'">\n            {{ day.maxtempC }}º / {{ day.mintempC }}º\n          </div>\n          <div class=\'climate__week__day__icon\'>\n            <i class=\'icon\' ng-class=\'weatherIcon( day.hourly[0].weatherCode );\'></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</section>')
                }
                ]), angular.module('templates').run(['$templateCache',
                function (e) {
                  e.put('user_installations.html', '<!-- Content ---------------------------------------------------------------------- -->\n<section class=\'content servers\' ng-class="{\'edit\': editInstallation, \'no-servers\': noInstallation }" ng-show=\'!messageInstallation\'>\n  <!-- Header Content ------------------------------------------------------------- -->\n  <header class=\'content__header\'>\n    <div class=\'content__header__title\'>\n      {{ i18n( \'installation_relation_list.title\' ) }}\n    </div>\n    <div class=\'content__header__action\' ng-show=\'!noInstallation\'>\n      <a class=\'btn\' id=\'edit_servers\' ng-click=\'editInstallation = !editInstallation\'>\n        {{ editInstallation ? i18n( \'installation_relation_list.actions.close\' ) : i18n( \'installation_relation_list.actions.edit\' ) }}\n      </a>\n    </div>\n  </header>\n  <!-- No server message ---------------------------------------------------------- -->\n  <div class=\'server__message\'>\n    <div class=\'server__message__title\'>\n      {{ i18n( \'installation_relation_list.no_installations_title\' ) }}\n    </div>\n    {{ i18n( \'installation_relation_list.no_installations_info\' ) }}\n  </div>\n  <!-- List user installations ---------------------------------------------------------- -->\n  <div class=\'servers__list\' ng-repeat=\'ir in installation_relations\'>\n    <div class=\'server__item\' id=\'installation_relation_{{ir.id}}\'>\n      <a class=\'btn server__item__btn\' id=\'installation_{{ir.installation_id}}\' ng-click=\'showDevicesDesign(ir)\'>\n        <i class=\'{{getIcon( ir.installation.icon )}}\'></i>\n        <div class=\'server__item__name\'>{{ir.installation.name}}</div>\n        <div class=\'server__item__location\'>{{ir.installation.spot_name}}</div>\n      </a>\n      <div class=\'server__item__actions\' ng-show=\'editInstallation\'>\n        <div class=\'server__item__action advanced_adjust\' ng-class="{\'advanced_adjust\' : user.user.advanced_adjust}">\n          <a class=\'btn tooltip\' data-tooltop="{{i18n( \'installation_relation_list.actions.edit\' )}}" id=\'edit_{{ir.installation_id}}\' ng-click=\'showEditInstallationModal(ir)\'>\n            <i class=\'icon icon-edit\'></i>\n          </a>\n        </div>\n        <div class=\'server__item__action advanced_adjust\' ng-class="{\'advanced_adjust\' : user.user.advanced_adjust}" ng-if=\'editInstallation\'>\n          <a class=\'btn tooltip\' data-tooltop="{{ i18n( \'installation.modal.links.users\' ) }}" ng-click=\'showUsersInstallationModal(ir)\'>\n            <i class=\'icon icon-user\'></i>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\'clearfix\'></div>\n  <a class=\'btn server__add\' id=\'add_server_button\' ng-if="!typeOfUser( \'demo\' )" ng-show=\'!loader\' ui-sref=\'home.addUserDevice\'>\n    {{ i18n( \'installation_relation_list.actions.add_device\' ) }}\n  </a>\n</section>\n<!-- loader -->\n<div class=\'loader\' ng-show=\'loader\'>\n  <div class=\'spinner\'>\n    <div class=\'rect1\'></div>\n    <div class=\'rect2\'></div>\n    <div class=\'rect3\'></div>\n    <div class=\'rect4\'></div>\n    <div class=\'rect5\'></div>\n  </div>\n</div>')
                }
                ]), function () {
                  function e(n, a) {
                    (null === n || void 0 === n) && e.warn('Warning', 'You must pass your app key when you instantiate Pusher.'),
                    a = a || {
                    };
                    var t = this;
                    this.key = n,
                    this.config = e.Util.extend(e.getGlobalConfig(), a.cluster ? e.getClusterConfig(a.cluster)  : {
                    }, a),
                    this.channels = new e.Channels,
                    this.global_emitter = new e.EventsDispatcher,
                    this.sessionID = Math.floor(1000000000 * Math.random()),
                    this.timeline = new e.Timeline(this.key, this.sessionID, {
                      cluster: this.config.cluster,
                      features: e.Util.getClientFeatures(),
                      params: this.config.timelineParams || {
                      },
                      limit: 50,
                      level: e.Timeline.INFO,
                      version: e.VERSION
                    }),
                    this.config.disableStats || (this.timelineSender = new e.TimelineSender(this.timeline, {
                      host: this.config.statsHost,
                      path: '/timeline/v2/jsonp'
                    })),
                    this.connection = new e.ConnectionManager(this.key, e.Util.extend({
                      getStrategy: function (n) {
                        return n = e.Util.extend({
                        }, t.config, n),
                        e.StrategyBuilder.build(e.getDefaultStrategy(n), n)
                      },
                      timeline: this.timeline,
                      activityTimeout: this.config.activity_timeout,
                      pongTimeout: this.config.pong_timeout,
                      unavailableTimeout: this.config.unavailable_timeout
                    }, this.config, {
                      encrypted: this.isEncrypted()
                    })),
                    this.connection.bind('connected', function () {
                      t.subscribeAll(),
                      t.timelineSender && t.timelineSender.send(t.connection.isEncrypted())
                    }),
                    this.connection.bind('message', function (e) {
                      var n = 0 === e.event.indexOf('pusher_internal:');
                      if (e.channel) {
                        var a = t.channel(e.channel);
                        a && a.handleEvent(e.event, e.data)
                      }
                      n || t.global_emitter.emit(e.event, e.data)
                    }),
                    this.connection.bind('disconnected', function () {
                      t.channels.disconnect()
                    }),
                    this.connection.bind('error', function (n) {
                      e.warn('Error', n)
                    }),
                    e.instances.push(this),
                    this.timeline.info({
                      instances: e.instances.length
                    }),
                    e.isReady && t.connect()
                  }
                  var n = e.prototype;
                  e.instances = [
                  ],
                  e.isReady = !1,
                  e.debug = function () {
                    e.log && e.log(e.Util.stringify.apply(this, arguments))
                  },
                  e.warn = function () {
                    var n = e.Util.stringify.apply(this, arguments);
                    window.console && (window.console.warn ? window.console.warn(n)  : window.console.log && window.console.log(n)),
                    e.log && e.log(n)
                  },
                  e.ready = function () {
                    e.isReady = !0;
                    for (var n = 0, a = e.instances.length; a > n; n++) e.instances[n].connect()
                  },
                  n.channel = function (e) {
                    return this.channels.find(e)
                  },
                  n.allChannels = function () {
                    return this.channels.all()
                  },
                  n.connect = function () {
                    if (this.connection.connect(), this.timelineSender && !this.timelineSenderTimer) {
                      var n = this.connection.isEncrypted(),
                      a = this.timelineSender;
                      this.timelineSenderTimer = new e.PeriodicTimer(60000, function () {
                        a.send(n)
                      })
                    }
                  },
                  n.disconnect = function () {
                    this.connection.disconnect(),
                    this.timelineSenderTimer && (this.timelineSenderTimer.ensureAborted(), this.timelineSenderTimer = null)
                  },
                  n.bind = function (e, n) {
                    return this.global_emitter.bind(e, n),
                    this
                  },
                  n.bind_all = function (e) {
                    return this.global_emitter.bind_all(e),
                    this
                  },
                  n.subscribeAll = function () {
                    for (var e in this.channels.channels) this.channels.channels.hasOwnProperty(e) && this.subscribe(e)
                  },
                  n.subscribe = function (e) {
                    return e = this.channels.add(e, this),
                    'connected' === this.connection.state && e.subscribe(),
                    e
                  },
                  n.unsubscribe = function (e) {
                    e = this.channels.remove(e),
                    'connected' === this.connection.state && e.unsubscribe()
                  },
                  n.send_event = function (e, n, a) {
                    return this.connection.send_event(e, n, a)
                  },
                  n.isEncrypted = function () {
                    return 'https:' === e.Util.getDocument().location.protocol ? !0 : Boolean(this.config.encrypted)
                  },
                  e.HTTP = {
                  },
                  this.Pusher = e
                }.call(this), function () {
                  function e(e) {
                    window.clearTimeout(e)
                  }
                  function n(e) {
                    window.clearInterval(e)
                  }
                  function a(e, n, a, t) {
                    var i = this;
                    this.clear = n,
                    this.timer = e(function () {
                      null !== i.timer && (i.timer = t(i.timer))
                    }, a)
                  }
                  var t = a.prototype;
                  t.isRunning = function () {
                    return null !== this.timer
                  },
                  t.ensureAborted = function () {
                    this.timer && (this.clear(this.timer), this.timer = null)
                  },
                  Pusher.Timer = function (n, t) {
                    return new a(setTimeout, e, n, function () {
                      return t(),
                      null
                    })
                  },
                  Pusher.PeriodicTimer = function (e, t) {
                    return new a(setInterval, n, e, function (e) {
                      return t(),
                      e
                    })
                  }
                }.call(this), function () {
                  Pusher.Util = {
                    now: function () {
                      return Date.now ? Date.now()  : (new Date).valueOf()
                    },
                    defer: function (e) {
                      return new Pusher.Timer(0, e)
                    },
                    extend: function (e) {
                      for (var n = 1; n < arguments.length; n++) {
                        var a,
                        t = arguments[n];
                        for (a in t) e[a] = t[a] && t[a].constructor && t[a].constructor === Object ? Pusher.Util.extend(e[a] || {
                        }, t[a])  : t[a]
                      }
                      return e
                    },
                    stringify: function () {
                      for (var e = [
                        'Pusher'
                      ], n = 0; n < arguments.length; n++) e.push('string' == typeof arguments[n] ? arguments[n] : void 0 === window.JSON ? arguments[n].toString()  : JSON.stringify(arguments[n]));
                      return e.join(' : ')
                    },
                    arrayIndexOf: function (e, n) {
                      var a = Array.prototype.indexOf;
                      if (null === e) return - 1;
                      if (a && e.indexOf === a) return e.indexOf(n);
                      for (var a = 0, t = e.length; t > a; a++) if (e[a] === n) return a;
                      return - 1
                    },
                    objectApply: function (e, n) {
                      for (var a in e) Object.prototype.hasOwnProperty.call(e, a) && n(e[a], a, e)
                    },
                    keys: function (e) {
                      var n = [
                      ];
                      return Pusher.Util.objectApply(e, function (e, a) {
                        n.push(a)
                      }),
                      n
                    },
                    values: function (e) {
                      var n = [
                      ];
                      return Pusher.Util.objectApply(e, function (e) {
                        n.push(e)
                      }),
                      n
                    },
                    apply: function (e, n, a) {
                      for (var t = 0; t < e.length; t++) n.call(a || window, e[t], t, e)
                    },
                    map: function (e, n) {
                      for (var a = [
                      ], t = 0; t < e.length; t++) a.push(n(e[t], t, e, a));
                      return a
                    },
                    mapObject: function (e, n) {
                      var a = {
                      };
                      return Pusher.Util.objectApply(e, function (e, t) {
                        a[t] = n(e)
                      }),
                      a
                    },
                    filter: function (e, n) {
                      n = n || function (e) {
                        return !!e
                      };
                      for (var a = [
                      ], t = 0; t < e.length; t++) n(e[t], t, e, a) && a.push(e[t]);
                      return a
                    },
                    filterObject: function (e, n) {
                      var a = {
                      };
                      return Pusher.Util.objectApply(e, function (t, i) {
                        (n && n(t, i, e, a) || Boolean(t)) && (a[i] = t)
                      }),
                      a
                    },
                    flatten: function (e) {
                      var n = [
                      ];
                      return Pusher.Util.objectApply(e, function (e, a) {
                        n.push([a,
                        e])
                      }),
                      n
                    },
                    any: function (e, n) {
                      for (var a = 0; a < e.length; a++) if (n(e[a], a, e)) return !0;
                      return !1
                    },
                    all: function (e, n) {
                      for (var a = 0; a < e.length; a++) if (!n(e[a], a, e)) return !1;
                      return !0
                    },
                    method: function (e) {
                      var n = Array.prototype.slice.call(arguments, 1);
                      return function (a) {
                        return a[e].apply(a, n.concat(arguments))
                      }
                    },
                    getWindow: function () {
                      return window
                    },
                    getDocument: function () {
                      return document
                    },
                    getNavigator: function () {
                      return navigator
                    },
                    getLocalStorage: function () {
                      try {
                        return window.localStorage
                      } catch (e) {
                      }
                    },
                    getClientFeatures: function () {
                      return Pusher.Util.keys(Pusher.Util.filterObject({
                        ws: Pusher.WSTransport,
                        flash: Pusher.FlashTransport
                      }, function (e) {
                        return e.isSupported({
                        })
                      }))
                    },
                    addWindowListener: function (e, n) {
                      var a = Pusher.Util.getWindow();
                      void 0 !== a.addEventListener ? a.addEventListener(e, n, !1)  : a.attachEvent('on' + e, n)
                    },
                    removeWindowListener: function (e, n) {
                      var a = Pusher.Util.getWindow();
                      void 0 !== a.addEventListener ? a.removeEventListener(e, n, !1)  : a.detachEvent('on' + e, n)
                    },
                    isXHRSupported: function () {
                      var e = window.XMLHttpRequest;
                      return Boolean(e) && void 0 !== (new e).withCredentials
                    },
                    isXDRSupported: function (e) {
                      e = e ? 'https:' : 'http:';
                      var n = Pusher.Util.getDocument().location.protocol;
                      return Boolean(window.XDomainRequest) && n === e
                    }
                  }
                }.call(this), function () {
                  Pusher.VERSION = '2.2.4',
                  Pusher.PROTOCOL = 7,
                  Pusher.host = 'ws.pusherapp.com',
                  Pusher.ws_port = 80,
                  Pusher.wss_port = 443,
                  Pusher.sockjs_host = 'sockjs.pusher.com',
                  Pusher.sockjs_http_port = 80,
                  Pusher.sockjs_https_port = 443,
                  Pusher.sockjs_path = '/pusher',
                  Pusher.stats_host = 'stats.pusher.com',
                  Pusher.channel_auth_endpoint = '/pusher/auth',
                  Pusher.channel_auth_transport = 'ajax',
                  Pusher.activity_timeout = 120000,
                  Pusher.pong_timeout = 30000,
                  Pusher.unavailable_timeout = 10000,
                  Pusher.cdn_http = 'http://js.pusher.com/',
                  Pusher.cdn_https = 'https://js.pusher.com/',
                  Pusher.dependency_suffix = '.min',
                  Pusher.getDefaultStrategy = function (e) {
                    return [[':def',
                    'ws_options',
                    {
                      hostUnencrypted: e.wsHost + ':' + e.wsPort,
                      hostEncrypted: e.wsHost + ':' + e.wssPort
                    }
                    ],
                    [
                      ':def',
                      'wss_options',
                      [
                        ':extend',
                        ':ws_options',
                        {
                          encrypted: !0
                        }
                      ]
                    ],
                    [
                      ':def',
                      'sockjs_options',
                      {
                        hostUnencrypted: e.httpHost + ':' + e.httpPort,
                        hostEncrypted: e.httpHost + ':' + e.httpsPort,
                        httpPath: e.httpPath
                      }
                    ],
                    [
                      ':def',
                      'timeouts',
                      {
                        loop: !0,
                        timeout: 15000,
                        timeoutLimit: 60000
                      }
                    ],
                    [
                      ':def',
                      'ws_manager',
                      [
                        ':transport_manager',
                        {
                          lives: 2,
                          minPingDelay: 10000,
                          maxPingDelay: e.activity_timeout
                        }
                      ]
                    ],
                    [
                      ':def',
                      'streaming_manager',
                      [
                        ':transport_manager',
                        {
                          lives: 2,
                          minPingDelay: 10000,
                          maxPingDelay: e.activity_timeout
                        }
                      ]
                    ],
                    [
                      ':def_transport',
                      'ws',
                      'ws',
                      3,
                      ':ws_options',
                      ':ws_manager'
                    ],
                    [
                      ':def_transport',
                      'wss',
                      'ws',
                      3,
                      ':wss_options',
                      ':ws_manager'
                    ],
                    [
                      ':def_transport',
                      'flash',
                      'flash',
                      2,
                      ':ws_options',
                      ':ws_manager'
                    ],
                    [
                      ':def_transport',
                      'sockjs',
                      'sockjs',
                      1,
                      ':sockjs_options'
                    ],
                    [
                      ':def_transport',
                      'xhr_streaming',
                      'xhr_streaming',
                      1,
                      ':sockjs_options',
                      ':streaming_manager'
                    ],
                    [
                      ':def_transport',
                      'xdr_streaming',
                      'xdr_streaming',
                      1,
                      ':sockjs_options',
                      ':streaming_manager'
                    ],
                    [
                      ':def_transport',
                      'xhr_polling',
                      'xhr_polling',
                      1,
                      ':sockjs_options'
                    ],
                    [
                      ':def_transport',
                      'xdr_polling',
                      'xdr_polling',
                      1,
                      ':sockjs_options'
                    ],
                    [
                      ':def',
                      'ws_loop',
                      [
                        ':sequential',
                        ':timeouts',
                        ':ws'
                      ]
                    ],
                    [
                      ':def',
                      'wss_loop',
                      [
                        ':sequential',
                        ':timeouts',
                        ':wss'
                      ]
                    ],
                    [
                      ':def',
                      'flash_loop',
                      [
                        ':sequential',
                        ':timeouts',
                        ':flash'
                      ]
                    ],
                    [
                      ':def',
                      'sockjs_loop',
                      [
                        ':sequential',
                        ':timeouts',
                        ':sockjs'
                      ]
                    ],
                    [
                      ':def',
                      'streaming_loop',
                      [
                        ':sequential',
                        ':timeouts',
                        [
                          ':if',
                          [
                            ':is_supported',
                            ':xhr_streaming'
                          ],
                          ':xhr_streaming',
                          ':xdr_streaming'
                        ]
                      ]
                    ],
                    [
                      ':def',
                      'polling_loop',
                      [
                        ':sequential',
                        ':timeouts',
                        [
                          ':if',
                          [
                            ':is_supported',
                            ':xhr_polling'
                          ],
                          ':xhr_polling',
                          ':xdr_polling'
                        ]
                      ]
                    ],
                    [
                      ':def',
                      'http_loop',
                      [
                        ':if',
                        [
                          ':is_supported',
                          ':streaming_loop'
                        ],
                        [
                          ':best_connected_ever',
                          ':streaming_loop',
                          [
                            ':delayed',
                            4000,
                            [
                              ':polling_loop'
                            ]
                          ]
                        ],
                        [
                          ':polling_loop'
                        ]
                      ]
                    ],
                    [
                      ':def',
                      'http_fallback_loop',
                      [
                        ':if',
                        [
                          ':is_supported',
                          ':http_loop'
                        ],
                        [
                          ':http_loop'
                        ],
                        [
                          ':sockjs_loop'
                        ]
                      ]
                    ],
                    [
                      ':def',
                      'strategy',
                      [
                        ':cached',
                        1800000,
                        [
                          ':first_connected',
                          [
                            ':if',
                            [
                              ':is_supported',
                              ':ws'
                            ],
                            e.encrypted ? [
                              ':best_connected_ever',
                              ':ws_loop',
                              [
                                ':delayed',
                                2000,
                                [
                                  ':http_fallback_loop'
                                ]
                              ]
                            ] : [
                              ':best_connected_ever',
                              ':ws_loop',
                              [
                                ':delayed',
                                2000,
                                [
                                  ':wss_loop'
                                ]
                              ],
                              [
                                ':delayed',
                                5000,
                                [
                                  ':http_fallback_loop'
                                ]
                              ]
                            ],
                            [
                              ':if',
                              [
                                ':is_supported',
                                ':flash'
                              ],
                              [
                                ':best_connected_ever',
                                ':flash_loop',
                                [
                                  ':delayed',
                                  2000,
                                  [
                                    ':http_fallback_loop'
                                  ]
                                ]
                              ],
                              [
                                ':http_fallback_loop'
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]]
                  }
                }.call(this), function () {
                  Pusher.getGlobalConfig = function () {
                    return {
                      wsHost: Pusher.host,
                      wsPort: Pusher.ws_port,
                      wssPort: Pusher.wss_port,
                      httpHost: Pusher.sockjs_host,
                      httpPort: Pusher.sockjs_http_port,
                      httpsPort: Pusher.sockjs_https_port,
                      httpPath: Pusher.sockjs_path,
                      statsHost: Pusher.stats_host,
                      authEndpoint: Pusher.channel_auth_endpoint,
                      authTransport: Pusher.channel_auth_transport,
                      activity_timeout: Pusher.activity_timeout,
                      pong_timeout: Pusher.pong_timeout,
                      unavailable_timeout: Pusher.unavailable_timeout
                    }
                  },
                  Pusher.getClusterConfig = function (e) {
                    return {
                      wsHost: 'ws-' + e + '.pusher.com',
                      httpHost: 'sockjs-' + e + '.pusher.com'
                    }
                  }
                }.call(this), function () {
                  function e(e) {
                    var n = function (n) {
                      Error.call(this, n),
                      this.name = e
                    };
                    return Pusher.Util.extend(n.prototype, Error.prototype),
                    n
                  }
                  Pusher.Errors = {
                    BadEventName: e('BadEventName'),
                    RequestTimedOut: e('RequestTimedOut'),
                    TransportPriorityTooLow: e('TransportPriorityTooLow'),
                    TransportClosed: e('TransportClosed'),
                    UnsupportedTransport: e('UnsupportedTransport'),
                    UnsupportedStrategy: e('UnsupportedStrategy')
                  }
                }.call(this), function () {
                  function e(e) {
                    this.callbacks = new n,
                    this.global_callbacks = [
                    ],
                    this.failThrough = e
                  }
                  function n() {
                    this._callbacks = {
                    }
                  }
                  var a = e.prototype;
                  a.bind = function (e, n, a) {
                    return this.callbacks.add(e, n, a),
                    this
                  },
                  a.bind_all = function (e) {
                    return this.global_callbacks.push(e),
                    this
                  },
                  a.unbind = function (e, n, a) {
                    return this.callbacks.remove(e, n, a),
                    this
                  },
                  a.unbind_all = function (e, n) {
                    return this.callbacks.remove(e, n),
                    this
                  },
                  a.emit = function (e, n) {
                    var a;
                    for (a = 0; a < this.global_callbacks.length; a++) this.global_callbacks[a](e, n);
                    var t = this.callbacks.get(e);
                    if (t && 0 < t.length) for (a = 0; a < t.length; a++) t[a].fn.call(t[a].context || window, n);
                     else this.failThrough && this.failThrough(e, n);
                    return this
                  },
                  n.prototype.get = function (e) {
                    return this._callbacks['_' + e]
                  },
                  n.prototype.add = function (e, n, a) {
                    e = '_' + e,
                    this._callbacks[e] = this._callbacks[e] || [
                    ],
                    this._callbacks[e].push({
                      fn: n,
                      context: a
                    })
                  },
                  n.prototype.remove = function (e, n, a) {
                    e || n || a ? (e = e ? [
                      '_' + e
                    ] : Pusher.Util.keys(this._callbacks), n || a ? Pusher.Util.apply(e, function (e) {
                      this._callbacks[e] = Pusher.Util.filter(this._callbacks[e] || [
                      ], function (e) {
                        return n && n !== e.fn || a && a !== e.context
                      }),
                      0 === this._callbacks[e].length && delete this._callbacks[e]
                    }, this)  : Pusher.Util.apply(e, function (e) {
                      delete this._callbacks[e]
                    }, this))  : this._callbacks = {
                    }
                  },
                  Pusher.EventsDispatcher = e
                }.call(this), function () {
                  function e(e, n) {
                    this.lastId = 0,
                    this.prefix = e,
                    this.name = n
                  }
                  var n = e.prototype;
                  n.create = function (e) {
                    this.lastId++;
                    var n = this.lastId,
                    a = this.prefix + n,
                    t = this.name + '[' + n + ']',
                    i = !1,
                    r = function () {
                      i || (e.apply(null, arguments), i = !0)
                    };
                    return this[n] = r,
                    {
                      number: n,
                      id: a,
                      name: t,
                      callback: r
                    }
                  },
                  n.remove = function (e) {
                    delete this[e.number]
                  },
                  Pusher.ScriptReceiverFactory = e,
                  Pusher.ScriptReceivers = new e('_pusher_script_', 'Pusher.ScriptReceivers')
                }.call(this), function () {
                  function e(e) {
                    this.src = e
                  }
                  var n = e.prototype;
                  n.send = function (e) {
                    var n = this,
                    a = 'Error loading ' + n.src;
                    n.script = document.createElement('script'),
                    n.script.id = e.id,
                    n.script.src = n.src,
                    n.script.type = 'text/javascript',
                    n.script.charset = 'UTF-8',
                    n.script.addEventListener ? (n.script.onerror = function () {
                      e.callback(a)
                    }, n.script.onload = function () {
                      e.callback(null)
                    })  : n.script.onreadystatechange = function () {
                      ('loaded' === n.script.readyState || 'complete' === n.script.readyState) && e.callback(null)
                    },
                    void 0 === n.script.async && document.attachEvent && /opera/i.test(navigator.userAgent) ? (n.errorScript = document.createElement('script'), n.errorScript.id = e.id + '_error', n.errorScript.text = e.name + '(\'' + a + '\');', n.script.async = n.errorScript.async = !1)  : n.script.async = !0;
                    var t = document.getElementsByTagName('head') [0];
                    t.insertBefore(n.script, t.firstChild),
                    n.errorScript && t.insertBefore(n.errorScript, n.script.nextSibling)
                  },
                  n.cleanup = function () {
                    this.script && (this.script.onload = this.script.onerror = null, this.script.onreadystatechange = null),
                    this.script && this.script.parentNode && this.script.parentNode.removeChild(this.script),
                    this.errorScript && this.errorScript.parentNode && this.errorScript.parentNode.removeChild(this.errorScript),
                    this.errorScript = this.script = null
                  },
                  Pusher.ScriptRequest = e
                }.call(this), function () {
                  function e(e) {
                    this.options = e,
                    this.receivers = e.receivers || Pusher.ScriptReceivers,
                    this.loading = {
                    }
                  }
                  var n = e.prototype;
                  n.load = function (e, n, a) {
                    var t = this;
                    if (t.loading[e] && 0 < t.loading[e].length) t.loading[e].push(a);
                     else {
                      t.loading[e] = [
                        a
                      ];
                      var i = new Pusher.ScriptRequest(t.getPath(e, n)),
                      r = t.receivers.create(function (n) {
                        if (t.receivers.remove(r), t.loading[e]) {
                          var a = t.loading[e];
                          delete t.loading[e];
                          for (var o = function (e) {
                            e || i.cleanup()
                          }, s = 0; s < a.length; s++) a[s](n, o)
                        }
                      });
                      i.send(r)
                    }
                  },
                  n.getRoot = function (e) {
                    var n = Pusher.Util.getDocument().location.protocol;
                    return (e && e.encrypted || 'https:' === n ? this.options.cdn_https : this.options.cdn_http).replace(/\/*$/, '') + '/' + this.options.version
                  },
                  n.getPath = function (e, n) {
                    return this.getRoot(n) + '/' + e + this.options.suffix + '.js'
                  },
                  Pusher.DependencyLoader = e
                }.call(this), function () {
                  function e() {
                    Pusher.ready()
                  }
                  function n(e) {
                    document.body ? e()  : setTimeout(function () {
                      n(e)
                    }, 0)
                  }
                  function a() {
                    n(e)
                  }
                  Pusher.DependenciesReceivers = new Pusher.ScriptReceiverFactory('_pusher_dependencies', 'Pusher.DependenciesReceivers'),
                  Pusher.Dependencies = new Pusher.DependencyLoader({
                    cdn_http: Pusher.cdn_http,
                    cdn_https: Pusher.cdn_https,
                    version: Pusher.VERSION,
                    suffix: Pusher.dependency_suffix,
                    receivers: Pusher.DependenciesReceivers
                  }),
                  window.JSON ? a()  : Pusher.Dependencies.load('json2', {
                  }, a)
                }(), function () {
                  for (var e = String.fromCharCode, n = 0; 64 > n; n++) 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt(n);
                  var a = function (n) {
                    var a = n.charCodeAt(0);
                    return 128 > a ? n : 2048 > a ? e(192 | a >>> 6) + e(128 | 63 & a)  : e(224 | a >>> 12 & 15) + e(128 | a >>> 6 & 63) + e(128 | 63 & a)
                  },
                  t = function (e) {
                    var n = [
                      0,
                      2,
                      1
                    ][e.length % 3];
                    return e = e.charCodeAt(0) << 16 | (1 < e.length ? e.charCodeAt(1)  : 0) << 8 | (2 < e.length ? e.charCodeAt(2)  : 0),
                    [
                      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt(e >>> 18),
                      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt(e >>> 12 & 63),
                      n >= 2 ? '=' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt(e >>> 6 & 63),
                      n >= 1 ? '=' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt(63 & e)
                    ].join('')
                  },
                  i = window.btoa || function (e) {
                    return e.replace(/[\s\S]{1,3}/g, t)
                  };
                  Pusher.Base64 = {
                    encode: function (e) {
                      return i(e.replace(/[^\x00-\x7F]/g, a))
                    }
                  }
                }.call(this), function () {
                  function e(e, n) {
                    this.url = e,
                    this.data = n
                  }
                  function n(e) {
                    return Pusher.Util.mapObject(e, function (e) {
                      return 'object' == typeof e && (e = JSON.stringify(e)),
                      encodeURIComponent(Pusher.Base64.encode(e.toString()))
                    })
                  }
                  var a = e.prototype;
                  a.send = function (e) {
                    if (!this.request) {
                      var a = Pusher.Util.filterObject(this.data, function (e) {
                        return void 0 !== e
                      }),
                      a = Pusher.Util.map(Pusher.Util.flatten(n(a)), Pusher.Util.method('join', '=')).join('&');
                      this.request = new Pusher.ScriptRequest(this.url + '/' + e.number + '?' + a),
                      this.request.send(e)
                    }
                  },
                  a.cleanup = function () {
                    this.request && this.request.cleanup()
                  },
                  Pusher.JSONPRequest = e
                }.call(this), function () {
                  function e(e, n, a) {
                    this.key = e,
                    this.session = n,
                    this.events = [
                    ],
                    this.options = a || {
                    },
                    this.uniqueID = this.sent = 0
                  }
                  var n = e.prototype;
                  e.ERROR = 3,
                  e.INFO = 6,
                  e.DEBUG = 7,
                  n.log = function (e, n) {
                    e <= this.options.level && (this.events.push(Pusher.Util.extend({
                    }, n, {
                      timestamp: Pusher.Util.now()
                    })), this.options.limit && this.events.length > this.options.limit && this.events.shift())
                  },
                  n.error = function (n) {
                    this.log(e.ERROR, n)
                  },
                  n.info = function (n) {
                    this.log(e.INFO, n)
                  },
                  n.debug = function (n) {
                    this.log(e.DEBUG, n)
                  },
                  n.isEmpty = function () {
                    return 0 === this.events.length
                  },
                  n.send = function (e, n) {
                    var a = this,
                    t = Pusher.Util.extend({
                      session: a.session,
                      bundle: a.sent + 1,
                      key: a.key,
                      lib: 'js',
                      version: a.options.version,
                      cluster: a.options.cluster,
                      features: a.options.features,
                      timeline: a.events
                    }, a.options.params);
                    return a.events = [
                    ],
                    e(t, function (e, t) {
                      e || a.sent++,
                      n && n(e, t)
                    }),
                    !0
                  },
                  n.generateUniqueID = function () {
                    return this.uniqueID++,
                    this.uniqueID
                  },
                  Pusher.Timeline = e
                }.call(this), function () {
                  function e(e, n) {
                    this.timeline = e,
                    this.options = n || {
                    }
                  }
                  e.prototype.send = function (e, n) {
                    var a = this;
                    a.timeline.isEmpty() || a.timeline.send(function (n, t) {
                      var i = new Pusher.JSONPRequest('http' + (e ? 's' : '') + '://' + (a.host || a.options.host) + a.options.path, n),
                      r = Pusher.ScriptReceivers.create(function (e, n) {
                        Pusher.ScriptReceivers.remove(r),
                        i.cleanup(),
                        n && n.host && (a.host = n.host),
                        t && t(e, n)
                      });
                      i.send(r)
                    }, n)
                  },
                  Pusher.TimelineSender = e
                }.call(this), function () {
                  function e(e) {
                    this.strategies = e
                  }
                  function n(e, n, a) {
                    var i = Pusher.Util.map(e, function (e, t, i, r) {
                      return e.connect(n, a(t, r))
                    });
                    return {
                      abort: function () {
                        Pusher.Util.apply(i, t)
                      },
                      forceMinPriority: function (e) {
                        Pusher.Util.apply(i, function (n) {
                          n.forceMinPriority(e)
                        })
                      }
                    }
                  }
                  function a(e) {
                    return Pusher.Util.all(e, function (e) {
                      return Boolean(e.error)
                    })
                  }
                  function t(e) {
                    !e.error && !e.aborted && (e.abort(), e.aborted = !0)
                  }
                  var i = e.prototype;
                  i.isSupported = function () {
                    return Pusher.Util.any(this.strategies, Pusher.Util.method('isSupported'))
                  },
                  i.connect = function (e, t) {
                    return n(this.strategies, e, function (e, n) {
                      return function (i, r) {
                        (n[e].error = i) ? a(n) && t(!0)  : (Pusher.Util.apply(n, function (e) {
                          e.forceMinPriority(r.transport.priority)
                        }), t(null, r))
                      }
                    })
                  },
                  Pusher.BestConnectedEverStrategy = e
                }.call(this), function () {
                  function e(e, n, a) {
                    this.strategy = e,
                    this.transports = n,
                    this.ttl = a.ttl || 1800000,
                    this.encrypted = a.encrypted,
                    this.timeline = a.timeline
                  }
                  function n(e) {
                    return 'pusherTransport' + (e ? 'Encrypted' : 'Unencrypted')
                  }
                  function a(e) {
                    var a = Pusher.Util.getLocalStorage();
                    if (a) try {
                      var i = a[n(e)];
                      if (i) return JSON.parse(i)
                    } catch (r) {
                      t(e)
                    }
                    return null
                  }
                  function t(e) {
                    var a = Pusher.Util.getLocalStorage();
                    if (a) try {
                      delete a[n(e)]
                    } catch (t) {
                    }
                  }
                  var i = e.prototype;
                  i.isSupported = function () {
                    return this.strategy.isSupported()
                  },
                  i.connect = function (e, i) {
                    var r = this.encrypted,
                    o = a(r),
                    s = [
                      this.strategy
                    ];
                    if (o && o.timestamp + this.ttl >= Pusher.Util.now()) {
                      var l = this.transports[o.transport];
                      l && (this.timeline.info({
                        cached: !0,
                        transport: o.transport,
                        latency: o.latency
                      }), s.push(new Pusher.SequentialStrategy([l], {
                        timeout: 2 * o.latency + 1000,
                        failFast: !0
                      })))
                    }
                    var c = Pusher.Util.now(),
                    u = s.pop().connect(e, function d(a, o) {
                      if (a) t(r),
                      0 < s.length ? (c = Pusher.Util.now(), u = s.pop().connect(e, d))  : i(a);
                       else {
                        var l = o.transport.name,
                        m = Pusher.Util.now() - c,
                        h = Pusher.Util.getLocalStorage();
                        if (h) try {
                          h[n(r)] = JSON.stringify({
                            timestamp: Pusher.Util.now(),
                            transport: l,
                            latency: m
                          })
                        } catch (p) {
                        }
                        i(null, o)
                      }
                    });
                    return {
                      abort: function () {
                        u.abort()
                      },
                      forceMinPriority: function (n) {
                        e = n,
                        u && u.forceMinPriority(n)
                      }
                    }
                  },
                  Pusher.CachedStrategy = e
                }.call(this), function () {
                  function e(e, n) {
                    this.strategy = e,
                    this.options = {
                      delay: n.delay
                    }
                  }
                  var n = e.prototype;
                  n.isSupported = function () {
                    return this.strategy.isSupported()
                  },
                  n.connect = function (e, n) {
                    var a,
                    t = this.strategy,
                    i = new Pusher.Timer(this.options.delay, function () {
                      a = t.connect(e, n)
                    });
                    return {
                      abort: function () {
                        i.ensureAborted(),
                        a && a.abort()
                      },
                      forceMinPriority: function (n) {
                        e = n,
                        a && a.forceMinPriority(n)
                      }
                    }
                  },
                  Pusher.DelayedStrategy = e
                }.call(this), function () {
                  function e(e) {
                    this.strategy = e
                  }
                  var n = e.prototype;
                  n.isSupported = function () {
                    return this.strategy.isSupported()
                  },
                  n.connect = function (e, n) {
                    var a = this.strategy.connect(e, function (e, t) {
                      t && a.abort(),
                      n(e, t)
                    });
                    return a
                  },
                  Pusher.FirstConnectedStrategy = e
                }.call(this), function () {
                  function e(e, n, a) {
                    this.test = e,
                    this.trueBranch = n,
                    this.falseBranch = a
                  }
                  var n = e.prototype;
                  n.isSupported = function () {
                    return (this.test() ? this.trueBranch : this.falseBranch).isSupported()
                  },
                  n.connect = function (e, n) {
                    return (this.test() ? this.trueBranch : this.falseBranch).connect(e, n)
                  },
                  Pusher.IfStrategy = e
                }.call(this), function () {
                  function e(e, n) {
                    this.strategies = e,
                    this.loop = Boolean(n.loop),
                    this.failFast = Boolean(n.failFast),
                    this.timeout = n.timeout,
                    this.timeoutLimit = n.timeoutLimit
                  }
                  var n = e.prototype;
                  n.isSupported = function () {
                    return Pusher.Util.any(this.strategies, Pusher.Util.method('isSupported'))
                  },
                  n.connect = function (e, n) {
                    var a = this,
                    t = this.strategies,
                    i = 0,
                    r = this.timeout,
                    o = null,
                    s = function (l, c) {
                      c ? n(null, c)  : (i += 1, a.loop && (i %= t.length), i < t.length ? (r && (r *= 2, a.timeoutLimit && (r = Math.min(r, a.timeoutLimit))), o = a.tryStrategy(t[i], e, {
                        timeout: r,
                        failFast: a.failFast
                      }, s))  : n(!0))
                    },
                    o = this.tryStrategy(t[i], e, {
                      timeout: r,
                      failFast: this.failFast
                    }, s);
                    return {
                      abort: function () {
                        o.abort()
                      },
                      forceMinPriority: function (n) {
                        e = n,
                        o && o.forceMinPriority(n)
                      }
                    }
                  },
                  n.tryStrategy = function (e, n, a, t) {
                    var i = null,
                    r = null;
                    return 0 < a.timeout && (i = new Pusher.Timer(a.timeout, function () {
                      r.abort(),
                      t(!0)
                    })),
                    r = e.connect(n, function (e, n) {
                      e && i && i.isRunning() && !a.failFast || (i && i.ensureAborted(), t(e, n))
                    }),
                    {
                      abort: function () {
                        i && i.ensureAborted(),
                        r.abort()
                      },
                      forceMinPriority: function (e) {
                        r.forceMinPriority(e)
                      }
                    }
                  },
                  Pusher.SequentialStrategy = e
                }.call(this), function () {
                  function e(e, n, a, t) {
                    this.name = e,
                    this.priority = n,
                    this.transport = a,
                    this.options = t || {
                    }
                  }
                  function n(e, n) {
                    return Pusher.Util.defer(function () {
                      n(e)
                    }),
                    {
                      abort: function () {
                      },
                      forceMinPriority: function () {
                      }
                    }
                  }
                  var a = e.prototype;
                  a.isSupported = function () {
                    return this.transport.isSupported({
                      encrypted: this.options.encrypted
                    })
                  },
                  a.connect = function (e, a) {
                    if (!this.isSupported()) return n(new Pusher.Errors.UnsupportedStrategy, a);
                    if (this.priority < e) return n(new Pusher.Errors.TransportPriorityTooLow, a);
                    var t = this,
                    i = !1,
                    r = this.transport.createConnection(this.name, this.priority, this.options.key, this.options),
                    o = null,
                    s = function () {
                      r.unbind('initialized', s),
                      r.connect()
                    },
                    l = function () {
                      o = new Pusher.Handshake(r, function (e) {
                        i = !0,
                        d(),
                        a(null, e)
                      })
                    },
                    c = function (e) {
                      d(),
                      a(e)
                    },
                    u = function () {
                      d(),
                      a(new Pusher.Errors.TransportClosed(r))
                    },
                    d = function () {
                      r.unbind('initialized', s),
                      r.unbind('open', l),
                      r.unbind('error', c),
                      r.unbind('closed', u)
                    };
                    return r.bind('initialized', s),
                    r.bind('open', l),
                    r.bind('error', c),
                    r.bind('closed', u),
                    r.initialize(),
                    {
                      abort: function () {
                        i || (d(), o ? o.close()  : r.close())
                      },
                      forceMinPriority: function (e) {
                        i || t.priority < e && (o ? o.close()  : r.close())
                      }
                    }
                  },
                  Pusher.TransportStrategy = e
                }.call(this), function () {
                  function e(e, n, a) {
                    return e + (n.encrypted ? 's' : '') + '://' + (n.encrypted ? n.hostEncrypted : n.hostUnencrypted) + a
                  }
                  function n(e, n) {
                    return '/app/' + e + ('?protocol=' + Pusher.PROTOCOL + '&client=js&version=' + Pusher.VERSION + (n ? '&' + n : ''))
                  }
                  Pusher.URLSchemes = {
                    ws: {
                      getInitial: function (a, t) {
                        return e('ws', t, n(a, 'flash=false'))
                      }
                    },
                    flash: {
                      getInitial: function (a, t) {
                        return e('ws', t, n(a, 'flash=true'))
                      }
                    },
                    sockjs: {
                      getInitial: function (n, a) {
                        return e('http', a, a.httpPath || '/pusher', '')
                      },
                      getPath: function (e) {
                        return n(e)
                      }
                    },
                    http: {
                      getInitial: function (a, t) {
                        var i = (t.httpPath || '/pusher') + n(a);
                        return e('http', t, i)
                      }
                    }
                  }
                }.call(this), function () {
                  function e(e, n, a, t, i) {
                    Pusher.EventsDispatcher.call(this),
                    this.hooks = e,
                    this.name = n,
                    this.priority = a,
                    this.key = t,
                    this.options = i,
                    this.state = 'new',
                    this.timeline = i.timeline,
                    this.activityTimeout = i.activityTimeout,
                    this.id = this.timeline.generateUniqueID()
                  }
                  var n = e.prototype;
                  Pusher.Util.extend(n, Pusher.EventsDispatcher.prototype),
                  n.handlesActivityChecks = function () {
                    return Boolean(this.hooks.handlesActivityChecks)
                  },
                  n.supportsPing = function () {
                    return Boolean(this.hooks.supportsPing)
                  },
                  n.initialize = function () {
                    var e = this;
                    e.timeline.info(e.buildTimelineMessage({
                      transport: e.name + (e.options.encrypted ? 's' : '')
                    })),
                    e.hooks.beforeInitialize && e.hooks.beforeInitialize.call(e),
                    e.hooks.isInitialized() ? e.changeState('initialized')  : e.hooks.file ? (e.changeState('initializing'), Pusher.Dependencies.load(e.hooks.file, {
                      encrypted: e.options.encrypted
                    }, function (n, a) {
                      e.hooks.isInitialized() ? (e.changeState('initialized'), a(!0))  : (n && e.onError(n), e.onClose(), a(!1))
                    }))  : e.onClose()
                  },
                  n.connect = function () {
                    var e = this;
                    if (e.socket || 'initialized' !== e.state) return !1;
                    var n = e.hooks.urls.getInitial(e.key, e.options);
                    try {
                      e.socket = e.hooks.getSocket(n, e.options)
                    } catch (a) {
                      return Pusher.Util.defer(function () {
                        e.onError(a),
                        e.changeState('closed')
                      }),
                      !1
                    }
                    return e.bindListeners(),
                    Pusher.debug('Connecting', {
                      transport: e.name,
                      url: n
                    }),
                    e.changeState('connecting'),
                    !0
                  },
                  n.close = function () {
                    return this.socket ? (this.socket.close(), !0)  : !1
                  },
                  n.send = function (e) {
                    var n = this;
                    return 'open' === n.state ? (Pusher.Util.defer(function () {
                      n.socket && n.socket.send(e)
                    }), !0)  : !1
                  },
                  n.ping = function () {
                    'open' === this.state && this.supportsPing() && this.socket.ping()
                  },
                  n.onOpen = function () {
                    this.hooks.beforeOpen && this.hooks.beforeOpen(this.socket, this.hooks.urls.getPath(this.key, this.options)),
                    this.changeState('open'),
                    this.socket.onopen = void 0
                  },
                  n.onError = function (e) {
                    this.emit('error', {
                      type: 'WebSocketError',
                      error: e
                    }),
                    this.timeline.error(this.buildTimelineMessage({
                      error: e.toString()
                    }))
                  },
                  n.onClose = function (e) {
                    e ? this.changeState('closed', {
                      code: e.code,
                      reason: e.reason,
                      wasClean: e.wasClean
                    })  : this.changeState('closed'),
                    this.unbindListeners(),
                    this.socket = void 0
                  },
                  n.onMessage = function (e) {
                    this.emit('message', e)
                  },
                  n.onActivity = function () {
                    this.emit('activity')
                  },
                  n.bindListeners = function () {
                    var e = this;
                    e.socket.onopen = function () {
                      e.onOpen()
                    },
                    e.socket.onerror = function (n) {
                      e.onError(n)
                    },
                    e.socket.onclose = function (n) {
                      e.onClose(n)
                    },
                    e.socket.onmessage = function (n) {
                      e.onMessage(n)
                    },
                    e.supportsPing() && (e.socket.onactivity = function () {
                      e.onActivity()
                    })
                  },
                  n.unbindListeners = function () {
                    this.socket && (this.socket.onopen = void 0, this.socket.onerror = void 0, this.socket.onclose = void 0, this.socket.onmessage = void 0, this.supportsPing() && (this.socket.onactivity = void 0))
                  },
                  n.changeState = function (e, n) {
                    this.state = e,
                    this.timeline.info(this.buildTimelineMessage({
                      state: e,
                      params: n
                    })),
                    this.emit(e, n)
                  },
                  n.buildTimelineMessage = function (e) {
                    return Pusher.Util.extend({
                      cid: this.id
                    }, e)
                  },
                  Pusher.TransportConnection = e
                }.call(this), function () {
                  function e(e) {
                    this.hooks = e
                  }
                  var n = e.prototype;
                  n.isSupported = function (e) {
                    return this.hooks.isSupported(e)
                  },
                  n.createConnection = function (e, n, a, t) {
                    return new Pusher.TransportConnection(this.hooks, e, n, a, t)
                  },
                  Pusher.Transport = e
                }.call(this), function () {
                  Pusher.WSTransport = new Pusher.Transport({
                    urls: Pusher.URLSchemes.ws,
                    handlesActivityChecks: !1,
                    supportsPing: !1,
                    isInitialized: function () {
                      return Boolean(window.WebSocket || window.MozWebSocket)
                    },
                    isSupported: function () {
                      return Boolean(window.WebSocket || window.MozWebSocket)
                    },
                    getSocket: function (e) {
                      return new (window.WebSocket || window.MozWebSocket) (e)
                    }
                  }),
                  Pusher.FlashTransport = new Pusher.Transport({
                    file: 'flashfallback',
                    urls: Pusher.URLSchemes.flash,
                    handlesActivityChecks: !1,
                    supportsPing: !1,
                    isSupported: function () {
                      try {
                        return Boolean(new ActiveXObject('ShockwaveFlash.ShockwaveFlash'))
                      } catch (e) {
                        try {
                          var n = Pusher.Util.getNavigator();
                          return Boolean(n && n.mimeTypes && void 0 !== n.mimeTypes['application/x-shockwave-flash'])
                        } catch (a) {
                          return !1
                        }
                      }
                    },
                    beforeInitialize: function () {
                      void 0 === window.WEB_SOCKET_SUPPRESS_CROSS_DOMAIN_SWF_ERROR && (window.WEB_SOCKET_SUPPRESS_CROSS_DOMAIN_SWF_ERROR = !0),
                      window.WEB_SOCKET_SWF_LOCATION = Pusher.Dependencies.getRoot({
                        encrypted: this.options.encrypted
                      }) + '/WebSocketMain.swf'
                    },
                    isInitialized: function () {
                      return void 0 !== window.FlashWebSocket
                    },
                    getSocket: function (e) {
                      return new FlashWebSocket(e)
                    }
                  }),
                  Pusher.SockJSTransport = new Pusher.Transport({
                    file: 'sockjs',
                    urls: Pusher.URLSchemes.sockjs,
                    handlesActivityChecks: !0,
                    supportsPing: !1,
                    isSupported: function () {
                      return !0
                    },
                    isInitialized: function () {
                      return void 0 !== window.SockJS
                    },
                    getSocket: function (e, n) {
                      return new SockJS(e, null, {
                        js_path: Pusher.Dependencies.getPath('sockjs', {
                          encrypted: n.encrypted
                        }),
                        ignore_null_origin: n.ignoreNullOrigin
                      })
                    },
                    beforeOpen: function (e, n) {
                      e.send(JSON.stringify({
                        path: n
                      }))
                    }
                  });
                  var e = {
                    urls: Pusher.URLSchemes.http,
                    handlesActivityChecks: !1,
                    supportsPing: !0,
                    isInitialized: function () {
                      return Boolean(Pusher.HTTP.Socket)
                    }
                  },
                  n = Pusher.Util.extend({
                    getSocket: function (e) {
                      return Pusher.HTTP.getStreamingSocket(e)
                    }
                  }, e),
                  e = Pusher.Util.extend({
                    getSocket: function (e) {
                      return Pusher.HTTP.getPollingSocket(e)
                    }
                  }, e),
                  a = {
                    file: 'xhr',
                    isSupported: Pusher.Util.isXHRSupported
                  },
                  t = {
                    file: 'xdr',
                    isSupported: function (e) {
                      return Pusher.Util.isXDRSupported(e.encrypted)
                    }
                  };
                  Pusher.XHRStreamingTransport = new Pusher.Transport(Pusher.Util.extend({
                  }, n, a)),
                  Pusher.XDRStreamingTransport = new Pusher.Transport(Pusher.Util.extend({
                  }, n, t)),
                  Pusher.XHRPollingTransport = new Pusher.Transport(Pusher.Util.extend({
                  }, e, a)),
                  Pusher.XDRPollingTransport = new Pusher.Transport(Pusher.Util.extend({
                  }, e, t))
                }.call(this), function () {
                  function e(e, n, a) {
                    this.manager = e,
                    this.transport = n,
                    this.minPingDelay = a.minPingDelay,
                    this.maxPingDelay = a.maxPingDelay,
                    this.pingDelay = void 0
                  }
                  var n = e.prototype;
                  n.createConnection = function (e, n, a, t) {
                    var i = this;
                    t = Pusher.Util.extend({
                    }, t, {
                      activityTimeout: i.pingDelay
                    });
                    var r = i.transport.createConnection(e, n, a, t),
                    o = null,
                    s = function () {
                      r.unbind('open', s),
                      r.bind('closed', l),
                      o = Pusher.Util.now()
                    },
                    l = function (e) {
                      r.unbind('closed', l),
                      1002 === e.code || 1003 === e.code ? i.manager.reportDeath()  : !e.wasClean && o && (e = Pusher.Util.now() - o, e < 2 * i.maxPingDelay && (i.manager.reportDeath(), i.pingDelay = Math.max(e / 2, i.minPingDelay)))
                    };
                    return r.bind('open', s),
                    r
                  },
                  n.isSupported = function (e) {
                    return this.manager.isAlive() && this.transport.isSupported(e)
                  },
                  Pusher.AssistantToTheTransportManager = e
                }.call(this), function () {
                  function e(e) {
                    this.options = e || {
                    },
                    this.livesLeft = this.options.lives || 1 / 0
                  }
                  var n = e.prototype;
                  n.getAssistant = function (e) {
                    return new Pusher.AssistantToTheTransportManager(this, e, {
                      minPingDelay: this.options.minPingDelay,
                      maxPingDelay: this.options.maxPingDelay
                    })
                  },
                  n.isAlive = function () {
                    return 0 < this.livesLeft
                  },
                  n.reportDeath = function () {
                    this.livesLeft -= 1
                  },
                  Pusher.TransportManager = e
                }.call(this), function () {
                  function e(e) {
                    return function (n) {
                      return [e.apply(this, arguments),
                      n]
                    }
                  }
                  function n(e, a) {
                    if (0 === e.length) return [[],
                    a];
                    var i = t(e[0], a),
                    r = n(e.slice(1), i[1]);
                    return [[i[0]].concat(r[0]),
                    r[1]]
                  }
                  function a(e, a) {
                    if ('string' == typeof e[0] && ':' === e[0].charAt(0)) {
                      var i = a[e[0].slice(1)];
                      if (1 < e.length) {
                        if ('function' != typeof i) throw 'Calling non-function ' + e[0];
                        var r = [
                          Pusher.Util.extend({
                          }, a)
                        ].concat(Pusher.Util.map(e.slice(1), function (e) {
                          return t(e, Pusher.Util.extend({
                          }, a)) [0]
                        }));
                        return i.apply(this, r)
                      }
                      return [i,
                      a]
                    }
                    return n(e, a)
                  }
                  function t(e, n) {
                    if ('string' == typeof e) {
                      var t;
                      if ('string' == typeof e && ':' === e.charAt(0)) {
                        if (t = n[e.slice(1)], void 0 === t) throw 'Undefined symbol ' + e;
                        t = [
                          t,
                          n
                        ]
                      } else t = [
                        e,
                        n
                      ];
                      return t
                    }
                    return 'object' == typeof e && e instanceof Array && 0 < e.length ? a(e, n)  : [
                      e,
                      n
                    ]
                  }
                  var i = {
                    ws: Pusher.WSTransport,
                    flash: Pusher.FlashTransport,
                    sockjs: Pusher.SockJSTransport,
                    xhr_streaming: Pusher.XHRStreamingTransport,
                    xdr_streaming: Pusher.XDRStreamingTransport,
                    xhr_polling: Pusher.XHRPollingTransport,
                    xdr_polling: Pusher.XDRPollingTransport
                  },
                  r = {
                    isSupported: function () {
                      return !1
                    },
                    connect: function (e, n) {
                      var a = Pusher.Util.defer(function () {
                        n(new Pusher.Errors.UnsupportedStrategy)
                      });
                      return {
                        abort: function () {
                          a.ensureAborted()
                        },
                        forceMinPriority: function () {
                        }
                      }
                    }
                  },
                  o = {
                    extend: function (e, n, a) {
                      return [Pusher.Util.extend({
                      }, n, a),
                      e]
                    },
                    def: function (e, n, a) {
                      if (void 0 !== e[n]) throw 'Redefining symbol ' + n;
                      return e[n] = a,
                      [
                        void 0,
                        e
                      ]
                    },
                    def_transport: function (e, n, a, t, o, s) {
                      var l = i[a];
                      if (!l) throw new Pusher.Errors.UnsupportedTransport(a);
                      return a = e.enabledTransports && - 1 === Pusher.Util.arrayIndexOf(e.enabledTransports, n) || e.disabledTransports && - 1 !== Pusher.Util.arrayIndexOf(e.disabledTransports, n) || 'flash' === n && !0 === e.disableFlash ? r : new Pusher.TransportStrategy(n, t, s ? s.getAssistant(l)  : l, Pusher.Util.extend({
                        key: e.key,
                        encrypted: e.encrypted,
                        timeline: e.timeline,
                        ignoreNullOrigin: e.ignoreNullOrigin
                      }, o)),
                      t = e.def(e, n, a) [1],
                      t.transports = e.transports || {
                      },
                      t.transports[n] = a,
                      [
                        void 0,
                        t
                      ]
                    },
                    transport_manager: e(function (e, n) {
                      return new Pusher.TransportManager(n)
                    }),
                    sequential: e(function (e, n) {
                      var a = Array.prototype.slice.call(arguments, 2);
                      return new Pusher.SequentialStrategy(a, n)
                    }),
                    cached: e(function (e, n, a) {
                      return new Pusher.CachedStrategy(a, e.transports, {
                        ttl: n,
                        timeline: e.timeline,
                        encrypted: e.encrypted
                      })
                    }),
                    first_connected: e(function (e, n) {
                      return new Pusher.FirstConnectedStrategy(n)
                    }),
                    best_connected_ever: e(function () {
                      var e = Array.prototype.slice.call(arguments, 1);
                      return new Pusher.BestConnectedEverStrategy(e)
                    }),
                    delayed: e(function (e, n, a) {
                      return new Pusher.DelayedStrategy(a, {
                        delay: n
                      })
                    }),
                    'if': e(function (e, n, a, t) {
                      return new Pusher.IfStrategy(n, a, t)
                    }),
                    is_supported: e(function (e, n) {
                      return function () {
                        return n.isSupported()
                      }
                    })
                  };
                  Pusher.StrategyBuilder = {
                    build: function (e, n) {
                      var a = Pusher.Util.extend({
                      }, o, n);
                      return t(e, a) [1].strategy
                    }
                  }
                }.call(this), function () {
                  Pusher.Protocol = {
                    decodeMessage: function (e) {
                      try {
                        var n = JSON.parse(e.data);
                        if ('string' == typeof n.data) try {
                          n.data = JSON.parse(n.data)
                        } catch (a) {
                          if (!(a instanceof SyntaxError)) throw a
                        }
                        return n
                      } catch (t) {
                        throw {
                          type: 'MessageParseError',
                          error: t,
                          data: e.data
                        }
                      }
                    },
                    encodeMessage: function (e) {
                      return JSON.stringify(e)
                    },
                    processHandshake: function (e) {
                      if (e = this.decodeMessage(e), 'pusher:connection_established' === e.event) {
                        if (!e.data.activity_timeout) throw 'No activity timeout specified in handshake';
                        return {
                          action: 'connected',
                          id: e.data.socket_id,
                          activityTimeout: 1000 * e.data.activity_timeout
                        }
                      }
                      if ('pusher:error' === e.event) return {
                        action: this.getCloseAction(e.data),
                        error: this.getCloseError(e.data)
                      };
                      throw 'Invalid handshake'
                    },
                    getCloseAction: function (e) {
                      return 4000 > e.code ? 1002 <= e.code && 1004 >= e.code ? 'backoff' : null : 4000 === e.code ? 'ssl_only' : 4100 > e.code ? 'refused' : 4200 > e.code ? 'backoff' : 4300 > e.code ? 'retry' : 'refused'
                    },
                    getCloseError: function (e) {
                      return 1000 !== e.code && 1001 !== e.code ? {
                        type: 'PusherError',
                        data: {
                          code: e.code,
                          message: e.reason || e.message
                        }
                      }
                       : null
                    }
                  }
                }.call(this), function () {
                  function e(e, n) {
                    Pusher.EventsDispatcher.call(this),
                    this.id = e,
                    this.transport = n,
                    this.activityTimeout = n.activityTimeout,
                    this.bindListeners()
                  }
                  var n = e.prototype;
                  Pusher.Util.extend(n, Pusher.EventsDispatcher.prototype),
                  n.handlesActivityChecks = function () {
                    return this.transport.handlesActivityChecks()
                  },
                  n.send = function (e) {
                    return this.transport.send(e)
                  },
                  n.send_event = function (e, n, a) {
                    return e = {
                      event: e,
                      data: n
                    },
                    a && (e.channel = a),
                    Pusher.debug('Event sent', e),
                    this.send(Pusher.Protocol.encodeMessage(e))
                  },
                  n.ping = function () {
                    this.transport.supportsPing() ? this.transport.ping()  : this.send_event('pusher:ping', {
                    })
                  },
                  n.close = function () {
                    this.transport.close()
                  },
                  n.bindListeners = function () {
                    var e = this,
                    n = {
                      message: function (n) {
                        var a;
                        try {
                          a = Pusher.Protocol.decodeMessage(n)
                        } catch (t) {
                          e.emit('error', {
                            type: 'MessageParseError',
                            error: t,
                            data: n.data
                          })
                        }
                        if (void 0 !== a) {
                          switch (Pusher.debug('Event recd', a), a.event) {
                            case 'pusher:error':
                              e.emit('error', {
                                type: 'PusherError',
                                data: a.data
                              });
                              break;
                            case 'pusher:ping':
                              e.emit('ping');
                              break;
                            case 'pusher:pong':
                              e.emit('pong')
                          }
                          e.emit('message', a)
                        }
                      },
                      activity: function () {
                        e.emit('activity')
                      },
                      error: function (n) {
                        e.emit('error', {
                          type: 'WebSocketError',
                          error: n
                        })
                      },
                      closed: function (n) {
                        a(),
                        n && n.code && e.handleCloseEvent(n),
                        e.transport = null,
                        e.emit('closed')
                      }
                    },
                    a = function () {
                      Pusher.Util.objectApply(n, function (n, a) {
                        e.transport.unbind(a, n)
                      })
                    };
                    Pusher.Util.objectApply(n, function (n, a) {
                      e.transport.bind(a, n)
                    })
                  },
                  n.handleCloseEvent = function (e) {
                    var n = Pusher.Protocol.getCloseAction(e);
                    (e = Pusher.Protocol.getCloseError(e)) && this.emit('error', e),
                    n && this.emit(n)
                  },
                  Pusher.Connection = e
                }.call(this),
                function () {
                  function e(e, n) {
                    this.transport = e,
                    this.callback = n,
                    this.bindListeners()
                  }
                  var n = e.prototype;
                  n.close = function () {
                    this.unbindListeners(),
                    this.transport.close()
                  },
                  n.bindListeners = function () {
                    var e = this;
                    e.onMessage = function (n) {
                      e.unbindListeners();
                      try {
                        var a = Pusher.Protocol.processHandshake(n);
                        'connected' === a.action ? e.finish('connected', {
                          connection: new Pusher.Connection(a.id, e.transport),
                          activityTimeout: a.activityTimeout
                        })  : (e.finish(a.action, {
                          error: a.error
                        }), e.transport.close())
                      } catch (t) {
                        e.finish('error', {
                          error: t
                        }),
                        e.transport.close()
                      }
                    },
                    e.onClosed = function (n) {
                      e.unbindListeners();
                      var a = Pusher.Protocol.getCloseAction(n) || 'backoff';
                      n = Pusher.Protocol.getCloseError(n),
                      e.finish(a, {
                        error: n
                      })
                    },
                    e.transport.bind('message', e.onMessage),
                    e.transport.bind('closed', e.onClosed)
                  },
                  n.unbindListeners = function () {
                    this.transport.unbind('message', this.onMessage),
                    this.transport.unbind('closed', this.onClosed)
                  },
                  n.finish = function (e, n) {
                    this.callback(Pusher.Util.extend({
                      transport: this.transport,
                      action: e
                    }, n))
                  },
                  Pusher.Handshake = e
                }.call(this),
                function () {
                  function e(e, n) {
                    Pusher.EventsDispatcher.call(this),
                    this.key = e,
                    this.options = n || {
                    },
                    this.state = 'initialized',
                    this.connection = null,
                    this.encrypted = !!n.encrypted,
                    this.timeline = this.options.timeline,
                    this.connectionCallbacks = this.buildConnectionCallbacks(),
                    this.errorCallbacks = this.buildErrorCallbacks(),
                    this.handshakeCallbacks = this.buildHandshakeCallbacks(this.errorCallbacks);
                    var a = this;
                    Pusher.Network.bind('online', function () {
                      a.timeline.info({
                        netinfo: 'online'
                      }),
                      ('connecting' === a.state || 'unavailable' === a.state) && a.retryIn(0)
                    }),
                    Pusher.Network.bind('offline', function () {
                      a.timeline.info({
                        netinfo: 'offline'
                      }),
                      a.connection && a.sendActivityCheck()
                    }),
                    this.updateStrategy()
                  }
                  var n = e.prototype;
                  Pusher.Util.extend(n, Pusher.EventsDispatcher.prototype),
                  n.connect = function () {
                    !this.connection && !this.runner && (this.strategy.isSupported() ? (this.updateState('connecting'), this.startConnecting(), this.setUnavailableTimer())  : this.updateState('failed'))
                  },
                  n.send = function (e) {
                    return this.connection ? this.connection.send(e)  : !1
                  },
                  n.send_event = function (e, n, a) {
                    return this.connection ? this.connection.send_event(e, n, a)  : !1
                  },
                  n.disconnect = function () {
                    this.disconnectInternally(),
                    this.updateState('disconnected')
                  },
                  n.isEncrypted = function () {
                    return this.encrypted
                  },
                  n.startConnecting = function () {
                    var e = this,
                    n = function (a, t) {
                      a ? e.runner = e.strategy.connect(0, n)  : 'error' === t.action ? (e.emit('error', {
                        type: 'HandshakeError',
                        error: t.error
                      }), e.timeline.error({
                        handshakeError: t.error
                      }))  : (e.abortConnecting(), e.handshakeCallbacks[t.action](t))
                    };
                    e.runner = e.strategy.connect(0, n)
                  },
                  n.abortConnecting = function () {
                    this.runner && (this.runner.abort(), this.runner = null)
                  },
                  n.disconnectInternally = function () {
                    this.abortConnecting(),
                    this.clearRetryTimer(),
                    this.clearUnavailableTimer(),
                    this.connection && this.abandonConnection().close()
                  },
                  n.updateStrategy = function () {
                    this.strategy = this.options.getStrategy({
                      key: this.key,
                      timeline: this.timeline,
                      encrypted: this.encrypted
                    })
                  },
                  n.retryIn = function (e) {
                    var n = this;
                    n.timeline.info({
                      action: 'retry',
                      delay: e
                    }),
                    e > 0 && n.emit('connecting_in', Math.round(e / 1000)),
                    n.retryTimer = new Pusher.Timer(e || 0, function () {
                      n.disconnectInternally(),
                      n.connect()
                    })
                  },
                  n.clearRetryTimer = function () {
                    this.retryTimer && (this.retryTimer.ensureAborted(), this.retryTimer = null)
                  },
                  n.setUnavailableTimer = function () {
                    var e = this;
                    e.unavailableTimer = new Pusher.Timer(e.options.unavailableTimeout, function () {
                      e.updateState('unavailable')
                    })
                  },
                  n.clearUnavailableTimer = function () {
                    this.unavailableTimer && this.unavailableTimer.ensureAborted()
                  },
                  n.sendActivityCheck = function () {
                    var e = this;
                    e.stopActivityCheck(),
                    e.connection.ping(),
                    e.activityTimer = new Pusher.Timer(e.options.pongTimeout, function () {
                      e.timeline.error({
                        pong_timed_out: e.options.pongTimeout
                      }),
                      e.retryIn(0)
                    })
                  },
                  n.resetActivityCheck = function () {
                    var e = this;
                    e.stopActivityCheck(),
                    e.connection.handlesActivityChecks() || (e.activityTimer = new Pusher.Timer(e.activityTimeout, function () {
                      e.sendActivityCheck()
                    }))
                  },
                  n.stopActivityCheck = function () {
                    this.activityTimer && this.activityTimer.ensureAborted()
                  },
                  n.buildConnectionCallbacks = function () {
                    var e = this;
                    return {
                      message: function (n) {
                        e.resetActivityCheck(),
                        e.emit('message', n)
                      },
                      ping: function () {
                        e.send_event('pusher:pong', {
                        })
                      },
                      activity: function () {
                        e.resetActivityCheck()
                      },
                      error: function (n) {
                        e.emit('error', {
                          type: 'WebSocketError',
                          error: n
                        })
                      },
                      closed: function () {
                        e.abandonConnection(),
                        e.shouldRetry() && e.retryIn(1000)
                      }
                    }
                  },
                  n.buildHandshakeCallbacks = function (e) {
                    var n = this;
                    return Pusher.Util.extend({
                    }, e, {
                      connected: function (e) {
                        n.activityTimeout = Math.min(n.options.activityTimeout, e.activityTimeout, e.connection.activityTimeout || 1 / 0),
                        n.clearUnavailableTimer(),
                        n.setConnection(e.connection),
                        n.socket_id = n.connection.id,
                        n.updateState('connected', {
                          socket_id: n.socket_id
                        })
                      }
                    })
                  },
                  n.buildErrorCallbacks = function () {
                    function e(e) {
                      return function (a) {
                        a.error && n.emit('error', {
                          type: 'WebSocketError',
                          error: a.error
                        }),
                        e(a)
                      }
                    }
                    var n = this;
                    return {
                      ssl_only: e(function () {
                        n.encrypted = !0,
                        n.updateStrategy(),
                        n.retryIn(0)
                      }),
                      refused: e(function () {
                        n.disconnect()
                      }),
                      backoff: e(function () {
                        n.retryIn(1000)
                      }),
                      retry: e(function () {
                        n.retryIn(0)
                      })
                    }
                  },
                  n.setConnection = function (e) {
                    this.connection = e;
                    for (var n in this.connectionCallbacks) this.connection.bind(n, this.connectionCallbacks[n]);
                    this.resetActivityCheck()
                  },
                  n.abandonConnection = function () {
                    if (this.connection) {
                      this.stopActivityCheck();
                      for (var e in this.connectionCallbacks) this.connection.unbind(e, this.connectionCallbacks[e]);
                      return e = this.connection,
                      this.connection = null,
                      e
                    }
                  },
                  n.updateState = function (e, n) {
                    var a = this.state;
                    this.state = e,
                    a !== e && (Pusher.debug('State changed', a + ' -> ' + e), this.timeline.info({
                      state: e,
                      params: n
                    }), this.emit('state_change', {
                      previous: a,
                      current: e
                    }), this.emit(e, n))
                  },
                  n.shouldRetry = function () {
                    return 'connecting' === this.state || 'connected' === this.state
                  },
                  Pusher.ConnectionManager = e
                }.call(this),
                function () {
                  function e() {
                    Pusher.EventsDispatcher.call(this);
                    var e = this;
                    void 0 !== window.addEventListener && (window.addEventListener('online', function () {
                      e.emit('online')
                    }, !1), window.addEventListener('offline', function () {
                      e.emit('offline')
                    }, !1))
                  }
                  Pusher.Util.extend(e.prototype, Pusher.EventsDispatcher.prototype),
                  e.prototype.isOnline = function () {
                    return void 0 === window.navigator.onLine ? !0 : window.navigator.onLine
                  },
                  Pusher.NetInfo = e,
                  Pusher.Network = new e
                }.call(this),
                function () {
                  function e() {
                    this.reset()
                  }
                  var n = e.prototype;
                  n.get = function (e) {
                    return Object.prototype.hasOwnProperty.call(this.members, e) ? {
                      id: e,
                      info: this.members[e]
                    }
                     : null
                  },
                  n.each = function (e) {
                    var n = this;
                    Pusher.Util.objectApply(n.members, function (a, t) {
                      e(n.get(t))
                    })
                  },
                  n.setMyID = function (e) {
                    this.myID = e
                  },
                  n.onSubscription = function (e) {
                    this.members = e.presence.hash,
                    this.count = e.presence.count,
                    this.me = this.get(this.myID)
                  },
                  n.addMember = function (e) {
                    return null === this.get(e.user_id) && this.count++,
                    this.members[e.user_id] = e.user_info,
                    this.get(e.user_id)
                  },
                  n.removeMember = function (e) {
                    var n = this.get(e.user_id);
                    return n && (delete this.members[e.user_id], this.count--),
                    n
                  },
                  n.reset = function () {
                    this.members = {
                    },
                    this.count = 0,
                    this.me = this.myID = null
                  },
                  Pusher.Members = e
                }.call(this),
                function () {
                  function e(e, n) {
                    Pusher.EventsDispatcher.call(this, function (n) {
                      Pusher.debug('No callbacks on ' + e + ' for ' + n)
                    }),
                    this.name = e,
                    this.pusher = n,
                    this.subscribed = !1
                  }
                  var n = e.prototype;
                  Pusher.Util.extend(n, Pusher.EventsDispatcher.prototype),
                  n.authorize = function (e, n) {
                    return n(!1, {
                    })
                  },
                  n.trigger = function (e, n) {
                    if (0 !== e.indexOf('client-')) throw new Pusher.Errors.BadEventName('Event \'' + e + '\' does not start with \'client-\'');
                    return this.pusher.send_event(e, n, this.name)
                  },
                  n.disconnect = function () {
                    this.subscribed = !1
                  },
                  n.handleEvent = function (e, n) {
                    0 === e.indexOf('pusher_internal:') ? 'pusher_internal:subscription_succeeded' === e && (this.subscribed = !0, this.emit('pusher:subscription_succeeded', n))  : this.emit(e, n)
                  },
                  n.subscribe = function () {
                    var e = this;
                    e.authorize(e.pusher.connection.socket_id, function (n, a) {
                      n ? e.handleEvent('pusher:subscription_error', a)  : e.pusher.send_event('pusher:subscribe', {
                        auth: a.auth,
                        channel_data: a.channel_data,
                        channel: e.name
                      })
                    })
                  },
                  n.unsubscribe = function () {
                    this.pusher.send_event('pusher:unsubscribe', {
                      channel: this.name
                    })
                  },
                  Pusher.Channel = e
                }.call(this),
                function () {
                  function e(e, n) {
                    Pusher.Channel.call(this, e, n)
                  }
                  var n = e.prototype;
                  Pusher.Util.extend(n, Pusher.Channel.prototype),
                  n.authorize = function (e, n) {
                    return new Pusher.Channel.Authorizer(this, this.pusher.config).authorize(e, n)
                  },
                  Pusher.PrivateChannel = e
                }.call(this),
                function () {
                  function e(e, n) {
                    Pusher.PrivateChannel.call(this, e, n),
                    this.members = new Pusher.Members
                  }
                  var n = e.prototype;
                  Pusher.Util.extend(n, Pusher.PrivateChannel.prototype),
                  n.authorize = function (e, n) {
                    var a = this;
                    Pusher.PrivateChannel.prototype.authorize.call(a, e, function (e, t) {
                      if (!e) {
                        if (void 0 === t.channel_data) return Pusher.warn('Invalid auth response for channel \'' + a.name + '\', expected \'channel_data\' field'),
                        void n('Invalid auth response');
                        var i = JSON.parse(t.channel_data);
                        a.members.setMyID(i.user_id)
                      }
                      n(e, t)
                    })
                  },
                  n.handleEvent = function (e, n) {
                    switch (e) {
                      case 'pusher_internal:subscription_succeeded':
                        this.members.onSubscription(n),
                        this.subscribed = !0,
                        this.emit('pusher:subscription_succeeded', this.members);
                        break;
                      case 'pusher_internal:member_added':
                        var a = this.members.addMember(n);
                        this.emit('pusher:member_added', a);
                        break;
                      case 'pusher_internal:member_removed':
                        (a = this.members.removeMember(n)) && this.emit('pusher:member_removed', a);
                        break;
                      default:
                        Pusher.PrivateChannel.prototype.handleEvent.call(this, e, n)
                    }
                  },
                  n.disconnect = function () {
                    this.members.reset(),
                    Pusher.PrivateChannel.prototype.disconnect.call(this)
                  },
                  Pusher.PresenceChannel = e
                }.call(this),
                function () {
                  function e() {
                    this.channels = {
                    }
                  }
                  var n = e.prototype;
                  n.add = function (e, n) {
                    if (!this.channels[e]) {
                      var a,
                      t = this.channels;
                      a = 0 === e.indexOf('private-') ? new Pusher.PrivateChannel(e, n)  : 0 === e.indexOf('presence-') ? new Pusher.PresenceChannel(e, n)  : new Pusher.Channel(e, n),
                      t[e] = a
                    }
                    return this.channels[e]
                  },
                  n.all = function () {
                    return Pusher.Util.values(this.channels)
                  },
                  n.find = function (e) {
                    return this.channels[e]
                  },
                  n.remove = function (e) {
                    var n = this.channels[e];
                    return delete this.channels[e],
                    n
                  },
                  n.disconnect = function () {
                    Pusher.Util.objectApply(this.channels, function (e) {
                      e.disconnect()
                    })
                  },
                  Pusher.Channels = e
                }.call(this),
                function () {
                  Pusher.Channel.Authorizer = function (e, n) {
                    this.channel = e,
                    this.type = n.authTransport,
                    this.options = n,
                    this.authOptions = (n || {
                    }).auth || {
                    }
                  },
                  Pusher.Channel.Authorizer.prototype = {
                    composeQuery: function (e) {
                      e = 'socket_id=' + encodeURIComponent(e) + '&channel_name=' + encodeURIComponent(this.channel.name);
                      for (var n in this.authOptions.params) e += '&' + encodeURIComponent(n) + '=' + encodeURIComponent(this.authOptions.params[n]);
                      return e
                    },
                    authorize: function (e, n) {
                      return Pusher.authorizers[this.type].call(this, e, n)
                    }
                  };
                  var e = 1;
                  Pusher.auth_callbacks = {
                  },
                  Pusher.authorizers = {
                    ajax: function (e, n) {
                      var a;
                      a = Pusher.XHR ? new Pusher.XHR : window.XMLHttpRequest ? new window.XMLHttpRequest : new ActiveXObject('Microsoft.XMLHTTP'),
                      a.open('POST', this.options.authEndpoint, !0),
                      a.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                      for (var t in this.authOptions.headers) a.setRequestHeader(t, this.authOptions.headers[t]);
                      return a.onreadystatechange = function () {
                        if (4 === a.readyState) if (200 === a.status) {
                          var e,
                          t = !1;
                          try {
                            e = JSON.parse(a.responseText),
                            t = !0
                          } catch (i) {
                            n(!0, 'JSON returned from webapp was invalid, yet status code was 200. Data was: ' + a.responseText)
                          }
                          t && n(!1, e)
                        } else Pusher.warn('Couldn\'t get auth info from your webapp', a.status),
                        n(!0, a.status)
                      },
                      a.send(this.composeQuery(e)),
                      a
                    },
                    jsonp: function (n, a) {
                      void 0 !== this.authOptions.headers && Pusher.warn('Warn', 'To send headers with the auth request, you must use AJAX, rather than JSONP.');
                      var t = e.toString();
                      e++;
                      var i = Pusher.Util.getDocument(),
                      r = i.createElement('script');
                      Pusher.auth_callbacks[t] = function (e) {
                        a(!1, e)
                      },
                      r.src = this.options.authEndpoint + '?callback=' + encodeURIComponent('Pusher.auth_callbacks[\'' + t + '\']') + '&' + this.composeQuery(n),
                      t = i.getElementsByTagName('head') [0] || i.documentElement,
                      t.insertBefore(r, t.firstChild)
                    }
                  }
                }.call(this);
  